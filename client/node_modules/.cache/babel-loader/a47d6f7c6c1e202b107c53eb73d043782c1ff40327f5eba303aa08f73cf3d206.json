{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Registry = void 0;\nconst array_flatten_1 = __importDefault(require(\"array-flatten\"));\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\nconst service_1 = __importDefault(require(\"./service\"));\nconst REANNOUNCE_MAX_MS = 60 * 60 * 1000;\nconst REANNOUNCE_FACTOR = 3;\nclass Registry {\n  constructor(server) {\n    this.services = [];\n    this.server = server;\n  }\n  publish(config) {\n    function start(service, registry, opts) {\n      if (service.activated) return;\n      service.activated = true;\n      registry.services.push(service);\n      if (!(service instanceof service_1.default)) return;\n      if (opts.probe) {\n        registry.probe(registry.server.mdns, service, exists => {\n          if (exists) {\n            service.stop();\n            console.log(new Error('Service name is already in use on the network'));\n            return;\n          }\n          registry.announce(registry.server, service);\n        });\n      } else {\n        registry.announce(registry.server, service);\n      }\n    }\n    function stop(service, registry, callback) {\n      if (!service.activated) return;\n      if (!(service instanceof service_1.default)) return;\n      registry.teardown(registry.server, service, callback);\n      const index = registry.services.indexOf(service);\n      if (index !== -1) registry.services.splice(index, 1);\n    }\n    const service = new service_1.default(config);\n    service.start = start.bind(null, service, this);\n    service.stop = stop.bind(null, service, this);\n    service.start({\n      probe: config.probe !== false\n    });\n    return service;\n  }\n  unpublishAll(callback) {\n    this.teardown(this.server, this.services, callback);\n    this.services = [];\n  }\n  destroy() {\n    this.services.map(service => service.destroyed = true);\n  }\n  probe(mdns, service, callback) {\n    var sent = false;\n    var retries = 0;\n    var timer;\n    const send = () => {\n      if (!service.activated || service.destroyed) return;\n      mdns.query(service.fqdn, 'ANY', function () {\n        sent = true;\n        timer = setTimeout(++retries < 3 ? send : done, 250);\n        timer.unref();\n      });\n    };\n    const onresponse = packet => {\n      if (!sent) return;\n      if (packet.answers.some(matchRR) || packet.additionals.some(matchRR)) done(true);\n    };\n    const matchRR = rr => {\n      return (0, dns_equal_1.default)(rr.name, service.fqdn);\n    };\n    const done = exists => {\n      mdns.removeListener('response', onresponse);\n      clearTimeout(timer);\n      callback(!!exists);\n    };\n    mdns.on('response', onresponse);\n    setTimeout(send, Math.random() * 250);\n  }\n  announce(server, service) {\n    var delay = 1000;\n    var packet = service.records();\n    server.register(packet);\n    const broadcast = () => {\n      if (!service.activated || service.destroyed) return;\n      server.mdns.respond(packet, function () {\n        if (!service.published) {\n          service.activated = true;\n          service.published = true;\n          service.emit('up');\n        }\n        delay = delay * REANNOUNCE_FACTOR;\n        if (delay < REANNOUNCE_MAX_MS && !service.destroyed) {\n          setTimeout(broadcast, delay).unref();\n        }\n      });\n    };\n    broadcast();\n  }\n  teardown(server, services, callback) {\n    if (!Array.isArray(services)) services = [services];\n    services = services.filter(service => service.activated);\n    var records = array_flatten_1.default.depth(services.map(function (service) {\n      service.activated = false;\n      var records = service.records();\n      records.forEach(record => {\n        record.ttl = 0;\n      });\n      return records;\n    }), 1);\n    if (records.length === 0) return callback && callback();\n    server.unregister(records);\n    server.mdns.respond(records, function () {\n      services.forEach(function (service) {\n        service.published = false;\n      });\n      if (typeof callback === \"function\") {\n        callback.apply(null, arguments);\n      }\n    });\n  }\n}\nexports.Registry = Registry;\nexports.default = Registry;","map":{"version":3,"names":["array_flatten_1","__importDefault","require","dns_equal_1","service_1","REANNOUNCE_MAX_MS","REANNOUNCE_FACTOR","Registry","constructor","server","services","publish","config","start","service","registry","opts","activated","push","default","probe","mdns","exists","stop","console","log","Error","announce","callback","teardown","index","indexOf","splice","bind","unpublishAll","destroy","map","destroyed","sent","retries","timer","send","query","fqdn","setTimeout","done","unref","onresponse","packet","answers","some","matchRR","additionals","rr","name","removeListener","clearTimeout","on","Math","random","delay","records","register","broadcast","respond","published","emit","Array","isArray","filter","depth","forEach","record","ttl","length","unregister","apply","arguments","exports"],"sources":["../../src/lib/registry.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
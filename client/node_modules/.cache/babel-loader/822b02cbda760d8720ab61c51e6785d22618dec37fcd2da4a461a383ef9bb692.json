{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {typeof import(\"./util/Hash\")} Hash */\n\n/** @typedef {new (...args: any[]) => Dependency} DependencyConstructor */\n\nclass DependencyTemplates {\n  /**\n   * @param {string | Hash} hashFunction the hash function to use\n   */\n  constructor() {\n    let hashFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"md4\";\n    /** @type {Map<Function, DependencyTemplate>} */\n    this._map = new Map();\n    /** @type {string} */\n    this._hash = \"31d6cfe0d16ae931b73c59d7e0c089c0\";\n    this._hashFunction = hashFunction;\n  }\n\n  /**\n   * @param {DependencyConstructor} dependency Constructor of Dependency\n   * @returns {DependencyTemplate} template for this dependency\n   */\n  get(dependency) {\n    return this._map.get(dependency);\n  }\n\n  /**\n   * @param {DependencyConstructor} dependency Constructor of Dependency\n   * @param {DependencyTemplate} dependencyTemplate template for this dependency\n   * @returns {void}\n   */\n  set(dependency, dependencyTemplate) {\n    this._map.set(dependency, dependencyTemplate);\n  }\n\n  /**\n   * @param {string} part additional hash contributor\n   * @returns {void}\n   */\n  updateHash(part) {\n    const hash = createHash(this._hashFunction);\n    hash.update(`${this._hash}${part}`);\n    this._hash = /** @type {string} */hash.digest(\"hex\");\n  }\n  getHash() {\n    return this._hash;\n  }\n  clone() {\n    const newInstance = new DependencyTemplates(this._hashFunction);\n    newInstance._map = new Map(this._map);\n    newInstance._hash = this._hash;\n    return newInstance;\n  }\n}\nmodule.exports = DependencyTemplates;","map":{"version":3,"names":["createHash","require","DependencyTemplates","constructor","hashFunction","arguments","length","undefined","_map","Map","_hash","_hashFunction","get","dependency","set","dependencyTemplate","updateHash","part","hash","update","digest","getHash","clone","newInstance","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/DependencyTemplates.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createHash = require(\"./util/createHash\");\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {typeof import(\"./util/Hash\")} Hash */\n\n/** @typedef {new (...args: any[]) => Dependency} DependencyConstructor */\n\nclass DependencyTemplates {\n\t/**\n\t * @param {string | Hash} hashFunction the hash function to use\n\t */\n\tconstructor(hashFunction = \"md4\") {\n\t\t/** @type {Map<Function, DependencyTemplate>} */\n\t\tthis._map = new Map();\n\t\t/** @type {string} */\n\t\tthis._hash = \"31d6cfe0d16ae931b73c59d7e0c089c0\";\n\t\tthis._hashFunction = hashFunction;\n\t}\n\n\t/**\n\t * @param {DependencyConstructor} dependency Constructor of Dependency\n\t * @returns {DependencyTemplate} template for this dependency\n\t */\n\tget(dependency) {\n\t\treturn this._map.get(dependency);\n\t}\n\n\t/**\n\t * @param {DependencyConstructor} dependency Constructor of Dependency\n\t * @param {DependencyTemplate} dependencyTemplate template for this dependency\n\t * @returns {void}\n\t */\n\tset(dependency, dependencyTemplate) {\n\t\tthis._map.set(dependency, dependencyTemplate);\n\t}\n\n\t/**\n\t * @param {string} part additional hash contributor\n\t * @returns {void}\n\t */\n\tupdateHash(part) {\n\t\tconst hash = createHash(this._hashFunction);\n\t\thash.update(`${this._hash}${part}`);\n\t\tthis._hash = /** @type {string} */ (hash.digest(\"hex\"));\n\t}\n\n\tgetHash() {\n\t\treturn this._hash;\n\t}\n\n\tclone() {\n\t\tconst newInstance = new DependencyTemplates(this._hashFunction);\n\t\tnewInstance._map = new Map(this._map);\n\t\tnewInstance._hash = this._hash;\n\t\treturn newInstance;\n\t}\n}\n\nmodule.exports = DependencyTemplates;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,mBAAmB,CAAC;;AAE/C;AACA;AACA;;AAEA;;AAEA,MAAMC,mBAAmB,CAAC;EACzB;AACD;AACA;EACCC,WAAWA,CAAA,EAAuB;IAAA,IAAtBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAC/B;IACA,IAAI,CAACG,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB;IACA,IAAI,CAACC,KAAK,GAAG,kCAAkC;IAC/C,IAAI,CAACC,aAAa,GAAGP,YAAY;EAClC;;EAEA;AACD;AACA;AACA;EACCQ,GAAGA,CAACC,UAAU,EAAE;IACf,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAACC,UAAU,CAAC;EACjC;;EAEA;AACD;AACA;AACA;AACA;EACCC,GAAGA,CAACD,UAAU,EAAEE,kBAAkB,EAAE;IACnC,IAAI,CAACP,IAAI,CAACM,GAAG,CAACD,UAAU,EAAEE,kBAAkB,CAAC;EAC9C;;EAEA;AACD;AACA;AACA;EACCC,UAAUA,CAACC,IAAI,EAAE;IAChB,MAAMC,IAAI,GAAGlB,UAAU,CAAC,IAAI,CAACW,aAAa,CAAC;IAC3CO,IAAI,CAACC,MAAM,CAAE,GAAE,IAAI,CAACT,KAAM,GAAEO,IAAK,EAAC,CAAC;IACnC,IAAI,CAACP,KAAK,GAAG,qBAAuBQ,IAAI,CAACE,MAAM,CAAC,KAAK,CAAE;EACxD;EAEAC,OAAOA,CAAA,EAAG;IACT,OAAO,IAAI,CAACX,KAAK;EAClB;EAEAY,KAAKA,CAAA,EAAG;IACP,MAAMC,WAAW,GAAG,IAAIrB,mBAAmB,CAAC,IAAI,CAACS,aAAa,CAAC;IAC/DY,WAAW,CAACf,IAAI,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACD,IAAI,CAAC;IACrCe,WAAW,CAACb,KAAK,GAAG,IAAI,CAACA,KAAK;IAC9B,OAAOa,WAAW;EACnB;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGvB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
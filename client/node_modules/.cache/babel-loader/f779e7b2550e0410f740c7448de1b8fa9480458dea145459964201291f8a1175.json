{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  fileURLToPath\n} = require(\"url\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst WebpackError = require(\"../WebpackError\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n  evaluateToIdentifier,\n  evaluateToString,\n  expressionIsUnsupported,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst CommonJsFullRequireDependency = require(\"./CommonJsFullRequireDependency\");\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst {\n  getLocalModule\n} = require(\"./LocalModulesHelpers\");\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\n\n/** @typedef {import(\"estree\").CallExpression} CallExpressionNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\nconst createRequireSpecifierTag = Symbol(\"createRequire\");\nconst createdRequireIdentifierTag = Symbol(\"createRequire()\");\nclass CommonJsImportsParserPlugin {\n  /**\n   * @param {JavascriptParserOptions} options parser options\n   */\n  constructor(options) {\n    this.options = options;\n  }\n  apply(parser) {\n    const options = this.options;\n    const getContext = () => {\n      if (parser.currentTagData) {\n        const {\n          context\n        } = parser.currentTagData;\n        return context;\n      }\n    };\n\n    //#region metadata\n    const tapRequireExpression = (expression, getMembers) => {\n      parser.hooks.typeof.for(expression).tap(\"CommonJsImportsParserPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      parser.hooks.evaluateTypeof.for(expression).tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n      parser.hooks.evaluateIdentifier.for(expression).tap(\"CommonJsImportsParserPlugin\", evaluateToIdentifier(expression, \"require\", getMembers, true));\n    };\n    const tapRequireExpressionTag = tag => {\n      parser.hooks.typeof.for(tag).tap(\"CommonJsImportsParserPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n      parser.hooks.evaluateTypeof.for(tag).tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n    };\n    tapRequireExpression(\"require\", () => []);\n    tapRequireExpression(\"require.resolve\", () => [\"resolve\"]);\n    tapRequireExpression(\"require.resolveWeak\", () => [\"resolveWeak\"]);\n    //#endregion\n\n    // Weird stuff //\n    parser.hooks.assign.for(\"require\").tap(\"CommonJsImportsParserPlugin\", expr => {\n      // to not leak to global \"require\", we need to define a local require here.\n      const dep = new ConstDependency(\"var require;\", 0);\n      dep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(dep);\n      return true;\n    });\n\n    //#region Unsupported\n    parser.hooks.expression.for(\"require.main\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"require.main is not supported by webpack.\"));\n    parser.hooks.call.for(\"require.main.require\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"require.main.require is not supported by webpack.\"));\n    parser.hooks.expression.for(\"module.parent.require\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"module.parent.require is not supported by webpack.\"));\n    parser.hooks.call.for(\"module.parent.require\").tap(\"CommonJsImportsParserPlugin\", expressionIsUnsupported(parser, \"module.parent.require is not supported by webpack.\"));\n    //#endregion\n\n    //#region Renaming\n    const defineUndefined = expr => {\n      // To avoid \"not defined\" error, replace the value with undefined\n      const dep = new ConstDependency(\"undefined\", expr.range);\n      dep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(dep);\n      return false;\n    };\n    parser.hooks.canRename.for(\"require\").tap(\"CommonJsImportsParserPlugin\", () => true);\n    parser.hooks.rename.for(\"require\").tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n    //#endregion\n\n    //#region Inspection\n    const requireCache = toConstantDependency(parser, RuntimeGlobals.moduleCache, [RuntimeGlobals.moduleCache, RuntimeGlobals.moduleId, RuntimeGlobals.moduleLoaded]);\n    parser.hooks.expression.for(\"require.cache\").tap(\"CommonJsImportsParserPlugin\", requireCache);\n    //#endregion\n\n    //#region Require as expression\n    const requireAsExpressionHandler = expr => {\n      const dep = new CommonJsRequireContextDependency({\n        request: options.unknownContextRequest,\n        recursive: options.unknownContextRecursive,\n        regExp: options.unknownContextRegExp,\n        mode: \"sync\"\n      }, expr.range, undefined, parser.scope.inShorthand, getContext());\n      dep.critical = options.unknownContextCritical && \"require function is used in a way in which dependencies cannot be statically extracted\";\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n    parser.hooks.expression.for(\"require\").tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n    //#endregion\n\n    //#region Require\n    const processRequireItem = (expr, param) => {\n      if (param.isString()) {\n        const dep = new CommonJsRequireDependency(param.string, param.range, getContext());\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n    const processRequireContext = (expr, param) => {\n      const dep = ContextDependencyHelpers.create(CommonJsRequireContextDependency, expr.range, param, expr, options, {\n        category: \"commonjs\"\n      }, parser, undefined, getContext());\n      if (!dep) return;\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n    const createRequireHandler = callNew => expr => {\n      if (options.commonjsMagicComments) {\n        const {\n          options: requireOptions,\n          errors: commentErrors\n        } = parser.parseCommentOptions(expr.range);\n        if (commentErrors) {\n          for (const e of commentErrors) {\n            const {\n              comment\n            } = e;\n            parser.state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n          }\n        }\n        if (requireOptions) {\n          if (requireOptions.webpackIgnore !== undefined) {\n            if (typeof requireOptions.webpackIgnore !== \"boolean\") {\n              parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${requireOptions.webpackIgnore}.`, expr.loc));\n            } else {\n              // Do not instrument `require()` if `webpackIgnore` is `true`\n              if (requireOptions.webpackIgnore) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n      if (expr.arguments.length !== 1) return;\n      let localModule;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n      if (param.isConditional()) {\n        let isExpression = false;\n        for (const p of param.options) {\n          const result = processRequireItem(expr, p);\n          if (result === undefined) {\n            isExpression = true;\n          }\n        }\n        if (!isExpression) {\n          const dep = new RequireHeaderDependency(expr.callee.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        }\n      }\n      if (param.isString() && (localModule = getLocalModule(parser.state, param.string))) {\n        localModule.flagUsed();\n        const dep = new LocalModuleDependency(localModule, expr.range, callNew);\n        dep.loc = expr.loc;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      } else {\n        const result = processRequireItem(expr, param);\n        if (result === undefined) {\n          processRequireContext(expr, param);\n        } else {\n          const dep = new RequireHeaderDependency(expr.callee.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n        }\n        return true;\n      }\n    };\n    parser.hooks.call.for(\"require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n    parser.hooks.new.for(\"require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n    parser.hooks.call.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n    parser.hooks.new.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n    //#endregion\n\n    //#region Require with property access\n    const chainHandler = (expr, calleeMembers, callExpr, members) => {\n      if (callExpr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(callExpr.arguments[0]);\n      if (param.isString() && !getLocalModule(parser.state, param.string)) {\n        const dep = new CommonJsFullRequireDependency(param.string, expr.range, members);\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        dep.optional = !!parser.scope.inTry;\n        dep.loc = expr.loc;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n    const callChainHandler = (expr, calleeMembers, callExpr, members) => {\n      if (callExpr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(callExpr.arguments[0]);\n      if (param.isString() && !getLocalModule(parser.state, param.string)) {\n        const dep = new CommonJsFullRequireDependency(param.string, expr.callee.range, members);\n        dep.call = true;\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        dep.optional = !!parser.scope.inTry;\n        dep.loc = expr.callee.loc;\n        parser.state.current.addDependency(dep);\n        parser.walkExpressions(expr.arguments);\n        return true;\n      }\n    };\n    parser.hooks.memberChainOfCallMemberChain.for(\"require\").tap(\"CommonJsImportsParserPlugin\", chainHandler);\n    parser.hooks.memberChainOfCallMemberChain.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", chainHandler);\n    parser.hooks.callMemberChainOfCallMemberChain.for(\"require\").tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n    parser.hooks.callMemberChainOfCallMemberChain.for(\"module.require\").tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n    //#endregion\n\n    //#region Require.resolve\n    const processResolve = (expr, weak) => {\n      if (expr.arguments.length !== 1) return;\n      const param = parser.evaluateExpression(expr.arguments[0]);\n      if (param.isConditional()) {\n        for (const option of param.options) {\n          const result = processResolveItem(expr, option, weak);\n          if (result === undefined) {\n            processResolveContext(expr, option, weak);\n          }\n        }\n        const dep = new RequireResolveHeaderDependency(expr.callee.range);\n        dep.loc = expr.loc;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      } else {\n        const result = processResolveItem(expr, param, weak);\n        if (result === undefined) {\n          processResolveContext(expr, param, weak);\n        }\n        const dep = new RequireResolveHeaderDependency(expr.callee.range);\n        dep.loc = expr.loc;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      }\n    };\n    const processResolveItem = (expr, param, weak) => {\n      if (param.isString()) {\n        const dep = new RequireResolveDependency(param.string, param.range, getContext());\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        dep.weak = weak;\n        parser.state.current.addDependency(dep);\n        return true;\n      }\n    };\n    const processResolveContext = (expr, param, weak) => {\n      const dep = ContextDependencyHelpers.create(RequireResolveContextDependency, param.range, param, expr, options, {\n        category: \"commonjs\",\n        mode: weak ? \"weak\" : \"sync\"\n      }, parser, getContext());\n      if (!dep) return;\n      dep.loc = expr.loc;\n      dep.optional = !!parser.scope.inTry;\n      parser.state.current.addDependency(dep);\n      return true;\n    };\n    parser.hooks.call.for(\"require.resolve\").tap(\"CommonJsImportsParserPlugin\", expr => {\n      return processResolve(expr, false);\n    });\n    parser.hooks.call.for(\"require.resolveWeak\").tap(\"CommonJsImportsParserPlugin\", expr => {\n      return processResolve(expr, true);\n    });\n    //#endregion\n\n    //#region Create require\n\n    if (!options.createRequire) return;\n    let moduleName = [];\n    let specifierName;\n    if (options.createRequire === true) {\n      moduleName = [\"module\", \"node:module\"];\n      specifierName = \"createRequire\";\n    } else {\n      let moduleName;\n      const match = /^(.*) from (.*)$/.exec(options.createRequire);\n      if (match) {\n        [, specifierName, moduleName] = match;\n      }\n      if (!specifierName || !moduleName) {\n        const err = new WebpackError(`Parsing javascript parser option \"createRequire\" failed, got ${JSON.stringify(options.createRequire)}`);\n        err.details = 'Expected string in format \"createRequire from module\", where \"createRequire\" is specifier name and \"module\" name of the module';\n        throw err;\n      }\n    }\n    tapRequireExpressionTag(createdRequireIdentifierTag);\n    tapRequireExpressionTag(createRequireSpecifierTag);\n    parser.hooks.evaluateCallExpression.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", expr => {\n      const context = parseCreateRequireArguments(expr);\n      if (context === undefined) return;\n      const ident = parser.evaluatedVariable({\n        tag: createdRequireIdentifierTag,\n        data: {\n          context\n        },\n        next: undefined\n      });\n      return new BasicEvaluatedExpression().setIdentifier(ident, ident, () => []).setSideEffects(false).setRange(expr.range);\n    });\n    parser.hooks.unhandledExpressionMemberChain.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n      return expressionIsUnsupported(parser, `createRequire().${members.join(\".\")} is not supported by webpack.`)(expr);\n    });\n    parser.hooks.canRename.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", () => true);\n    parser.hooks.canRename.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", () => true);\n    parser.hooks.rename.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n    parser.hooks.expression.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n    parser.hooks.call.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n    /**\n     * @param {CallExpressionNode} expr call expression\n     * @returns {string} context\n     */\n    const parseCreateRequireArguments = expr => {\n      const args = expr.arguments;\n      if (args.length !== 1) {\n        const err = new WebpackError(\"module.createRequire supports only one argument.\");\n        err.loc = expr.loc;\n        parser.state.module.addWarning(err);\n        return;\n      }\n      const arg = args[0];\n      const evaluated = parser.evaluateExpression(arg);\n      if (!evaluated.isString()) {\n        const err = new WebpackError(\"module.createRequire failed parsing argument.\");\n        err.loc = arg.loc;\n        parser.state.module.addWarning(err);\n        return;\n      }\n      const ctx = evaluated.string.startsWith(\"file://\") ? fileURLToPath(evaluated.string) : evaluated.string;\n      // argument always should be a filename\n      return ctx.slice(0, ctx.lastIndexOf(ctx.startsWith(\"/\") ? \"/\" : \"\\\\\"));\n    };\n    parser.hooks.import.tap({\n      name: \"CommonJsImportsParserPlugin\",\n      stage: -10\n    }, (statement, source) => {\n      if (!moduleName.includes(source) || statement.specifiers.length !== 1 || statement.specifiers[0].type !== \"ImportSpecifier\" || statement.specifiers[0].imported.type !== \"Identifier\" || statement.specifiers[0].imported.name !== specifierName) return;\n      // clear for 'import { createRequire as x } from \"module\"'\n      // if any other specifier was used import module\n      const clearDep = new ConstDependency(parser.isAsiPosition(statement.range[0]) ? \";\" : \"\", statement.range);\n      clearDep.loc = statement.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      parser.unsetAsiPosition(statement.range[1]);\n      return true;\n    });\n    parser.hooks.importSpecifier.tap({\n      name: \"CommonJsImportsParserPlugin\",\n      stage: -10\n    }, (statement, source, id, name) => {\n      if (!moduleName.includes(source) || id !== specifierName) return;\n      parser.tagVariable(name, createRequireSpecifierTag);\n      return true;\n    });\n    parser.hooks.preDeclarator.tap(\"CommonJsImportsParserPlugin\", declarator => {\n      if (declarator.id.type !== \"Identifier\" || !declarator.init || declarator.init.type !== \"CallExpression\" || declarator.init.callee.type !== \"Identifier\") return;\n      const variableInfo = parser.getVariableInfo(declarator.init.callee.name);\n      if (variableInfo && variableInfo.tagInfo && variableInfo.tagInfo.tag === createRequireSpecifierTag) {\n        const context = parseCreateRequireArguments(declarator.init);\n        if (context === undefined) return;\n        parser.tagVariable(declarator.id.name, createdRequireIdentifierTag, {\n          name: declarator.id.name,\n          context\n        });\n        return true;\n      }\n    });\n    parser.hooks.memberChainOfCallMemberChain.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, calleeMembers, callExpr, members) => {\n      if (calleeMembers.length !== 0 || members.length !== 1 || members[0] !== \"cache\") return;\n      // createRequire().cache\n      const context = parseCreateRequireArguments(callExpr);\n      if (context === undefined) return;\n      return requireCache(expr);\n    });\n    parser.hooks.callMemberChainOfCallMemberChain.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, calleeMembers, innerCallExpression, members) => {\n      if (calleeMembers.length !== 0 || members.length !== 1 || members[0] !== \"resolve\") return;\n      // createRequire().resolve()\n      return processResolve(expr, false);\n    });\n    parser.hooks.expressionMemberChain.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n      // require.cache\n      if (members.length === 1 && members[0] === \"cache\") {\n        return requireCache(expr);\n      }\n    });\n    parser.hooks.callMemberChain.for(createdRequireIdentifierTag).tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n      // require.resolve()\n      if (members.length === 1 && members[0] === \"resolve\") {\n        return processResolve(expr, false);\n      }\n    });\n    parser.hooks.call.for(createRequireSpecifierTag).tap(\"CommonJsImportsParserPlugin\", expr => {\n      const clearDep = new ConstDependency(\"/* createRequire() */ undefined\", expr.range);\n      clearDep.loc = expr.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      return true;\n    });\n    //#endregion\n  }\n}\n\nmodule.exports = CommonJsImportsParserPlugin;","map":{"version":3,"names":["fileURLToPath","require","CommentCompilationWarning","RuntimeGlobals","UnsupportedFeatureWarning","WebpackError","BasicEvaluatedExpression","evaluateToIdentifier","evaluateToString","expressionIsUnsupported","toConstantDependency","CommonJsFullRequireDependency","CommonJsRequireContextDependency","CommonJsRequireDependency","ConstDependency","ContextDependencyHelpers","LocalModuleDependency","getLocalModule","RequireHeaderDependency","RequireResolveContextDependency","RequireResolveDependency","RequireResolveHeaderDependency","createRequireSpecifierTag","Symbol","createdRequireIdentifierTag","CommonJsImportsParserPlugin","constructor","options","apply","parser","getContext","currentTagData","context","tapRequireExpression","expression","getMembers","hooks","typeof","for","tap","JSON","stringify","evaluateTypeof","evaluateIdentifier","tapRequireExpressionTag","tag","assign","expr","dep","loc","state","module","addPresentationalDependency","call","defineUndefined","range","canRename","rename","requireCache","moduleCache","moduleId","moduleLoaded","requireAsExpressionHandler","request","unknownContextRequest","recursive","unknownContextRecursive","regExp","unknownContextRegExp","mode","undefined","scope","inShorthand","critical","unknownContextCritical","optional","inTry","current","addDependency","processRequireItem","param","isString","string","processRequireContext","create","category","createRequireHandler","callNew","commonjsMagicComments","requireOptions","errors","commentErrors","parseCommentOptions","e","comment","addWarning","value","message","webpackIgnore","arguments","length","localModule","evaluateExpression","isConditional","isExpression","p","result","callee","flagUsed","new","chainHandler","calleeMembers","callExpr","members","asiSafe","isAsiPosition","callChainHandler","walkExpressions","memberChainOfCallMemberChain","callMemberChainOfCallMemberChain","processResolve","weak","option","processResolveItem","processResolveContext","createRequire","moduleName","specifierName","match","exec","err","details","evaluateCallExpression","parseCreateRequireArguments","ident","evaluatedVariable","data","next","setIdentifier","setSideEffects","setRange","unhandledExpressionMemberChain","join","args","arg","evaluated","ctx","startsWith","slice","lastIndexOf","import","name","stage","statement","source","includes","specifiers","type","imported","clearDep","unsetAsiPosition","importSpecifier","id","tagVariable","preDeclarator","declarator","init","variableInfo","getVariableInfo","tagInfo","innerCallExpression","expressionMemberChain","callMemberChain","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/CommonJsImportsParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { fileURLToPath } = require(\"url\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst WebpackError = require(\"../WebpackError\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\tevaluateToString,\n\texpressionIsUnsupported,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst CommonJsFullRequireDependency = require(\"./CommonJsFullRequireDependency\");\nconst CommonJsRequireContextDependency = require(\"./CommonJsRequireContextDependency\");\nconst CommonJsRequireDependency = require(\"./CommonJsRequireDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst { getLocalModule } = require(\"./LocalModulesHelpers\");\nconst RequireHeaderDependency = require(\"./RequireHeaderDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\n\n/** @typedef {import(\"estree\").CallExpression} CallExpressionNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\nconst createRequireSpecifierTag = Symbol(\"createRequire\");\nconst createdRequireIdentifierTag = Symbol(\"createRequire()\");\n\nclass CommonJsImportsParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options parser options\n\t */\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tconst options = this.options;\n\n\t\tconst getContext = () => {\n\t\t\tif (parser.currentTagData) {\n\t\t\t\tconst { context } = parser.currentTagData;\n\t\t\t\treturn context;\n\t\t\t}\n\t\t};\n\n\t\t//#region metadata\n\t\tconst tapRequireExpression = (expression, getMembers) => {\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(expression)\n\t\t\t\t.tap(\n\t\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(expression)\n\t\t\t\t.tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t.for(expression)\n\t\t\t\t.tap(\n\t\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t\tevaluateToIdentifier(expression, \"require\", getMembers, true)\n\t\t\t\t);\n\t\t};\n\t\tconst tapRequireExpressionTag = tag => {\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(tag)\n\t\t\t\t.tap(\n\t\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(tag)\n\t\t\t\t.tap(\"CommonJsImportsParserPlugin\", evaluateToString(\"function\"));\n\t\t};\n\t\ttapRequireExpression(\"require\", () => []);\n\t\ttapRequireExpression(\"require.resolve\", () => [\"resolve\"]);\n\t\ttapRequireExpression(\"require.resolveWeak\", () => [\"resolveWeak\"]);\n\t\t//#endregion\n\n\t\t// Weird stuff //\n\t\tparser.hooks.assign\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\t// to not leak to global \"require\", we need to define a local require here.\n\t\t\t\tconst dep = new ConstDependency(\"var require;\", 0);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t//#region Unsupported\n\t\tparser.hooks.expression\n\t\t\t.for(\"require.main\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"require.main is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.call\n\t\t\t.for(\"require.main.require\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"require.main.require is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(\"module.parent.require\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"module.parent.require is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\tparser.hooks.call\n\t\t\t.for(\"module.parent.require\")\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\texpressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t\"module.parent.require is not supported by webpack.\"\n\t\t\t\t)\n\t\t\t);\n\t\t//#endregion\n\n\t\t//#region Renaming\n\t\tconst defineUndefined = expr => {\n\t\t\t// To avoid \"not defined\" error, replace the value with undefined\n\t\t\tconst dep = new ConstDependency(\"undefined\", expr.range);\n\t\t\tdep.loc = expr.loc;\n\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\treturn false;\n\t\t};\n\t\tparser.hooks.canRename\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", () => true);\n\t\tparser.hooks.rename\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n\t\t//#endregion\n\n\t\t//#region Inspection\n\t\tconst requireCache = toConstantDependency(\n\t\t\tparser,\n\t\t\tRuntimeGlobals.moduleCache,\n\t\t\t[\n\t\t\t\tRuntimeGlobals.moduleCache,\n\t\t\t\tRuntimeGlobals.moduleId,\n\t\t\t\tRuntimeGlobals.moduleLoaded\n\t\t\t]\n\t\t);\n\n\t\tparser.hooks.expression\n\t\t\t.for(\"require.cache\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", requireCache);\n\t\t//#endregion\n\n\t\t//#region Require as expression\n\t\tconst requireAsExpressionHandler = expr => {\n\t\t\tconst dep = new CommonJsRequireContextDependency(\n\t\t\t\t{\n\t\t\t\t\trequest: options.unknownContextRequest,\n\t\t\t\t\trecursive: options.unknownContextRecursive,\n\t\t\t\t\tregExp: options.unknownContextRegExp,\n\t\t\t\t\tmode: \"sync\"\n\t\t\t\t},\n\t\t\t\texpr.range,\n\t\t\t\tundefined,\n\t\t\t\tparser.scope.inShorthand,\n\t\t\t\tgetContext()\n\t\t\t);\n\t\t\tdep.critical =\n\t\t\t\toptions.unknownContextCritical &&\n\t\t\t\t\"require function is used in a way in which dependencies cannot be statically extracted\";\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\t\tparser.hooks.expression\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n\t\t//#endregion\n\n\t\t//#region Require\n\t\tconst processRequireItem = (expr, param) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new CommonJsRequireDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\tparam.range,\n\t\t\t\t\tgetContext()\n\t\t\t\t);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processRequireContext = (expr, param) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tCommonJsRequireContextDependency,\n\t\t\t\texpr.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tcategory: \"commonjs\"\n\t\t\t\t},\n\t\t\t\tparser,\n\t\t\t\tundefined,\n\t\t\t\tgetContext()\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\t\tconst createRequireHandler = callNew => expr => {\n\t\t\tif (options.commonjsMagicComments) {\n\t\t\t\tconst { options: requireOptions, errors: commentErrors } =\n\t\t\t\t\tparser.parseCommentOptions(expr.range);\n\n\t\t\t\tif (commentErrors) {\n\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (requireOptions) {\n\t\t\t\t\tif (requireOptions.webpackIgnore !== undefined) {\n\t\t\t\t\t\tif (typeof requireOptions.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${requireOptions.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t\texpr.loc\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Do not instrument `require()` if `webpackIgnore` is `true`\n\t\t\t\t\t\t\tif (requireOptions.webpackIgnore) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tlet localModule;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tlet isExpression = false;\n\t\t\t\tfor (const p of param.options) {\n\t\t\t\t\tconst result = processRequireItem(expr, p);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tisExpression = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isExpression) {\n\t\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tparam.isString() &&\n\t\t\t\t(localModule = getLocalModule(parser.state, param.string))\n\t\t\t) {\n\t\t\t\tlocalModule.flagUsed();\n\t\t\t\tconst dep = new LocalModuleDependency(localModule, expr.range, callNew);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processRequireItem(expr, param);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessRequireContext(expr, param);\n\t\t\t\t} else {\n\t\t\t\t\tconst dep = new RequireHeaderDependency(expr.callee.range);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tparser.hooks.call\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n\t\tparser.hooks.new\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n\t\tparser.hooks.call\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n\t\tparser.hooks.new\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(true));\n\t\t//#endregion\n\n\t\t//#region Require with property access\n\t\tconst chainHandler = (expr, calleeMembers, callExpr, members) => {\n\t\t\tif (callExpr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(callExpr.arguments[0]);\n\t\t\tif (param.isString() && !getLocalModule(parser.state, param.string)) {\n\t\t\t\tconst dep = new CommonJsFullRequireDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tmembers\n\t\t\t\t);\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst callChainHandler = (expr, calleeMembers, callExpr, members) => {\n\t\t\tif (callExpr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(callExpr.arguments[0]);\n\t\t\tif (param.isString() && !getLocalModule(parser.state, param.string)) {\n\t\t\t\tconst dep = new CommonJsFullRequireDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\texpr.callee.range,\n\t\t\t\t\tmembers\n\t\t\t\t);\n\t\t\t\tdep.call = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.loc = expr.callee.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\tparser.walkExpressions(expr.arguments);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tparser.hooks.memberChainOfCallMemberChain\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", chainHandler);\n\t\tparser.hooks.memberChainOfCallMemberChain\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", chainHandler);\n\t\tparser.hooks.callMemberChainOfCallMemberChain\n\t\t\t.for(\"require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n\t\tparser.hooks.callMemberChainOfCallMemberChain\n\t\t\t.for(\"module.require\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", callChainHandler);\n\t\t//#endregion\n\n\t\t//#region Require.resolve\n\t\tconst processResolve = (expr, weak) => {\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tfor (const option of param.options) {\n\t\t\t\t\tconst result = processResolveItem(expr, option, weak);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tprocessResolveContext(expr, option, weak);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processResolveItem(expr, param, weak);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessResolveContext(expr, param, weak);\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processResolveItem = (expr, param, weak) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new RequireResolveDependency(\n\t\t\t\t\tparam.string,\n\t\t\t\t\tparam.range,\n\t\t\t\t\tgetContext()\n\t\t\t\t);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.weak = weak;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processResolveContext = (expr, param, weak) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tRequireResolveContextDependency,\n\t\t\t\tparam.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tcategory: \"commonjs\",\n\t\t\t\t\tmode: weak ? \"weak\" : \"sync\"\n\t\t\t\t},\n\t\t\t\tparser,\n\t\t\t\tgetContext()\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolve\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\treturn processResolve(expr, false);\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolveWeak\")\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\treturn processResolve(expr, true);\n\t\t\t});\n\t\t//#endregion\n\n\t\t//#region Create require\n\n\t\tif (!options.createRequire) return;\n\n\t\tlet moduleName = [];\n\t\tlet specifierName;\n\n\t\tif (options.createRequire === true) {\n\t\t\tmoduleName = [\"module\", \"node:module\"];\n\t\t\tspecifierName = \"createRequire\";\n\t\t} else {\n\t\t\tlet moduleName;\n\t\t\tconst match = /^(.*) from (.*)$/.exec(options.createRequire);\n\t\t\tif (match) {\n\t\t\t\t[, specifierName, moduleName] = match;\n\t\t\t}\n\t\t\tif (!specifierName || !moduleName) {\n\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t`Parsing javascript parser option \"createRequire\" failed, got ${JSON.stringify(\n\t\t\t\t\t\toptions.createRequire\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t\terr.details =\n\t\t\t\t\t'Expected string in format \"createRequire from module\", where \"createRequire\" is specifier name and \"module\" name of the module';\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\ttapRequireExpressionTag(createdRequireIdentifierTag);\n\t\ttapRequireExpressionTag(createRequireSpecifierTag);\n\t\tparser.hooks.evaluateCallExpression\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\tconst context = parseCreateRequireArguments(expr);\n\t\t\t\tif (context === undefined) return;\n\t\t\t\tconst ident = parser.evaluatedVariable({\n\t\t\t\t\ttag: createdRequireIdentifierTag,\n\t\t\t\t\tdata: { context },\n\t\t\t\t\tnext: undefined\n\t\t\t\t});\n\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t.setIdentifier(ident, ident, () => [])\n\t\t\t\t\t.setSideEffects(false)\n\t\t\t\t\t.setRange(expr.range);\n\t\t\t});\n\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n\t\t\t\treturn expressionIsUnsupported(\n\t\t\t\t\tparser,\n\t\t\t\t\t`createRequire().${members.join(\".\")} is not supported by webpack.`\n\t\t\t\t)(expr);\n\t\t\t});\n\t\tparser.hooks.canRename\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", () => true);\n\t\tparser.hooks.canRename\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", () => true);\n\t\tparser.hooks.rename\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", defineUndefined);\n\t\tparser.hooks.expression\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", requireAsExpressionHandler);\n\t\tparser.hooks.call\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", createRequireHandler(false));\n\t\t/**\n\t\t * @param {CallExpressionNode} expr call expression\n\t\t * @returns {string} context\n\t\t */\n\t\tconst parseCreateRequireArguments = expr => {\n\t\t\tconst args = expr.arguments;\n\t\t\tif (args.length !== 1) {\n\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\"module.createRequire supports only one argument.\"\n\t\t\t\t);\n\t\t\t\terr.loc = expr.loc;\n\t\t\t\tparser.state.module.addWarning(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst arg = args[0];\n\t\t\tconst evaluated = parser.evaluateExpression(arg);\n\t\t\tif (!evaluated.isString()) {\n\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\"module.createRequire failed parsing argument.\"\n\t\t\t\t);\n\t\t\t\terr.loc = arg.loc;\n\t\t\t\tparser.state.module.addWarning(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst ctx = evaluated.string.startsWith(\"file://\")\n\t\t\t\t? fileURLToPath(evaluated.string)\n\t\t\t\t: evaluated.string;\n\t\t\t// argument always should be a filename\n\t\t\treturn ctx.slice(0, ctx.lastIndexOf(ctx.startsWith(\"/\") ? \"/\" : \"\\\\\"));\n\t\t};\n\n\t\tparser.hooks.import.tap(\n\t\t\t{\n\t\t\t\tname: \"CommonJsImportsParserPlugin\",\n\t\t\t\tstage: -10\n\t\t\t},\n\t\t\t(statement, source) => {\n\t\t\t\tif (\n\t\t\t\t\t!moduleName.includes(source) ||\n\t\t\t\t\tstatement.specifiers.length !== 1 ||\n\t\t\t\t\tstatement.specifiers[0].type !== \"ImportSpecifier\" ||\n\t\t\t\t\tstatement.specifiers[0].imported.type !== \"Identifier\" ||\n\t\t\t\t\tstatement.specifiers[0].imported.name !== specifierName\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\t// clear for 'import { createRequire as x } from \"module\"'\n\t\t\t\t// if any other specifier was used import module\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(statement.range[0]) ? \";\" : \"\",\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(statement.range[1]);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t{\n\t\t\t\tname: \"CommonJsImportsParserPlugin\",\n\t\t\t\tstage: -10\n\t\t\t},\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tif (!moduleName.includes(source) || id !== specifierName) return;\n\t\t\t\tparser.tagVariable(name, createRequireSpecifierTag);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.preDeclarator.tap(\n\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\tdeclarator => {\n\t\t\t\tif (\n\t\t\t\t\tdeclarator.id.type !== \"Identifier\" ||\n\t\t\t\t\t!declarator.init ||\n\t\t\t\t\tdeclarator.init.type !== \"CallExpression\" ||\n\t\t\t\t\tdeclarator.init.callee.type !== \"Identifier\"\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst variableInfo = parser.getVariableInfo(\n\t\t\t\t\tdeclarator.init.callee.name\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tvariableInfo &&\n\t\t\t\t\tvariableInfo.tagInfo &&\n\t\t\t\t\tvariableInfo.tagInfo.tag === createRequireSpecifierTag\n\t\t\t\t) {\n\t\t\t\t\tconst context = parseCreateRequireArguments(declarator.init);\n\t\t\t\t\tif (context === undefined) return;\n\t\t\t\t\tparser.tagVariable(declarator.id.name, createdRequireIdentifierTag, {\n\t\t\t\t\t\tname: declarator.id.name,\n\t\t\t\t\t\tcontext\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tparser.hooks.memberChainOfCallMemberChain\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t(expr, calleeMembers, callExpr, members) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcalleeMembers.length !== 0 ||\n\t\t\t\t\t\tmembers.length !== 1 ||\n\t\t\t\t\t\tmembers[0] !== \"cache\"\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t// createRequire().cache\n\t\t\t\t\tconst context = parseCreateRequireArguments(callExpr);\n\t\t\t\t\tif (context === undefined) return;\n\t\t\t\t\treturn requireCache(expr);\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.callMemberChainOfCallMemberChain\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"CommonJsImportsParserPlugin\",\n\t\t\t\t(expr, calleeMembers, innerCallExpression, members) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcalleeMembers.length !== 0 ||\n\t\t\t\t\t\tmembers.length !== 1 ||\n\t\t\t\t\t\tmembers[0] !== \"resolve\"\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t// createRequire().resolve()\n\t\t\t\t\treturn processResolve(expr, false);\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n\t\t\t\t// require.cache\n\t\t\t\tif (members.length === 1 && members[0] === \"cache\") {\n\t\t\t\t\treturn requireCache(expr);\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(createdRequireIdentifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", (expr, members) => {\n\t\t\t\t// require.resolve()\n\t\t\t\tif (members.length === 1 && members[0] === \"resolve\") {\n\t\t\t\t\treturn processResolve(expr, false);\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(createRequireSpecifierTag)\n\t\t\t.tap(\"CommonJsImportsParserPlugin\", expr => {\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\t\"/* createRequire() */ undefined\",\n\t\t\t\t\texpr.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = expr.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\treturn true;\n\t\t\t});\n\t\t//#endregion\n\t}\n}\nmodule.exports = CommonJsImportsParserPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
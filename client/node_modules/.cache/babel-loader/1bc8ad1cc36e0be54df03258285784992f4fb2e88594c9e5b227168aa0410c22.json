{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dirent = void 0;\nvar constants_1 = require(\"./constants\");\nvar encoding_1 = require(\"./encoding\");\nvar S_IFMT = constants_1.constants.S_IFMT,\n  S_IFDIR = constants_1.constants.S_IFDIR,\n  S_IFREG = constants_1.constants.S_IFREG,\n  S_IFBLK = constants_1.constants.S_IFBLK,\n  S_IFCHR = constants_1.constants.S_IFCHR,\n  S_IFLNK = constants_1.constants.S_IFLNK,\n  S_IFIFO = constants_1.constants.S_IFIFO,\n  S_IFSOCK = constants_1.constants.S_IFSOCK;\n/**\n * A directory entry, like `fs.Dirent`.\n */\nvar Dirent = /** @class */function () {\n  function Dirent() {\n    this.name = '';\n    this.mode = 0;\n  }\n  Dirent.build = function (link, encoding) {\n    var dirent = new Dirent();\n    var mode = link.getNode().mode;\n    dirent.name = (0, encoding_1.strToEncoding)(link.getName(), encoding);\n    dirent.mode = mode;\n    return dirent;\n  };\n  Dirent.prototype._checkModeProperty = function (property) {\n    return (this.mode & S_IFMT) === property;\n  };\n  Dirent.prototype.isDirectory = function () {\n    return this._checkModeProperty(S_IFDIR);\n  };\n  Dirent.prototype.isFile = function () {\n    return this._checkModeProperty(S_IFREG);\n  };\n  Dirent.prototype.isBlockDevice = function () {\n    return this._checkModeProperty(S_IFBLK);\n  };\n  Dirent.prototype.isCharacterDevice = function () {\n    return this._checkModeProperty(S_IFCHR);\n  };\n  Dirent.prototype.isSymbolicLink = function () {\n    return this._checkModeProperty(S_IFLNK);\n  };\n  Dirent.prototype.isFIFO = function () {\n    return this._checkModeProperty(S_IFIFO);\n  };\n  Dirent.prototype.isSocket = function () {\n    return this._checkModeProperty(S_IFSOCK);\n  };\n  return Dirent;\n}();\nexports.Dirent = Dirent;\nexports.default = Dirent;","map":{"version":3,"names":["Object","defineProperty","exports","value","Dirent","constants_1","require","encoding_1","S_IFMT","constants","S_IFDIR","S_IFREG","S_IFBLK","S_IFCHR","S_IFLNK","S_IFIFO","S_IFSOCK","name","mode","build","link","encoding","dirent","getNode","strToEncoding","getName","prototype","_checkModeProperty","property","isDirectory","isFile","isBlockDevice","isCharacterDevice","isSymbolicLink","isFIFO","isSocket","default"],"sources":["/home/hemanth/react-project/client/node_modules/memfs/lib/Dirent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dirent = void 0;\nvar constants_1 = require(\"./constants\");\nvar encoding_1 = require(\"./encoding\");\nvar S_IFMT = constants_1.constants.S_IFMT, S_IFDIR = constants_1.constants.S_IFDIR, S_IFREG = constants_1.constants.S_IFREG, S_IFBLK = constants_1.constants.S_IFBLK, S_IFCHR = constants_1.constants.S_IFCHR, S_IFLNK = constants_1.constants.S_IFLNK, S_IFIFO = constants_1.constants.S_IFIFO, S_IFSOCK = constants_1.constants.S_IFSOCK;\n/**\n * A directory entry, like `fs.Dirent`.\n */\nvar Dirent = /** @class */ (function () {\n    function Dirent() {\n        this.name = '';\n        this.mode = 0;\n    }\n    Dirent.build = function (link, encoding) {\n        var dirent = new Dirent();\n        var mode = link.getNode().mode;\n        dirent.name = (0, encoding_1.strToEncoding)(link.getName(), encoding);\n        dirent.mode = mode;\n        return dirent;\n    };\n    Dirent.prototype._checkModeProperty = function (property) {\n        return (this.mode & S_IFMT) === property;\n    };\n    Dirent.prototype.isDirectory = function () {\n        return this._checkModeProperty(S_IFDIR);\n    };\n    Dirent.prototype.isFile = function () {\n        return this._checkModeProperty(S_IFREG);\n    };\n    Dirent.prototype.isBlockDevice = function () {\n        return this._checkModeProperty(S_IFBLK);\n    };\n    Dirent.prototype.isCharacterDevice = function () {\n        return this._checkModeProperty(S_IFCHR);\n    };\n    Dirent.prototype.isSymbolicLink = function () {\n        return this._checkModeProperty(S_IFLNK);\n    };\n    Dirent.prototype.isFIFO = function () {\n        return this._checkModeProperty(S_IFIFO);\n    };\n    Dirent.prototype.isSocket = function () {\n        return this._checkModeProperty(S_IFSOCK);\n    };\n    return Dirent;\n}());\nexports.Dirent = Dirent;\nexports.default = Dirent;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIE,MAAM,GAAGH,WAAW,CAACI,SAAS,CAACD,MAAM;EAAEE,OAAO,GAAGL,WAAW,CAACI,SAAS,CAACC,OAAO;EAAEC,OAAO,GAAGN,WAAW,CAACI,SAAS,CAACE,OAAO;EAAEC,OAAO,GAAGP,WAAW,CAACI,SAAS,CAACG,OAAO;EAAEC,OAAO,GAAGR,WAAW,CAACI,SAAS,CAACI,OAAO;EAAEC,OAAO,GAAGT,WAAW,CAACI,SAAS,CAACK,OAAO;EAAEC,OAAO,GAAGV,WAAW,CAACI,SAAS,CAACM,OAAO;EAAEC,QAAQ,GAAGX,WAAW,CAACI,SAAS,CAACO,QAAQ;AAC1U;AACA;AACA;AACA,IAAIZ,MAAM,GAAG,aAAe,YAAY;EACpC,SAASA,MAAMA,CAAA,EAAG;IACd,IAAI,CAACa,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,CAAC;EACjB;EACAd,MAAM,CAACe,KAAK,GAAG,UAAUC,IAAI,EAAEC,QAAQ,EAAE;IACrC,IAAIC,MAAM,GAAG,IAAIlB,MAAM,CAAC,CAAC;IACzB,IAAIc,IAAI,GAAGE,IAAI,CAACG,OAAO,CAAC,CAAC,CAACL,IAAI;IAC9BI,MAAM,CAACL,IAAI,GAAG,CAAC,CAAC,EAAEV,UAAU,CAACiB,aAAa,EAAEJ,IAAI,CAACK,OAAO,CAAC,CAAC,EAAEJ,QAAQ,CAAC;IACrEC,MAAM,CAACJ,IAAI,GAAGA,IAAI;IAClB,OAAOI,MAAM;EACjB,CAAC;EACDlB,MAAM,CAACsB,SAAS,CAACC,kBAAkB,GAAG,UAAUC,QAAQ,EAAE;IACtD,OAAO,CAAC,IAAI,CAACV,IAAI,GAAGV,MAAM,MAAMoB,QAAQ;EAC5C,CAAC;EACDxB,MAAM,CAACsB,SAAS,CAACG,WAAW,GAAG,YAAY;IACvC,OAAO,IAAI,CAACF,kBAAkB,CAACjB,OAAO,CAAC;EAC3C,CAAC;EACDN,MAAM,CAACsB,SAAS,CAACI,MAAM,GAAG,YAAY;IAClC,OAAO,IAAI,CAACH,kBAAkB,CAAChB,OAAO,CAAC;EAC3C,CAAC;EACDP,MAAM,CAACsB,SAAS,CAACK,aAAa,GAAG,YAAY;IACzC,OAAO,IAAI,CAACJ,kBAAkB,CAACf,OAAO,CAAC;EAC3C,CAAC;EACDR,MAAM,CAACsB,SAAS,CAACM,iBAAiB,GAAG,YAAY;IAC7C,OAAO,IAAI,CAACL,kBAAkB,CAACd,OAAO,CAAC;EAC3C,CAAC;EACDT,MAAM,CAACsB,SAAS,CAACO,cAAc,GAAG,YAAY;IAC1C,OAAO,IAAI,CAACN,kBAAkB,CAACb,OAAO,CAAC;EAC3C,CAAC;EACDV,MAAM,CAACsB,SAAS,CAACQ,MAAM,GAAG,YAAY;IAClC,OAAO,IAAI,CAACP,kBAAkB,CAACZ,OAAO,CAAC;EAC3C,CAAC;EACDX,MAAM,CAACsB,SAAS,CAACS,QAAQ,GAAG,YAAY;IACpC,OAAO,IAAI,CAACR,kBAAkB,CAACX,QAAQ,CAAC;EAC5C,CAAC;EACD,OAAOZ,MAAM;AACjB,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,MAAM,GAAGA,MAAM;AACvBF,OAAO,CAACkC,OAAO,GAAGhC,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}
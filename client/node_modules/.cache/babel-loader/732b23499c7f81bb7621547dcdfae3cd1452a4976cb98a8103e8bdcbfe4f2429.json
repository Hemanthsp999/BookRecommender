{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Browser = void 0;\nconst dns_txt_1 = __importDefault(require(\"./dns-txt\"));\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\nconst events_1 = require(\"events\");\nconst service_types_1 = require(\"./service-types\");\nconst filter_service_1 = __importDefault(require(\"./utils/filter-service\"));\nconst filter_txt_1 = __importDefault(require(\"./utils/filter-txt\"));\nconst TLD = '.local';\nconst WILDCARD = '_services._dns-sd._udp' + TLD;\nclass Browser extends events_1.EventEmitter {\n  constructor(mdns, opts, onup) {\n    super();\n    this.onresponse = null;\n    this.serviceMap = {};\n    this.wildcard = false;\n    this._services = [];\n    if (typeof opts === 'function') return new Browser(mdns, null, opts);\n    this.mdns = mdns;\n    if (opts != null && opts.txt != null) {\n      this.txt = new dns_txt_1.default(opts.txt);\n    } else {\n      this.txt = new dns_txt_1.default();\n    }\n    if (!opts || !opts.type) {\n      this.name = WILDCARD;\n      this.wildcard = true;\n    } else {\n      this.name = (0, service_types_1.toString)({\n        name: opts.type,\n        protocol: opts.protocol || 'tcp'\n      }) + TLD;\n      if (opts.name) this.name = opts.name + '.' + this.name;\n      this.wildcard = false;\n    }\n    if (opts != null && opts.txt !== undefined) this.txtQuery = (0, filter_txt_1.default)(opts.txt);\n    if (onup) this.on('up', onup);\n    this.start();\n  }\n  start() {\n    if (this.onresponse || this.name === undefined) return;\n    var self = this;\n    var nameMap = {};\n    if (!this.wildcard) nameMap[this.name] = true;\n    this.onresponse = (packet, rinfo) => {\n      if (self.wildcard) {\n        packet.answers.forEach(answer => {\n          if (answer.type !== 'PTR' || answer.name !== self.name || answer.name in nameMap) return;\n          nameMap[answer.data] = true;\n          self.mdns.query(answer.data, 'PTR');\n        });\n      }\n      Object.keys(nameMap).forEach(function (name) {\n        self.goodbyes(name, packet).forEach(self.removeService.bind(self));\n        var matches = self.buildServicesFor(name, packet, self.txt, rinfo);\n        if (matches.length === 0) return;\n        matches.forEach(service => {\n          if (self.serviceMap[service.fqdn]) return;\n          self.addService(service);\n        });\n      });\n    };\n    this.mdns.on('response', this.onresponse);\n    this.update();\n  }\n  stop() {\n    if (!this.onresponse) return;\n    this.mdns.removeListener('response', this.onresponse);\n    this.onresponse = null;\n  }\n  update() {\n    this.mdns.query(this.name, 'PTR');\n  }\n  get services() {\n    return this._services;\n  }\n  addService(service) {\n    if ((0, filter_service_1.default)(service, this.txtQuery) === false) return;\n    this._services.push(service);\n    this.serviceMap[service.fqdn] = true;\n    this.emit('up', service);\n  }\n  removeService(fqdn) {\n    var service, index;\n    this._services.some(function (s, i) {\n      if ((0, dns_equal_1.default)(s.fqdn, fqdn)) {\n        service = s;\n        index = i;\n        return true;\n      }\n    });\n    if (!service || index === undefined) return;\n    this._services.splice(index, 1);\n    delete this.serviceMap[fqdn];\n    this.emit('down', service);\n  }\n  goodbyes(name, packet) {\n    return packet.answers.concat(packet.additionals).filter(rr => rr.type === 'PTR' && rr.ttl === 0 && (0, dns_equal_1.default)(rr.name, name)).map(rr => rr.data);\n  }\n  buildServicesFor(name, packet, txt, referer) {\n    var records = packet.answers.concat(packet.additionals).filter(rr => rr.ttl > 0);\n    return records.filter(rr => rr.type === 'PTR' && (0, dns_equal_1.default)(rr.name, name)).map(ptr => {\n      const service = {\n        addresses: [],\n        subtypes: []\n      };\n      records.filter(rr => {\n        return rr.type === 'PTR' && (0, dns_equal_1.default)(rr.data, ptr.data) && rr.name.includes('._sub');\n      }).forEach(rr => {\n        const types = (0, service_types_1.toType)(rr.name);\n        service.subtypes.push(types.subtype);\n      });\n      records.filter(rr => {\n        return (rr.type === 'SRV' || rr.type === 'TXT') && (0, dns_equal_1.default)(rr.name, ptr.data);\n      }).forEach(rr => {\n        if (rr.type === 'SRV') {\n          var parts = rr.name.split('.');\n          var name = parts[0];\n          var types = (0, service_types_1.toType)(parts.slice(1, -1).join('.'));\n          service.name = name;\n          service.fqdn = rr.name;\n          service.host = rr.data.target;\n          service.referer = referer;\n          service.port = rr.data.port;\n          service.type = types.name;\n          service.protocol = types.protocol;\n        } else if (rr.type === 'TXT') {\n          service.rawTxt = rr.data;\n          service.txt = this.txt.decodeAll(rr.data);\n        }\n      });\n      if (!service.name) return;\n      records.filter(rr => (rr.type === 'A' || rr.type === 'AAAA') && (0, dns_equal_1.default)(rr.name, service.host)).forEach(rr => service.addresses.push(rr.data));\n      return service;\n    }).filter(rr => !!rr);\n  }\n}\nexports.Browser = Browser;\nexports.default = Browser;","map":{"version":3,"names":["dns_txt_1","__importDefault","require","dns_equal_1","events_1","service_types_1","filter_service_1","filter_txt_1","TLD","WILDCARD","Browser","EventEmitter","constructor","mdns","opts","onup","onresponse","serviceMap","wildcard","_services","txt","default","type","name","toString","protocol","undefined","txtQuery","on","start","self","nameMap","packet","rinfo","answers","forEach","answer","data","query","Object","keys","goodbyes","removeService","bind","matches","buildServicesFor","length","service","fqdn","addService","update","stop","removeListener","services","push","emit","index","some","s","i","splice","concat","additionals","filter","rr","ttl","map","referer","records","ptr","addresses","subtypes","includes","types","toType","subtype","parts","split","slice","join","host","target","port","rawTxt","decodeAll","exports"],"sources":["../../src/lib/browser.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
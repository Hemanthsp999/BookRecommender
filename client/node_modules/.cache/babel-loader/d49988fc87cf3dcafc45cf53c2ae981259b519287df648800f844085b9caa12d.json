{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nmodule.exports = class LogInfoPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   */\n  constructor(source) {\n    this.source = source;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const source = this.source;\n    resolver.getHook(this.source).tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n      if (!resolveContext.log) return callback();\n      const log = resolveContext.log;\n      const prefix = \"[\" + source + \"] \";\n      if (request.path) log(prefix + \"Resolving in directory: \" + request.path);\n      if (request.request) log(prefix + \"Resolving request: \" + request.request);\n      if (request.module) log(prefix + \"Request is an module request.\");\n      if (request.directory) log(prefix + \"Request is a directory request.\");\n      if (request.query) log(prefix + \"Resolving request query: \" + request.query);\n      if (request.fragment) log(prefix + \"Resolving request fragment: \" + request.fragment);\n      if (request.descriptionFilePath) log(prefix + \"Has description data from \" + request.descriptionFilePath);\n      if (request.relativePath) log(prefix + \"Relative path from description file is: \" + request.relativePath);\n      callback();\n    });\n  }\n};","map":{"version":3,"names":["module","exports","LogInfoPlugin","constructor","source","apply","resolver","getHook","tapAsync","request","resolveContext","callback","log","prefix","path","directory","query","fragment","descriptionFilePath","relativePath"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/LogInfoPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class LogInfoPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst source = this.source;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!resolveContext.log) return callback();\n\t\t\t\tconst log = resolveContext.log;\n\t\t\t\tconst prefix = \"[\" + source + \"] \";\n\t\t\t\tif (request.path)\n\t\t\t\t\tlog(prefix + \"Resolving in directory: \" + request.path);\n\t\t\t\tif (request.request)\n\t\t\t\t\tlog(prefix + \"Resolving request: \" + request.request);\n\t\t\t\tif (request.module) log(prefix + \"Request is an module request.\");\n\t\t\t\tif (request.directory) log(prefix + \"Request is a directory request.\");\n\t\t\t\tif (request.query)\n\t\t\t\t\tlog(prefix + \"Resolving request query: \" + request.query);\n\t\t\t\tif (request.fragment)\n\t\t\t\t\tlog(prefix + \"Resolving request fragment: \" + request.fragment);\n\t\t\t\tif (request.descriptionFilePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix + \"Has description data from \" + request.descriptionFilePath\n\t\t\t\t\t);\n\t\t\t\tif (request.relativePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\t\"Relative path from description file is: \" +\n\t\t\t\t\t\t\trequest.relativePath\n\t\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,MAAMC,aAAa,CAAC;EACpC;AACD;AACA;EACCC,WAAWA,CAACC,MAAM,EAAE;IACnB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1BE,QAAQ,CACNC,OAAO,CAAC,IAAI,CAACH,MAAM,CAAC,CACpBI,QAAQ,CAAC,eAAe,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACjE,IAAI,CAACD,cAAc,CAACE,GAAG,EAAE,OAAOD,QAAQ,CAAC,CAAC;MAC1C,MAAMC,GAAG,GAAGF,cAAc,CAACE,GAAG;MAC9B,MAAMC,MAAM,GAAG,GAAG,GAAGT,MAAM,GAAG,IAAI;MAClC,IAAIK,OAAO,CAACK,IAAI,EACfF,GAAG,CAACC,MAAM,GAAG,0BAA0B,GAAGJ,OAAO,CAACK,IAAI,CAAC;MACxD,IAAIL,OAAO,CAACA,OAAO,EAClBG,GAAG,CAACC,MAAM,GAAG,qBAAqB,GAAGJ,OAAO,CAACA,OAAO,CAAC;MACtD,IAAIA,OAAO,CAACT,MAAM,EAAEY,GAAG,CAACC,MAAM,GAAG,+BAA+B,CAAC;MACjE,IAAIJ,OAAO,CAACM,SAAS,EAAEH,GAAG,CAACC,MAAM,GAAG,iCAAiC,CAAC;MACtE,IAAIJ,OAAO,CAACO,KAAK,EAChBJ,GAAG,CAACC,MAAM,GAAG,2BAA2B,GAAGJ,OAAO,CAACO,KAAK,CAAC;MAC1D,IAAIP,OAAO,CAACQ,QAAQ,EACnBL,GAAG,CAACC,MAAM,GAAG,8BAA8B,GAAGJ,OAAO,CAACQ,QAAQ,CAAC;MAChE,IAAIR,OAAO,CAACS,mBAAmB,EAC9BN,GAAG,CACFC,MAAM,GAAG,4BAA4B,GAAGJ,OAAO,CAACS,mBACjD,CAAC;MACF,IAAIT,OAAO,CAACU,YAAY,EACvBP,GAAG,CACFC,MAAM,GACL,0CAA0C,GAC1CJ,OAAO,CAACU,YACV,CAAC;MACFR,QAAQ,CAAC,CAAC;IACX,CAAC,CAAC;EACJ;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
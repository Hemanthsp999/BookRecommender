{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n/** @typedef {import(\"./Compiler\")} Compiler */\nclass IgnoreWarningsPlugin {\n  /**\n   * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\n   */\n  constructor(ignoreWarnings) {\n    this._ignoreWarnings = ignoreWarnings;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\n      compilation.hooks.processWarnings.tap(\"IgnoreWarningsPlugin\", warnings => {\n        return warnings.filter(warning => {\n          return !this._ignoreWarnings.some(ignore => ignore(warning, compilation));\n        });\n      });\n    });\n  }\n}\nmodule.exports = IgnoreWarningsPlugin;","map":{"version":3,"names":["IgnoreWarningsPlugin","constructor","ignoreWarnings","_ignoreWarnings","apply","compiler","hooks","compilation","tap","processWarnings","warnings","filter","warning","some","ignore","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/IgnoreWarningsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass IgnoreWarningsPlugin {\n\t/**\n\t * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\n\t */\n\tconstructor(ignoreWarnings) {\n\t\tthis._ignoreWarnings = ignoreWarnings;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\n\t\t\tcompilation.hooks.processWarnings.tap(\n\t\t\t\t\"IgnoreWarningsPlugin\",\n\t\t\t\twarnings => {\n\t\t\t\t\treturn warnings.filter(warning => {\n\t\t\t\t\t\treturn !this._ignoreWarnings.some(ignore =>\n\t\t\t\t\t\t\tignore(warning, compilation)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnoreWarningsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAMA,oBAAoB,CAAC;EAC1B;AACD;AACA;EACCC,WAAWA,CAACC,cAAc,EAAE;IAC3B,IAAI,CAACC,eAAe,GAAGD,cAAc;EACtC;EACA;AACD;AACA;AACA;AACA;EACCE,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,sBAAsB,EAAED,WAAW,IAAI;MACrEA,WAAW,CAACD,KAAK,CAACG,eAAe,CAACD,GAAG,CACpC,sBAAsB,EACtBE,QAAQ,IAAI;QACX,OAAOA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAI;UACjC,OAAO,CAAC,IAAI,CAACT,eAAe,CAACU,IAAI,CAACC,MAAM,IACvCA,MAAM,CAACF,OAAO,EAAEL,WAAW,CAC5B,CAAC;QACF,CAAC,CAAC;MACH,CACD,CAAC;IACF,CAAC,CAAC;EACH;AACD;AAEAQ,MAAM,CAACC,OAAO,GAAGhB,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
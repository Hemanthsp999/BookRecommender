{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\nconst defaultFactory = (key, hook) => hook;\nclass HookMap {\n  constructor(factory) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    this._map = new Map();\n    this.name = name;\n    this._factory = factory;\n    this._interceptors = [];\n  }\n  get(key) {\n    return this._map.get(key);\n  }\n  for(key) {\n    const hook = this.get(key);\n    if (hook !== undefined) {\n      return hook;\n    }\n    let newHook = this._factory(key);\n    const interceptors = this._interceptors;\n    for (let i = 0; i < interceptors.length; i++) {\n      newHook = interceptors[i].factory(key, newHook);\n    }\n    this._map.set(key, newHook);\n    return newHook;\n  }\n  intercept(interceptor) {\n    this._interceptors.push(Object.assign({\n      factory: defaultFactory\n    }, interceptor));\n  }\n}\nHookMap.prototype.tap = util.deprecate(function (key, options, fn) {\n  return this.for(key).tap(options, fn);\n}, \"HookMap#tap(key,…) is deprecated. Use HookMap#for(key).tap(…) instead.\");\nHookMap.prototype.tapAsync = util.deprecate(function (key, options, fn) {\n  return this.for(key).tapAsync(options, fn);\n}, \"HookMap#tapAsync(key,…) is deprecated. Use HookMap#for(key).tapAsync(…) instead.\");\nHookMap.prototype.tapPromise = util.deprecate(function (key, options, fn) {\n  return this.for(key).tapPromise(options, fn);\n}, \"HookMap#tapPromise(key,…) is deprecated. Use HookMap#for(key).tapPromise(…) instead.\");\nmodule.exports = HookMap;","map":{"version":3,"names":["util","require","defaultFactory","key","hook","HookMap","constructor","factory","name","arguments","length","undefined","_map","Map","_factory","_interceptors","get","for","newHook","interceptors","i","set","intercept","interceptor","push","Object","assign","prototype","tap","deprecate","options","fn","tapAsync","tapPromise","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/tapable/lib/HookMap.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst defaultFactory = (key, hook) => hook;\n\nclass HookMap {\n\tconstructor(factory, name = undefined) {\n\t\tthis._map = new Map();\n\t\tthis.name = name;\n\t\tthis._factory = factory;\n\t\tthis._interceptors = [];\n\t}\n\n\tget(key) {\n\t\treturn this._map.get(key);\n\t}\n\n\tfor(key) {\n\t\tconst hook = this.get(key);\n\t\tif (hook !== undefined) {\n\t\t\treturn hook;\n\t\t}\n\t\tlet newHook = this._factory(key);\n\t\tconst interceptors = this._interceptors;\n\t\tfor (let i = 0; i < interceptors.length; i++) {\n\t\t\tnewHook = interceptors[i].factory(key, newHook);\n\t\t}\n\t\tthis._map.set(key, newHook);\n\t\treturn newHook;\n\t}\n\n\tintercept(interceptor) {\n\t\tthis._interceptors.push(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tfactory: defaultFactory\n\t\t\t\t},\n\t\t\t\tinterceptor\n\t\t\t)\n\t\t);\n\t}\n}\n\nHookMap.prototype.tap = util.deprecate(function(key, options, fn) {\n\treturn this.for(key).tap(options, fn);\n}, \"HookMap#tap(key,…) is deprecated. Use HookMap#for(key).tap(…) instead.\");\n\nHookMap.prototype.tapAsync = util.deprecate(function(key, options, fn) {\n\treturn this.for(key).tapAsync(options, fn);\n}, \"HookMap#tapAsync(key,…) is deprecated. Use HookMap#for(key).tapAsync(…) instead.\");\n\nHookMap.prototype.tapPromise = util.deprecate(function(key, options, fn) {\n\treturn this.for(key).tapPromise(options, fn);\n}, \"HookMap#tapPromise(key,…) is deprecated. Use HookMap#for(key).tapPromise(…) instead.\");\n\nmodule.exports = HookMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMC,cAAc,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAKA,IAAI;AAE1C,MAAMC,OAAO,CAAC;EACbC,WAAWA,CAACC,OAAO,EAAoB;IAAA,IAAlBC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;IACpC,IAAI,CAACC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACM,QAAQ,GAAGP,OAAO;IACvB,IAAI,CAACQ,aAAa,GAAG,EAAE;EACxB;EAEAC,GAAGA,CAACb,GAAG,EAAE;IACR,OAAO,IAAI,CAACS,IAAI,CAACI,GAAG,CAACb,GAAG,CAAC;EAC1B;EAEAc,GAAGA,CAACd,GAAG,EAAE;IACR,MAAMC,IAAI,GAAG,IAAI,CAACY,GAAG,CAACb,GAAG,CAAC;IAC1B,IAAIC,IAAI,KAAKO,SAAS,EAAE;MACvB,OAAOP,IAAI;IACZ;IACA,IAAIc,OAAO,GAAG,IAAI,CAACJ,QAAQ,CAACX,GAAG,CAAC;IAChC,MAAMgB,YAAY,GAAG,IAAI,CAACJ,aAAa;IACvC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,YAAY,CAACT,MAAM,EAAEU,CAAC,EAAE,EAAE;MAC7CF,OAAO,GAAGC,YAAY,CAACC,CAAC,CAAC,CAACb,OAAO,CAACJ,GAAG,EAAEe,OAAO,CAAC;IAChD;IACA,IAAI,CAACN,IAAI,CAACS,GAAG,CAAClB,GAAG,EAAEe,OAAO,CAAC;IAC3B,OAAOA,OAAO;EACf;EAEAI,SAASA,CAACC,WAAW,EAAE;IACtB,IAAI,CAACR,aAAa,CAACS,IAAI,CACtBC,MAAM,CAACC,MAAM,CACZ;MACCnB,OAAO,EAAEL;IACV,CAAC,EACDqB,WACD,CACD,CAAC;EACF;AACD;AAEAlB,OAAO,CAACsB,SAAS,CAACC,GAAG,GAAG5B,IAAI,CAAC6B,SAAS,CAAC,UAAS1B,GAAG,EAAE2B,OAAO,EAAEC,EAAE,EAAE;EACjE,OAAO,IAAI,CAACd,GAAG,CAACd,GAAG,CAAC,CAACyB,GAAG,CAACE,OAAO,EAAEC,EAAE,CAAC;AACtC,CAAC,EAAE,wEAAwE,CAAC;AAE5E1B,OAAO,CAACsB,SAAS,CAACK,QAAQ,GAAGhC,IAAI,CAAC6B,SAAS,CAAC,UAAS1B,GAAG,EAAE2B,OAAO,EAAEC,EAAE,EAAE;EACtE,OAAO,IAAI,CAACd,GAAG,CAACd,GAAG,CAAC,CAAC6B,QAAQ,CAACF,OAAO,EAAEC,EAAE,CAAC;AAC3C,CAAC,EAAE,kFAAkF,CAAC;AAEtF1B,OAAO,CAACsB,SAAS,CAACM,UAAU,GAAGjC,IAAI,CAAC6B,SAAS,CAAC,UAAS1B,GAAG,EAAE2B,OAAO,EAAEC,EAAE,EAAE;EACxE,OAAO,IAAI,CAACd,GAAG,CAACd,GAAG,CAAC,CAAC8B,UAAU,CAACH,OAAO,EAAEC,EAAE,CAAC;AAC7C,CAAC,EAAE,sFAAsF,CAAC;AAE1FG,MAAM,CAACC,OAAO,GAAG9B,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}
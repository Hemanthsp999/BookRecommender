{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  compareRuntime\n} = require(\"./runtime\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @template T @typedef {function(T, T): -1|0|1} Comparator */\n/** @template TArg @template T @typedef {function(TArg, T, T): -1|0|1} RawParameterizedComparator */\n/** @template TArg @template T @typedef {function(TArg): Comparator<T>} ParameterizedComparator */\n\n/**\n * @template T\n * @param {RawParameterizedComparator<any, T>} fn comparator with argument\n * @returns {ParameterizedComparator<any, T>} comparator\n */\nconst createCachedParameterizedComparator = fn => {\n  /** @type {WeakMap<object, Comparator<T>>} */\n  const map = new WeakMap();\n  return arg => {\n    const cachedResult = map.get(arg);\n    if (cachedResult !== undefined) return cachedResult;\n    /**\n     * @param {T} a first item\n     * @param {T} b second item\n     * @returns {-1|0|1} compare result\n     */\n    const result = fn.bind(null, arg);\n    map.set(arg, result);\n    return result;\n  };\n};\n\n/**\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nexports.compareChunksById = (a, b) => {\n  return compareIds(a.id, b.id);\n};\n\n/**\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nexports.compareModulesByIdentifier = (a, b) => {\n  return compareIds(a.identifier(), b.identifier());\n};\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesById = (chunkGraph, a, b) => {\n  return compareIds(chunkGraph.getModuleId(a), chunkGraph.getModuleId(b));\n};\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nexports.compareModulesById = createCachedParameterizedComparator(compareModulesById);\n\n/**\n * @param {number} a number\n * @param {number} b number\n * @returns {-1|0|1} compare result\n */\nconst compareNumbers = (a, b) => {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nexports.compareNumbers = compareNumbers;\n\n/**\n * @param {string} a string\n * @param {string} b string\n * @returns {-1|0|1} compare result\n */\nconst compareStringsNumeric = (a, b) => {\n  const partsA = a.split(/(\\d+)/);\n  const partsB = b.split(/(\\d+)/);\n  const len = Math.min(partsA.length, partsB.length);\n  for (let i = 0; i < len; i++) {\n    const pA = partsA[i];\n    const pB = partsB[i];\n    if (i % 2 === 0) {\n      if (pA.length > pB.length) {\n        if (pA.slice(0, pB.length) > pB) return 1;\n        return -1;\n      } else if (pB.length > pA.length) {\n        if (pB.slice(0, pA.length) > pA) return -1;\n        return 1;\n      } else {\n        if (pA < pB) return -1;\n        if (pA > pB) return 1;\n      }\n    } else {\n      const nA = +pA;\n      const nB = +pB;\n      if (nA < nB) return -1;\n      if (nA > nB) return 1;\n    }\n  }\n  if (partsB.length < partsA.length) return 1;\n  if (partsB.length > partsA.length) return -1;\n  return 0;\n};\nexports.compareStringsNumeric = compareStringsNumeric;\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPostOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n  const cmp = compareNumbers(moduleGraph.getPostOrderIndex(a), moduleGraph.getPostOrderIndex(b));\n  if (cmp !== 0) return cmp;\n  return compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nexports.compareModulesByPostOrderIndexOrIdentifier = createCachedParameterizedComparator(compareModulesByPostOrderIndexOrIdentifier);\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPreOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n  const cmp = compareNumbers(moduleGraph.getPreOrderIndex(a), moduleGraph.getPreOrderIndex(b));\n  if (cmp !== 0) return cmp;\n  return compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nexports.compareModulesByPreOrderIndexOrIdentifier = createCachedParameterizedComparator(compareModulesByPreOrderIndexOrIdentifier);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByIdOrIdentifier = (chunkGraph, a, b) => {\n  const cmp = compareIds(chunkGraph.getModuleId(a), chunkGraph.getModuleId(b));\n  if (cmp !== 0) return cmp;\n  return compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nexports.compareModulesByIdOrIdentifier = createCachedParameterizedComparator(compareModulesByIdOrIdentifier);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nconst compareChunks = (chunkGraph, a, b) => {\n  return chunkGraph.compareChunks(a, b);\n};\n/** @type {ParameterizedComparator<ChunkGraph, Chunk>} */\nexports.compareChunks = createCachedParameterizedComparator(compareChunks);\n\n/**\n * @param {string|number} a first id\n * @param {string|number} b second id\n * @returns {-1|0|1} compare result\n */\nconst compareIds = (a, b) => {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nexports.compareIds = compareIds;\n\n/**\n * @param {string} a first string\n * @param {string} b second string\n * @returns {-1|0|1} compare result\n */\nconst compareStrings = (a, b) => {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nexports.compareStrings = compareStrings;\n\n/**\n * @param {ChunkGroup} a first chunk group\n * @param {ChunkGroup} b second chunk group\n * @returns {-1|0|1} compare result\n */\nconst compareChunkGroupsByIndex = (a, b) => {\n  return a.index < b.index ? -1 : 1;\n};\nexports.compareChunkGroupsByIndex = compareChunkGroupsByIndex;\n\n/**\n * @template K1 {Object}\n * @template K2\n * @template T\n */\nclass TwoKeyWeakMap {\n  constructor() {\n    /** @private @type {WeakMap<any, WeakMap<any, T>>} */\n    this._map = new WeakMap();\n  }\n\n  /**\n   * @param {K1} key1 first key\n   * @param {K2} key2 second key\n   * @returns {T | undefined} value\n   */\n  get(key1, key2) {\n    const childMap = this._map.get(key1);\n    if (childMap === undefined) {\n      return undefined;\n    }\n    return childMap.get(key2);\n  }\n\n  /**\n   * @param {K1} key1 first key\n   * @param {K2} key2 second key\n   * @param {T | undefined} value new value\n   * @returns {void}\n   */\n  set(key1, key2, value) {\n    let childMap = this._map.get(key1);\n    if (childMap === undefined) {\n      childMap = new WeakMap();\n      this._map.set(key1, childMap);\n    }\n    childMap.set(key2, value);\n  }\n}\n\n/** @type {TwoKeyWeakMap<Comparator<any>, Comparator<any>, Comparator<any>>}} */\nconst concatComparatorsCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} c1 comparator\n * @param {Comparator<T>} c2 comparator\n * @param {Comparator<T>[]} cRest comparators\n * @returns {Comparator<T>} comparator\n */\nconst concatComparators = function (c1, c2) {\n  for (var _len = arguments.length, cRest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    cRest[_key - 2] = arguments[_key];\n  }\n  if (cRest.length > 0) {\n    const [c3, ...cRest2] = cRest;\n    return concatComparators(c1, concatComparators(c2, c3, ...cRest2));\n  }\n  const cacheEntry = /** @type {Comparator<T>} */\n  concatComparatorsCache.get(c1, c2);\n  if (cacheEntry !== undefined) return cacheEntry;\n  /**\n   * @param {T} a first value\n   * @param {T} b second value\n   * @returns {-1|0|1} compare result\n   */\n  const result = (a, b) => {\n    const res = c1(a, b);\n    if (res !== 0) return res;\n    return c2(a, b);\n  };\n  concatComparatorsCache.set(c1, c2, result);\n  return result;\n};\nexports.concatComparators = concatComparators;\n\n/** @template A, B @typedef {(input: A) => B} Selector */\n\n/** @type {TwoKeyWeakMap<Selector<any, any>, Comparator<any>, Comparator<any>>}} */\nconst compareSelectCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @template R\n * @param {Selector<T, R>} getter getter for value\n * @param {Comparator<R>} comparator comparator\n * @returns {Comparator<T>} comparator\n */\nconst compareSelect = (getter, comparator) => {\n  const cacheEntry = compareSelectCache.get(getter, comparator);\n  if (cacheEntry !== undefined) return cacheEntry;\n  /**\n   * @param {T} a first value\n   * @param {T} b second value\n   * @returns {-1|0|1} compare result\n   */\n  const result = (a, b) => {\n    const aValue = getter(a);\n    const bValue = getter(b);\n    if (aValue !== undefined && aValue !== null) {\n      if (bValue !== undefined && bValue !== null) {\n        return comparator(aValue, bValue);\n      }\n      return -1;\n    } else {\n      if (bValue !== undefined && bValue !== null) {\n        return 1;\n      }\n      return 0;\n    }\n  };\n  compareSelectCache.set(getter, comparator, result);\n  return result;\n};\nexports.compareSelect = compareSelect;\n\n/** @type {WeakMap<Comparator<any>, Comparator<Iterable<any>>>} */\nconst compareIteratorsCache = new WeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} elementComparator comparator for elements\n * @returns {Comparator<Iterable<T>>} comparator for iterables of elements\n */\nconst compareIterables = elementComparator => {\n  const cacheEntry = compareIteratorsCache.get(elementComparator);\n  if (cacheEntry !== undefined) return cacheEntry;\n  /**\n   * @param {Iterable<T>} a first value\n   * @param {Iterable<T>} b second value\n   * @returns {-1|0|1} compare result\n   */\n  const result = (a, b) => {\n    const aI = a[Symbol.iterator]();\n    const bI = b[Symbol.iterator]();\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const aItem = aI.next();\n      const bItem = bI.next();\n      if (aItem.done) {\n        return bItem.done ? 0 : -1;\n      } else if (bItem.done) {\n        return 1;\n      }\n      const res = elementComparator(aItem.value, bItem.value);\n      if (res !== 0) return res;\n    }\n  };\n  compareIteratorsCache.set(elementComparator, result);\n  return result;\n};\nexports.compareIterables = compareIterables;\n\n// TODO this is no longer needed when minimum node.js version is >= 12\n// since these versions ship with a stable sort function\n/**\n * @template T\n * @param {Iterable<T>} iterable original ordered list\n * @returns {Comparator<T>} comparator\n */\nexports.keepOriginalOrder = iterable => {\n  /** @type {Map<T, number>} */\n  const map = new Map();\n  let i = 0;\n  for (const item of iterable) {\n    map.set(item, i++);\n  }\n  return (a, b) => compareNumbers(map.get(a), map.get(b));\n};\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {Comparator<Chunk>} comparator\n */\nexports.compareChunksNatural = chunkGraph => {\n  const cmpFn = exports.compareModulesById(chunkGraph);\n  const cmpIterableFn = compareIterables(cmpFn);\n  return concatComparators(compareSelect(chunk => chunk.name, compareIds), compareSelect(chunk => chunk.runtime, compareRuntime), compareSelect(\n  /**\n   * @param {Chunk} chunk a chunk\n   * @returns {Iterable<Module>} modules\n   */\n  chunk => chunkGraph.getOrderedChunkModulesIterable(chunk, cmpFn), cmpIterableFn));\n};\n\n/**\n * Compare two locations\n * @param {DependencyLocation} a A location node\n * @param {DependencyLocation} b A location node\n * @returns {-1|0|1} sorting comparator value\n */\nexports.compareLocations = (a, b) => {\n  let isObjectA = typeof a === \"object\" && a !== null;\n  let isObjectB = typeof b === \"object\" && b !== null;\n  if (!isObjectA || !isObjectB) {\n    if (isObjectA) return 1;\n    if (isObjectB) return -1;\n    return 0;\n  }\n  if (\"start\" in a) {\n    if (\"start\" in b) {\n      const ap = a.start;\n      const bp = b.start;\n      if (ap.line < bp.line) return -1;\n      if (ap.line > bp.line) return 1;\n      if (ap.column < bp.column) return -1;\n      if (ap.column > bp.column) return 1;\n    } else return -1;\n  } else if (\"start\" in b) return 1;\n  if (\"name\" in a) {\n    if (\"name\" in b) {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n    } else return -1;\n  } else if (\"name\" in b) return 1;\n  if (\"index\" in a) {\n    if (\"index\" in b) {\n      if (a.index < b.index) return -1;\n      if (a.index > b.index) return 1;\n    } else return -1;\n  } else if (\"index\" in b) return 1;\n  return 0;\n};","map":{"version":3,"names":["compareRuntime","require","createCachedParameterizedComparator","fn","map","WeakMap","arg","cachedResult","get","undefined","result","bind","set","exports","compareChunksById","a","b","compareIds","id","compareModulesByIdentifier","identifier","compareModulesById","chunkGraph","getModuleId","compareNumbers","compareStringsNumeric","partsA","split","partsB","len","Math","min","length","i","pA","pB","slice","nA","nB","compareModulesByPostOrderIndexOrIdentifier","moduleGraph","cmp","getPostOrderIndex","compareModulesByPreOrderIndexOrIdentifier","getPreOrderIndex","compareModulesByIdOrIdentifier","compareChunks","compareStrings","compareChunkGroupsByIndex","index","TwoKeyWeakMap","constructor","_map","key1","key2","childMap","value","concatComparatorsCache","concatComparators","c1","c2","_len","arguments","cRest","Array","_key","c3","cRest2","cacheEntry","res","compareSelectCache","compareSelect","getter","comparator","aValue","bValue","compareIteratorsCache","compareIterables","elementComparator","aI","Symbol","iterator","bI","aItem","next","bItem","done","keepOriginalOrder","iterable","Map","item","compareChunksNatural","cmpFn","cmpIterableFn","chunk","name","runtime","getOrderedChunkModulesIterable","compareLocations","isObjectA","isObjectB","ap","start","bp","line","column"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/util/comparators.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareRuntime } = require(\"./runtime\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @template T @typedef {function(T, T): -1|0|1} Comparator */\n/** @template TArg @template T @typedef {function(TArg, T, T): -1|0|1} RawParameterizedComparator */\n/** @template TArg @template T @typedef {function(TArg): Comparator<T>} ParameterizedComparator */\n\n/**\n * @template T\n * @param {RawParameterizedComparator<any, T>} fn comparator with argument\n * @returns {ParameterizedComparator<any, T>} comparator\n */\nconst createCachedParameterizedComparator = fn => {\n\t/** @type {WeakMap<object, Comparator<T>>} */\n\tconst map = new WeakMap();\n\treturn arg => {\n\t\tconst cachedResult = map.get(arg);\n\t\tif (cachedResult !== undefined) return cachedResult;\n\t\t/**\n\t\t * @param {T} a first item\n\t\t * @param {T} b second item\n\t\t * @returns {-1|0|1} compare result\n\t\t */\n\t\tconst result = fn.bind(null, arg);\n\t\tmap.set(arg, result);\n\t\treturn result;\n\t};\n};\n\n/**\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nexports.compareChunksById = (a, b) => {\n\treturn compareIds(a.id, b.id);\n};\n\n/**\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nexports.compareModulesByIdentifier = (a, b) => {\n\treturn compareIds(a.identifier(), b.identifier());\n};\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesById = (chunkGraph, a, b) => {\n\treturn compareIds(chunkGraph.getModuleId(a), chunkGraph.getModuleId(b));\n};\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nexports.compareModulesById =\n\tcreateCachedParameterizedComparator(compareModulesById);\n\n/**\n * @param {number} a number\n * @param {number} b number\n * @returns {-1|0|1} compare result\n */\nconst compareNumbers = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\nexports.compareNumbers = compareNumbers;\n\n/**\n * @param {string} a string\n * @param {string} b string\n * @returns {-1|0|1} compare result\n */\nconst compareStringsNumeric = (a, b) => {\n\tconst partsA = a.split(/(\\d+)/);\n\tconst partsB = b.split(/(\\d+)/);\n\tconst len = Math.min(partsA.length, partsB.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tconst pA = partsA[i];\n\t\tconst pB = partsB[i];\n\t\tif (i % 2 === 0) {\n\t\t\tif (pA.length > pB.length) {\n\t\t\t\tif (pA.slice(0, pB.length) > pB) return 1;\n\t\t\t\treturn -1;\n\t\t\t} else if (pB.length > pA.length) {\n\t\t\t\tif (pB.slice(0, pA.length) > pA) return -1;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tif (pA < pB) return -1;\n\t\t\t\tif (pA > pB) return 1;\n\t\t\t}\n\t\t} else {\n\t\t\tconst nA = +pA;\n\t\t\tconst nB = +pB;\n\t\t\tif (nA < nB) return -1;\n\t\t\tif (nA > nB) return 1;\n\t\t}\n\t}\n\tif (partsB.length < partsA.length) return 1;\n\tif (partsB.length > partsA.length) return -1;\n\treturn 0;\n};\nexports.compareStringsNumeric = compareStringsNumeric;\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPostOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n\tconst cmp = compareNumbers(\n\t\tmoduleGraph.getPostOrderIndex(a),\n\t\tmoduleGraph.getPostOrderIndex(b)\n\t);\n\tif (cmp !== 0) return cmp;\n\treturn compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nexports.compareModulesByPostOrderIndexOrIdentifier =\n\tcreateCachedParameterizedComparator(\n\t\tcompareModulesByPostOrderIndexOrIdentifier\n\t);\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPreOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n\tconst cmp = compareNumbers(\n\t\tmoduleGraph.getPreOrderIndex(a),\n\t\tmoduleGraph.getPreOrderIndex(b)\n\t);\n\tif (cmp !== 0) return cmp;\n\treturn compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nexports.compareModulesByPreOrderIndexOrIdentifier =\n\tcreateCachedParameterizedComparator(\n\t\tcompareModulesByPreOrderIndexOrIdentifier\n\t);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByIdOrIdentifier = (chunkGraph, a, b) => {\n\tconst cmp = compareIds(chunkGraph.getModuleId(a), chunkGraph.getModuleId(b));\n\tif (cmp !== 0) return cmp;\n\treturn compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nexports.compareModulesByIdOrIdentifier = createCachedParameterizedComparator(\n\tcompareModulesByIdOrIdentifier\n);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nconst compareChunks = (chunkGraph, a, b) => {\n\treturn chunkGraph.compareChunks(a, b);\n};\n/** @type {ParameterizedComparator<ChunkGraph, Chunk>} */\nexports.compareChunks = createCachedParameterizedComparator(compareChunks);\n\n/**\n * @param {string|number} a first id\n * @param {string|number} b second id\n * @returns {-1|0|1} compare result\n */\nconst compareIds = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nexports.compareIds = compareIds;\n\n/**\n * @param {string} a first string\n * @param {string} b second string\n * @returns {-1|0|1} compare result\n */\nconst compareStrings = (a, b) => {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nexports.compareStrings = compareStrings;\n\n/**\n * @param {ChunkGroup} a first chunk group\n * @param {ChunkGroup} b second chunk group\n * @returns {-1|0|1} compare result\n */\nconst compareChunkGroupsByIndex = (a, b) => {\n\treturn a.index < b.index ? -1 : 1;\n};\n\nexports.compareChunkGroupsByIndex = compareChunkGroupsByIndex;\n\n/**\n * @template K1 {Object}\n * @template K2\n * @template T\n */\nclass TwoKeyWeakMap {\n\tconstructor() {\n\t\t/** @private @type {WeakMap<any, WeakMap<any, T>>} */\n\t\tthis._map = new WeakMap();\n\t}\n\n\t/**\n\t * @param {K1} key1 first key\n\t * @param {K2} key2 second key\n\t * @returns {T | undefined} value\n\t */\n\tget(key1, key2) {\n\t\tconst childMap = this._map.get(key1);\n\t\tif (childMap === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn childMap.get(key2);\n\t}\n\n\t/**\n\t * @param {K1} key1 first key\n\t * @param {K2} key2 second key\n\t * @param {T | undefined} value new value\n\t * @returns {void}\n\t */\n\tset(key1, key2, value) {\n\t\tlet childMap = this._map.get(key1);\n\t\tif (childMap === undefined) {\n\t\t\tchildMap = new WeakMap();\n\t\t\tthis._map.set(key1, childMap);\n\t\t}\n\t\tchildMap.set(key2, value);\n\t}\n}\n\n/** @type {TwoKeyWeakMap<Comparator<any>, Comparator<any>, Comparator<any>>}} */\nconst concatComparatorsCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} c1 comparator\n * @param {Comparator<T>} c2 comparator\n * @param {Comparator<T>[]} cRest comparators\n * @returns {Comparator<T>} comparator\n */\nconst concatComparators = (c1, c2, ...cRest) => {\n\tif (cRest.length > 0) {\n\t\tconst [c3, ...cRest2] = cRest;\n\t\treturn concatComparators(c1, concatComparators(c2, c3, ...cRest2));\n\t}\n\tconst cacheEntry = /** @type {Comparator<T>} */ (\n\t\tconcatComparatorsCache.get(c1, c2)\n\t);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\t/**\n\t * @param {T} a first value\n\t * @param {T} b second value\n\t * @returns {-1|0|1} compare result\n\t */\n\tconst result = (a, b) => {\n\t\tconst res = c1(a, b);\n\t\tif (res !== 0) return res;\n\t\treturn c2(a, b);\n\t};\n\tconcatComparatorsCache.set(c1, c2, result);\n\treturn result;\n};\nexports.concatComparators = concatComparators;\n\n/** @template A, B @typedef {(input: A) => B} Selector */\n\n/** @type {TwoKeyWeakMap<Selector<any, any>, Comparator<any>, Comparator<any>>}} */\nconst compareSelectCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @template R\n * @param {Selector<T, R>} getter getter for value\n * @param {Comparator<R>} comparator comparator\n * @returns {Comparator<T>} comparator\n */\nconst compareSelect = (getter, comparator) => {\n\tconst cacheEntry = compareSelectCache.get(getter, comparator);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\t/**\n\t * @param {T} a first value\n\t * @param {T} b second value\n\t * @returns {-1|0|1} compare result\n\t */\n\tconst result = (a, b) => {\n\t\tconst aValue = getter(a);\n\t\tconst bValue = getter(b);\n\t\tif (aValue !== undefined && aValue !== null) {\n\t\t\tif (bValue !== undefined && bValue !== null) {\n\t\t\t\treturn comparator(aValue, bValue);\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (bValue !== undefined && bValue !== null) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t};\n\tcompareSelectCache.set(getter, comparator, result);\n\treturn result;\n};\nexports.compareSelect = compareSelect;\n\n/** @type {WeakMap<Comparator<any>, Comparator<Iterable<any>>>} */\nconst compareIteratorsCache = new WeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} elementComparator comparator for elements\n * @returns {Comparator<Iterable<T>>} comparator for iterables of elements\n */\nconst compareIterables = elementComparator => {\n\tconst cacheEntry = compareIteratorsCache.get(elementComparator);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\t/**\n\t * @param {Iterable<T>} a first value\n\t * @param {Iterable<T>} b second value\n\t * @returns {-1|0|1} compare result\n\t */\n\tconst result = (a, b) => {\n\t\tconst aI = a[Symbol.iterator]();\n\t\tconst bI = b[Symbol.iterator]();\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tconst aItem = aI.next();\n\t\t\tconst bItem = bI.next();\n\t\t\tif (aItem.done) {\n\t\t\t\treturn bItem.done ? 0 : -1;\n\t\t\t} else if (bItem.done) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tconst res = elementComparator(aItem.value, bItem.value);\n\t\t\tif (res !== 0) return res;\n\t\t}\n\t};\n\tcompareIteratorsCache.set(elementComparator, result);\n\treturn result;\n};\nexports.compareIterables = compareIterables;\n\n// TODO this is no longer needed when minimum node.js version is >= 12\n// since these versions ship with a stable sort function\n/**\n * @template T\n * @param {Iterable<T>} iterable original ordered list\n * @returns {Comparator<T>} comparator\n */\nexports.keepOriginalOrder = iterable => {\n\t/** @type {Map<T, number>} */\n\tconst map = new Map();\n\tlet i = 0;\n\tfor (const item of iterable) {\n\t\tmap.set(item, i++);\n\t}\n\treturn (a, b) => compareNumbers(map.get(a), map.get(b));\n};\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {Comparator<Chunk>} comparator\n */\nexports.compareChunksNatural = chunkGraph => {\n\tconst cmpFn = exports.compareModulesById(chunkGraph);\n\tconst cmpIterableFn = compareIterables(cmpFn);\n\treturn concatComparators(\n\t\tcompareSelect(chunk => chunk.name, compareIds),\n\t\tcompareSelect(chunk => chunk.runtime, compareRuntime),\n\t\tcompareSelect(\n\t\t\t/**\n\t\t\t * @param {Chunk} chunk a chunk\n\t\t\t * @returns {Iterable<Module>} modules\n\t\t\t */\n\t\t\tchunk => chunkGraph.getOrderedChunkModulesIterable(chunk, cmpFn),\n\t\t\tcmpIterableFn\n\t\t)\n\t);\n};\n\n/**\n * Compare two locations\n * @param {DependencyLocation} a A location node\n * @param {DependencyLocation} b A location node\n * @returns {-1|0|1} sorting comparator value\n */\nexports.compareLocations = (a, b) => {\n\tlet isObjectA = typeof a === \"object\" && a !== null;\n\tlet isObjectB = typeof b === \"object\" && b !== null;\n\tif (!isObjectA || !isObjectB) {\n\t\tif (isObjectA) return 1;\n\t\tif (isObjectB) return -1;\n\t\treturn 0;\n\t}\n\tif (\"start\" in a) {\n\t\tif (\"start\" in b) {\n\t\t\tconst ap = a.start;\n\t\t\tconst bp = b.start;\n\t\t\tif (ap.line < bp.line) return -1;\n\t\t\tif (ap.line > bp.line) return 1;\n\t\t\tif (ap.column < bp.column) return -1;\n\t\t\tif (ap.column > bp.column) return 1;\n\t\t} else return -1;\n\t} else if (\"start\" in b) return 1;\n\tif (\"name\" in a) {\n\t\tif (\"name\" in b) {\n\t\t\tif (a.name < b.name) return -1;\n\t\t\tif (a.name > b.name) return 1;\n\t\t} else return -1;\n\t} else if (\"name\" in b) return 1;\n\tif (\"index\" in a) {\n\t\tif (\"index\" in b) {\n\t\t\tif (a.index < b.index) return -1;\n\t\t\tif (a.index > b.index) return 1;\n\t\t} else return -1;\n\t} else if (\"index\" in b) return 1;\n\treturn 0;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
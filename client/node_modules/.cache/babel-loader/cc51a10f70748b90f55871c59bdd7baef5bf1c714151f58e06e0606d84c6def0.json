{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DescriptionFilePlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string[]} filenames filenames\n   * @param {boolean} pathIsFile pathIsFile\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, filenames, pathIsFile, target) {\n    this.source = source;\n    this.filenames = filenames;\n    this.pathIsFile = pathIsFile;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"DescriptionFilePlugin\", (request, resolveContext, callback) => {\n      const path = request.path;\n      if (!path) return callback();\n      const directory = this.pathIsFile ? DescriptionFileUtils.cdUp(path) : path;\n      if (!directory) return callback();\n      DescriptionFileUtils.loadDescriptionFile(resolver, directory, this.filenames, request.descriptionFilePath ? {\n        path: request.descriptionFilePath,\n        content: request.descriptionFileData,\n        directory: /** @type {string} */request.descriptionFileRoot\n      } : undefined, resolveContext, (err, result) => {\n        if (err) return callback(err);\n        if (!result) {\n          if (resolveContext.log) resolveContext.log(`No description file found in ${directory} or above`);\n          return callback();\n        }\n        const relativePath = \".\" + path.slice(result.directory.length).replace(/\\\\/g, \"/\");\n        /** @type {ResolveRequest} */\n        const obj = {\n          ...request,\n          descriptionFilePath: result.path,\n          descriptionFileData: result.content,\n          descriptionFileRoot: result.directory,\n          relativePath: relativePath\n        };\n        resolver.doResolve(target, obj, \"using description file: \" + result.path + \" (relative path: \" + relativePath + \")\", resolveContext, (err, result) => {\n          if (err) return callback(err);\n\n          // Don't allow other processing\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    });\n  }\n};","map":{"version":3,"names":["DescriptionFileUtils","require","module","exports","DescriptionFilePlugin","constructor","source","filenames","pathIsFile","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","path","directory","cdUp","loadDescriptionFile","descriptionFilePath","content","descriptionFileData","descriptionFileRoot","undefined","err","result","log","relativePath","slice","length","replace","obj","doResolve"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DescriptionFilePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string[]} filenames filenames\n\t * @param {boolean} pathIsFile pathIsFile\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filenames, pathIsFile, target) {\n\t\tthis.source = source;\n\t\tthis.filenames = filenames;\n\t\tthis.pathIsFile = pathIsFile;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DescriptionFilePlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst path = request.path;\n\t\t\t\t\tif (!path) return callback();\n\t\t\t\t\tconst directory = this.pathIsFile\n\t\t\t\t\t\t? DescriptionFileUtils.cdUp(path)\n\t\t\t\t\t\t: path;\n\t\t\t\t\tif (!directory) return callback();\n\t\t\t\t\tDescriptionFileUtils.loadDescriptionFile(\n\t\t\t\t\t\tresolver,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tthis.filenames,\n\t\t\t\t\t\trequest.descriptionFilePath\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tpath: request.descriptionFilePath,\n\t\t\t\t\t\t\t\t\tcontent: request.descriptionFileData,\n\t\t\t\t\t\t\t\t\tdirectory: /** @type {string} */ (request.descriptionFileRoot)\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t`No description file found in ${directory} or above`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst relativePath =\n\t\t\t\t\t\t\t\t\".\" + path.slice(result.directory.length).replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\tdescriptionFilePath: result.path,\n\t\t\t\t\t\t\t\tdescriptionFileData: result.content,\n\t\t\t\t\t\t\t\tdescriptionFileRoot: result.directory,\n\t\t\t\t\t\t\t\trelativePath: relativePath\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"using description file: \" +\n\t\t\t\t\t\t\t\t\tresult.path +\n\t\t\t\t\t\t\t\t\t\" (relative path: \" +\n\t\t\t\t\t\t\t\t\trelativePath +\n\t\t\t\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t\t// Don't allow other processing\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;;AAE9D;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,MAAMC,qBAAqB,CAAC;EAC5C;AACD;AACA;AACA;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAE;IAClD,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACP,MAAM,CAAC,CACpBQ,QAAQ,CACR,uBAAuB,EACvB,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACtC,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;MACzB,IAAI,CAACA,IAAI,EAAE,OAAOD,QAAQ,CAAC,CAAC;MAC5B,MAAME,SAAS,GAAG,IAAI,CAACX,UAAU,GAC9BR,oBAAoB,CAACoB,IAAI,CAACF,IAAI,CAAC,GAC/BA,IAAI;MACP,IAAI,CAACC,SAAS,EAAE,OAAOF,QAAQ,CAAC,CAAC;MACjCjB,oBAAoB,CAACqB,mBAAmB,CACvCV,QAAQ,EACRQ,SAAS,EACT,IAAI,CAACZ,SAAS,EACdQ,OAAO,CAACO,mBAAmB,GACxB;QACAJ,IAAI,EAAEH,OAAO,CAACO,mBAAmB;QACjCC,OAAO,EAAER,OAAO,CAACS,mBAAmB;QACpCL,SAAS,EAAE,qBAAuBJ,OAAO,CAACU;MAC1C,CAAC,GACDC,SAAS,EACZV,cAAc,EACd,CAACW,GAAG,EAAEC,MAAM,KAAK;QAChB,IAAID,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;QAC7B,IAAI,CAACC,MAAM,EAAE;UACZ,IAAIZ,cAAc,CAACa,GAAG,EACrBb,cAAc,CAACa,GAAG,CAChB,gCAA+BV,SAAU,WAC3C,CAAC;UACF,OAAOF,QAAQ,CAAC,CAAC;QAClB;QACA,MAAMa,YAAY,GACjB,GAAG,GAAGZ,IAAI,CAACa,KAAK,CAACH,MAAM,CAACT,SAAS,CAACa,MAAM,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;QAC9D;QACA,MAAMC,GAAG,GAAG;UACX,GAAGnB,OAAO;UACVO,mBAAmB,EAAEM,MAAM,CAACV,IAAI;UAChCM,mBAAmB,EAAEI,MAAM,CAACL,OAAO;UACnCE,mBAAmB,EAAEG,MAAM,CAACT,SAAS;UACrCW,YAAY,EAAEA;QACf,CAAC;QACDnB,QAAQ,CAACwB,SAAS,CACjB1B,MAAM,EACNyB,GAAG,EACH,0BAA0B,GACzBN,MAAM,CAACV,IAAI,GACX,mBAAmB,GACnBY,YAAY,GACZ,GAAG,EACJd,cAAc,EACd,CAACW,GAAG,EAAEC,MAAM,KAAK;UAChB,IAAID,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;;UAE7B;UACA,IAAIC,MAAM,KAAKF,SAAS,EAAE,OAAOT,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;UACrDA,QAAQ,CAAC,IAAI,EAAEW,MAAM,CAAC;QACvB,CACD,CAAC;MACF,CACD,CAAC;IACF,CACD,CAAC;EACH;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
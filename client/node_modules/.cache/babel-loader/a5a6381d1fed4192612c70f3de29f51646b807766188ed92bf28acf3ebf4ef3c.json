{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  compareChunksNatural\n} = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst {\n  assignAscendingChunkIds\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../../declarations/plugins/ids/OccurrenceChunkIdsPlugin\").OccurrenceChunkIdsPluginOptions} OccurrenceChunkIdsPluginOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.check.js\"), () => require(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.json\"), {\n  name: \"Occurrence Order Chunk Ids Plugin\",\n  baseDataPath: \"options\"\n});\nclass OccurrenceChunkIdsPlugin {\n  /**\n   * @param {OccurrenceChunkIdsPluginOptions=} options options object\n   */\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    validate(options);\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    const prioritiseInitial = this.options.prioritiseInitial;\n    compiler.hooks.compilation.tap(\"OccurrenceChunkIdsPlugin\", compilation => {\n      compilation.hooks.chunkIds.tap(\"OccurrenceChunkIdsPlugin\", chunks => {\n        const chunkGraph = compilation.chunkGraph;\n\n        /** @type {Map<Chunk, number>} */\n        const occursInInitialChunksMap = new Map();\n        const compareNatural = compareChunksNatural(chunkGraph);\n        for (const c of chunks) {\n          let occurs = 0;\n          for (const chunkGroup of c.groupsIterable) {\n            for (const parent of chunkGroup.parentsIterable) {\n              if (parent.isInitial()) occurs++;\n            }\n          }\n          occursInInitialChunksMap.set(c, occurs);\n        }\n        const chunksInOccurrenceOrder = Array.from(chunks).sort((a, b) => {\n          if (prioritiseInitial) {\n            const aEntryOccurs = occursInInitialChunksMap.get(a);\n            const bEntryOccurs = occursInInitialChunksMap.get(b);\n            if (aEntryOccurs > bEntryOccurs) return -1;\n            if (aEntryOccurs < bEntryOccurs) return 1;\n          }\n          const aOccurs = a.getNumberOfGroups();\n          const bOccurs = b.getNumberOfGroups();\n          if (aOccurs > bOccurs) return -1;\n          if (aOccurs < bOccurs) return 1;\n          return compareNatural(a, b);\n        });\n        assignAscendingChunkIds(chunksInOccurrenceOrder, compilation);\n      });\n    });\n  }\n}\nmodule.exports = OccurrenceChunkIdsPlugin;","map":{"version":3,"names":["compareChunksNatural","require","createSchemaValidation","assignAscendingChunkIds","validate","name","baseDataPath","OccurrenceChunkIdsPlugin","constructor","options","arguments","length","undefined","apply","compiler","prioritiseInitial","hooks","compilation","tap","chunkIds","chunks","chunkGraph","occursInInitialChunksMap","Map","compareNatural","c","occurs","chunkGroup","groupsIterable","parent","parentsIterable","isInitial","set","chunksInOccurrenceOrder","Array","from","sort","a","b","aEntryOccurs","get","bEntryOccurs","aOccurs","getNumberOfGroups","bOccurs","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ids/OccurrenceChunkIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareChunksNatural } = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst { assignAscendingChunkIds } = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../../declarations/plugins/ids/OccurrenceChunkIdsPlugin\").OccurrenceChunkIdsPluginOptions} OccurrenceChunkIdsPluginOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.json\"),\n\t{\n\t\tname: \"Occurrence Order Chunk Ids Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass OccurrenceChunkIdsPlugin {\n\t/**\n\t * @param {OccurrenceChunkIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidate(options);\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst prioritiseInitial = this.options.prioritiseInitial;\n\t\tcompiler.hooks.compilation.tap(\"OccurrenceChunkIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.chunkIds.tap(\"OccurrenceChunkIdsPlugin\", chunks => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\n\t\t\t\t/** @type {Map<Chunk, number>} */\n\t\t\t\tconst occursInInitialChunksMap = new Map();\n\n\t\t\t\tconst compareNatural = compareChunksNatural(chunkGraph);\n\n\t\t\t\tfor (const c of chunks) {\n\t\t\t\t\tlet occurs = 0;\n\t\t\t\t\tfor (const chunkGroup of c.groupsIterable) {\n\t\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\tif (parent.isInitial()) occurs++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\toccursInInitialChunksMap.set(c, occurs);\n\t\t\t\t}\n\n\t\t\t\tconst chunksInOccurrenceOrder = Array.from(chunks).sort((a, b) => {\n\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t}\n\t\t\t\t\tconst aOccurs = a.getNumberOfGroups();\n\t\t\t\t\tconst bOccurs = b.getNumberOfGroups();\n\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\treturn compareNatural(a, b);\n\t\t\t\t});\n\t\t\t\tassignAscendingChunkIds(chunksInOccurrenceOrder, compilation);\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = OccurrenceChunkIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAqB,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/D,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAC1E,MAAM;EAAEE;AAAwB,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAE1D;AACA;AACA;AACA;;AAEA,MAAMG,QAAQ,GAAGF,sBAAsB,CACtCD,OAAO,CAAC,6DAA6D,CAAC,EACtE,MAAMA,OAAO,CAAC,yDAAyD,CAAC,EACxE;EACCI,IAAI,EAAE,mCAAmC;EACzCC,YAAY,EAAE;AACf,CACD,CAAC;AAED,MAAMC,wBAAwB,CAAC;EAC9B;AACD;AACA;EACCC,WAAWA,CAAA,EAAe;IAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACvBN,QAAQ,CAACK,OAAO,CAAC;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;AACA;AACA;EACCI,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMC,iBAAiB,GAAG,IAAI,CAACN,OAAO,CAACM,iBAAiB;IACxDD,QAAQ,CAACE,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,0BAA0B,EAAED,WAAW,IAAI;MACzEA,WAAW,CAACD,KAAK,CAACG,QAAQ,CAACD,GAAG,CAAC,0BAA0B,EAAEE,MAAM,IAAI;QACpE,MAAMC,UAAU,GAAGJ,WAAW,CAACI,UAAU;;QAEzC;QACA,MAAMC,wBAAwB,GAAG,IAAIC,GAAG,CAAC,CAAC;QAE1C,MAAMC,cAAc,GAAGxB,oBAAoB,CAACqB,UAAU,CAAC;QAEvD,KAAK,MAAMI,CAAC,IAAIL,MAAM,EAAE;UACvB,IAAIM,MAAM,GAAG,CAAC;UACd,KAAK,MAAMC,UAAU,IAAIF,CAAC,CAACG,cAAc,EAAE;YAC1C,KAAK,MAAMC,MAAM,IAAIF,UAAU,CAACG,eAAe,EAAE;cAChD,IAAID,MAAM,CAACE,SAAS,CAAC,CAAC,EAAEL,MAAM,EAAE;YACjC;UACD;UACAJ,wBAAwB,CAACU,GAAG,CAACP,CAAC,EAAEC,MAAM,CAAC;QACxC;QAEA,MAAMO,uBAAuB,GAAGC,KAAK,CAACC,IAAI,CAACf,MAAM,CAAC,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACjE,IAAIvB,iBAAiB,EAAE;YACtB,MAAMwB,YAAY,GAAGjB,wBAAwB,CAACkB,GAAG,CAACH,CAAC,CAAC;YACpD,MAAMI,YAAY,GAAGnB,wBAAwB,CAACkB,GAAG,CAACF,CAAC,CAAC;YACpD,IAAIC,YAAY,GAAGE,YAAY,EAAE,OAAO,CAAC,CAAC;YAC1C,IAAIF,YAAY,GAAGE,YAAY,EAAE,OAAO,CAAC;UAC1C;UACA,MAAMC,OAAO,GAAGL,CAAC,CAACM,iBAAiB,CAAC,CAAC;UACrC,MAAMC,OAAO,GAAGN,CAAC,CAACK,iBAAiB,CAAC,CAAC;UACrC,IAAID,OAAO,GAAGE,OAAO,EAAE,OAAO,CAAC,CAAC;UAChC,IAAIF,OAAO,GAAGE,OAAO,EAAE,OAAO,CAAC;UAC/B,OAAOpB,cAAc,CAACa,CAAC,EAAEC,CAAC,CAAC;QAC5B,CAAC,CAAC;QACFnC,uBAAuB,CAAC8B,uBAAuB,EAAEhB,WAAW,CAAC;MAC9D,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AAEA4B,MAAM,CAACC,OAAO,GAAGvC,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
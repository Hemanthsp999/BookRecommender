{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createHash = require(\"../util/createHash\");\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {typeof import(\"../util/Hash\")} HashConstructor */\n\n/**\n * @typedef {Object} HashableObject\n * @property {function(Hash): void} updateHash\n */\n\nclass LazyHashedEtag {\n  /**\n   * @param {HashableObject} obj object with updateHash method\n   * @param {string | HashConstructor} hashFunction the hash function to use\n   */\n  constructor(obj) {\n    let hashFunction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"md4\";\n    this._obj = obj;\n    this._hash = undefined;\n    this._hashFunction = hashFunction;\n  }\n\n  /**\n   * @returns {string} hash of object\n   */\n  toString() {\n    if (this._hash === undefined) {\n      const hash = createHash(this._hashFunction);\n      this._obj.updateHash(hash);\n      this._hash = /** @type {string} */hash.digest(\"base64\");\n    }\n    return this._hash;\n  }\n}\n\n/** @type {Map<string | HashConstructor, WeakMap<HashableObject, LazyHashedEtag>>} */\nconst mapStrings = new Map();\n\n/** @type {WeakMap<HashConstructor, WeakMap<HashableObject, LazyHashedEtag>>} */\nconst mapObjects = new WeakMap();\n\n/**\n * @param {HashableObject} obj object with updateHash method\n * @param {string | HashConstructor} hashFunction the hash function to use\n * @returns {LazyHashedEtag} etag\n */\nconst getter = function (obj) {\n  let hashFunction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"md4\";\n  let innerMap;\n  if (typeof hashFunction === \"string\") {\n    innerMap = mapStrings.get(hashFunction);\n    if (innerMap === undefined) {\n      const newHash = new LazyHashedEtag(obj, hashFunction);\n      innerMap = new WeakMap();\n      innerMap.set(obj, newHash);\n      mapStrings.set(hashFunction, innerMap);\n      return newHash;\n    }\n  } else {\n    innerMap = mapObjects.get(hashFunction);\n    if (innerMap === undefined) {\n      const newHash = new LazyHashedEtag(obj, hashFunction);\n      innerMap = new WeakMap();\n      innerMap.set(obj, newHash);\n      mapObjects.set(hashFunction, innerMap);\n      return newHash;\n    }\n  }\n  const hash = innerMap.get(obj);\n  if (hash !== undefined) return hash;\n  const newHash = new LazyHashedEtag(obj, hashFunction);\n  innerMap.set(obj, newHash);\n  return newHash;\n};\nmodule.exports = getter;","map":{"version":3,"names":["createHash","require","LazyHashedEtag","constructor","obj","hashFunction","arguments","length","undefined","_obj","_hash","_hashFunction","toString","hash","updateHash","digest","mapStrings","Map","mapObjects","WeakMap","getter","innerMap","get","newHash","set","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/cache/getLazyHashedEtag.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createHash = require(\"../util/createHash\");\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {typeof import(\"../util/Hash\")} HashConstructor */\n\n/**\n * @typedef {Object} HashableObject\n * @property {function(Hash): void} updateHash\n */\n\nclass LazyHashedEtag {\n\t/**\n\t * @param {HashableObject} obj object with updateHash method\n\t * @param {string | HashConstructor} hashFunction the hash function to use\n\t */\n\tconstructor(obj, hashFunction = \"md4\") {\n\t\tthis._obj = obj;\n\t\tthis._hash = undefined;\n\t\tthis._hashFunction = hashFunction;\n\t}\n\n\t/**\n\t * @returns {string} hash of object\n\t */\n\ttoString() {\n\t\tif (this._hash === undefined) {\n\t\t\tconst hash = createHash(this._hashFunction);\n\t\t\tthis._obj.updateHash(hash);\n\t\t\tthis._hash = /** @type {string} */ (hash.digest(\"base64\"));\n\t\t}\n\t\treturn this._hash;\n\t}\n}\n\n/** @type {Map<string | HashConstructor, WeakMap<HashableObject, LazyHashedEtag>>} */\nconst mapStrings = new Map();\n\n/** @type {WeakMap<HashConstructor, WeakMap<HashableObject, LazyHashedEtag>>} */\nconst mapObjects = new WeakMap();\n\n/**\n * @param {HashableObject} obj object with updateHash method\n * @param {string | HashConstructor} hashFunction the hash function to use\n * @returns {LazyHashedEtag} etag\n */\nconst getter = (obj, hashFunction = \"md4\") => {\n\tlet innerMap;\n\tif (typeof hashFunction === \"string\") {\n\t\tinnerMap = mapStrings.get(hashFunction);\n\t\tif (innerMap === undefined) {\n\t\t\tconst newHash = new LazyHashedEtag(obj, hashFunction);\n\t\t\tinnerMap = new WeakMap();\n\t\t\tinnerMap.set(obj, newHash);\n\t\t\tmapStrings.set(hashFunction, innerMap);\n\t\t\treturn newHash;\n\t\t}\n\t} else {\n\t\tinnerMap = mapObjects.get(hashFunction);\n\t\tif (innerMap === undefined) {\n\t\t\tconst newHash = new LazyHashedEtag(obj, hashFunction);\n\t\t\tinnerMap = new WeakMap();\n\t\t\tinnerMap.set(obj, newHash);\n\t\t\tmapObjects.set(hashFunction, innerMap);\n\t\t\treturn newHash;\n\t\t}\n\t}\n\tconst hash = innerMap.get(obj);\n\tif (hash !== undefined) return hash;\n\tconst newHash = new LazyHashedEtag(obj, hashFunction);\n\tinnerMap.set(obj, newHash);\n\treturn newHash;\n};\n\nmodule.exports = getter;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,CAAC;EACpB;AACD;AACA;AACA;EACCC,WAAWA,CAACC,GAAG,EAAwB;IAAA,IAAtBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IACpC,IAAI,CAACG,IAAI,GAAGL,GAAG;IACf,IAAI,CAACM,KAAK,GAAGF,SAAS;IACtB,IAAI,CAACG,aAAa,GAAGN,YAAY;EAClC;;EAEA;AACD;AACA;EACCO,QAAQA,CAAA,EAAG;IACV,IAAI,IAAI,CAACF,KAAK,KAAKF,SAAS,EAAE;MAC7B,MAAMK,IAAI,GAAGb,UAAU,CAAC,IAAI,CAACW,aAAa,CAAC;MAC3C,IAAI,CAACF,IAAI,CAACK,UAAU,CAACD,IAAI,CAAC;MAC1B,IAAI,CAACH,KAAK,GAAG,qBAAuBG,IAAI,CAACE,MAAM,CAAC,QAAQ,CAAE;IAC3D;IACA,OAAO,IAAI,CAACL,KAAK;EAClB;AACD;;AAEA;AACA,MAAMM,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAE5B;AACA,MAAMC,UAAU,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG,SAAAA,CAAChB,GAAG,EAA2B;EAAA,IAAzBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACxC,IAAIe,QAAQ;EACZ,IAAI,OAAOhB,YAAY,KAAK,QAAQ,EAAE;IACrCgB,QAAQ,GAAGL,UAAU,CAACM,GAAG,CAACjB,YAAY,CAAC;IACvC,IAAIgB,QAAQ,KAAKb,SAAS,EAAE;MAC3B,MAAMe,OAAO,GAAG,IAAIrB,cAAc,CAACE,GAAG,EAAEC,YAAY,CAAC;MACrDgB,QAAQ,GAAG,IAAIF,OAAO,CAAC,CAAC;MACxBE,QAAQ,CAACG,GAAG,CAACpB,GAAG,EAAEmB,OAAO,CAAC;MAC1BP,UAAU,CAACQ,GAAG,CAACnB,YAAY,EAAEgB,QAAQ,CAAC;MACtC,OAAOE,OAAO;IACf;EACD,CAAC,MAAM;IACNF,QAAQ,GAAGH,UAAU,CAACI,GAAG,CAACjB,YAAY,CAAC;IACvC,IAAIgB,QAAQ,KAAKb,SAAS,EAAE;MAC3B,MAAMe,OAAO,GAAG,IAAIrB,cAAc,CAACE,GAAG,EAAEC,YAAY,CAAC;MACrDgB,QAAQ,GAAG,IAAIF,OAAO,CAAC,CAAC;MACxBE,QAAQ,CAACG,GAAG,CAACpB,GAAG,EAAEmB,OAAO,CAAC;MAC1BL,UAAU,CAACM,GAAG,CAACnB,YAAY,EAAEgB,QAAQ,CAAC;MACtC,OAAOE,OAAO;IACf;EACD;EACA,MAAMV,IAAI,GAAGQ,QAAQ,CAACC,GAAG,CAAClB,GAAG,CAAC;EAC9B,IAAIS,IAAI,KAAKL,SAAS,EAAE,OAAOK,IAAI;EACnC,MAAMU,OAAO,GAAG,IAAIrB,cAAc,CAACE,GAAG,EAAEC,YAAY,CAAC;EACrDgB,QAAQ,CAACG,GAAG,CAACpB,GAAG,EAAEmB,OAAO,CAAC;EAC1B,OAAOA,OAAO;AACf,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGN,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}
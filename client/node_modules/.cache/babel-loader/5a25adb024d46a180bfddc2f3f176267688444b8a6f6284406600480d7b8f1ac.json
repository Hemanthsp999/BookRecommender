{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\nconst {\n  someInIterable\n} = require(\"./util/IterableHelpers\");\nconst {\n  compareModulesById\n} = require(\"./util/comparators\");\nconst {\n  dirname,\n  mkdirp\n} = require(\"./util/fs\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @typedef {Object} ManifestModuleData\n * @property {string | number} id\n * @property {Object} buildMeta\n * @property {boolean | string[]} exports\n */\n\nclass LibManifestPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.emit.tapAsync(\"LibManifestPlugin\", (compilation, callback) => {\n      const moduleGraph = compilation.moduleGraph;\n      asyncLib.forEach(Array.from(compilation.chunks), (chunk, callback) => {\n        if (!chunk.canBeInitial()) {\n          callback();\n          return;\n        }\n        const chunkGraph = compilation.chunkGraph;\n        const targetPath = compilation.getPath(this.options.path, {\n          chunk\n        });\n        const name = this.options.name && compilation.getPath(this.options.name, {\n          chunk,\n          contentHashType: \"javascript\"\n        });\n        const content = Object.create(null);\n        for (const module of chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesById(chunkGraph))) {\n          if (this.options.entryOnly && !someInIterable(moduleGraph.getIncomingConnections(module), c => c.dependency instanceof EntryDependency)) {\n            continue;\n          }\n          const ident = module.libIdent({\n            context: this.options.context || compiler.options.context,\n            associatedObjectForCache: compiler.root\n          });\n          if (ident) {\n            const exportsInfo = moduleGraph.getExportsInfo(module);\n            const providedExports = exportsInfo.getProvidedExports();\n            /** @type {ManifestModuleData} */\n            const data = {\n              id: chunkGraph.getModuleId(module),\n              buildMeta: module.buildMeta,\n              exports: Array.isArray(providedExports) ? providedExports : undefined\n            };\n            content[ident] = data;\n          }\n        }\n        const manifest = {\n          name,\n          type: this.options.type,\n          content\n        };\n        // Apply formatting to content if format flag is true;\n        const manifestContent = this.options.format ? JSON.stringify(manifest, null, 2) : JSON.stringify(manifest);\n        const buffer = Buffer.from(manifestContent, \"utf8\");\n        mkdirp(compiler.intermediateFileSystem, dirname(compiler.intermediateFileSystem, targetPath), err => {\n          if (err) return callback(err);\n          compiler.intermediateFileSystem.writeFile(targetPath, buffer, callback);\n        });\n      }, callback);\n    });\n  }\n}\nmodule.exports = LibManifestPlugin;","map":{"version":3,"names":["asyncLib","require","EntryDependency","someInIterable","compareModulesById","dirname","mkdirp","LibManifestPlugin","constructor","options","apply","compiler","hooks","emit","tapAsync","compilation","callback","moduleGraph","forEach","Array","from","chunks","chunk","canBeInitial","chunkGraph","targetPath","getPath","path","name","contentHashType","content","Object","create","module","getOrderedChunkModulesIterable","entryOnly","getIncomingConnections","c","dependency","ident","libIdent","context","associatedObjectForCache","root","exportsInfo","getExportsInfo","providedExports","getProvidedExports","data","id","getModuleId","buildMeta","exports","isArray","undefined","manifest","type","manifestContent","format","JSON","stringify","buffer","Buffer","intermediateFileSystem","err","writeFile"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/LibManifestPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\nconst { someInIterable } = require(\"./util/IterableHelpers\");\nconst { compareModulesById } = require(\"./util/comparators\");\nconst { dirname, mkdirp } = require(\"./util/fs\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @typedef {Object} ManifestModuleData\n * @property {string | number} id\n * @property {Object} buildMeta\n * @property {boolean | string[]} exports\n */\n\nclass LibManifestPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t\"LibManifestPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tArray.from(compilation.chunks),\n\t\t\t\t\t(chunk, callback) => {\n\t\t\t\t\t\tif (!chunk.canBeInitial()) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.options.name &&\n\t\t\t\t\t\t\tcompilation.getPath(this.options.name, {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tconst content = Object.create(null);\n\t\t\t\t\t\tfor (const module of chunkGraph.getOrderedChunkModulesIterable(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tcompareModulesById(chunkGraph)\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.options.entryOnly &&\n\t\t\t\t\t\t\t\t!someInIterable(\n\t\t\t\t\t\t\t\t\tmoduleGraph.getIncomingConnections(module),\n\t\t\t\t\t\t\t\t\tc => c.dependency instanceof EntryDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst ident = module.libIdent({\n\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context,\n\t\t\t\t\t\t\t\tassociatedObjectForCache: compiler.root\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (ident) {\n\t\t\t\t\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\t\t\t\t\t\tconst providedExports = exportsInfo.getProvidedExports();\n\t\t\t\t\t\t\t\t/** @type {ManifestModuleData} */\n\t\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\t\tid: chunkGraph.getModuleId(module),\n\t\t\t\t\t\t\t\t\tbuildMeta: module.buildMeta,\n\t\t\t\t\t\t\t\t\texports: Array.isArray(providedExports)\n\t\t\t\t\t\t\t\t\t\t? providedExports\n\t\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcontent[ident] = data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst manifest = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype: this.options.type,\n\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Apply formatting to content if format flag is true;\n\t\t\t\t\t\tconst manifestContent = this.options.format\n\t\t\t\t\t\t\t? JSON.stringify(manifest, null, 2)\n\t\t\t\t\t\t\t: JSON.stringify(manifest);\n\t\t\t\t\t\tconst buffer = Buffer.from(manifestContent, \"utf8\");\n\t\t\t\t\t\tmkdirp(\n\t\t\t\t\t\t\tcompiler.intermediateFileSystem,\n\t\t\t\t\t\t\tdirname(compiler.intermediateFileSystem, targetPath),\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tcompiler.intermediateFileSystem.writeFile(\n\t\t\t\t\t\t\t\t\ttargetPath,\n\t\t\t\t\t\t\t\t\tbuffer,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = LibManifestPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  WebpackError\n} = require(\"..\");\nconst {\n  getUsedModuleIdsAndModules\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst plugin = \"SyncModuleIdsPlugin\";\nclass SyncModuleIdsPlugin {\n  /**\n   * @param {Object} options options\n   * @param {string} options.path path to file\n   * @param {string=} options.context context for module names\n   * @param {function(Module): boolean} options.test selector for modules\n   * @param {\"read\" | \"create\" | \"merge\" | \"update\"=} options.mode operation mode (defaults to merge)\n   */\n  constructor(_ref) {\n    let {\n      path,\n      context,\n      test,\n      mode\n    } = _ref;\n    this._path = path;\n    this._context = context;\n    this._test = test || (() => true);\n    const readAndWrite = !mode || mode === \"merge\" || mode === \"update\";\n    this._read = readAndWrite || mode === \"read\";\n    this._write = readAndWrite || mode === \"create\";\n    this._prune = mode === \"update\";\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    /** @type {Map<string, string | number>} */\n    let data;\n    let dataChanged = false;\n    if (this._read) {\n      compiler.hooks.readRecords.tapAsync(plugin, callback => {\n        const fs = compiler.intermediateFileSystem;\n        fs.readFile(this._path, (err, buffer) => {\n          if (err) {\n            if (err.code !== \"ENOENT\") {\n              return callback(err);\n            }\n            return callback();\n          }\n          const json = JSON.parse(buffer.toString());\n          data = new Map();\n          for (const key of Object.keys(json)) {\n            data.set(key, json[key]);\n          }\n          dataChanged = false;\n          return callback();\n        });\n      });\n    }\n    if (this._write) {\n      compiler.hooks.emitRecords.tapAsync(plugin, callback => {\n        if (!data || !dataChanged) return callback();\n        const json = {};\n        const sorted = Array.from(data).sort((_ref2, _ref3) => {\n          let [a] = _ref2;\n          let [b] = _ref3;\n          return a < b ? -1 : 1;\n        });\n        for (const [key, value] of sorted) {\n          json[key] = value;\n        }\n        const fs = compiler.intermediateFileSystem;\n        fs.writeFile(this._path, JSON.stringify(json), callback);\n      });\n    }\n    compiler.hooks.thisCompilation.tap(plugin, compilation => {\n      const associatedObjectForCache = compiler.root;\n      const context = this._context || compiler.context;\n      if (this._read) {\n        compilation.hooks.reviveModules.tap(plugin, (_1, _2) => {\n          if (!data) return;\n          const {\n            chunkGraph\n          } = compilation;\n          const [usedIds, modules] = getUsedModuleIdsAndModules(compilation, this._test);\n          for (const module of modules) {\n            const name = module.libIdent({\n              context,\n              associatedObjectForCache\n            });\n            if (!name) continue;\n            const id = data.get(name);\n            const idAsString = `${id}`;\n            if (usedIds.has(idAsString)) {\n              const err = new WebpackError(`SyncModuleIdsPlugin: Unable to restore id '${id}' from '${this._path}' as it's already used.`);\n              err.module = module;\n              compilation.errors.push(err);\n            }\n            chunkGraph.setModuleId(module, id);\n            usedIds.add(idAsString);\n          }\n        });\n      }\n      if (this._write) {\n        compilation.hooks.recordModules.tap(plugin, modules => {\n          const {\n            chunkGraph\n          } = compilation;\n          let oldData = data;\n          if (!oldData) {\n            oldData = data = new Map();\n          } else if (this._prune) {\n            data = new Map();\n          }\n          for (const module of modules) {\n            if (this._test(module)) {\n              const name = module.libIdent({\n                context,\n                associatedObjectForCache\n              });\n              if (!name) continue;\n              const id = chunkGraph.getModuleId(module);\n              if (id === null) continue;\n              const oldId = oldData.get(name);\n              if (oldId !== id) {\n                dataChanged = true;\n              } else if (data === oldData) {\n                continue;\n              }\n              data.set(name, id);\n            }\n          }\n          if (data.size !== oldData.size) dataChanged = true;\n        });\n      }\n    });\n  }\n}\nmodule.exports = SyncModuleIdsPlugin;","map":{"version":3,"names":["WebpackError","require","getUsedModuleIdsAndModules","plugin","SyncModuleIdsPlugin","constructor","_ref","path","context","test","mode","_path","_context","_test","readAndWrite","_read","_write","_prune","apply","compiler","data","dataChanged","hooks","readRecords","tapAsync","callback","fs","intermediateFileSystem","readFile","err","buffer","code","json","JSON","parse","toString","Map","key","Object","keys","set","emitRecords","sorted","Array","from","sort","_ref2","_ref3","a","b","value","writeFile","stringify","thisCompilation","tap","compilation","associatedObjectForCache","root","reviveModules","_1","_2","chunkGraph","usedIds","modules","module","name","libIdent","id","get","idAsString","has","errors","push","setModuleId","add","recordModules","oldData","getModuleId","oldId","size","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ids/SyncModuleIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { WebpackError } = require(\"..\");\nconst { getUsedModuleIdsAndModules } = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst plugin = \"SyncModuleIdsPlugin\";\n\nclass SyncModuleIdsPlugin {\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.path path to file\n\t * @param {string=} options.context context for module names\n\t * @param {function(Module): boolean} options.test selector for modules\n\t * @param {\"read\" | \"create\" | \"merge\" | \"update\"=} options.mode operation mode (defaults to merge)\n\t */\n\tconstructor({ path, context, test, mode }) {\n\t\tthis._path = path;\n\t\tthis._context = context;\n\t\tthis._test = test || (() => true);\n\t\tconst readAndWrite = !mode || mode === \"merge\" || mode === \"update\";\n\t\tthis._read = readAndWrite || mode === \"read\";\n\t\tthis._write = readAndWrite || mode === \"create\";\n\t\tthis._prune = mode === \"update\";\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\t/** @type {Map<string, string | number>} */\n\t\tlet data;\n\t\tlet dataChanged = false;\n\t\tif (this._read) {\n\t\t\tcompiler.hooks.readRecords.tapAsync(plugin, callback => {\n\t\t\t\tconst fs = compiler.intermediateFileSystem;\n\t\t\t\tfs.readFile(this._path, (err, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (err.code !== \"ENOENT\") {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tconst json = JSON.parse(buffer.toString());\n\t\t\t\t\tdata = new Map();\n\t\t\t\t\tfor (const key of Object.keys(json)) {\n\t\t\t\t\t\tdata.set(key, json[key]);\n\t\t\t\t\t}\n\t\t\t\t\tdataChanged = false;\n\t\t\t\t\treturn callback();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (this._write) {\n\t\t\tcompiler.hooks.emitRecords.tapAsync(plugin, callback => {\n\t\t\t\tif (!data || !dataChanged) return callback();\n\t\t\t\tconst json = {};\n\t\t\t\tconst sorted = Array.from(data).sort(([a], [b]) => (a < b ? -1 : 1));\n\t\t\t\tfor (const [key, value] of sorted) {\n\t\t\t\t\tjson[key] = value;\n\t\t\t\t}\n\t\t\t\tconst fs = compiler.intermediateFileSystem;\n\t\t\t\tfs.writeFile(this._path, JSON.stringify(json), callback);\n\t\t\t});\n\t\t}\n\t\tcompiler.hooks.thisCompilation.tap(plugin, compilation => {\n\t\t\tconst associatedObjectForCache = compiler.root;\n\t\t\tconst context = this._context || compiler.context;\n\t\t\tif (this._read) {\n\t\t\t\tcompilation.hooks.reviveModules.tap(plugin, (_1, _2) => {\n\t\t\t\t\tif (!data) return;\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tconst [usedIds, modules] = getUsedModuleIdsAndModules(\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tthis._test\n\t\t\t\t\t);\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tconst name = module.libIdent({\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tassociatedObjectForCache\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!name) continue;\n\t\t\t\t\t\tconst id = data.get(name);\n\t\t\t\t\t\tconst idAsString = `${id}`;\n\t\t\t\t\t\tif (usedIds.has(idAsString)) {\n\t\t\t\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\t\t\t`SyncModuleIdsPlugin: Unable to restore id '${id}' from '${this._path}' as it's already used.`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terr.module = module;\n\t\t\t\t\t\t\tcompilation.errors.push(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunkGraph.setModuleId(module, id);\n\t\t\t\t\t\tusedIds.add(idAsString);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this._write) {\n\t\t\t\tcompilation.hooks.recordModules.tap(plugin, modules => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tlet oldData = data;\n\t\t\t\t\tif (!oldData) {\n\t\t\t\t\t\toldData = data = new Map();\n\t\t\t\t\t} else if (this._prune) {\n\t\t\t\t\t\tdata = new Map();\n\t\t\t\t\t}\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\tif (this._test(module)) {\n\t\t\t\t\t\t\tconst name = module.libIdent({\n\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\tassociatedObjectForCache\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!name) continue;\n\t\t\t\t\t\t\tconst id = chunkGraph.getModuleId(module);\n\t\t\t\t\t\t\tif (id === null) continue;\n\t\t\t\t\t\t\tconst oldId = oldData.get(name);\n\t\t\t\t\t\t\tif (oldId !== id) {\n\t\t\t\t\t\t\t\tdataChanged = true;\n\t\t\t\t\t\t\t} else if (data === oldData) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata.set(name, id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (data.size !== oldData.size) dataChanged = true;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = SyncModuleIdsPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
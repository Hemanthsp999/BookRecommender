{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"../ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst {\n  approve,\n  evaluateToIdentifier,\n  evaluateToString,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst {\n  AMDDefineRuntimeModule,\n  AMDOptionsRuntimeModule\n} = require(\"./AMDRuntimeModules\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"AMDPlugin\";\nclass AMDPlugin {\n  /**\n   * @param {Record<string, any>} amdOptions the AMD options\n   */\n  constructor(amdOptions) {\n    this.amdOptions = amdOptions;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    const amdOptions = this.amdOptions;\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyTemplates.set(AMDRequireDependency, new AMDRequireDependency.Template());\n      compilation.dependencyFactories.set(AMDRequireItemDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(AMDRequireItemDependency, new AMDRequireItemDependency.Template());\n      compilation.dependencyTemplates.set(AMDRequireArrayDependency, new AMDRequireArrayDependency.Template());\n      compilation.dependencyFactories.set(AMDRequireContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(AMDRequireContextDependency, new AMDRequireContextDependency.Template());\n      compilation.dependencyTemplates.set(AMDDefineDependency, new AMDDefineDependency.Template());\n      compilation.dependencyTemplates.set(UnsupportedDependency, new UnsupportedDependency.Template());\n      compilation.dependencyTemplates.set(LocalModuleDependency, new LocalModuleDependency.Template());\n      compilation.hooks.runtimeRequirementInModule.for(RuntimeGlobals.amdDefine).tap(PLUGIN_NAME, (module, set) => {\n        set.add(RuntimeGlobals.require);\n      });\n      compilation.hooks.runtimeRequirementInModule.for(RuntimeGlobals.amdOptions).tap(PLUGIN_NAME, (module, set) => {\n        set.add(RuntimeGlobals.requireScope);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.amdDefine).tap(PLUGIN_NAME, (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new AMDDefineRuntimeModule());\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.amdOptions).tap(PLUGIN_NAME, (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new AMDOptionsRuntimeModule(amdOptions));\n      });\n\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.amd !== undefined && !parserOptions.amd) return;\n        const tapOptionsHooks = (optionExpr, rootName, getMembers) => {\n          parser.hooks.expression.for(optionExpr).tap(PLUGIN_NAME, toConstantDependency(parser, RuntimeGlobals.amdOptions, [RuntimeGlobals.amdOptions]));\n          parser.hooks.evaluateIdentifier.for(optionExpr).tap(PLUGIN_NAME, evaluateToIdentifier(optionExpr, rootName, getMembers, true));\n          parser.hooks.evaluateTypeof.for(optionExpr).tap(PLUGIN_NAME, evaluateToString(\"object\"));\n          parser.hooks.typeof.for(optionExpr).tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"object\")));\n        };\n        new AMDRequireDependenciesBlockParserPlugin(parserOptions).apply(parser);\n        new AMDDefineDependencyParserPlugin(parserOptions).apply(parser);\n        tapOptionsHooks(\"define.amd\", \"define\", () => \"amd\");\n        tapOptionsHooks(\"require.amd\", \"require\", () => [\"amd\"]);\n        tapOptionsHooks(\"__webpack_amd_options__\", \"__webpack_amd_options__\", () => []);\n        parser.hooks.expression.for(\"define\").tap(PLUGIN_NAME, expr => {\n          const dep = new ConstDependency(RuntimeGlobals.amdDefine, expr.range, [RuntimeGlobals.amdDefine]);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.typeof.for(\"define\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"function\")));\n        parser.hooks.evaluateTypeof.for(\"define\").tap(PLUGIN_NAME, evaluateToString(\"function\"));\n        parser.hooks.canRename.for(\"define\").tap(PLUGIN_NAME, approve);\n        parser.hooks.rename.for(\"define\").tap(PLUGIN_NAME, expr => {\n          const dep = new ConstDependency(RuntimeGlobals.amdDefine, expr.range, [RuntimeGlobals.amdDefine]);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return false;\n        });\n        parser.hooks.typeof.for(\"require\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"function\")));\n        parser.hooks.evaluateTypeof.for(\"require\").tap(PLUGIN_NAME, evaluateToString(\"function\"));\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n    });\n  }\n}\nmodule.exports = AMDPlugin;","map":{"version":3,"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","require","RuntimeGlobals","approve","evaluateToIdentifier","evaluateToString","toConstantDependency","AMDDefineDependency","AMDDefineDependencyParserPlugin","AMDRequireArrayDependency","AMDRequireContextDependency","AMDRequireDependenciesBlockParserPlugin","AMDRequireDependency","AMDRequireItemDependency","AMDDefineRuntimeModule","AMDOptionsRuntimeModule","ConstDependency","LocalModuleDependency","UnsupportedDependency","PLUGIN_NAME","AMDPlugin","constructor","amdOptions","apply","compiler","hooks","compilation","tap","_ref","contextModuleFactory","normalModuleFactory","dependencyTemplates","set","Template","dependencyFactories","runtimeRequirementInModule","for","amdDefine","module","add","requireScope","runtimeRequirementInTree","chunk","addRuntimeModule","handler","parser","parserOptions","amd","undefined","tapOptionsHooks","optionExpr","rootName","getMembers","expression","evaluateIdentifier","evaluateTypeof","typeof","JSON","stringify","expr","dep","range","loc","state","addPresentationalDependency","canRename","rename","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/AMDPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"../ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst {\n\tapprove,\n\tevaluateToIdentifier,\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst {\n\tAMDDefineRuntimeModule,\n\tAMDOptionsRuntimeModule\n} = require(\"./AMDRuntimeModules\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"AMDPlugin\";\n\nclass AMDPlugin {\n\t/**\n\t * @param {Record<string, any>} amdOptions the AMD options\n\t */\n\tconstructor(amdOptions) {\n\t\tthis.amdOptions = amdOptions;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst amdOptions = this.amdOptions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireDependency,\n\t\t\t\t\tnew AMDRequireDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnew AMDRequireItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireArrayDependency,\n\t\t\t\t\tnew AMDRequireArrayDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tnew AMDRequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDDefineDependency,\n\t\t\t\t\tnew AMDDefineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tUnsupportedDependency,\n\t\t\t\t\tnew UnsupportedDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tLocalModuleDependency,\n\t\t\t\t\tnew LocalModuleDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(RuntimeGlobals.amdDefine)\n\t\t\t\t\t.tap(PLUGIN_NAME, (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(RuntimeGlobals.amdOptions)\n\t\t\t\t\t.tap(PLUGIN_NAME, (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.amdDefine)\n\t\t\t\t\t.tap(PLUGIN_NAME, (chunk, set) => {\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new AMDDefineRuntimeModule());\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.amdOptions)\n\t\t\t\t\t.tap(PLUGIN_NAME, (chunk, set) => {\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew AMDOptionsRuntimeModule(amdOptions)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.amd !== undefined && !parserOptions.amd) return;\n\n\t\t\t\t\tconst tapOptionsHooks = (optionExpr, rootName, getMembers) => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\t\ttoConstantDependency(parser, RuntimeGlobals.amdOptions, [\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.amdOptions\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\t\tevaluateToIdentifier(optionExpr, rootName, getMembers, true)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"object\"));\n\t\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tnew AMDRequireDependenciesBlockParserPlugin(parserOptions).apply(\n\t\t\t\t\t\tparser\n\t\t\t\t\t);\n\t\t\t\t\tnew AMDDefineDependencyParserPlugin(parserOptions).apply(parser);\n\n\t\t\t\t\ttapOptionsHooks(\"define.amd\", \"define\", () => \"amd\");\n\t\t\t\t\ttapOptionsHooks(\"require.amd\", \"require\", () => [\"amd\"]);\n\t\t\t\t\ttapOptionsHooks(\n\t\t\t\t\t\t\"__webpack_amd_options__\",\n\t\t\t\t\t\t\"__webpack_amd_options__\",\n\t\t\t\t\t\t() => []\n\t\t\t\t\t);\n\n\t\t\t\t\tparser.hooks.expression.for(\"define\").tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\tRuntimeGlobals.amdDefine,\n\t\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\t\t[RuntimeGlobals.amdDefine]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.canRename.for(\"define\").tap(PLUGIN_NAME, approve);\n\t\t\t\t\tparser.hooks.rename.for(\"define\").tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\tRuntimeGlobals.amdDefine,\n\t\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\t\t[RuntimeGlobals.amdDefine]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"function\"));\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AMDPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
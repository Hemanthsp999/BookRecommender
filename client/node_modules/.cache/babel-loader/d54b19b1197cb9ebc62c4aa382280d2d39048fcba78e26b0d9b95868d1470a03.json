{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nlet isDocker;\nfunction hasDockerEnv() {\n  try {\n    fs.statSync('/.dockerenv');\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\nfunction hasDockerCGroup() {\n  try {\n    return fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n  } catch (_) {\n    return false;\n  }\n}\nmodule.exports = () => {\n  if (isDocker === undefined) {\n    isDocker = hasDockerEnv() || hasDockerCGroup();\n  }\n  return isDocker;\n};","map":{"version":3,"names":["fs","require","isDocker","hasDockerEnv","statSync","_","hasDockerCGroup","readFileSync","includes","module","exports","undefined"],"sources":["/home/hemanth/react-project/client/node_modules/is-docker/index.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\n\nlet isDocker;\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nmodule.exports = () => {\n\tif (isDocker === undefined) {\n\t\tisDocker = hasDockerEnv() || hasDockerCGroup();\n\t}\n\n\treturn isDocker;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExB,IAAIC,QAAQ;AAEZ,SAASC,YAAYA,CAAA,EAAG;EACvB,IAAI;IACHH,EAAE,CAACI,QAAQ,CAAC,aAAa,CAAC;IAC1B,OAAO,IAAI;EACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,KAAK;EACb;AACD;AAEA,SAASC,eAAeA,CAAA,EAAG;EAC1B,IAAI;IACH,OAAON,EAAE,CAACO,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;EACvE,CAAC,CAAC,OAAOH,CAAC,EAAE;IACX,OAAO,KAAK;EACb;AACD;AAEAI,MAAM,CAACC,OAAO,GAAG,MAAM;EACtB,IAAIR,QAAQ,KAAKS,SAAS,EAAE;IAC3BT,QAAQ,GAAGC,YAAY,CAAC,CAAC,IAAIG,eAAe,CAAC,CAAC;EAC/C;EAEA,OAAOJ,QAAQ;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nconst {\n  compareModulesByPreOrderIndexOrIdentifier\n} = require(\"../util/comparators\");\nconst {\n  assignAscendingModuleIds,\n  getUsedModuleIdsAndModules\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NaturalModuleIdsPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"NaturalModuleIdsPlugin\", compilation => {\n      compilation.hooks.moduleIds.tap(\"NaturalModuleIdsPlugin\", modules => {\n        const [usedIds, modulesInNaturalOrder] = getUsedModuleIdsAndModules(compilation);\n        modulesInNaturalOrder.sort(compareModulesByPreOrderIndexOrIdentifier(compilation.moduleGraph));\n        assignAscendingModuleIds(usedIds, modulesInNaturalOrder, compilation);\n      });\n    });\n  }\n}\nmodule.exports = NaturalModuleIdsPlugin;","map":{"version":3,"names":["compareModulesByPreOrderIndexOrIdentifier","require","assignAscendingModuleIds","getUsedModuleIdsAndModules","NaturalModuleIdsPlugin","apply","compiler","hooks","compilation","tap","moduleIds","modules","usedIds","modulesInNaturalOrder","sort","moduleGraph","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ids/NaturalModuleIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nconst {\n\tcompareModulesByPreOrderIndexOrIdentifier\n} = require(\"../util/comparators\");\nconst {\n\tassignAscendingModuleIds,\n\tgetUsedModuleIdsAndModules\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NaturalModuleIdsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NaturalModuleIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.moduleIds.tap(\"NaturalModuleIdsPlugin\", modules => {\n\t\t\t\tconst [usedIds, modulesInNaturalOrder] =\n\t\t\t\t\tgetUsedModuleIdsAndModules(compilation);\n\t\t\t\tmodulesInNaturalOrder.sort(\n\t\t\t\t\tcompareModulesByPreOrderIndexOrIdentifier(compilation.moduleGraph)\n\t\t\t\t);\n\t\t\t\tassignAscendingModuleIds(usedIds, modulesInNaturalOrder, compilation);\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NaturalModuleIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EACLA;AACD,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAClC,MAAM;EACLC,wBAAwB;EACxBC;AACD,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAE1B;AACA;;AAEA,MAAMG,sBAAsB,CAAC;EAC5B;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,wBAAwB,EAAED,WAAW,IAAI;MACvEA,WAAW,CAACD,KAAK,CAACG,SAAS,CAACD,GAAG,CAAC,wBAAwB,EAAEE,OAAO,IAAI;QACpE,MAAM,CAACC,OAAO,EAAEC,qBAAqB,CAAC,GACrCV,0BAA0B,CAACK,WAAW,CAAC;QACxCK,qBAAqB,CAACC,IAAI,CACzBd,yCAAyC,CAACQ,WAAW,CAACO,WAAW,CAClE,CAAC;QACDb,wBAAwB,CAACU,OAAO,EAAEC,qBAAqB,EAAEL,WAAW,CAAC;MACtE,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AAEAQ,MAAM,CAACC,OAAO,GAAGb,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
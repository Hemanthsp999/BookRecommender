{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst t = require(\"@webassemblyjs/ast\");\nconst {\n  decode\n} = require(\"@webassemblyjs/wasm-parser\");\nconst Parser = require(\"../Parser\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst decoderOpts = {\n  ignoreCodeSection: true,\n  ignoreDataSection: true,\n  // this will avoid having to lookup with identifiers in the ModuleContext\n  ignoreCustomNameSection: true\n};\nclass WebAssemblyParser extends Parser {\n  constructor(options) {\n    super();\n    this.hooks = Object.freeze({});\n    this.options = options;\n  }\n\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n  parse(source, state) {\n    if (!Buffer.isBuffer(source)) {\n      throw new Error(\"WebAssemblyParser input must be a Buffer\");\n    }\n\n    // flag it as async module\n    state.module.buildInfo.strict = true;\n    state.module.buildMeta.exportsType = \"namespace\";\n    state.module.buildMeta.async = true;\n\n    // parse it\n    const program = decode(source, decoderOpts);\n    const module = program.body[0];\n    /** @type {Array<string>} */\n    const exports = [];\n    t.traverse(module, {\n      ModuleExport(_ref) {\n        let {\n          node\n        } = _ref;\n        exports.push(node.name);\n      },\n      ModuleImport(_ref2) {\n        let {\n          node\n        } = _ref2;\n        const dep = new WebAssemblyImportDependency(node.module, node.name, node.descr, false);\n        state.module.addDependency(dep);\n      }\n    });\n    state.module.addDependency(new StaticExportsDependency(exports, false));\n    return state;\n  }\n}\nmodule.exports = WebAssemblyParser;","map":{"version":3,"names":["t","require","decode","Parser","StaticExportsDependency","WebAssemblyImportDependency","decoderOpts","ignoreCodeSection","ignoreDataSection","ignoreCustomNameSection","WebAssemblyParser","constructor","options","hooks","Object","freeze","parse","source","state","Buffer","isBuffer","Error","module","buildInfo","strict","buildMeta","exportsType","async","program","body","exports","traverse","ModuleExport","_ref","node","push","name","ModuleImport","_ref2","dep","descr","addDependency"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst t = require(\"@webassemblyjs/ast\");\nconst { decode } = require(\"@webassemblyjs/wasm-parser\");\nconst Parser = require(\"../Parser\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst decoderOpts = {\n\tignoreCodeSection: true,\n\tignoreDataSection: true,\n\n\t// this will avoid having to lookup with identifiers in the ModuleContext\n\tignoreCustomNameSection: true\n};\n\nclass WebAssemblyParser extends Parser {\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.hooks = Object.freeze({});\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (!Buffer.isBuffer(source)) {\n\t\t\tthrow new Error(\"WebAssemblyParser input must be a Buffer\");\n\t\t}\n\n\t\t// flag it as async module\n\t\tstate.module.buildInfo.strict = true;\n\t\tstate.module.buildMeta.exportsType = \"namespace\";\n\t\tstate.module.buildMeta.async = true;\n\n\t\t// parse it\n\t\tconst program = decode(source, decoderOpts);\n\t\tconst module = program.body[0];\n\t\t/** @type {Array<string>} */\n\t\tconst exports = [];\n\t\tt.traverse(module, {\n\t\t\tModuleExport({ node }) {\n\t\t\t\texports.push(node.name);\n\t\t\t},\n\n\t\t\tModuleImport({ node }) {\n\t\t\t\tconst dep = new WebAssemblyImportDependency(\n\t\t\t\t\tnode.module,\n\t\t\t\t\tnode.name,\n\t\t\t\t\tnode.descr,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\n\t\t\t\tstate.module.addDependency(dep);\n\t\t\t}\n\t\t});\n\n\t\tstate.module.addDependency(new StaticExportsDependency(exports, false));\n\n\t\treturn state;\n\t}\n}\n\nmodule.exports = WebAssemblyParser;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACvC,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACxD,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAW,CAAC;AACnC,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,yCAAyC,CAAC;AAClF,MAAMI,2BAA2B,GAAGJ,OAAO,CAAC,6CAA6C,CAAC;;AAE1F;AACA;;AAEA,MAAMK,WAAW,GAAG;EACnBC,iBAAiB,EAAE,IAAI;EACvBC,iBAAiB,EAAE,IAAI;EAEvB;EACAC,uBAAuB,EAAE;AAC1B,CAAC;AAED,MAAMC,iBAAiB,SAASP,MAAM,CAAC;EACtCQ,WAAWA,CAACC,OAAO,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACH,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;AACA;AACA;EACCI,KAAKA,CAACC,MAAM,EAAEC,KAAK,EAAE;IACpB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;MAC7B,MAAM,IAAII,KAAK,CAAC,0CAA0C,CAAC;IAC5D;;IAEA;IACAH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,MAAM,GAAG,IAAI;IACpCN,KAAK,CAACI,MAAM,CAACG,SAAS,CAACC,WAAW,GAAG,WAAW;IAChDR,KAAK,CAACI,MAAM,CAACG,SAAS,CAACE,KAAK,GAAG,IAAI;;IAEnC;IACA,MAAMC,OAAO,GAAG1B,MAAM,CAACe,MAAM,EAAEX,WAAW,CAAC;IAC3C,MAAMgB,MAAM,GAAGM,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9B;IACA,MAAMC,OAAO,GAAG,EAAE;IAClB9B,CAAC,CAAC+B,QAAQ,CAACT,MAAM,EAAE;MAClBU,YAAYA,CAAAC,IAAA,EAAW;QAAA,IAAV;UAAEC;QAAK,CAAC,GAAAD,IAAA;QACpBH,OAAO,CAACK,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC;MACxB,CAAC;MAEDC,YAAYA,CAAAC,KAAA,EAAW;QAAA,IAAV;UAAEJ;QAAK,CAAC,GAAAI,KAAA;QACpB,MAAMC,GAAG,GAAG,IAAIlC,2BAA2B,CAC1C6B,IAAI,CAACZ,MAAM,EACXY,IAAI,CAACE,IAAI,EACTF,IAAI,CAACM,KAAK,EACV,KACD,CAAC;QAEDtB,KAAK,CAACI,MAAM,CAACmB,aAAa,CAACF,GAAG,CAAC;MAChC;IACD,CAAC,CAAC;IAEFrB,KAAK,CAACI,MAAM,CAACmB,aAAa,CAAC,IAAIrC,uBAAuB,CAAC0B,OAAO,EAAE,KAAK,CAAC,CAAC;IAEvE,OAAOZ,KAAK;EACb;AACD;AAEAI,MAAM,CAACQ,OAAO,GAAGpB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
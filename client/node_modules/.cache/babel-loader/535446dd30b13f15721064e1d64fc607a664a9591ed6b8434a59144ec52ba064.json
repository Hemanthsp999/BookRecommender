{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nconst namespaceStartCharCode = \"@\".charCodeAt(0);\nmodule.exports = class JoinRequestPartPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"JoinRequestPartPlugin\", (request, resolveContext, callback) => {\n      const req = request.request || \"\";\n      let i = req.indexOf(\"/\", 3);\n      if (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\n        i = req.indexOf(\"/\", i + 1);\n      }\n\n      /** @type {string} */\n      let moduleName;\n      /** @type {string} */\n      let remainingRequest;\n      /** @type {boolean} */\n      let fullySpecified;\n      if (i < 0) {\n        moduleName = req;\n        remainingRequest = \".\";\n        fullySpecified = false;\n      } else {\n        moduleName = req.slice(0, i);\n        remainingRequest = \".\" + req.slice(i);\n        fullySpecified = /** @type {boolean} */request.fullySpecified;\n      }\n      /** @type {ResolveRequest} */\n      const obj = {\n        ...request,\n        path: resolver.join( /** @type {string} */\n        request.path, moduleName),\n        relativePath: request.relativePath && resolver.join(request.relativePath, moduleName),\n        request: remainingRequest,\n        fullySpecified\n      };\n      resolver.doResolve(target, obj, null, resolveContext, callback);\n    });\n  }\n};","map":{"version":3,"names":["namespaceStartCharCode","charCodeAt","module","exports","JoinRequestPartPlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","i","indexOf","moduleName","remainingRequest","fullySpecified","slice","obj","path","join","relativePath","doResolve"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/JoinRequestPartPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nconst namespaceStartCharCode = \"@\".charCodeAt(0);\n\nmodule.exports = class JoinRequestPartPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"JoinRequestPartPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst req = request.request || \"\";\n\t\t\t\t\tlet i = req.indexOf(\"/\", 3);\n\n\t\t\t\t\tif (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\n\t\t\t\t\t\ti = req.indexOf(\"/\", i + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\t/** @type {string} */\n\t\t\t\t\tlet moduleName;\n\t\t\t\t\t/** @type {string} */\n\t\t\t\t\tlet remainingRequest;\n\t\t\t\t\t/** @type {boolean} */\n\t\t\t\t\tlet fullySpecified;\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tmoduleName = req;\n\t\t\t\t\t\tremainingRequest = \".\";\n\t\t\t\t\t\tfullySpecified = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmoduleName = req.slice(0, i);\n\t\t\t\t\t\tremainingRequest = \".\" + req.slice(i);\n\t\t\t\t\t\tfullySpecified = /** @type {boolean} */ (request.fullySpecified);\n\t\t\t\t\t}\n\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: resolver.join(\n\t\t\t\t\t\t\t/** @type {string} */\n\t\t\t\t\t\t\t(request.path),\n\t\t\t\t\t\t\tmoduleName\n\t\t\t\t\t\t),\n\t\t\t\t\t\trelativePath:\n\t\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\t\tresolver.join(request.relativePath, moduleName),\n\t\t\t\t\t\trequest: remainingRequest,\n\t\t\t\t\t\tfullySpecified\n\t\t\t\t\t};\n\t\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,sBAAsB,GAAG,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC;AAEhDC,MAAM,CAACC,OAAO,GAAG,MAAMC,qBAAqB,CAAC;EAC5C;AACD;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACL,MAAM,CAAC,CACpBM,QAAQ,CACR,uBAAuB,EACvB,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACtC,MAAMC,GAAG,GAAGH,OAAO,CAACA,OAAO,IAAI,EAAE;MACjC,IAAII,CAAC,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;MAE3B,IAAID,CAAC,IAAI,CAAC,IAAID,GAAG,CAACf,UAAU,CAAC,CAAC,CAAC,KAAKD,sBAAsB,EAAE;QAC3DiB,CAAC,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,EAAED,CAAC,GAAG,CAAC,CAAC;MAC5B;;MAEA;MACA,IAAIE,UAAU;MACd;MACA,IAAIC,gBAAgB;MACpB;MACA,IAAIC,cAAc;MAClB,IAAIJ,CAAC,GAAG,CAAC,EAAE;QACVE,UAAU,GAAGH,GAAG;QAChBI,gBAAgB,GAAG,GAAG;QACtBC,cAAc,GAAG,KAAK;MACvB,CAAC,MAAM;QACNF,UAAU,GAAGH,GAAG,CAACM,KAAK,CAAC,CAAC,EAAEL,CAAC,CAAC;QAC5BG,gBAAgB,GAAG,GAAG,GAAGJ,GAAG,CAACM,KAAK,CAACL,CAAC,CAAC;QACrCI,cAAc,GAAG,sBAAwBR,OAAO,CAACQ,cAAe;MACjE;MACA;MACA,MAAME,GAAG,GAAG;QACX,GAAGV,OAAO;QACVW,IAAI,EAAEf,QAAQ,CAACgB,IAAI,EAClB;QACCZ,OAAO,CAACW,IAAI,EACbL,UACD,CAAC;QACDO,YAAY,EACXb,OAAO,CAACa,YAAY,IACpBjB,QAAQ,CAACgB,IAAI,CAACZ,OAAO,CAACa,YAAY,EAAEP,UAAU,CAAC;QAChDN,OAAO,EAAEO,gBAAgB;QACzBC;MACD,CAAC;MACDZ,QAAQ,CAACkB,SAAS,CAACpB,MAAM,EAAEgB,GAAG,EAAE,IAAI,EAAET,cAAc,EAAEC,QAAQ,CAAC;IAChE,CACD,CAAC;EACH;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
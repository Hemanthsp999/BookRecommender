{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n  getChunkFilenameTemplate,\n  chunkHasJs\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\nclass ImportScriptsChunkLoadingRuntimeModule extends RuntimeModule {\n  /**\n   * @param {Set<string>} runtimeRequirements runtime requirements\n   * @param {boolean} withCreateScriptUrl with createScriptUrl support\n   */\n  constructor(runtimeRequirements, withCreateScriptUrl) {\n    super(\"importScripts chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this.runtimeRequirements = runtimeRequirements;\n    this._withCreateScriptUrl = withCreateScriptUrl;\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @returns {string} generated code\n   */\n  _generateBaseUri(chunk) {\n    const options = chunk.getEntryOptions();\n    if (options && options.baseUri) {\n      return `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n    }\n    const outputName = this.compilation.getPath(getChunkFilenameTemplate(chunk, this.compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName, this.compilation.outputOptions.path, false);\n    return `${RuntimeGlobals.baseURI} = self.location + ${JSON.stringify(rootOutputDir ? \"/../\" + rootOutputDir : \"\")};`;\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  generate() {\n    const {\n      chunk,\n      chunkGraph,\n      compilation: {\n        runtimeTemplate,\n        outputOptions: {\n          chunkLoadingGlobal,\n          hotUpdateGlobal\n        }\n      },\n      _withCreateScriptUrl: withCreateScriptUrl\n    } = this;\n    const globalObject = runtimeTemplate.globalObject;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n    const withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n    const withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n    const withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n    const withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n    const chunkLoadingGlobalExpr = `${globalObject}[${JSON.stringify(chunkLoadingGlobal)}]`;\n    const hasJsMatcher = compileBooleanMatcher(chunkGraph.getChunkConditionMap(chunk, chunkHasJs));\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_importScripts` : undefined;\n    return Template.asString([withBaseURI ? this._generateBaseUri(chunk) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"1\" means \"already loaded\"', `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\",\\n\")), \"};\", \"\", withLoading ? Template.asString([\"// importScripts chunk loading\", `var installChunk = ${runtimeTemplate.basicFunction(\"data\", [runtimeTemplate.destructureArray([\"chunkIds\", \"moreModules\", \"runtime\"], \"data\"), \"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent(`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`), \"}\"]), \"}\", `if(runtime) runtime(${RuntimeGlobals.require});`, \"while(chunkIds.length)\", Template.indent(\"installedChunks[chunkIds.pop()] = 1;\"), \"parentChunkLoadingFunction(data);\"])};`]) : \"// no chunk install function needed\", withLoading ? Template.asString([`${fn}.i = ${runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? ['// \"1\" is the signal for \"already loaded\"', \"if(!installedChunks[chunkId]) {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent(`importScripts(${withCreateScriptUrl ? `${RuntimeGlobals.createScriptUrl}(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId))` : `${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId)`});`), \"}\"]), \"}\"] : \"installedChunks[chunkId] = 1;\")};`, \"\", `var chunkLoadingGlobal = ${chunkLoadingGlobalExpr} = ${chunkLoadingGlobalExpr} || [];`, \"var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\", \"chunkLoadingGlobal.push = installChunk;\"]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([\"var success = false;\", `${globalObject}[${JSON.stringify(hotUpdateGlobal)}] = ${runtimeTemplate.basicFunction(\"_, moreModules, runtime\", [\"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent([\"currentUpdate[moduleId] = moreModules[moduleId];\", \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"success = true;\"])};`, \"// start update chunk loading\", `importScripts(${withCreateScriptUrl ? `${RuntimeGlobals.createScriptUrl}(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId))` : `${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId)`});`, 'if(!success) throw new Error(\"Loading update chunk failed for unknown reason\");']), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"importScrips\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([`${RuntimeGlobals.hmrDownloadManifest} = ${runtimeTemplate.basicFunction(\"\", ['if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");', `return fetch(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getUpdateManifestFilename}()).then(${runtimeTemplate.basicFunction(\"response\", [\"if(response.status === 404) return; // no update available\", 'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);', \"return response.json();\"])});`])};`]) : \"// no HMR manifest\"]);\n  }\n}\nmodule.exports = ImportScriptsChunkLoadingRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","getChunkFilenameTemplate","chunkHasJs","getInitialChunkIds","compileBooleanMatcher","getUndoPath","ImportScriptsChunkLoadingRuntimeModule","constructor","runtimeRequirements","withCreateScriptUrl","STAGE_ATTACH","_withCreateScriptUrl","_generateBaseUri","chunk","options","getEntryOptions","baseUri","baseURI","JSON","stringify","outputName","compilation","getPath","outputOptions","contentHashType","rootOutputDir","path","generate","chunkGraph","runtimeTemplate","chunkLoadingGlobal","hotUpdateGlobal","globalObject","fn","ensureChunkHandlers","withBaseURI","has","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","chunkLoadingGlobalExpr","hasJsMatcher","getChunkConditionMap","initialChunkIds","stateExpression","hmrRuntimeStatePrefix","undefined","asString","indent","Array","from","id","join","basicFunction","destructureArray","hasOwnProperty","moduleFactories","createScriptUrl","publicPath","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/webworker/ImportScriptsChunkLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tgetChunkFilenameTemplate,\n\tchunkHasJs\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\nclass ImportScriptsChunkLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {Set<string>} runtimeRequirements runtime requirements\n\t * @param {boolean} withCreateScriptUrl with createScriptUrl support\n\t */\n\tconstructor(runtimeRequirements, withCreateScriptUrl) {\n\t\tsuper(\"importScripts chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t\tthis._withCreateScriptUrl = withCreateScriptUrl;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t}\n\t\tconst outputName = this.compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, this.compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\tthis.compilation.outputOptions.path,\n\t\t\tfalse\n\t\t);\n\t\treturn `${RuntimeGlobals.baseURI} = self.location + ${JSON.stringify(\n\t\t\trootOutputDir ? \"/../\" + rootOutputDir : \"\"\n\t\t)};`;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst {\n\t\t\tchunk,\n\t\t\tchunkGraph,\n\t\t\tcompilation: {\n\t\t\t\truntimeTemplate,\n\t\t\t\toutputOptions: { chunkLoadingGlobal, hotUpdateGlobal }\n\t\t\t},\n\t\t\t_withCreateScriptUrl: withCreateScriptUrl\n\t\t} = this;\n\t\tconst globalObject = runtimeTemplate.globalObject;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst chunkLoadingGlobalExpr = `${globalObject}[${JSON.stringify(\n\t\t\tchunkLoadingGlobal\n\t\t)}]`;\n\t\tconst hasJsMatcher = compileBooleanMatcher(\n\t\t\tchunkGraph.getChunkConditionMap(chunk, chunkHasJs)\n\t\t);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_importScripts`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI ? this._generateBaseUri(chunk) : \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"1\" means \"already loaded\"',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// importScripts chunk loading\",\n\t\t\t\t\t\t`var installChunk = ${runtimeTemplate.basicFunction(\"data\", [\n\t\t\t\t\t\t\truntimeTemplate.destructureArray(\n\t\t\t\t\t\t\t\t[\"chunkIds\", \"moreModules\", \"runtime\"],\n\t\t\t\t\t\t\t\t\"data\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t`if(runtime) runtime(${RuntimeGlobals.require});`,\n\t\t\t\t\t\t\t\"while(chunkIds.length)\",\n\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds.pop()] = 1;\"),\n\t\t\t\t\t\t\t\"parentChunkLoadingFunction(data);\"\n\t\t\t\t\t\t])};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${fn}.i = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t'// \"1\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\t\t\t\t\"if(!installedChunks[chunkId]) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t\t\t`importScripts(${\n\t\t\t\t\t\t\t\t\t\t\t\t\twithCreateScriptUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScriptUrl}(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId))`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId)`\n\t\t\t\t\t\t\t\t\t\t\t\t});`\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: \"installedChunks[chunkId] = 1;\"\n\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`var chunkLoadingGlobal = ${chunkLoadingGlobalExpr} = ${chunkLoadingGlobalExpr} || [];`,\n\t\t\t\t\t\t\"var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\",\n\t\t\t\t\t\t\"chunkLoadingGlobal.push = installChunk;\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var success = false;\",\n\t\t\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\t\thotUpdateGlobal\n\t\t\t\t\t\t\t)}] = ${runtimeTemplate.basicFunction(\"_, moreModules, runtime\", [\n\t\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"currentUpdate[moduleId] = moreModules[moduleId];\",\n\t\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\"success = true;\"\n\t\t\t\t\t\t\t])};`,\n\t\t\t\t\t\t\t\"// start update chunk loading\",\n\t\t\t\t\t\t\t`importScripts(${\n\t\t\t\t\t\t\t\twithCreateScriptUrl\n\t\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScriptUrl}(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId))`\n\t\t\t\t\t\t\t\t\t: `${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId)`\n\t\t\t\t\t\t\t});`,\n\t\t\t\t\t\t\t'if(!success) throw new Error(\"Loading update chunk failed for unknown reason\");'\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"importScrips\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${\n\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t\t\t\t\t} = ${runtimeTemplate.basicFunction(\"\", [\n\t\t\t\t\t\t\t'if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");',\n\t\t\t\t\t\t\t`return fetch(${RuntimeGlobals.publicPath} + ${\n\t\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename\n\t\t\t\t\t\t\t}()).then(${runtimeTemplate.basicFunction(\"response\", [\n\t\t\t\t\t\t\t\t\"if(response.status === 404) return; // no update available\",\n\t\t\t\t\t\t\t\t'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);',\n\t\t\t\t\t\t\t\t\"return response.json();\"\n\t\t\t\t\t\t\t])});`\n\t\t\t\t\t\t])};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = ImportScriptsChunkLoadingRuntimeModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass ModuleDependencyTemplateAsRequireId extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref;\n    const dep = /** @type {ModuleDependency} */dependency;\n    if (!dep.range) return;\n    const content = runtimeTemplate.moduleExports({\n      module: moduleGraph.getModule(dep),\n      chunkGraph,\n      request: dep.request,\n      weak: dep.weak,\n      runtimeRequirements\n    });\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n}\nmodule.exports = ModuleDependencyTemplateAsRequireId;","map":{"version":3,"names":["ModuleDependency","require","ModuleDependencyTemplateAsRequireId","Template","apply","dependency","source","_ref","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","dep","range","content","moduleExports","module","getModule","request","weak","replace","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/ModuleDependencyTemplateAsRequireId.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\nclass ModuleDependencyTemplateAsRequireId extends ModuleDependency.Template {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ runtimeTemplate, moduleGraph, chunkGraph, runtimeRequirements }\n\t) {\n\t\tconst dep = /** @type {ModuleDependency} */ (dependency);\n\t\tif (!dep.range) return;\n\t\tconst content = runtimeTemplate.moduleExports({\n\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\tchunkGraph,\n\t\t\trequest: dep.request,\n\t\t\tweak: dep.weak,\n\t\t\truntimeRequirements\n\t\t});\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, content);\n\t}\n}\nmodule.exports = ModuleDependencyTemplateAsRequireId;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;;AAEA,MAAMC,mCAAmC,SAASF,gBAAgB,CAACG,QAAQ,CAAC;EAC3E;AACD;AACA;AACA;AACA;AACA;EACCC,KAAKA,CACJC,UAAU,EACVC,MAAM,EAAAC,IAAA,EAEL;IAAA,IADD;MAAEC,eAAe;MAAEC,WAAW;MAAEC,UAAU;MAAEC;IAAoB,CAAC,GAAAJ,IAAA;IAEjE,MAAMK,GAAG,GAAG,+BAAiCP,UAAW;IACxD,IAAI,CAACO,GAAG,CAACC,KAAK,EAAE;IAChB,MAAMC,OAAO,GAAGN,eAAe,CAACO,aAAa,CAAC;MAC7CC,MAAM,EAAEP,WAAW,CAACQ,SAAS,CAACL,GAAG,CAAC;MAClCF,UAAU;MACVQ,OAAO,EAAEN,GAAG,CAACM,OAAO;MACpBC,IAAI,EAAEP,GAAG,CAACO,IAAI;MACdR;IACD,CAAC,CAAC;IACFL,MAAM,CAACc,OAAO,CAACR,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,EAAED,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEC,OAAO,CAAC;EACxD;AACD;AACAE,MAAM,CAACK,OAAO,GAAGnB,mCAAmC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
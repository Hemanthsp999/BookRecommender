{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  compareChunksNatural\n} = require(\"../util/comparators\");\nconst {\n  assignAscendingChunkIds\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NaturalChunkIdsPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"NaturalChunkIdsPlugin\", compilation => {\n      compilation.hooks.chunkIds.tap(\"NaturalChunkIdsPlugin\", chunks => {\n        const chunkGraph = compilation.chunkGraph;\n        const compareNatural = compareChunksNatural(chunkGraph);\n        const chunksInNaturalOrder = Array.from(chunks).sort(compareNatural);\n        assignAscendingChunkIds(chunksInNaturalOrder, compilation);\n      });\n    });\n  }\n}\nmodule.exports = NaturalChunkIdsPlugin;","map":{"version":3,"names":["compareChunksNatural","require","assignAscendingChunkIds","NaturalChunkIdsPlugin","apply","compiler","hooks","compilation","tap","chunkIds","chunks","chunkGraph","compareNatural","chunksInNaturalOrder","Array","from","sort","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ids/NaturalChunkIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareChunksNatural } = require(\"../util/comparators\");\nconst { assignAscendingChunkIds } = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NaturalChunkIdsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NaturalChunkIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.chunkIds.tap(\"NaturalChunkIdsPlugin\", chunks => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\tconst compareNatural = compareChunksNatural(chunkGraph);\n\t\t\t\tconst chunksInNaturalOrder = Array.from(chunks).sort(compareNatural);\n\t\t\t\tassignAscendingChunkIds(chunksInNaturalOrder, compilation);\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NaturalChunkIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAqB,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/D,MAAM;EAAEC;AAAwB,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;;AAE1D;AACA;AACA;;AAEA,MAAME,qBAAqB,CAAC;EAC3B;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,uBAAuB,EAAED,WAAW,IAAI;MACtEA,WAAW,CAACD,KAAK,CAACG,QAAQ,CAACD,GAAG,CAAC,uBAAuB,EAAEE,MAAM,IAAI;QACjE,MAAMC,UAAU,GAAGJ,WAAW,CAACI,UAAU;QACzC,MAAMC,cAAc,GAAGZ,oBAAoB,CAACW,UAAU,CAAC;QACvD,MAAME,oBAAoB,GAAGC,KAAK,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,IAAI,CAACJ,cAAc,CAAC;QACpEV,uBAAuB,CAACW,oBAAoB,EAAEN,WAAW,CAAC;MAC3D,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AAEAU,MAAM,CAACC,OAAO,GAAGf,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nmodule.exports = class ResultPlugin {\n  /**\n   * @param {ResolveStepHook} source source\n   */\n  constructor(source) {\n    this.source = source;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    this.source.tapAsync(\"ResultPlugin\", (request, resolverContext, callback) => {\n      const obj = {\n        ...request\n      };\n      if (resolverContext.log) resolverContext.log(\"reporting result \" + obj.path);\n      resolver.hooks.result.callAsync(obj, resolverContext, err => {\n        if (err) return callback(err);\n        if (typeof resolverContext.yield === \"function\") {\n          resolverContext.yield(obj);\n          callback(null, null);\n        } else {\n          callback(null, obj);\n        }\n      });\n    });\n  }\n};","map":{"version":3,"names":["module","exports","ResultPlugin","constructor","source","apply","resolver","tapAsync","request","resolverContext","callback","obj","log","path","hooks","result","callAsync","err","yield"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/ResultPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ResultPlugin {\n\t/**\n\t * @param {ResolveStepHook} source source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tthis.source.tapAsync(\n\t\t\t\"ResultPlugin\",\n\t\t\t(request, resolverContext, callback) => {\n\t\t\t\tconst obj = { ...request };\n\t\t\t\tif (resolverContext.log)\n\t\t\t\t\tresolverContext.log(\"reporting result \" + obj.path);\n\t\t\t\tresolver.hooks.result.callAsync(obj, resolverContext, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (typeof resolverContext.yield === \"function\") {\n\t\t\t\t\t\tresolverContext.yield(obj);\n\t\t\t\t\t\tcallback(null, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, obj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,MAAMC,YAAY,CAAC;EACnC;AACD;AACA;EACCC,WAAWA,CAACC,MAAM,EAAE;IACnB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,IAAI,CAACF,MAAM,CAACG,QAAQ,CACnB,cAAc,EACd,CAACC,OAAO,EAAEC,eAAe,EAAEC,QAAQ,KAAK;MACvC,MAAMC,GAAG,GAAG;QAAE,GAAGH;MAAQ,CAAC;MAC1B,IAAIC,eAAe,CAACG,GAAG,EACtBH,eAAe,CAACG,GAAG,CAAC,mBAAmB,GAAGD,GAAG,CAACE,IAAI,CAAC;MACpDP,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACC,SAAS,CAACL,GAAG,EAAEF,eAAe,EAAEQ,GAAG,IAAI;QAC5D,IAAIA,GAAG,EAAE,OAAOP,QAAQ,CAACO,GAAG,CAAC;QAC7B,IAAI,OAAOR,eAAe,CAACS,KAAK,KAAK,UAAU,EAAE;UAChDT,eAAe,CAACS,KAAK,CAACP,GAAG,CAAC;UAC1BD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;QACrB,CAAC,MAAM;UACNA,QAAQ,CAAC,IAAI,EAAEC,GAAG,CAAC;QACpB;MACD,CAAC,CAAC;IACH,CACD,CAAC;EACF;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WebAssemblyExportImportedDependency extends ModuleDependency {\n  /**\n   * @param {string} exportName export name\n   * @param {string} request request\n   * @param {string} name name\n   * @param {TODO} valueType value type\n   */\n  constructor(exportName, request, name, valueType) {\n    super(request);\n    /** @type {string} */\n    this.exportName = exportName;\n    /** @type {string} */\n    this.name = name;\n    /** @type {string} */\n    this.valueType = valueType;\n  }\n\n  /**\n   * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n   */\n  couldAffectReferencingModule() {\n    return Dependency.TRANSITIVE;\n  }\n\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    return [[this.name]];\n  }\n  get type() {\n    return \"wasm export import\";\n  }\n  get category() {\n    return \"wasm\";\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.exportName);\n    write(this.name);\n    write(this.valueType);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.exportName = read();\n    this.name = read();\n    this.valueType = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(WebAssemblyExportImportedDependency, \"webpack/lib/dependencies/WebAssemblyExportImportedDependency\");\nmodule.exports = WebAssemblyExportImportedDependency;","map":{"version":3,"names":["Dependency","require","makeSerializable","ModuleDependency","WebAssemblyExportImportedDependency","constructor","exportName","request","name","valueType","couldAffectReferencingModule","TRANSITIVE","getReferencedExports","moduleGraph","runtime","type","category","serialize","context","write","deserialize","read","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/WebAssemblyExportImportedDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").TRANSITIVE} TRANSITIVE */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WebAssemblyExportImportedDependency extends ModuleDependency {\n\t/**\n\t * @param {string} exportName export name\n\t * @param {string} request request\n\t * @param {string} name name\n\t * @param {TODO} valueType value type\n\t */\n\tconstructor(exportName, request, name, valueType) {\n\t\tsuper(request);\n\t\t/** @type {string} */\n\t\tthis.exportName = exportName;\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/** @type {string} */\n\t\tthis.valueType = valueType;\n\t}\n\n\t/**\n\t * @returns {boolean | TRANSITIVE} true, when changes to the referenced module could affect the referencing module; TRANSITIVE, when changes to the referenced module could affect referencing modules of the referencing module\n\t */\n\tcouldAffectReferencingModule() {\n\t\treturn Dependency.TRANSITIVE;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn [[this.name]];\n\t}\n\n\tget type() {\n\t\treturn \"wasm export import\";\n\t}\n\n\tget category() {\n\t\treturn \"wasm\";\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.exportName);\n\t\twrite(this.name);\n\t\twrite(this.valueType);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.exportName = read();\n\t\tthis.name = read();\n\t\tthis.valueType = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tWebAssemblyExportImportedDependency,\n\t\"webpack/lib/dependencies/WebAssemblyExportImportedDependency\"\n);\n\nmodule.exports = WebAssemblyExportImportedDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,mCAAmC,SAASD,gBAAgB,CAAC;EAClE;AACD;AACA;AACA;AACA;AACA;EACCE,WAAWA,CAACC,UAAU,EAAEC,OAAO,EAAEC,IAAI,EAAEC,SAAS,EAAE;IACjD,KAAK,CAACF,OAAO,CAAC;IACd;IACA,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B;IACA,IAAI,CAACE,IAAI,GAAGA,IAAI;IAChB;IACA,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC3B;;EAEA;AACD;AACA;EACCC,4BAA4BA,CAAA,EAAG;IAC9B,OAAOV,UAAU,CAACW,UAAU;EAC7B;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCC,oBAAoBA,CAACC,WAAW,EAAEC,OAAO,EAAE;IAC1C,OAAO,CAAC,CAAC,IAAI,CAACN,IAAI,CAAC,CAAC;EACrB;EAEA,IAAIO,IAAIA,CAAA,EAAG;IACV,OAAO,oBAAoB;EAC5B;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACd,OAAO,MAAM;EACd;;EAEA;AACD;AACA;EACCC,SAASA,CAACC,OAAO,EAAE;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGD,OAAO;IAEzBC,KAAK,CAAC,IAAI,CAACb,UAAU,CAAC;IACtBa,KAAK,CAAC,IAAI,CAACX,IAAI,CAAC;IAChBW,KAAK,CAAC,IAAI,CAACV,SAAS,CAAC;IAErB,KAAK,CAACQ,SAAS,CAACC,OAAO,CAAC;EACzB;;EAEA;AACD;AACA;EACCE,WAAWA,CAACF,OAAO,EAAE;IACpB,MAAM;MAAEG;IAAK,CAAC,GAAGH,OAAO;IAExB,IAAI,CAACZ,UAAU,GAAGe,IAAI,CAAC,CAAC;IACxB,IAAI,CAACb,IAAI,GAAGa,IAAI,CAAC,CAAC;IAClB,IAAI,CAACZ,SAAS,GAAGY,IAAI,CAAC,CAAC;IAEvB,KAAK,CAACD,WAAW,CAACF,OAAO,CAAC;EAC3B;AACD;AAEAhB,gBAAgB,CACfE,mCAAmC,EACnC,8DACD,CAAC;AAEDkB,MAAM,CAACC,OAAO,GAAGnB,mCAAmC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
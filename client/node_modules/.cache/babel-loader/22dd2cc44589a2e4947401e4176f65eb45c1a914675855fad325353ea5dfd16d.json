{"ast":null,"code":"\"use strict\";\n\nconst sockjs = require(\"sockjs\");\nconst BaseServer = require(\"./BaseServer\");\n\n/** @typedef {import(\"../Server\").WebSocketServerConfiguration} WebSocketServerConfiguration */\n/** @typedef {import(\"../Server\").ClientConnection} ClientConnection */\n\n// Workaround for sockjs@~0.3.19\n// sockjs will remove Origin header, however Origin header is required for checking host.\n// See https://github.com/webpack/webpack-dev-server/issues/1604 for more information\n{\n  // @ts-ignore\n  const SockjsSession = require(\"sockjs/lib/transport\").Session;\n  const decorateConnection = SockjsSession.prototype.decorateConnection;\n\n  /**\n   * @param {import(\"http\").IncomingMessage} req\n   */\n  // eslint-disable-next-line func-names\n  SockjsSession.prototype.decorateConnection = function (req) {\n    decorateConnection.call(this, req);\n    const connection = this.connection;\n    if (connection.headers && !(\"origin\" in connection.headers) && \"origin\" in req.headers) {\n      connection.headers.origin = req.headers.origin;\n    }\n  };\n}\nmodule.exports = class SockJSServer extends BaseServer {\n  // options has: error (function), debug (function), server (http/s server), path (string)\n  /**\n   * @param {import(\"../Server\")} server\n   */\n  constructor(server) {\n    super(server);\n    const webSocketServerOptions = /** @type {NonNullable<WebSocketServerConfiguration[\"options\"]>} */\n\n    /** @type {WebSocketServerConfiguration} */\n    this.server.options.webSocketServer.options;\n\n    /**\n     * @param {NonNullable<WebSocketServerConfiguration[\"options\"]>} options\n     * @returns {string}\n     */\n    const getSockjsUrl = options => {\n      if (typeof options.sockjsUrl !== \"undefined\") {\n        return options.sockjsUrl;\n      }\n      return \"/__webpack_dev_server__/sockjs.bundle.js\";\n    };\n    this.implementation = sockjs.createServer({\n      // Use provided up-to-date sockjs-client\n      sockjs_url: getSockjsUrl(webSocketServerOptions),\n      // Default logger is very annoy. Limit useless logs.\n      /**\n       * @param {string} severity\n       * @param {string} line\n       */\n      log: (severity, line) => {\n        if (severity === \"error\") {\n          this.server.logger.error(line);\n        } else if (severity === \"info\") {\n          this.server.logger.log(line);\n        } else {\n          this.server.logger.debug(line);\n        }\n      }\n    });\n\n    /**\n     * @param {import(\"sockjs\").ServerOptions & { path?: string }} options\n     * @returns {string | undefined}\n     */\n    const getPrefix = options => {\n      if (typeof options.prefix !== \"undefined\") {\n        return options.prefix;\n      }\n      return options.path;\n    };\n    const options = {\n      ...webSocketServerOptions,\n      prefix: getPrefix(webSocketServerOptions)\n    };\n    this.implementation.installHandlers( /** @type {import(\"http\").Server} */this.server.server, options);\n    this.implementation.on(\"connection\", client => {\n      // @ts-ignore\n      // Implement the the same API as for `ws`\n      client.send = client.write;\n      // @ts-ignore\n      client.terminate = client.close;\n      this.clients.push( /** @type {ClientConnection} */client);\n      client.on(\"close\", () => {\n        this.clients.splice(this.clients.indexOf( /** @type {ClientConnection} */client), 1);\n      });\n    });\n\n    // @ts-ignore\n    this.implementation.close = callback => {\n      callback();\n    };\n  }\n};","map":{"version":3,"names":["sockjs","require","BaseServer","SockjsSession","Session","decorateConnection","prototype","req","call","connection","headers","origin","module","exports","SockJSServer","constructor","server","webSocketServerOptions","options","webSocketServer","getSockjsUrl","sockjsUrl","implementation","createServer","sockjs_url","log","severity","line","logger","error","debug","getPrefix","prefix","path","installHandlers","on","client","send","write","terminate","close","clients","push","splice","indexOf","callback"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-dev-server/lib/servers/SockJSServer.js"],"sourcesContent":["\"use strict\";\n\nconst sockjs = require(\"sockjs\");\nconst BaseServer = require(\"./BaseServer\");\n\n/** @typedef {import(\"../Server\").WebSocketServerConfiguration} WebSocketServerConfiguration */\n/** @typedef {import(\"../Server\").ClientConnection} ClientConnection */\n\n// Workaround for sockjs@~0.3.19\n// sockjs will remove Origin header, however Origin header is required for checking host.\n// See https://github.com/webpack/webpack-dev-server/issues/1604 for more information\n{\n  // @ts-ignore\n  const SockjsSession = require(\"sockjs/lib/transport\").Session;\n  const decorateConnection = SockjsSession.prototype.decorateConnection;\n\n  /**\n   * @param {import(\"http\").IncomingMessage} req\n   */\n  // eslint-disable-next-line func-names\n  SockjsSession.prototype.decorateConnection = function (req) {\n    decorateConnection.call(this, req);\n\n    const connection = this.connection;\n\n    if (\n      connection.headers &&\n      !(\"origin\" in connection.headers) &&\n      \"origin\" in req.headers\n    ) {\n      connection.headers.origin = req.headers.origin;\n    }\n  };\n}\n\nmodule.exports = class SockJSServer extends BaseServer {\n  // options has: error (function), debug (function), server (http/s server), path (string)\n  /**\n   * @param {import(\"../Server\")} server\n   */\n  constructor(server) {\n    super(server);\n\n    const webSocketServerOptions =\n      /** @type {NonNullable<WebSocketServerConfiguration[\"options\"]>} */\n      (\n        /** @type {WebSocketServerConfiguration} */\n        (this.server.options.webSocketServer).options\n      );\n\n    /**\n     * @param {NonNullable<WebSocketServerConfiguration[\"options\"]>} options\n     * @returns {string}\n     */\n    const getSockjsUrl = (options) => {\n      if (typeof options.sockjsUrl !== \"undefined\") {\n        return options.sockjsUrl;\n      }\n\n      return \"/__webpack_dev_server__/sockjs.bundle.js\";\n    };\n\n    this.implementation = sockjs.createServer({\n      // Use provided up-to-date sockjs-client\n      sockjs_url: getSockjsUrl(webSocketServerOptions),\n      // Default logger is very annoy. Limit useless logs.\n      /**\n       * @param {string} severity\n       * @param {string} line\n       */\n      log: (severity, line) => {\n        if (severity === \"error\") {\n          this.server.logger.error(line);\n        } else if (severity === \"info\") {\n          this.server.logger.log(line);\n        } else {\n          this.server.logger.debug(line);\n        }\n      },\n    });\n\n    /**\n     * @param {import(\"sockjs\").ServerOptions & { path?: string }} options\n     * @returns {string | undefined}\n     */\n    const getPrefix = (options) => {\n      if (typeof options.prefix !== \"undefined\") {\n        return options.prefix;\n      }\n\n      return options.path;\n    };\n\n    const options = {\n      ...webSocketServerOptions,\n      prefix: getPrefix(webSocketServerOptions),\n    };\n\n    this.implementation.installHandlers(\n      /** @type {import(\"http\").Server} */ (this.server.server),\n      options\n    );\n\n    this.implementation.on(\"connection\", (client) => {\n      // @ts-ignore\n      // Implement the the same API as for `ws`\n      client.send = client.write;\n      // @ts-ignore\n      client.terminate = client.close;\n\n      this.clients.push(/** @type {ClientConnection} */ (client));\n\n      client.on(\"close\", () => {\n        this.clients.splice(\n          this.clients.indexOf(/** @type {ClientConnection} */ (client)),\n          1\n        );\n      });\n    });\n\n    // @ts-ignore\n    this.implementation.close = (callback) => {\n      callback();\n    };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
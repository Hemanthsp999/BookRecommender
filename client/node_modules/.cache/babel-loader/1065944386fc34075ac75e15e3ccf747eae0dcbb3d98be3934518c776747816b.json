{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"../ModuleTypeConstants\");\nconst {\n  evaluateToString,\n  toConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"RequireEnsurePlugin\";\nclass RequireEnsurePlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());\n      compilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());\n\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireEnsure !== undefined && !parserOptions.requireEnsure) return;\n        new RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n        parser.hooks.evaluateTypeof.for(\"require.ensure\").tap(PLUGIN_NAME, evaluateToString(\"function\"));\n        parser.hooks.typeof.for(\"require.ensure\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"function\")));\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n    });\n  }\n}\nmodule.exports = RequireEnsurePlugin;","map":{"version":3,"names":["RequireEnsureDependency","require","RequireEnsureItemDependency","RequireEnsureDependenciesBlockParserPlugin","JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","evaluateToString","toConstantDependency","PLUGIN_NAME","RequireEnsurePlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireEnsure","undefined","evaluateTypeof","for","typeof","JSON","stringify","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/RequireEnsurePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RequireEnsureDependency = require(\"./RequireEnsureDependency\");\nconst RequireEnsureItemDependency = require(\"./RequireEnsureItemDependency\");\n\nconst RequireEnsureDependenciesBlockParserPlugin = require(\"./RequireEnsureDependenciesBlockParserPlugin\");\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"../ModuleTypeConstants\");\nconst {\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"RequireEnsurePlugin\";\n\nclass RequireEnsurePlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureItemDependency,\n\t\t\t\t\tnew RequireEnsureItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireEnsureDependency,\n\t\t\t\t\tnew RequireEnsureDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.requireEnsure !== undefined &&\n\t\t\t\t\t\t!parserOptions.requireEnsure\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew RequireEnsureDependenciesBlockParserPlugin().apply(parser);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require.ensure\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireEnsurePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACpE,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAE5E,MAAME,0CAA0C,GAAGF,OAAO,CAAC,8CAA8C,CAAC;AAE1G,MAAM;EACLG,2BAA2B;EAC3BC;AACD,CAAC,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACrC,MAAM;EACLK,gBAAgB;EAChBC;AACD,CAAC,GAAGN,OAAO,CAAC,uCAAuC,CAAC;;AAEpD;AACA;AACA;;AAEA,MAAMO,WAAW,GAAG,qBAAqB;AAEzC,MAAMC,mBAAmB,CAAC;EACzB;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7BN,WAAW,EACX,CAACK,WAAW,EAAAE,IAAA,KAA8B;MAAA,IAA5B;QAAEC;MAAoB,CAAC,GAAAD,IAAA;MACpCF,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClChB,2BAA2B,EAC3Bc,mBACD,CAAC;MACDH,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClChB,2BAA2B,EAC3B,IAAIA,2BAA2B,CAACkB,QAAQ,CAAC,CAC1C,CAAC;MAEDP,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClClB,uBAAuB,EACvB,IAAIA,uBAAuB,CAACoB,QAAQ,CAAC,CACtC,CAAC;;MAED;AACJ;AACA;AACA;AACA;MACI,MAAMC,OAAO,GAAGA,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IACCA,aAAa,CAACC,aAAa,KAAKC,SAAS,IACzC,CAACF,aAAa,CAACC,aAAa,EAE5B;QAED,IAAIrB,0CAA0C,CAAC,CAAC,CAACO,KAAK,CAACY,MAAM,CAAC;QAC9DA,MAAM,CAACV,KAAK,CAACc,cAAc,CACzBC,GAAG,CAAC,gBAAgB,CAAC,CACrBb,GAAG,CAACN,WAAW,EAAEF,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAChDgB,MAAM,CAACV,KAAK,CAACgB,MAAM,CACjBD,GAAG,CAAC,gBAAgB,CAAC,CACrBb,GAAG,CACHN,WAAW,EACXD,oBAAoB,CAACe,MAAM,EAAEO,IAAI,CAACC,SAAS,CAAC,UAAU,CAAC,CACxD,CAAC;MACH,CAAC;MAEDd,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAACvB,2BAA2B,CAAC,CAChCU,GAAG,CAACN,WAAW,EAAEa,OAAO,CAAC;MAC3BL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAACtB,8BAA8B,CAAC,CACnCS,GAAG,CAACN,WAAW,EAAEa,OAAO,CAAC;IAC5B,CACD,CAAC;EACF;AACD;AACAU,MAAM,CAACC,OAAO,GAAGvB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
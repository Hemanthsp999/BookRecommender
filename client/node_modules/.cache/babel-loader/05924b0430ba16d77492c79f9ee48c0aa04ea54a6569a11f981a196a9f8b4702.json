{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var GenericReceiver,\n    MAP,\n    ResponseReceiver,\n    Session,\n    SockJSConnection,\n    Transport,\n    closeFrame,\n    register,\n    stream,\n    utils,\n    uuidv4,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  stream = require('stream');\n  uuidv4 = require('uuid').v4;\n  utils = require('./utils');\n  Transport = function () {\n    function Transport() {}\n    return Transport;\n  }();\n  Transport.CONNECTING = 0;\n  Transport.OPEN = 1;\n  Transport.CLOSING = 2;\n  Transport.CLOSED = 3;\n  closeFrame = function (status, reason) {\n    return 'c' + JSON.stringify([status, reason]);\n  };\n  SockJSConnection = function (superClass) {\n    extend(SockJSConnection, superClass);\n    function SockJSConnection(_session) {\n      this._session = _session;\n      this.id = uuidv4();\n      this.headers = {};\n      this.prefix = this._session.prefix;\n    }\n    SockJSConnection.prototype.toString = function () {\n      return '<SockJSConnection ' + this.id + '>';\n    };\n    SockJSConnection.prototype.write = function (string) {\n      return this._session.send('' + string);\n    };\n    SockJSConnection.prototype.end = function (string) {\n      if (string) {\n        this.write(string);\n      }\n      this.close();\n      return null;\n    };\n    SockJSConnection.prototype.close = function (code, reason) {\n      return this._session.close(code, reason);\n    };\n    SockJSConnection.prototype.destroy = function () {\n      this.end();\n      return this.removeAllListeners();\n    };\n    SockJSConnection.prototype.destroySoon = function () {\n      return this.destroy();\n    };\n    return SockJSConnection;\n  }(stream.Stream);\n  SockJSConnection.prototype.__defineGetter__('readable', function () {\n    return this._session.readyState === Transport.OPEN;\n  });\n  SockJSConnection.prototype.__defineGetter__('writable', function () {\n    return this._session.readyState === Transport.OPEN;\n  });\n  SockJSConnection.prototype.__defineGetter__('readyState', function () {\n    return this._session.readyState;\n  });\n  MAP = {};\n  Session = function () {\n    function Session(session_id1, server) {\n      this.session_id = session_id1;\n      this.heartbeat_delay = server.options.heartbeat_delay;\n      this.disconnect_delay = server.options.disconnect_delay;\n      this.prefix = server.options.prefix;\n      this.send_buffer = [];\n      this.is_closing = false;\n      this.readyState = Transport.CONNECTING;\n      if (this.session_id) {\n        MAP[this.session_id] = this;\n      }\n      this.timeout_cb = function (_this) {\n        return function () {\n          return _this.didTimeout();\n        };\n      }(this);\n      this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      this.connection = new SockJSConnection(this);\n      this.emit_open = function (_this) {\n        return function () {\n          _this.emit_open = null;\n          return server.emit('connection', _this.connection);\n        };\n      }(this);\n    }\n    Session.prototype.register = function (req, recv) {\n      if (this.recv) {\n        recv.doSendFrame(closeFrame(2010, \"Another connection still open\"));\n        recv.didClose();\n        return;\n      }\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState === Transport.CLOSING) {\n        this.flushToRecv(recv);\n        recv.doSendFrame(this.close_frame);\n        recv.didClose();\n        this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n        return;\n      }\n      this.recv = recv;\n      this.recv.session = this;\n      this.decorateConnection(req);\n      if (this.readyState === Transport.CONNECTING) {\n        this.recv.doSendFrame('o');\n        this.readyState = Transport.OPEN;\n        process.nextTick(this.emit_open);\n      }\n      if (!this.recv) {\n        return;\n      }\n      this.tryFlush();\n    };\n    Session.prototype.decorateConnection = function (req) {\n      var address, headers, i, key, len, ref, remoteAddress, remotePort, socket, x;\n      if (!(socket = this.recv.connection)) {\n        socket = this.recv.response.connection;\n      }\n      try {\n        remoteAddress = socket.remoteAddress;\n        remotePort = socket.remotePort;\n        address = socket.address();\n      } catch (error) {\n        x = error;\n      }\n      if (remoteAddress) {\n        this.connection.remoteAddress = remoteAddress;\n        this.connection.remotePort = remotePort;\n        this.connection.address = address;\n      }\n      this.connection.url = req.url;\n      this.connection.pathname = req.pathname;\n      this.connection.protocol = this.recv.protocol;\n      headers = {};\n      ref = ['referer', 'x-client-ip', 'x-forwarded-for', 'x-forwarded-host', 'x-forwarded-port', 'x-cluster-client-ip', 'via', 'x-real-ip', 'x-forwarded-proto', 'x-ssl', 'dnt', 'host', 'user-agent', 'accept-language'];\n      for (i = 0, len = ref.length; i < len; i++) {\n        key = ref[i];\n        if (req.headers[key]) {\n          headers[key] = req.headers[key];\n        }\n      }\n      if (headers) {\n        return this.connection.headers = headers;\n      }\n    };\n    Session.prototype.unregister = function () {\n      var delay;\n      delay = this.recv.delay_disconnect;\n      this.recv.session = null;\n      this.recv = null;\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n      }\n      if (delay) {\n        return this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      } else {\n        return this.timeout_cb();\n      }\n    };\n    Session.prototype.flushToRecv = function (recv) {\n      var ref, sb;\n      if (this.send_buffer.length > 0) {\n        ref = [this.send_buffer, []], sb = ref[0], this.send_buffer = ref[1];\n        recv.doSendBulk(sb);\n        return true;\n      }\n      return false;\n    };\n    Session.prototype.tryFlush = function () {\n      var x;\n      if (!this.flushToRecv(this.recv) || !this.to_tref) {\n        if (this.to_tref) {\n          clearTimeout(this.to_tref);\n        }\n        x = function (_this) {\n          return function () {\n            if (_this.recv) {\n              _this.to_tref = setTimeout(x, _this.heartbeat_delay);\n              return _this.recv.heartbeat();\n            }\n          };\n        }(this);\n        this.to_tref = setTimeout(x, this.heartbeat_delay);\n      }\n    };\n    Session.prototype.didTimeout = function () {\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState !== Transport.CONNECTING && this.readyState !== Transport.OPEN && this.readyState !== Transport.CLOSING) {\n        throw Error('INVALID_STATE_ERR');\n      }\n      if (this.recv) {\n        throw Error('RECV_STILL_THERE');\n      }\n      this.readyState = Transport.CLOSED;\n      this.connection.emit('end');\n      this.connection.emit('close');\n      this.connection = null;\n      if (this.session_id) {\n        delete MAP[this.session_id];\n        return this.session_id = null;\n      }\n    };\n    Session.prototype.didMessage = function (payload) {\n      if (this.readyState === Transport.OPEN) {\n        this.connection.emit('data', payload);\n      }\n    };\n    Session.prototype.send = function (payload) {\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.send_buffer.push('' + payload);\n      if (this.recv) {\n        this.tryFlush();\n      }\n      return true;\n    };\n    Session.prototype.close = function (status, reason) {\n      if (status == null) {\n        status = 1000;\n      }\n      if (reason == null) {\n        reason = \"Normal closure\";\n      }\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.readyState = Transport.CLOSING;\n      this.close_frame = closeFrame(status, reason);\n      if (this.recv) {\n        this.recv.doSendFrame(this.close_frame);\n        if (this.recv) {\n          this.recv.didClose();\n        }\n        if (this.recv) {\n          this.unregister();\n        }\n      }\n      return true;\n    };\n    return Session;\n  }();\n  Session.bySessionId = function (session_id) {\n    if (!session_id) {\n      return null;\n    }\n    return MAP[session_id] || null;\n  };\n  register = function (req, server, session_id, receiver) {\n    var session;\n    session = Session.bySessionId(session_id);\n    if (!session) {\n      session = new Session(session_id, server);\n    }\n    session.register(req, receiver);\n    return session;\n  };\n  exports.register = function (req, server, receiver) {\n    return register(req, server, req.session, receiver);\n  };\n  exports.registerNoSession = function (req, server, receiver) {\n    return register(req, server, void 0, receiver);\n  };\n  GenericReceiver = function () {\n    function GenericReceiver(thingy) {\n      this.thingy = thingy;\n      this.setUp(this.thingy);\n    }\n    GenericReceiver.prototype.setUp = function () {\n      this.thingy_end_cb = function (_this) {\n        return function () {\n          return _this.didAbort();\n        };\n      }(this);\n      this.thingy.addListener('close', this.thingy_end_cb);\n      return this.thingy.addListener('end', this.thingy_end_cb);\n    };\n    GenericReceiver.prototype.tearDown = function () {\n      this.thingy.removeListener('close', this.thingy_end_cb);\n      this.thingy.removeListener('end', this.thingy_end_cb);\n      return this.thingy_end_cb = null;\n    };\n    GenericReceiver.prototype.didAbort = function () {\n      this.delay_disconnect = false;\n      return this.didClose();\n    };\n    GenericReceiver.prototype.didClose = function () {\n      if (this.thingy) {\n        this.tearDown(this.thingy);\n        this.thingy = null;\n      }\n      if (this.session) {\n        return this.session.unregister();\n      }\n    };\n    GenericReceiver.prototype.doSendBulk = function (messages) {\n      var m, q_msgs;\n      q_msgs = function () {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = messages.length; i < len; i++) {\n          m = messages[i];\n          results.push(utils.quote(m));\n        }\n        return results;\n      }();\n      return this.doSendFrame('a' + '[' + q_msgs.join(',') + ']');\n    };\n    GenericReceiver.prototype.heartbeat = function () {\n      return this.doSendFrame('h');\n    };\n    return GenericReceiver;\n  }();\n  ResponseReceiver = function (superClass) {\n    extend(ResponseReceiver, superClass);\n    ResponseReceiver.prototype.max_response_size = void 0;\n    ResponseReceiver.prototype.delay_disconnect = true;\n    function ResponseReceiver(request, response, options) {\n      var x;\n      this.request = request;\n      this.response = response;\n      this.options = options;\n      this.curr_response_size = 0;\n      try {\n        this.request.connection.setKeepAlive(true, 5000);\n      } catch (error) {\n        x = error;\n      }\n      ResponseReceiver.__super__.constructor.call(this, this.request.connection);\n      if (this.max_response_size === void 0) {\n        this.max_response_size = this.options.response_limit;\n      }\n    }\n    ResponseReceiver.prototype.doSendFrame = function (payload) {\n      var r, x;\n      this.curr_response_size += payload.length;\n      r = false;\n      try {\n        this.response.write(payload);\n        r = true;\n      } catch (error) {\n        x = error;\n      }\n      if (this.max_response_size && this.curr_response_size >= this.max_response_size) {\n        this.didClose();\n      }\n      return r;\n    };\n    ResponseReceiver.prototype.didClose = function () {\n      var x;\n      ResponseReceiver.__super__.didClose.apply(this, arguments);\n      try {\n        this.response.end();\n      } catch (error) {\n        x = error;\n      }\n      return this.response = null;\n    };\n    return ResponseReceiver;\n  }(GenericReceiver);\n  exports.GenericReceiver = GenericReceiver;\n  exports.Transport = Transport;\n  exports.Session = Session;\n  exports.ResponseReceiver = ResponseReceiver;\n  exports.SockJSConnection = SockJSConnection;\n}).call(this);","map":{"version":3,"names":["GenericReceiver","MAP","ResponseReceiver","Session","SockJSConnection","Transport","closeFrame","register","stream","utils","uuidv4","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","v4","CONNECTING","OPEN","CLOSING","CLOSED","status","reason","JSON","stringify","superClass","_session","id","headers","prefix","toString","write","string","send","end","close","code","destroy","removeAllListeners","destroySoon","Stream","__defineGetter__","readyState","session_id1","server","session_id","heartbeat_delay","options","disconnect_delay","send_buffer","is_closing","timeout_cb","_this","didTimeout","to_tref","setTimeout","connection","emit_open","emit","req","recv","doSendFrame","didClose","clearTimeout","flushToRecv","close_frame","session","decorateConnection","process","nextTick","tryFlush","address","i","len","ref","remoteAddress","remotePort","socket","x","response","error","url","pathname","protocol","length","unregister","delay","delay_disconnect","sb","doSendBulk","heartbeat","Error","didMessage","payload","push","bySessionId","receiver","exports","registerNoSession","thingy","setUp","thingy_end_cb","didAbort","addListener","tearDown","removeListener","messages","m","q_msgs","results","quote","join","max_response_size","request","curr_response_size","setKeepAlive","response_limit","r","apply","arguments"],"sources":["/home/hemanth/react-project/client/node_modules/sockjs/lib/transport.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var GenericReceiver, MAP, ResponseReceiver, Session, SockJSConnection, Transport, closeFrame, register, stream, utils, uuidv4,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  stream = require('stream');\n\n  uuidv4 = require('uuid').v4;\n\n  utils = require('./utils');\n\n  Transport = (function() {\n    function Transport() {}\n\n    return Transport;\n\n  })();\n\n  Transport.CONNECTING = 0;\n\n  Transport.OPEN = 1;\n\n  Transport.CLOSING = 2;\n\n  Transport.CLOSED = 3;\n\n  closeFrame = function(status, reason) {\n    return 'c' + JSON.stringify([status, reason]);\n  };\n\n  SockJSConnection = (function(superClass) {\n    extend(SockJSConnection, superClass);\n\n    function SockJSConnection(_session) {\n      this._session = _session;\n      this.id = uuidv4();\n      this.headers = {};\n      this.prefix = this._session.prefix;\n    }\n\n    SockJSConnection.prototype.toString = function() {\n      return '<SockJSConnection ' + this.id + '>';\n    };\n\n    SockJSConnection.prototype.write = function(string) {\n      return this._session.send('' + string);\n    };\n\n    SockJSConnection.prototype.end = function(string) {\n      if (string) {\n        this.write(string);\n      }\n      this.close();\n      return null;\n    };\n\n    SockJSConnection.prototype.close = function(code, reason) {\n      return this._session.close(code, reason);\n    };\n\n    SockJSConnection.prototype.destroy = function() {\n      this.end();\n      return this.removeAllListeners();\n    };\n\n    SockJSConnection.prototype.destroySoon = function() {\n      return this.destroy();\n    };\n\n    return SockJSConnection;\n\n  })(stream.Stream);\n\n  SockJSConnection.prototype.__defineGetter__('readable', function() {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('writable', function() {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('readyState', function() {\n    return this._session.readyState;\n  });\n\n  MAP = {};\n\n  Session = (function() {\n    function Session(session_id1, server) {\n      this.session_id = session_id1;\n      this.heartbeat_delay = server.options.heartbeat_delay;\n      this.disconnect_delay = server.options.disconnect_delay;\n      this.prefix = server.options.prefix;\n      this.send_buffer = [];\n      this.is_closing = false;\n      this.readyState = Transport.CONNECTING;\n      if (this.session_id) {\n        MAP[this.session_id] = this;\n      }\n      this.timeout_cb = (function(_this) {\n        return function() {\n          return _this.didTimeout();\n        };\n      })(this);\n      this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      this.connection = new SockJSConnection(this);\n      this.emit_open = (function(_this) {\n        return function() {\n          _this.emit_open = null;\n          return server.emit('connection', _this.connection);\n        };\n      })(this);\n    }\n\n    Session.prototype.register = function(req, recv) {\n      if (this.recv) {\n        recv.doSendFrame(closeFrame(2010, \"Another connection still open\"));\n        recv.didClose();\n        return;\n      }\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState === Transport.CLOSING) {\n        this.flushToRecv(recv);\n        recv.doSendFrame(this.close_frame);\n        recv.didClose();\n        this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n        return;\n      }\n      this.recv = recv;\n      this.recv.session = this;\n      this.decorateConnection(req);\n      if (this.readyState === Transport.CONNECTING) {\n        this.recv.doSendFrame('o');\n        this.readyState = Transport.OPEN;\n        process.nextTick(this.emit_open);\n      }\n      if (!this.recv) {\n        return;\n      }\n      this.tryFlush();\n    };\n\n    Session.prototype.decorateConnection = function(req) {\n      var address, headers, i, key, len, ref, remoteAddress, remotePort, socket, x;\n      if (!(socket = this.recv.connection)) {\n        socket = this.recv.response.connection;\n      }\n      try {\n        remoteAddress = socket.remoteAddress;\n        remotePort = socket.remotePort;\n        address = socket.address();\n      } catch (error) {\n        x = error;\n      }\n      if (remoteAddress) {\n        this.connection.remoteAddress = remoteAddress;\n        this.connection.remotePort = remotePort;\n        this.connection.address = address;\n      }\n      this.connection.url = req.url;\n      this.connection.pathname = req.pathname;\n      this.connection.protocol = this.recv.protocol;\n      headers = {};\n      ref = ['referer', 'x-client-ip', 'x-forwarded-for', 'x-forwarded-host', 'x-forwarded-port', 'x-cluster-client-ip', 'via', 'x-real-ip', 'x-forwarded-proto', 'x-ssl', 'dnt', 'host', 'user-agent', 'accept-language'];\n      for (i = 0, len = ref.length; i < len; i++) {\n        key = ref[i];\n        if (req.headers[key]) {\n          headers[key] = req.headers[key];\n        }\n      }\n      if (headers) {\n        return this.connection.headers = headers;\n      }\n    };\n\n    Session.prototype.unregister = function() {\n      var delay;\n      delay = this.recv.delay_disconnect;\n      this.recv.session = null;\n      this.recv = null;\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n      }\n      if (delay) {\n        return this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      } else {\n        return this.timeout_cb();\n      }\n    };\n\n    Session.prototype.flushToRecv = function(recv) {\n      var ref, sb;\n      if (this.send_buffer.length > 0) {\n        ref = [this.send_buffer, []], sb = ref[0], this.send_buffer = ref[1];\n        recv.doSendBulk(sb);\n        return true;\n      }\n      return false;\n    };\n\n    Session.prototype.tryFlush = function() {\n      var x;\n      if (!this.flushToRecv(this.recv) || !this.to_tref) {\n        if (this.to_tref) {\n          clearTimeout(this.to_tref);\n        }\n        x = (function(_this) {\n          return function() {\n            if (_this.recv) {\n              _this.to_tref = setTimeout(x, _this.heartbeat_delay);\n              return _this.recv.heartbeat();\n            }\n          };\n        })(this);\n        this.to_tref = setTimeout(x, this.heartbeat_delay);\n      }\n    };\n\n    Session.prototype.didTimeout = function() {\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState !== Transport.CONNECTING && this.readyState !== Transport.OPEN && this.readyState !== Transport.CLOSING) {\n        throw Error('INVALID_STATE_ERR');\n      }\n      if (this.recv) {\n        throw Error('RECV_STILL_THERE');\n      }\n      this.readyState = Transport.CLOSED;\n      this.connection.emit('end');\n      this.connection.emit('close');\n      this.connection = null;\n      if (this.session_id) {\n        delete MAP[this.session_id];\n        return this.session_id = null;\n      }\n    };\n\n    Session.prototype.didMessage = function(payload) {\n      if (this.readyState === Transport.OPEN) {\n        this.connection.emit('data', payload);\n      }\n    };\n\n    Session.prototype.send = function(payload) {\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.send_buffer.push('' + payload);\n      if (this.recv) {\n        this.tryFlush();\n      }\n      return true;\n    };\n\n    Session.prototype.close = function(status, reason) {\n      if (status == null) {\n        status = 1000;\n      }\n      if (reason == null) {\n        reason = \"Normal closure\";\n      }\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.readyState = Transport.CLOSING;\n      this.close_frame = closeFrame(status, reason);\n      if (this.recv) {\n        this.recv.doSendFrame(this.close_frame);\n        if (this.recv) {\n          this.recv.didClose();\n        }\n        if (this.recv) {\n          this.unregister();\n        }\n      }\n      return true;\n    };\n\n    return Session;\n\n  })();\n\n  Session.bySessionId = function(session_id) {\n    if (!session_id) {\n      return null;\n    }\n    return MAP[session_id] || null;\n  };\n\n  register = function(req, server, session_id, receiver) {\n    var session;\n    session = Session.bySessionId(session_id);\n    if (!session) {\n      session = new Session(session_id, server);\n    }\n    session.register(req, receiver);\n    return session;\n  };\n\n  exports.register = function(req, server, receiver) {\n    return register(req, server, req.session, receiver);\n  };\n\n  exports.registerNoSession = function(req, server, receiver) {\n    return register(req, server, void 0, receiver);\n  };\n\n  GenericReceiver = (function() {\n    function GenericReceiver(thingy) {\n      this.thingy = thingy;\n      this.setUp(this.thingy);\n    }\n\n    GenericReceiver.prototype.setUp = function() {\n      this.thingy_end_cb = (function(_this) {\n        return function() {\n          return _this.didAbort();\n        };\n      })(this);\n      this.thingy.addListener('close', this.thingy_end_cb);\n      return this.thingy.addListener('end', this.thingy_end_cb);\n    };\n\n    GenericReceiver.prototype.tearDown = function() {\n      this.thingy.removeListener('close', this.thingy_end_cb);\n      this.thingy.removeListener('end', this.thingy_end_cb);\n      return this.thingy_end_cb = null;\n    };\n\n    GenericReceiver.prototype.didAbort = function() {\n      this.delay_disconnect = false;\n      return this.didClose();\n    };\n\n    GenericReceiver.prototype.didClose = function() {\n      if (this.thingy) {\n        this.tearDown(this.thingy);\n        this.thingy = null;\n      }\n      if (this.session) {\n        return this.session.unregister();\n      }\n    };\n\n    GenericReceiver.prototype.doSendBulk = function(messages) {\n      var m, q_msgs;\n      q_msgs = (function() {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = messages.length; i < len; i++) {\n          m = messages[i];\n          results.push(utils.quote(m));\n        }\n        return results;\n      })();\n      return this.doSendFrame('a' + '[' + q_msgs.join(',') + ']');\n    };\n\n    GenericReceiver.prototype.heartbeat = function() {\n      return this.doSendFrame('h');\n    };\n\n    return GenericReceiver;\n\n  })();\n\n  ResponseReceiver = (function(superClass) {\n    extend(ResponseReceiver, superClass);\n\n    ResponseReceiver.prototype.max_response_size = void 0;\n\n    ResponseReceiver.prototype.delay_disconnect = true;\n\n    function ResponseReceiver(request, response, options) {\n      var x;\n      this.request = request;\n      this.response = response;\n      this.options = options;\n      this.curr_response_size = 0;\n      try {\n        this.request.connection.setKeepAlive(true, 5000);\n      } catch (error) {\n        x = error;\n      }\n      ResponseReceiver.__super__.constructor.call(this, this.request.connection);\n      if (this.max_response_size === void 0) {\n        this.max_response_size = this.options.response_limit;\n      }\n    }\n\n    ResponseReceiver.prototype.doSendFrame = function(payload) {\n      var r, x;\n      this.curr_response_size += payload.length;\n      r = false;\n      try {\n        this.response.write(payload);\n        r = true;\n      } catch (error) {\n        x = error;\n      }\n      if (this.max_response_size && this.curr_response_size >= this.max_response_size) {\n        this.didClose();\n      }\n      return r;\n    };\n\n    ResponseReceiver.prototype.didClose = function() {\n      var x;\n      ResponseReceiver.__super__.didClose.apply(this, arguments);\n      try {\n        this.response.end();\n      } catch (error) {\n        x = error;\n      }\n      return this.response = null;\n    };\n\n    return ResponseReceiver;\n\n  })(GenericReceiver);\n\n  exports.GenericReceiver = GenericReceiver;\n\n  exports.Transport = Transport;\n\n  exports.Session = Session;\n\n  exports.ResponseReceiver = ResponseReceiver;\n\n  exports.SockJSConnection = SockJSConnection;\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst JavascriptModulesPlugin = require(\"../javascript/JavascriptModulesPlugin\");\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\nclass AutoPublicPathRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"publicPath\", RuntimeModule.STAGE_BASIC);\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  generate() {\n    const {\n      compilation\n    } = this;\n    const {\n      scriptType,\n      importMetaName,\n      path\n    } = compilation.outputOptions;\n    const chunkName = compilation.getPath(JavascriptModulesPlugin.getChunkFilenameTemplate(this.chunk, compilation.outputOptions), {\n      chunk: this.chunk,\n      contentHashType: \"javascript\"\n    });\n    const undoPath = getUndoPath(chunkName, path, false);\n    return Template.asString([\"var scriptUrl;\", scriptType === \"module\" ? `if (typeof ${importMetaName}.url === \"string\") scriptUrl = ${importMetaName}.url` : Template.asString([`if (${RuntimeGlobals.global}.importScripts) scriptUrl = ${RuntimeGlobals.global}.location + \"\";`, `var document = ${RuntimeGlobals.global}.document;`, \"if (!scriptUrl && document) {\", Template.indent([`if (document.currentScript)`, Template.indent(`scriptUrl = document.currentScript.src;`), \"if (!scriptUrl) {\", Template.indent(['var scripts = document.getElementsByTagName(\"script\");', \"if(scripts.length) {\", Template.indent([\"var i = scripts.length - 1;\", \"while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\"]), \"}\"]), \"}\"]), \"}\"]), \"// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\", '// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.', 'if (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");', 'scriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\\\?.*$/, \"\").replace(/\\\\/[^\\\\/]+$/, \"/\");', !undoPath ? `${RuntimeGlobals.publicPath} = scriptUrl;` : `${RuntimeGlobals.publicPath} = scriptUrl + ${JSON.stringify(undoPath)};`]);\n  }\n}\nmodule.exports = AutoPublicPathRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","JavascriptModulesPlugin","getUndoPath","AutoPublicPathRuntimeModule","constructor","STAGE_BASIC","generate","compilation","scriptType","importMetaName","path","outputOptions","chunkName","getPath","getChunkFilenameTemplate","chunk","contentHashType","undoPath","asString","global","indent","publicPath","JSON","stringify","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/runtime/AutoPublicPathRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst JavascriptModulesPlugin = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\nclass AutoPublicPathRuntimeModule extends RuntimeModule {\n\tconstructor() {\n\t\tsuper(\"publicPath\", RuntimeModule.STAGE_BASIC);\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { compilation } = this;\n\t\tconst { scriptType, importMetaName, path } = compilation.outputOptions;\n\t\tconst chunkName = compilation.getPath(\n\t\t\tJavascriptModulesPlugin.getChunkFilenameTemplate(\n\t\t\t\tthis.chunk,\n\t\t\t\tcompilation.outputOptions\n\t\t\t),\n\t\t\t{\n\t\t\t\tchunk: this.chunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst undoPath = getUndoPath(chunkName, path, false);\n\n\t\treturn Template.asString([\n\t\t\t\"var scriptUrl;\",\n\t\t\tscriptType === \"module\"\n\t\t\t\t? `if (typeof ${importMetaName}.url === \"string\") scriptUrl = ${importMetaName}.url`\n\t\t\t\t: Template.asString([\n\t\t\t\t\t\t`if (${RuntimeGlobals.global}.importScripts) scriptUrl = ${RuntimeGlobals.global}.location + \"\";`,\n\t\t\t\t\t\t`var document = ${RuntimeGlobals.global}.document;`,\n\t\t\t\t\t\t\"if (!scriptUrl && document) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if (document.currentScript)`,\n\t\t\t\t\t\t\tTemplate.indent(`scriptUrl = document.currentScript.src;`),\n\t\t\t\t\t\t\t\"if (!scriptUrl) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t'var scripts = document.getElementsByTagName(\"script\");',\n\t\t\t\t\t\t\t\t\"if(scripts.length) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"var i = scripts.length - 1;\",\n\t\t\t\t\t\t\t\t\t\"while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ]),\n\t\t\t\"// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\",\n\t\t\t'// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.',\n\t\t\t'if (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");',\n\t\t\t'scriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\\\?.*$/, \"\").replace(/\\\\/[^\\\\/]+$/, \"/\");',\n\t\t\t!undoPath\n\t\t\t\t? `${RuntimeGlobals.publicPath} = scriptUrl;`\n\t\t\t\t: `${RuntimeGlobals.publicPath} = scriptUrl + ${JSON.stringify(\n\t\t\t\t\t\tundoPath\n\t\t\t\t  )};`\n\t\t]);\n\t}\n}\n\nmodule.exports = AutoPublicPathRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AACvC,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,uCAAuC,CAAC;AAChF,MAAM;EAAEI;AAAY,CAAC,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AAErD,MAAMK,2BAA2B,SAASJ,aAAa,CAAC;EACvDK,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,YAAY,EAAEL,aAAa,CAACM,WAAW,CAAC;EAC/C;;EAEA;AACD;AACA;EACCC,QAAQA,CAAA,EAAG;IACV,MAAM;MAAEC;IAAY,CAAC,GAAG,IAAI;IAC5B,MAAM;MAAEC,UAAU;MAAEC,cAAc;MAAEC;IAAK,CAAC,GAAGH,WAAW,CAACI,aAAa;IACtE,MAAMC,SAAS,GAAGL,WAAW,CAACM,OAAO,CACpCZ,uBAAuB,CAACa,wBAAwB,CAC/C,IAAI,CAACC,KAAK,EACVR,WAAW,CAACI,aACb,CAAC,EACD;MACCI,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,eAAe,EAAE;IAClB,CACD,CAAC;IACD,MAAMC,QAAQ,GAAGf,WAAW,CAACU,SAAS,EAAEF,IAAI,EAAE,KAAK,CAAC;IAEpD,OAAOV,QAAQ,CAACkB,QAAQ,CAAC,CACxB,gBAAgB,EAChBV,UAAU,KAAK,QAAQ,GACnB,cAAaC,cAAe,kCAAiCA,cAAe,MAAK,GAClFT,QAAQ,CAACkB,QAAQ,CAAC,CACjB,OAAMrB,cAAc,CAACsB,MAAO,+BAA8BtB,cAAc,CAACsB,MAAO,iBAAgB,EAChG,kBAAiBtB,cAAc,CAACsB,MAAO,YAAW,EACnD,+BAA+B,EAC/BnB,QAAQ,CAACoB,MAAM,CAAC,CACd,6BAA4B,EAC7BpB,QAAQ,CAACoB,MAAM,CAAE,yCAAwC,CAAC,EAC1D,mBAAmB,EACnBpB,QAAQ,CAACoB,MAAM,CAAC,CACf,wDAAwD,EACxD,sBAAsB,EACtBpB,QAAQ,CAACoB,MAAM,CAAC,CACf,6BAA6B,EAC7B,4DAA4D,CAC5D,CAAC,EACF,GAAG,CACH,CAAC,EACF,GAAG,CACH,CAAC,EACF,GAAG,CACF,CAAC,EACL,6IAA6I,EAC7I,oHAAoH,EACpH,2FAA2F,EAC3F,8FAA8F,EAC9F,CAACH,QAAQ,GACL,GAAEpB,cAAc,CAACwB,UAAW,eAAc,GAC1C,GAAExB,cAAc,CAACwB,UAAW,kBAAiBC,IAAI,CAACC,SAAS,CAC5DN,QACA,CAAE,GAAE,CACP,CAAC;EACH;AACD;AAEAO,MAAM,CAACC,OAAO,GAAGtB,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}
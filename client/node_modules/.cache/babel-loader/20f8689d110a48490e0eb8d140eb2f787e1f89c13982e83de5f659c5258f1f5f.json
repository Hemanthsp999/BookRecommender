{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n\nclass WarnCaseSensitiveModulesPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"WarnCaseSensitiveModulesPlugin\", compilation => {\n      compilation.hooks.seal.tap(\"WarnCaseSensitiveModulesPlugin\", () => {\n        /** @type {Map<string, Map<string, Module>>} */\n        const moduleWithoutCase = new Map();\n        for (const module of compilation.modules) {\n          const identifier = module.identifier();\n\n          // Ignore `data:` URLs, because it's not a real path\n          if ( /** @type {NormalModule} */\n          module.resourceResolveData !== undefined && /** @type {NormalModule} */\n          module.resourceResolveData.encodedContent !== undefined) {\n            continue;\n          }\n          const lowerIdentifier = identifier.toLowerCase();\n          let map = moduleWithoutCase.get(lowerIdentifier);\n          if (map === undefined) {\n            map = new Map();\n            moduleWithoutCase.set(lowerIdentifier, map);\n          }\n          map.set(identifier, module);\n        }\n        for (const pair of moduleWithoutCase) {\n          const map = pair[1];\n          if (map.size > 1) {\n            compilation.warnings.push(new CaseSensitiveModulesWarning(map.values(), compilation.moduleGraph));\n          }\n        }\n      });\n    });\n  }\n}\nmodule.exports = WarnCaseSensitiveModulesPlugin;","map":{"version":3,"names":["CaseSensitiveModulesWarning","require","WarnCaseSensitiveModulesPlugin","apply","compiler","hooks","compilation","tap","seal","moduleWithoutCase","Map","module","modules","identifier","resourceResolveData","undefined","encodedContent","lowerIdentifier","toLowerCase","map","get","set","pair","size","warnings","push","values","moduleGraph","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/WarnCaseSensitiveModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n\nclass WarnCaseSensitiveModulesPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"WarnCaseSensitiveModulesPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.seal.tap(\"WarnCaseSensitiveModulesPlugin\", () => {\n\t\t\t\t\t/** @type {Map<string, Map<string, Module>>} */\n\t\t\t\t\tconst moduleWithoutCase = new Map();\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tconst identifier = module.identifier();\n\n\t\t\t\t\t\t// Ignore `data:` URLs, because it's not a real path\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t/** @type {NormalModule} */\n\t\t\t\t\t\t\t(module).resourceResolveData !== undefined &&\n\t\t\t\t\t\t\t/** @type {NormalModule} */\n\t\t\t\t\t\t\t(module).resourceResolveData.encodedContent !== undefined\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst lowerIdentifier = identifier.toLowerCase();\n\t\t\t\t\t\tlet map = moduleWithoutCase.get(lowerIdentifier);\n\t\t\t\t\t\tif (map === undefined) {\n\t\t\t\t\t\t\tmap = new Map();\n\t\t\t\t\t\t\tmoduleWithoutCase.set(lowerIdentifier, map);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmap.set(identifier, module);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const pair of moduleWithoutCase) {\n\t\t\t\t\t\tconst map = pair[1];\n\t\t\t\t\t\tif (map.size > 1) {\n\t\t\t\t\t\t\tcompilation.warnings.push(\n\t\t\t\t\t\t\t\tnew CaseSensitiveModulesWarning(\n\t\t\t\t\t\t\t\t\tmap.values(),\n\t\t\t\t\t\t\t\t\tcompilation.moduleGraph\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = WarnCaseSensitiveModulesPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAA+B,CAAC;;AAE5E;AACA;AACA;;AAEA,MAAMC,8BAA8B,CAAC;EACpC;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,gCAAgC,EAChCD,WAAW,IAAI;MACdA,WAAW,CAACD,KAAK,CAACG,IAAI,CAACD,GAAG,CAAC,gCAAgC,EAAE,MAAM;QAClE;QACA,MAAME,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;QACnC,KAAK,MAAMC,MAAM,IAAIL,WAAW,CAACM,OAAO,EAAE;UACzC,MAAMC,UAAU,GAAGF,MAAM,CAACE,UAAU,CAAC,CAAC;;UAEtC;UACA,KACC;UACCF,MAAM,CAAEG,mBAAmB,KAAKC,SAAS,IAC1C;UACCJ,MAAM,CAAEG,mBAAmB,CAACE,cAAc,KAAKD,SAAS,EACxD;YACD;UACD;UAEA,MAAME,eAAe,GAAGJ,UAAU,CAACK,WAAW,CAAC,CAAC;UAChD,IAAIC,GAAG,GAAGV,iBAAiB,CAACW,GAAG,CAACH,eAAe,CAAC;UAChD,IAAIE,GAAG,KAAKJ,SAAS,EAAE;YACtBI,GAAG,GAAG,IAAIT,GAAG,CAAC,CAAC;YACfD,iBAAiB,CAACY,GAAG,CAACJ,eAAe,EAAEE,GAAG,CAAC;UAC5C;UACAA,GAAG,CAACE,GAAG,CAACR,UAAU,EAAEF,MAAM,CAAC;QAC5B;QACA,KAAK,MAAMW,IAAI,IAAIb,iBAAiB,EAAE;UACrC,MAAMU,GAAG,GAAGG,IAAI,CAAC,CAAC,CAAC;UACnB,IAAIH,GAAG,CAACI,IAAI,GAAG,CAAC,EAAE;YACjBjB,WAAW,CAACkB,QAAQ,CAACC,IAAI,CACxB,IAAIzB,2BAA2B,CAC9BmB,GAAG,CAACO,MAAM,CAAC,CAAC,EACZpB,WAAW,CAACqB,WACb,CACD,CAAC;UACF;QACD;MACD,CAAC,CAAC;IACH,CACD,CAAC;EACF;AACD;AAEAhB,MAAM,CAACiB,OAAO,GAAG1B,8BAA8B"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst A_CODE = \"a\".charCodeAt(0);\n\n/**\n * @param {string} hash hash\n * @param {number} hashLength hash length\n * @returns {string} returns hash that has at least one non numeric char\n */\nmodule.exports = (hash, hashLength) => {\n  if (hashLength < 1) return \"\";\n  const slice = hash.slice(0, hashLength);\n  if (slice.match(/[^\\d]/)) return slice;\n  return `${String.fromCharCode(A_CODE + parseInt(hash[0], 10) % 6)}${slice.slice(1)}`;\n};","map":{"version":3,"names":["A_CODE","charCodeAt","module","exports","hash","hashLength","slice","match","String","fromCharCode","parseInt"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/util/nonNumericOnlyHash.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst A_CODE = \"a\".charCodeAt(0);\n\n/**\n * @param {string} hash hash\n * @param {number} hashLength hash length\n * @returns {string} returns hash that has at least one non numeric char\n */\nmodule.exports = (hash, hashLength) => {\n\tif (hashLength < 1) return \"\";\n\tconst slice = hash.slice(0, hashLength);\n\tif (slice.match(/[^\\d]/)) return slice;\n\treturn `${String.fromCharCode(\n\t\tA_CODE + (parseInt(hash[0], 10) % 6)\n\t)}${slice.slice(1)}`;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,MAAM,GAAG,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,CAACC,IAAI,EAAEC,UAAU,KAAK;EACtC,IAAIA,UAAU,GAAG,CAAC,EAAE,OAAO,EAAE;EAC7B,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK,CAAC,CAAC,EAAED,UAAU,CAAC;EACvC,IAAIC,KAAK,CAACC,KAAK,CAAC,OAAO,CAAC,EAAE,OAAOD,KAAK;EACtC,OAAQ,GAAEE,MAAM,CAACC,YAAY,CAC5BT,MAAM,GAAIU,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CACnC,CAAE,GAAEE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAE,EAAC;AACrB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
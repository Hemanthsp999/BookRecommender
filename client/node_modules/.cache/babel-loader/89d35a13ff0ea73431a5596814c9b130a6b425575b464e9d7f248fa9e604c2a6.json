{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"../ModuleTypeConstants\");\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\nconst RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"RequireIncludePlugin\";\nclass RequireIncludePlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(RequireIncludeDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(RequireIncludeDependency, new RequireIncludeDependency.Template());\n\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireInclude === false) return;\n        const warn = parserOptions.requireInclude === undefined;\n        new RequireIncludeDependencyParserPlugin(warn).apply(parser);\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n    });\n  }\n}\nmodule.exports = RequireIncludePlugin;","map":{"version":3,"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","require","RequireIncludeDependency","RequireIncludeDependencyParserPlugin","PLUGIN_NAME","RequireIncludePlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","requireInclude","warn","undefined","for","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/RequireIncludePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"../ModuleTypeConstants\");\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\nconst RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"RequireIncludePlugin\";\n\nclass RequireIncludePlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRequireIncludeDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tRequireIncludeDependency,\n\t\t\t\t\tnew RequireIncludeDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.requireInclude === false) return;\n\t\t\t\t\tconst warn = parserOptions.requireInclude === undefined;\n\n\t\t\t\t\tnew RequireIncludeDependencyParserPlugin(warn).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = RequireIncludePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EACLA,2BAA2B;EAC3BC;AACD,CAAC,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACrC,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAME,oCAAoC,GAAGF,OAAO,CAAC,wCAAwC,CAAC;;AAE9F;AACA;AACA;;AAEA,MAAMG,WAAW,GAAG,sBAAsB;AAE1C,MAAMC,oBAAoB,CAAC;EAC1B;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7BN,WAAW,EACX,CAACK,WAAW,EAAAE,IAAA,KAA8B;MAAA,IAA5B;QAAEC;MAAoB,CAAC,GAAAD,IAAA;MACpCF,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCZ,wBAAwB,EACxBU,mBACD,CAAC;MACDH,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClCZ,wBAAwB,EACxB,IAAIA,wBAAwB,CAACc,QAAQ,CAAC,CACvC,CAAC;;MAED;AACJ;AACA;AACA;AACA;MACI,MAAMC,OAAO,GAAGA,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IAAIA,aAAa,CAACC,cAAc,KAAK,KAAK,EAAE;QAC5C,MAAMC,IAAI,GAAGF,aAAa,CAACC,cAAc,KAAKE,SAAS;QAEvD,IAAInB,oCAAoC,CAACkB,IAAI,CAAC,CAACf,KAAK,CAACY,MAAM,CAAC;MAC7D,CAAC;MAEDN,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAACxB,2BAA2B,CAAC,CAChCW,GAAG,CAACN,WAAW,EAAEa,OAAO,CAAC;MAC3BL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAACvB,8BAA8B,CAAC,CACnCU,GAAG,CAACN,WAAW,EAAEa,OAAO,CAAC;IAC5B,CACD,CAAC;EACF;AACD;AACAO,MAAM,CAACC,OAAO,GAAGpB,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
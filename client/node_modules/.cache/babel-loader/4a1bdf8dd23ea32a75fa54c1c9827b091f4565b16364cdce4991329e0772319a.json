{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = messageParent;\nvar _types = require('../types');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst isWorkerThread = (() => {\n  try {\n    // `Require` here to support Node v10\n    const {\n      isMainThread,\n      parentPort\n    } = require('worker_threads');\n    return !isMainThread && parentPort != null;\n  } catch {\n    return false;\n  }\n})();\nfunction messageParent(message) {\n  let parentProcess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n  if (isWorkerThread) {\n    // `Require` here to support Node v10\n    const {\n      parentPort\n    } = require('worker_threads'); // ! is safe due to `null` check in `isWorkerThread`\n\n    parentPort.postMessage([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else if (typeof parentProcess.send === 'function') {\n    parentProcess.send([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","messageParent","_types","require","isWorkerThread","isMainThread","parentPort","message","parentProcess","arguments","length","undefined","process","postMessage","PARENT_MESSAGE_CUSTOM","send","Error"],"sources":["/home/hemanth/react-project/client/node_modules/jest-worker/build/workers/messageParent.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = messageParent;\n\nvar _types = require('../types');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst isWorkerThread = (() => {\n  try {\n    // `Require` here to support Node v10\n    const {isMainThread, parentPort} = require('worker_threads');\n\n    return !isMainThread && parentPort != null;\n  } catch {\n    return false;\n  }\n})();\n\nfunction messageParent(message, parentProcess = process) {\n  if (isWorkerThread) {\n    // `Require` here to support Node v10\n    const {parentPort} = require('worker_threads'); // ! is safe due to `null` check in `isWorkerThread`\n\n    parentPort.postMessage([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else if (typeof parentProcess.send === 'function') {\n    parentProcess.send([_types.PARENT_MESSAGE_CUSTOM, message]);\n  } else {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,aAAa;AAE/B,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG,CAAC,MAAM;EAC5B,IAAI;IACF;IACA,MAAM;MAACC,YAAY;MAAEC;IAAU,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC;IAE5D,OAAO,CAACE,YAAY,IAAIC,UAAU,IAAI,IAAI;EAC5C,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC,EAAE,CAAC;AAEJ,SAASL,aAAaA,CAACM,OAAO,EAA2B;EAAA,IAAzBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,OAAO;EACrD,IAAIR,cAAc,EAAE;IAClB;IACA,MAAM;MAACE;IAAU,CAAC,GAAGH,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;;IAEhDG,UAAU,CAACO,WAAW,CAAC,CAACX,MAAM,CAACY,qBAAqB,EAAEP,OAAO,CAAC,CAAC;EACjE,CAAC,MAAM,IAAI,OAAOC,aAAa,CAACO,IAAI,KAAK,UAAU,EAAE;IACnDP,aAAa,CAACO,IAAI,CAAC,CAACb,MAAM,CAACY,qBAAqB,EAAEP,OAAO,CAAC,CAAC;EAC7D,CAAC,MAAM;IACL,MAAM,IAAIS,KAAK,CAAC,kDAAkD,CAAC;EACrE;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}
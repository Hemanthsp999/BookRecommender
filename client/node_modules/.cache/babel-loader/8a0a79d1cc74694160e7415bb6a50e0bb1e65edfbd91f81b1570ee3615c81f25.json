{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource,\n  PrefixSource\n} = require(\"webpack-sources\");\nconst InitFragment = require(\"./InitFragment\");\nconst Template = require(\"./Template\");\nconst {\n  mergeRuntime\n} = require(\"./util/runtime\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst wrapInCondition = (condition, source) => {\n  if (typeof source === \"string\") {\n    return Template.asString([`if (${condition}) {`, Template.indent(source), \"}\", \"\"]);\n  } else {\n    return new ConcatSource(`if (${condition}) {\\n`, new PrefixSource(\"\\t\", source), \"}\\n\");\n  }\n};\n\n/**\n * @typedef {GenerateContext} Context\n */\nclass ConditionalInitFragment extends InitFragment {\n  /**\n   * @param {string|Source} content the source code that will be included as initialization code\n   * @param {number} stage category of initialization code (contribute to order)\n   * @param {number} position position in the category (contribute to order)\n   * @param {string} key unique key to avoid emitting the same initialization code twice\n   * @param {RuntimeSpec | boolean} runtimeCondition in which runtime this fragment should be executed\n   * @param {string|Source=} endContent the source code that will be included at the end of the module\n   */\n  constructor(content, stage, position, key) {\n    let runtimeCondition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let endContent = arguments.length > 5 ? arguments[5] : undefined;\n    super(content, stage, position, key, endContent);\n    this.runtimeCondition = runtimeCondition;\n  }\n\n  /**\n   * @param {Context} context context\n   * @returns {string|Source} the source code that will be included as initialization code\n   */\n  getContent(context) {\n    if (this.runtimeCondition === false || !this.content) return \"\";\n    if (this.runtimeCondition === true) return this.content;\n    const expr = context.runtimeTemplate.runtimeConditionExpression({\n      chunkGraph: context.chunkGraph,\n      runtimeRequirements: context.runtimeRequirements,\n      runtime: context.runtime,\n      runtimeCondition: this.runtimeCondition\n    });\n    if (expr === \"true\") return this.content;\n    return wrapInCondition(expr, this.content);\n  }\n\n  /**\n   * @param {Context} context context\n   * @returns {string|Source=} the source code that will be included at the end of the module\n   */\n  getEndContent(context) {\n    if (this.runtimeCondition === false || !this.endContent) return \"\";\n    if (this.runtimeCondition === true) return this.endContent;\n    const expr = context.runtimeTemplate.runtimeConditionExpression({\n      chunkGraph: context.chunkGraph,\n      runtimeRequirements: context.runtimeRequirements,\n      runtime: context.runtime,\n      runtimeCondition: this.runtimeCondition\n    });\n    if (expr === \"true\") return this.endContent;\n    return wrapInCondition(expr, this.endContent);\n  }\n  merge(other) {\n    if (this.runtimeCondition === true) return this;\n    if (other.runtimeCondition === true) return other;\n    if (this.runtimeCondition === false) return other;\n    if (other.runtimeCondition === false) return this;\n    const runtimeCondition = mergeRuntime(this.runtimeCondition, other.runtimeCondition);\n    return new ConditionalInitFragment(this.content, this.stage, this.position, this.key, runtimeCondition, this.endContent);\n  }\n}\nmodule.exports = ConditionalInitFragment;","map":{"version":3,"names":["ConcatSource","PrefixSource","require","InitFragment","Template","mergeRuntime","wrapInCondition","condition","source","asString","indent","ConditionalInitFragment","constructor","content","stage","position","key","runtimeCondition","arguments","length","undefined","endContent","getContent","context","expr","runtimeTemplate","runtimeConditionExpression","chunkGraph","runtimeRequirements","runtime","getEndContent","merge","other","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ConditionalInitFragment.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, PrefixSource } = require(\"webpack-sources\");\nconst InitFragment = require(\"./InitFragment\");\nconst Template = require(\"./Template\");\nconst { mergeRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst wrapInCondition = (condition, source) => {\n\tif (typeof source === \"string\") {\n\t\treturn Template.asString([\n\t\t\t`if (${condition}) {`,\n\t\t\tTemplate.indent(source),\n\t\t\t\"}\",\n\t\t\t\"\"\n\t\t]);\n\t} else {\n\t\treturn new ConcatSource(\n\t\t\t`if (${condition}) {\\n`,\n\t\t\tnew PrefixSource(\"\\t\", source),\n\t\t\t\"}\\n\"\n\t\t);\n\t}\n};\n\n/**\n * @typedef {GenerateContext} Context\n */\nclass ConditionalInitFragment extends InitFragment {\n\t/**\n\t * @param {string|Source} content the source code that will be included as initialization code\n\t * @param {number} stage category of initialization code (contribute to order)\n\t * @param {number} position position in the category (contribute to order)\n\t * @param {string} key unique key to avoid emitting the same initialization code twice\n\t * @param {RuntimeSpec | boolean} runtimeCondition in which runtime this fragment should be executed\n\t * @param {string|Source=} endContent the source code that will be included at the end of the module\n\t */\n\tconstructor(\n\t\tcontent,\n\t\tstage,\n\t\tposition,\n\t\tkey,\n\t\truntimeCondition = true,\n\t\tendContent\n\t) {\n\t\tsuper(content, stage, position, key, endContent);\n\t\tthis.runtimeCondition = runtimeCondition;\n\t}\n\n\t/**\n\t * @param {Context} context context\n\t * @returns {string|Source} the source code that will be included as initialization code\n\t */\n\tgetContent(context) {\n\t\tif (this.runtimeCondition === false || !this.content) return \"\";\n\t\tif (this.runtimeCondition === true) return this.content;\n\t\tconst expr = context.runtimeTemplate.runtimeConditionExpression({\n\t\t\tchunkGraph: context.chunkGraph,\n\t\t\truntimeRequirements: context.runtimeRequirements,\n\t\t\truntime: context.runtime,\n\t\t\truntimeCondition: this.runtimeCondition\n\t\t});\n\t\tif (expr === \"true\") return this.content;\n\t\treturn wrapInCondition(expr, this.content);\n\t}\n\n\t/**\n\t * @param {Context} context context\n\t * @returns {string|Source=} the source code that will be included at the end of the module\n\t */\n\tgetEndContent(context) {\n\t\tif (this.runtimeCondition === false || !this.endContent) return \"\";\n\t\tif (this.runtimeCondition === true) return this.endContent;\n\t\tconst expr = context.runtimeTemplate.runtimeConditionExpression({\n\t\t\tchunkGraph: context.chunkGraph,\n\t\t\truntimeRequirements: context.runtimeRequirements,\n\t\t\truntime: context.runtime,\n\t\t\truntimeCondition: this.runtimeCondition\n\t\t});\n\t\tif (expr === \"true\") return this.endContent;\n\t\treturn wrapInCondition(expr, this.endContent);\n\t}\n\n\tmerge(other) {\n\t\tif (this.runtimeCondition === true) return this;\n\t\tif (other.runtimeCondition === true) return other;\n\t\tif (this.runtimeCondition === false) return other;\n\t\tif (other.runtimeCondition === false) return this;\n\t\tconst runtimeCondition = mergeRuntime(\n\t\t\tthis.runtimeCondition,\n\t\t\tother.runtimeCondition\n\t\t);\n\t\treturn new ConditionalInitFragment(\n\t\t\tthis.content,\n\t\t\tthis.stage,\n\t\t\tthis.position,\n\t\t\tthis.key,\n\t\t\truntimeCondition,\n\t\t\tthis.endContent\n\t\t);\n\t}\n}\n\nmodule.exports = ConditionalInitFragment;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar util = require('util'),\n  net = require('net'),\n  tls = require('tls'),\n  url = require('url'),\n  driver = require('websocket-driver'),\n  API = require('./api'),\n  Event = require('./api/event');\nvar DEFAULT_PORTS = {\n    'http:': 80,\n    'https:': 443,\n    'ws:': 80,\n    'wss:': 443\n  },\n  SECURE_PROTOCOLS = ['https:', 'wss:'];\nvar Client = function (_url, protocols, options) {\n  options = options || {};\n  this.url = _url;\n  this._driver = driver.client(this.url, {\n    maxLength: options.maxLength,\n    protocols: protocols\n  });\n  ['open', 'error'].forEach(function (event) {\n    this._driver.on(event, function () {\n      self.headers = self._driver.headers;\n      self.statusCode = self._driver.statusCode;\n    });\n  }, this);\n  var proxy = options.proxy || {},\n    endpoint = url.parse(proxy.origin || this.url),\n    port = endpoint.port || DEFAULT_PORTS[endpoint.protocol],\n    secure = SECURE_PROTOCOLS.indexOf(endpoint.protocol) >= 0,\n    onConnect = function () {\n      self._onConnect();\n    },\n    netOptions = options.net || {},\n    originTLS = options.tls || {},\n    socketTLS = proxy.origin ? proxy.tls || {} : originTLS,\n    self = this;\n  netOptions.host = socketTLS.host = endpoint.hostname;\n  netOptions.port = socketTLS.port = port;\n  originTLS.ca = originTLS.ca || options.ca;\n  socketTLS.servername = socketTLS.servername || endpoint.hostname;\n  this._stream = secure ? tls.connect(socketTLS, onConnect) : net.connect(netOptions, onConnect);\n  if (proxy.origin) this._configureProxy(proxy, originTLS);\n  API.call(this, options);\n};\nutil.inherits(Client, API);\nClient.prototype._onConnect = function () {\n  var worker = this._proxy || this._driver;\n  worker.start();\n};\nClient.prototype._configureProxy = function (proxy, originTLS) {\n  var uri = url.parse(this.url),\n    secure = SECURE_PROTOCOLS.indexOf(uri.protocol) >= 0,\n    self = this,\n    name;\n  this._proxy = this._driver.proxy(proxy.origin);\n  if (proxy.headers) {\n    for (name in proxy.headers) this._proxy.setHeader(name, proxy.headers[name]);\n  }\n  this._proxy.pipe(this._stream, {\n    end: false\n  });\n  this._stream.pipe(this._proxy);\n  this._proxy.on('connect', function () {\n    if (secure) {\n      var options = {\n        socket: self._stream,\n        servername: uri.hostname\n      };\n      for (name in originTLS) options[name] = originTLS[name];\n      self._stream = tls.connect(options);\n      self._configureStream();\n    }\n    self._driver.io.pipe(self._stream);\n    self._stream.pipe(self._driver.io);\n    self._driver.start();\n  });\n  this._proxy.on('error', function (error) {\n    self._driver.emit('error', error);\n  });\n};\nmodule.exports = Client;","map":{"version":3,"names":["util","require","net","tls","url","driver","API","Event","DEFAULT_PORTS","SECURE_PROTOCOLS","Client","_url","protocols","options","_driver","client","maxLength","forEach","event","on","self","headers","statusCode","proxy","endpoint","parse","origin","port","protocol","secure","indexOf","onConnect","_onConnect","netOptions","originTLS","socketTLS","host","hostname","ca","servername","_stream","connect","_configureProxy","call","inherits","prototype","worker","_proxy","start","uri","name","setHeader","pipe","end","socket","_configureStream","io","error","emit","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/faye-websocket/lib/faye/websocket/client.js"],"sourcesContent":["'use strict';\n\nvar util   = require('util'),\n    net    = require('net'),\n    tls    = require('tls'),\n    url    = require('url'),\n    driver = require('websocket-driver'),\n    API    = require('./api'),\n    Event  = require('./api/event');\n\nvar DEFAULT_PORTS    = { 'http:': 80, 'https:': 443, 'ws:':80, 'wss:': 443 },\n    SECURE_PROTOCOLS = ['https:', 'wss:'];\n\nvar Client = function(_url, protocols, options) {\n  options = options || {};\n\n  this.url     = _url;\n  this._driver = driver.client(this.url, { maxLength: options.maxLength, protocols: protocols });\n\n  ['open', 'error'].forEach(function(event) {\n    this._driver.on(event, function() {\n      self.headers    = self._driver.headers;\n      self.statusCode = self._driver.statusCode;\n    });\n  }, this);\n\n  var proxy      = options.proxy || {},\n      endpoint   = url.parse(proxy.origin || this.url),\n      port       = endpoint.port || DEFAULT_PORTS[endpoint.protocol],\n      secure     = SECURE_PROTOCOLS.indexOf(endpoint.protocol) >= 0,\n      onConnect  = function() { self._onConnect() },\n      netOptions = options.net || {},\n      originTLS  = options.tls || {},\n      socketTLS  = proxy.origin ? (proxy.tls || {}) : originTLS,\n      self       = this;\n\n  netOptions.host = socketTLS.host = endpoint.hostname;\n  netOptions.port = socketTLS.port = port;\n\n  originTLS.ca = originTLS.ca || options.ca;\n  socketTLS.servername = socketTLS.servername || endpoint.hostname;\n\n  this._stream = secure\n               ? tls.connect(socketTLS, onConnect)\n               : net.connect(netOptions, onConnect);\n\n  if (proxy.origin) this._configureProxy(proxy, originTLS);\n\n  API.call(this, options);\n};\nutil.inherits(Client, API);\n\nClient.prototype._onConnect = function() {\n  var worker = this._proxy || this._driver;\n  worker.start();\n};\n\nClient.prototype._configureProxy = function(proxy, originTLS) {\n  var uri    = url.parse(this.url),\n      secure = SECURE_PROTOCOLS.indexOf(uri.protocol) >= 0,\n      self   = this,\n      name;\n\n  this._proxy = this._driver.proxy(proxy.origin);\n\n  if (proxy.headers) {\n    for (name in proxy.headers) this._proxy.setHeader(name, proxy.headers[name]);\n  }\n\n  this._proxy.pipe(this._stream, { end: false });\n  this._stream.pipe(this._proxy);\n\n  this._proxy.on('connect', function() {\n    if (secure) {\n      var options = { socket: self._stream, servername: uri.hostname };\n      for (name in originTLS) options[name] = originTLS[name];\n      self._stream = tls.connect(options);\n      self._configureStream();\n    }\n    self._driver.io.pipe(self._stream);\n    self._stream.pipe(self._driver.io);\n    self._driver.start();\n  });\n\n  this._proxy.on('error', function(error) {\n    self._driver.emit('error', error);\n  });\n};\n\nmodule.exports = Client;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
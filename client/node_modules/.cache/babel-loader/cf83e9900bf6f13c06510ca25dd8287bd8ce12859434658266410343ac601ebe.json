{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\nclass MapObjectSerializer {\n  /**\n   * @template K, V\n   * @param {Map<K, V>} obj map\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(obj, context) {\n    context.write(obj.size);\n    for (const key of obj.keys()) {\n      context.write(key);\n    }\n    for (const value of obj.values()) {\n      context.write(value);\n    }\n  }\n  /**\n   * @template K, V\n   * @param {ObjectDeserializerContext} context context\n   * @returns {Map<K, V>} map\n   */\n  deserialize(context) {\n    /** @type {number} */\n    let size = context.read();\n    /** @type {Map<K, V>} */\n    const map = new Map();\n    /** @type {K[]} */\n    const keys = [];\n    for (let i = 0; i < size; i++) {\n      keys.push(context.read());\n    }\n    for (let i = 0; i < size; i++) {\n      map.set(keys[i], context.read());\n    }\n    return map;\n  }\n}\nmodule.exports = MapObjectSerializer;","map":{"version":3,"names":["MapObjectSerializer","serialize","obj","context","write","size","key","keys","value","values","deserialize","read","map","Map","i","push","set","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/serialization/MapObjectSerializer.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass MapObjectSerializer {\n\t/**\n\t * @template K, V\n\t * @param {Map<K, V>} obj map\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(obj, context) {\n\t\tcontext.write(obj.size);\n\t\tfor (const key of obj.keys()) {\n\t\t\tcontext.write(key);\n\t\t}\n\t\tfor (const value of obj.values()) {\n\t\t\tcontext.write(value);\n\t\t}\n\t}\n\t/**\n\t * @template K, V\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {Map<K, V>} map\n\t */\n\tdeserialize(context) {\n\t\t/** @type {number} */\n\t\tlet size = context.read();\n\t\t/** @type {Map<K, V>} */\n\t\tconst map = new Map();\n\t\t/** @type {K[]} */\n\t\tconst keys = [];\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tkeys.push(context.read());\n\t\t}\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tmap.set(keys[i], context.read());\n\t\t}\n\t\treturn map;\n\t}\n}\n\nmodule.exports = MapObjectSerializer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEA,MAAMA,mBAAmB,CAAC;EACzB;AACD;AACA;AACA;AACA;EACCC,SAASA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACvBA,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC;IACvB,KAAK,MAAMC,GAAG,IAAIJ,GAAG,CAACK,IAAI,CAAC,CAAC,EAAE;MAC7BJ,OAAO,CAACC,KAAK,CAACE,GAAG,CAAC;IACnB;IACA,KAAK,MAAME,KAAK,IAAIN,GAAG,CAACO,MAAM,CAAC,CAAC,EAAE;MACjCN,OAAO,CAACC,KAAK,CAACI,KAAK,CAAC;IACrB;EACD;EACA;AACD;AACA;AACA;AACA;EACCE,WAAWA,CAACP,OAAO,EAAE;IACpB;IACA,IAAIE,IAAI,GAAGF,OAAO,CAACQ,IAAI,CAAC,CAAC;IACzB;IACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB;IACA,MAAMN,IAAI,GAAG,EAAE;IACf,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,EAAES,CAAC,EAAE,EAAE;MAC9BP,IAAI,CAACQ,IAAI,CAACZ,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;IAC1B;IACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,EAAES,CAAC,EAAE,EAAE;MAC9BF,GAAG,CAACI,GAAG,CAACT,IAAI,CAACO,CAAC,CAAC,EAAEX,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;IACjC;IACA,OAAOC,GAAG;EACX;AACD;AAEAK,MAAM,CAACC,OAAO,GAAGlB,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nexports.toString = function (type) {\n  switch (type) {\n    case 1:\n      return 'A';\n    case 10:\n      return 'NULL';\n    case 28:\n      return 'AAAA';\n    case 18:\n      return 'AFSDB';\n    case 42:\n      return 'APL';\n    case 257:\n      return 'CAA';\n    case 60:\n      return 'CDNSKEY';\n    case 59:\n      return 'CDS';\n    case 37:\n      return 'CERT';\n    case 5:\n      return 'CNAME';\n    case 49:\n      return 'DHCID';\n    case 32769:\n      return 'DLV';\n    case 39:\n      return 'DNAME';\n    case 48:\n      return 'DNSKEY';\n    case 43:\n      return 'DS';\n    case 55:\n      return 'HIP';\n    case 13:\n      return 'HINFO';\n    case 45:\n      return 'IPSECKEY';\n    case 25:\n      return 'KEY';\n    case 36:\n      return 'KX';\n    case 29:\n      return 'LOC';\n    case 15:\n      return 'MX';\n    case 35:\n      return 'NAPTR';\n    case 2:\n      return 'NS';\n    case 47:\n      return 'NSEC';\n    case 50:\n      return 'NSEC3';\n    case 51:\n      return 'NSEC3PARAM';\n    case 12:\n      return 'PTR';\n    case 46:\n      return 'RRSIG';\n    case 17:\n      return 'RP';\n    case 24:\n      return 'SIG';\n    case 6:\n      return 'SOA';\n    case 99:\n      return 'SPF';\n    case 33:\n      return 'SRV';\n    case 44:\n      return 'SSHFP';\n    case 32768:\n      return 'TA';\n    case 249:\n      return 'TKEY';\n    case 52:\n      return 'TLSA';\n    case 250:\n      return 'TSIG';\n    case 16:\n      return 'TXT';\n    case 252:\n      return 'AXFR';\n    case 251:\n      return 'IXFR';\n    case 41:\n      return 'OPT';\n    case 255:\n      return 'ANY';\n  }\n  return 'UNKNOWN_' + type;\n};\nexports.toType = function (name) {\n  switch (name.toUpperCase()) {\n    case 'A':\n      return 1;\n    case 'NULL':\n      return 10;\n    case 'AAAA':\n      return 28;\n    case 'AFSDB':\n      return 18;\n    case 'APL':\n      return 42;\n    case 'CAA':\n      return 257;\n    case 'CDNSKEY':\n      return 60;\n    case 'CDS':\n      return 59;\n    case 'CERT':\n      return 37;\n    case 'CNAME':\n      return 5;\n    case 'DHCID':\n      return 49;\n    case 'DLV':\n      return 32769;\n    case 'DNAME':\n      return 39;\n    case 'DNSKEY':\n      return 48;\n    case 'DS':\n      return 43;\n    case 'HIP':\n      return 55;\n    case 'HINFO':\n      return 13;\n    case 'IPSECKEY':\n      return 45;\n    case 'KEY':\n      return 25;\n    case 'KX':\n      return 36;\n    case 'LOC':\n      return 29;\n    case 'MX':\n      return 15;\n    case 'NAPTR':\n      return 35;\n    case 'NS':\n      return 2;\n    case 'NSEC':\n      return 47;\n    case 'NSEC3':\n      return 50;\n    case 'NSEC3PARAM':\n      return 51;\n    case 'PTR':\n      return 12;\n    case 'RRSIG':\n      return 46;\n    case 'RP':\n      return 17;\n    case 'SIG':\n      return 24;\n    case 'SOA':\n      return 6;\n    case 'SPF':\n      return 99;\n    case 'SRV':\n      return 33;\n    case 'SSHFP':\n      return 44;\n    case 'TA':\n      return 32768;\n    case 'TKEY':\n      return 249;\n    case 'TLSA':\n      return 52;\n    case 'TSIG':\n      return 250;\n    case 'TXT':\n      return 16;\n    case 'AXFR':\n      return 252;\n    case 'IXFR':\n      return 251;\n    case 'OPT':\n      return 41;\n    case 'ANY':\n      return 255;\n    case '*':\n      return 255;\n  }\n  if (name.toUpperCase().startsWith('UNKNOWN_')) return parseInt(name.slice(8));\n  return 0;\n};","map":{"version":3,"names":["exports","toString","type","toType","name","toUpperCase","startsWith","parseInt","slice"],"sources":["/home/hemanth/react-project/client/node_modules/dns-packet/types.js"],"sourcesContent":["'use strict'\n\nexports.toString = function (type) {\n  switch (type) {\n    case 1: return 'A'\n    case 10: return 'NULL'\n    case 28: return 'AAAA'\n    case 18: return 'AFSDB'\n    case 42: return 'APL'\n    case 257: return 'CAA'\n    case 60: return 'CDNSKEY'\n    case 59: return 'CDS'\n    case 37: return 'CERT'\n    case 5: return 'CNAME'\n    case 49: return 'DHCID'\n    case 32769: return 'DLV'\n    case 39: return 'DNAME'\n    case 48: return 'DNSKEY'\n    case 43: return 'DS'\n    case 55: return 'HIP'\n    case 13: return 'HINFO'\n    case 45: return 'IPSECKEY'\n    case 25: return 'KEY'\n    case 36: return 'KX'\n    case 29: return 'LOC'\n    case 15: return 'MX'\n    case 35: return 'NAPTR'\n    case 2: return 'NS'\n    case 47: return 'NSEC'\n    case 50: return 'NSEC3'\n    case 51: return 'NSEC3PARAM'\n    case 12: return 'PTR'\n    case 46: return 'RRSIG'\n    case 17: return 'RP'\n    case 24: return 'SIG'\n    case 6: return 'SOA'\n    case 99: return 'SPF'\n    case 33: return 'SRV'\n    case 44: return 'SSHFP'\n    case 32768: return 'TA'\n    case 249: return 'TKEY'\n    case 52: return 'TLSA'\n    case 250: return 'TSIG'\n    case 16: return 'TXT'\n    case 252: return 'AXFR'\n    case 251: return 'IXFR'\n    case 41: return 'OPT'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + type\n}\n\nexports.toType = function (name) {\n  switch (name.toUpperCase()) {\n    case 'A': return 1\n    case 'NULL': return 10\n    case 'AAAA': return 28\n    case 'AFSDB': return 18\n    case 'APL': return 42\n    case 'CAA': return 257\n    case 'CDNSKEY': return 60\n    case 'CDS': return 59\n    case 'CERT': return 37\n    case 'CNAME': return 5\n    case 'DHCID': return 49\n    case 'DLV': return 32769\n    case 'DNAME': return 39\n    case 'DNSKEY': return 48\n    case 'DS': return 43\n    case 'HIP': return 55\n    case 'HINFO': return 13\n    case 'IPSECKEY': return 45\n    case 'KEY': return 25\n    case 'KX': return 36\n    case 'LOC': return 29\n    case 'MX': return 15\n    case 'NAPTR': return 35\n    case 'NS': return 2\n    case 'NSEC': return 47\n    case 'NSEC3': return 50\n    case 'NSEC3PARAM': return 51\n    case 'PTR': return 12\n    case 'RRSIG': return 46\n    case 'RP': return 17\n    case 'SIG': return 24\n    case 'SOA': return 6\n    case 'SPF': return 99\n    case 'SRV': return 33\n    case 'SSHFP': return 44\n    case 'TA': return 32768\n    case 'TKEY': return 249\n    case 'TLSA': return 52\n    case 'TSIG': return 250\n    case 'TXT': return 16\n    case 'AXFR': return 252\n    case 'IXFR': return 251\n    case 'OPT': return 41\n    case 'ANY': return 255\n    case '*': return 255\n  }\n  if (name.toUpperCase().startsWith('UNKNOWN_')) return parseInt(name.slice(8))\n  return 0\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
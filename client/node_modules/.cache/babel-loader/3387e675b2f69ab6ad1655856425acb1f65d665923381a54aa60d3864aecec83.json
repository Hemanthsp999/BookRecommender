{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  register\n} = require(\"./serialization\");\nconst Position = /** @type {TODO} */require(\"acorn\").Position;\nconst SourceLocation = require(\"acorn\").SourceLocation;\nconst ValidationError = require(\"schema-utils/dist/ValidationError\").default;\nconst {\n  CachedSource,\n  ConcatSource,\n  OriginalSource,\n  PrefixSource,\n  RawSource,\n  ReplaceSource,\n  SourceMapSource\n} = require(\"webpack-sources\");\n\n/** @typedef {import(\"acorn\").Position} Position */\n/** @typedef {import(\"../Dependency\").RealDependencyLocation} RealDependencyLocation */\n/** @typedef {import(\"../Dependency\").SourcePosition} SourcePosition */\n/** @typedef {import(\"./serialization\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {ObjectSerializerContext & { writeLazy?: (any) => void }} WebpackObjectSerializerContext */\n\nconst CURRENT_MODULE = \"webpack/lib/util/registerExternalSerializer\";\nregister(CachedSource, CURRENT_MODULE, \"webpack-sources/CachedSource\", new class CachedSourceSerializer {\n  /**\n   * @param {CachedSource} source the cached source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref) {\n    let {\n      write,\n      writeLazy\n    } = _ref;\n    if (writeLazy) {\n      writeLazy(source.originalLazy());\n    } else {\n      write(source.original());\n    }\n    write(source.getCachedData());\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {CachedSource} cached source\n   */\n  deserialize(_ref2) {\n    let {\n      read\n    } = _ref2;\n    const source = read();\n    const cachedData = read();\n    return new CachedSource(source, cachedData);\n  }\n}());\nregister(RawSource, CURRENT_MODULE, \"webpack-sources/RawSource\", new class RawSourceSerializer {\n  /**\n   * @param {RawSource} source the raw source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref3) {\n    let {\n      write\n    } = _ref3;\n    write(source.buffer());\n    write(!source.isBuffer());\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RawSource} raw source\n   */\n  deserialize(_ref4) {\n    let {\n      read\n    } = _ref4;\n    const source = read();\n    const convertToString = read();\n    return new RawSource(source, convertToString);\n  }\n}());\nregister(ConcatSource, CURRENT_MODULE, \"webpack-sources/ConcatSource\", new class ConcatSourceSerializer {\n  /**\n   * @param {ConcatSource} source the concat source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref5) {\n    let {\n      write\n    } = _ref5;\n    write(source.getChildren());\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {ConcatSource} concat source\n   */\n  deserialize(_ref6) {\n    let {\n      read\n    } = _ref6;\n    const source = new ConcatSource();\n    source.addAllSkipOptimizing(read());\n    return source;\n  }\n}());\nregister(PrefixSource, CURRENT_MODULE, \"webpack-sources/PrefixSource\", new class PrefixSourceSerializer {\n  /**\n   * @param {PrefixSource} source the prefix source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref7) {\n    let {\n      write\n    } = _ref7;\n    write(source.getPrefix());\n    write(source.original());\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {PrefixSource} prefix source\n   */\n  deserialize(_ref8) {\n    let {\n      read\n    } = _ref8;\n    return new PrefixSource(read(), read());\n  }\n}());\nregister(ReplaceSource, CURRENT_MODULE, \"webpack-sources/ReplaceSource\", new class ReplaceSourceSerializer {\n  /**\n   * @param {ReplaceSource} source the replace source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref9) {\n    let {\n      write\n    } = _ref9;\n    write(source.original());\n    write(source.getName());\n    const replacements = source.getReplacements();\n    write(replacements.length);\n    for (const repl of replacements) {\n      write(repl.start);\n      write(repl.end);\n    }\n    for (const repl of replacements) {\n      write(repl.content);\n      write(repl.name);\n    }\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {ReplaceSource} replace source\n   */\n  deserialize(_ref10) {\n    let {\n      read\n    } = _ref10;\n    const source = new ReplaceSource(read(), read());\n    const len = read();\n    const startEndBuffer = [];\n    for (let i = 0; i < len; i++) {\n      startEndBuffer.push(read(), read());\n    }\n    let j = 0;\n    for (let i = 0; i < len; i++) {\n      source.replace(startEndBuffer[j++], startEndBuffer[j++], read(), read());\n    }\n    return source;\n  }\n}());\nregister(OriginalSource, CURRENT_MODULE, \"webpack-sources/OriginalSource\", new class OriginalSourceSerializer {\n  /**\n   * @param {OriginalSource} source the original source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref11) {\n    let {\n      write\n    } = _ref11;\n    write(source.buffer());\n    write(source.getName());\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {OriginalSource} original source\n   */\n  deserialize(_ref12) {\n    let {\n      read\n    } = _ref12;\n    const buffer = read();\n    const name = read();\n    return new OriginalSource(buffer, name);\n  }\n}());\nregister(SourceLocation, CURRENT_MODULE, \"acorn/SourceLocation\", new class SourceLocationSerializer {\n  /**\n   * @param {SourceLocation} loc the location to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(loc, _ref13) {\n    let {\n      write\n    } = _ref13;\n    write(loc.start.line);\n    write(loc.start.column);\n    write(loc.end.line);\n    write(loc.end.column);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RealDependencyLocation} location\n   */\n  deserialize(_ref14) {\n    let {\n      read\n    } = _ref14;\n    return {\n      start: {\n        line: read(),\n        column: read()\n      },\n      end: {\n        line: read(),\n        column: read()\n      }\n    };\n  }\n}());\nregister(Position, CURRENT_MODULE, \"acorn/Position\", new class PositionSerializer {\n  /**\n   * @param {Position} pos the position to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(pos, _ref15) {\n    let {\n      write\n    } = _ref15;\n    write(pos.line);\n    write(pos.column);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {SourcePosition} position\n   */\n  deserialize(_ref16) {\n    let {\n      read\n    } = _ref16;\n    return {\n      line: read(),\n      column: read()\n    };\n  }\n}());\nregister(SourceMapSource, CURRENT_MODULE, \"webpack-sources/SourceMapSource\", new class SourceMapSourceSerializer {\n  /**\n   * @param {SourceMapSource} source the source map source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(source, _ref17) {\n    let {\n      write\n    } = _ref17;\n    write(source.getArgsAsBuffers());\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {SourceMapSource} source source map source\n   */\n  deserialize(_ref18) {\n    let {\n      read\n    } = _ref18;\n    // @ts-expect-error\n    return new SourceMapSource(...read());\n  }\n}());\nregister(ValidationError, CURRENT_MODULE, \"schema-utils/ValidationError\", new class ValidationErrorSerializer {\n  // TODO error should be ValidationError, but this fails the type checks\n  /**\n   * @param {TODO} error the source map source to be serialized\n   * @param {WebpackObjectSerializerContext} context context\n   * @returns {void}\n   */\n  serialize(error, _ref19) {\n    let {\n      write\n    } = _ref19;\n    write(error.errors);\n    write(error.schema);\n    write({\n      name: error.headerName,\n      baseDataPath: error.baseDataPath,\n      postFormatter: error.postFormatter\n    });\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {TODO} error\n   */\n  deserialize(_ref20) {\n    let {\n      read\n    } = _ref20;\n    return new ValidationError(read(), read(), read());\n  }\n}());","map":{"version":3,"names":["register","require","Position","SourceLocation","ValidationError","default","CachedSource","ConcatSource","OriginalSource","PrefixSource","RawSource","ReplaceSource","SourceMapSource","CURRENT_MODULE","CachedSourceSerializer","serialize","source","_ref","write","writeLazy","originalLazy","original","getCachedData","deserialize","_ref2","read","cachedData","RawSourceSerializer","_ref3","buffer","isBuffer","_ref4","convertToString","ConcatSourceSerializer","_ref5","getChildren","_ref6","addAllSkipOptimizing","PrefixSourceSerializer","_ref7","getPrefix","_ref8","ReplaceSourceSerializer","_ref9","getName","replacements","getReplacements","length","repl","start","end","content","name","_ref10","len","startEndBuffer","i","push","j","replace","OriginalSourceSerializer","_ref11","_ref12","SourceLocationSerializer","loc","_ref13","line","column","_ref14","PositionSerializer","pos","_ref15","_ref16","SourceMapSourceSerializer","_ref17","getArgsAsBuffers","_ref18","ValidationErrorSerializer","error","_ref19","errors","schema","headerName","baseDataPath","postFormatter","_ref20"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/util/registerExternalSerializer.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { register } = require(\"./serialization\");\n\nconst Position = /** @type {TODO} */ (require(\"acorn\")).Position;\nconst SourceLocation = require(\"acorn\").SourceLocation;\nconst ValidationError = require(\"schema-utils/dist/ValidationError\").default;\nconst {\n\tCachedSource,\n\tConcatSource,\n\tOriginalSource,\n\tPrefixSource,\n\tRawSource,\n\tReplaceSource,\n\tSourceMapSource\n} = require(\"webpack-sources\");\n\n/** @typedef {import(\"acorn\").Position} Position */\n/** @typedef {import(\"../Dependency\").RealDependencyLocation} RealDependencyLocation */\n/** @typedef {import(\"../Dependency\").SourcePosition} SourcePosition */\n/** @typedef {import(\"./serialization\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {ObjectSerializerContext & { writeLazy?: (any) => void }} WebpackObjectSerializerContext */\n\nconst CURRENT_MODULE = \"webpack/lib/util/registerExternalSerializer\";\n\nregister(\n\tCachedSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/CachedSource\",\n\tnew (class CachedSourceSerializer {\n\t\t/**\n\t\t * @param {CachedSource} source the cached source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write, writeLazy }) {\n\t\t\tif (writeLazy) {\n\t\t\t\twriteLazy(source.originalLazy());\n\t\t\t} else {\n\t\t\t\twrite(source.original());\n\t\t\t}\n\t\t\twrite(source.getCachedData());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {CachedSource} cached source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = read();\n\t\t\tconst cachedData = read();\n\t\t\treturn new CachedSource(source, cachedData);\n\t\t}\n\t})()\n);\n\nregister(\n\tRawSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/RawSource\",\n\tnew (class RawSourceSerializer {\n\t\t/**\n\t\t * @param {RawSource} source the raw source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.buffer());\n\t\t\twrite(!source.isBuffer());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {RawSource} raw source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = read();\n\t\t\tconst convertToString = read();\n\t\t\treturn new RawSource(source, convertToString);\n\t\t}\n\t})()\n);\n\nregister(\n\tConcatSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/ConcatSource\",\n\tnew (class ConcatSourceSerializer {\n\t\t/**\n\t\t * @param {ConcatSource} source the concat source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.getChildren());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {ConcatSource} concat source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = new ConcatSource();\n\t\t\tsource.addAllSkipOptimizing(read());\n\t\t\treturn source;\n\t\t}\n\t})()\n);\n\nregister(\n\tPrefixSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/PrefixSource\",\n\tnew (class PrefixSourceSerializer {\n\t\t/**\n\t\t * @param {PrefixSource} source the prefix source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.getPrefix());\n\t\t\twrite(source.original());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {PrefixSource} prefix source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn new PrefixSource(read(), read());\n\t\t}\n\t})()\n);\n\nregister(\n\tReplaceSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/ReplaceSource\",\n\tnew (class ReplaceSourceSerializer {\n\t\t/**\n\t\t * @param {ReplaceSource} source the replace source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.original());\n\t\t\twrite(source.getName());\n\t\t\tconst replacements = source.getReplacements();\n\t\t\twrite(replacements.length);\n\t\t\tfor (const repl of replacements) {\n\t\t\t\twrite(repl.start);\n\t\t\t\twrite(repl.end);\n\t\t\t}\n\t\t\tfor (const repl of replacements) {\n\t\t\t\twrite(repl.content);\n\t\t\t\twrite(repl.name);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {ReplaceSource} replace source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst source = new ReplaceSource(read(), read());\n\t\t\tconst len = read();\n\t\t\tconst startEndBuffer = [];\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tstartEndBuffer.push(read(), read());\n\t\t\t}\n\t\t\tlet j = 0;\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tsource.replace(\n\t\t\t\t\tstartEndBuffer[j++],\n\t\t\t\t\tstartEndBuffer[j++],\n\t\t\t\t\tread(),\n\t\t\t\t\tread()\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn source;\n\t\t}\n\t})()\n);\n\nregister(\n\tOriginalSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/OriginalSource\",\n\tnew (class OriginalSourceSerializer {\n\t\t/**\n\t\t * @param {OriginalSource} source the original source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.buffer());\n\t\t\twrite(source.getName());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {OriginalSource} original source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\tconst buffer = read();\n\t\t\tconst name = read();\n\t\t\treturn new OriginalSource(buffer, name);\n\t\t}\n\t})()\n);\n\nregister(\n\tSourceLocation,\n\tCURRENT_MODULE,\n\t\"acorn/SourceLocation\",\n\tnew (class SourceLocationSerializer {\n\t\t/**\n\t\t * @param {SourceLocation} loc the location to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(loc, { write }) {\n\t\t\twrite(loc.start.line);\n\t\t\twrite(loc.start.column);\n\t\t\twrite(loc.end.line);\n\t\t\twrite(loc.end.column);\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {RealDependencyLocation} location\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn {\n\t\t\t\tstart: {\n\t\t\t\t\tline: read(),\n\t\t\t\t\tcolumn: read()\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tline: read(),\n\t\t\t\t\tcolumn: read()\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t})()\n);\n\nregister(\n\tPosition,\n\tCURRENT_MODULE,\n\t\"acorn/Position\",\n\tnew (class PositionSerializer {\n\t\t/**\n\t\t * @param {Position} pos the position to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(pos, { write }) {\n\t\t\twrite(pos.line);\n\t\t\twrite(pos.column);\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {SourcePosition} position\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn {\n\t\t\t\tline: read(),\n\t\t\t\tcolumn: read()\n\t\t\t};\n\t\t}\n\t})()\n);\n\nregister(\n\tSourceMapSource,\n\tCURRENT_MODULE,\n\t\"webpack-sources/SourceMapSource\",\n\tnew (class SourceMapSourceSerializer {\n\t\t/**\n\t\t * @param {SourceMapSource} source the source map source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(source, { write }) {\n\t\t\twrite(source.getArgsAsBuffers());\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {SourceMapSource} source source map source\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\t// @ts-expect-error\n\t\t\treturn new SourceMapSource(...read());\n\t\t}\n\t})()\n);\n\nregister(\n\tValidationError,\n\tCURRENT_MODULE,\n\t\"schema-utils/ValidationError\",\n\tnew (class ValidationErrorSerializer {\n\t\t// TODO error should be ValidationError, but this fails the type checks\n\t\t/**\n\t\t * @param {TODO} error the source map source to be serialized\n\t\t * @param {WebpackObjectSerializerContext} context context\n\t\t * @returns {void}\n\t\t */\n\t\tserialize(error, { write }) {\n\t\t\twrite(error.errors);\n\t\t\twrite(error.schema);\n\t\t\twrite({\n\t\t\t\tname: error.headerName,\n\t\t\t\tbaseDataPath: error.baseDataPath,\n\t\t\t\tpostFormatter: error.postFormatter\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {ObjectDeserializerContext} context context\n\t\t * @returns {TODO} error\n\t\t */\n\t\tdeserialize({ read }) {\n\t\t\treturn new ValidationError(read(), read(), read());\n\t\t}\n\t})()\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Parser = require(\"../Parser\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n/** @typedef {[number, number]} Range */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY = /^(-\\w+-)?animation(-name)?$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n  // Remove extra spaces and newlines:\n  // `url(\"im\\\n  // g.png\")`\n  if (isString) {\n    str = str.replace(STRING_MULTILINE, \"\");\n  }\n  str = str\n  // Remove unnecessary spaces from `url(\"   img.png\t \")`\n  .replace(TRIM_WHITE_SPACES, \"\")\n  // Unescape\n  .replace(UNESCAPE, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n    } else {\n      return match[1];\n    }\n  });\n  if (/^data:/i.test(str)) {\n    return str;\n  }\n  if (str.includes(\"%\")) {\n    // Convert `url('%2E/img.png')` -> `url('./img.png')`\n    try {\n      str = decodeURIComponent(str);\n    } catch (error) {\n      // Ignore\n    }\n  }\n  return str;\n};\nclass LocConverter {\n  /**\n   * @param {string} input input\n   */\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n\n  /**\n   * @param {number} pos position\n   * @returns {LocConverter} location converter\n   */\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n        let i = str.lastIndexOf(\"\\n\");\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n        this.column = pos - i;\n      }\n      this.pos = pos;\n    }\n    return this;\n  }\n}\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_BLOCK = 1;\nconst CSS_MODE_IN_AT_IMPORT = 2;\nconst CSS_MODE_AT_IMPORT_INVALID = 3;\nconst CSS_MODE_AT_NAMESPACE_INVALID = 4;\nclass CssParser extends Parser {\n  constructor() {\n    let {\n      allowModeSwitch = true,\n      defaultMode = \"global\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.allowModeSwitch = allowModeSwitch;\n    this.defaultMode = defaultMode;\n  }\n\n  /**\n   * @param {ParserState} state parser state\n   * @param {string} message warning message\n   * @param {LocConverter} locConverter location converter\n   * @param {number} start start offset\n   * @param {number} end end offset\n   */\n  _emitWarning(state, message, locConverter, start, end) {\n    const {\n      line: sl,\n      column: sc\n    } = locConverter.get(start);\n    const {\n      line: el,\n      column: ec\n    } = locConverter.get(end);\n    state.current.addWarning(new ModuleDependencyWarning(state.module, new WebpackError(message), {\n      start: {\n        line: sl,\n        column: sc\n      },\n      end: {\n        line: el,\n        column: ec\n      }\n    }));\n  }\n\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n    if (source[0] === \"\\ufeff\") {\n      source = source.slice(1);\n    }\n    const module = state.module;\n    const locConverter = new LocConverter(source);\n    /** @type {Set<string>}*/\n    const declaredCssVariables = new Set();\n    /** @type {number} */\n    let scope = CSS_MODE_TOP_LEVEL;\n    /** @type {number} */\n    let blockNestingLevel = 0;\n    /** @type {boolean} */\n    let allowImportAtRule = true;\n    /** @type {\"local\" | \"global\" | undefined} */\n    let modeData = undefined;\n    /** @type {[number, number] | undefined} */\n    let lastIdentifier = undefined;\n    /** @type [string, number, number][] */\n    let balanced = [];\n    /** @type {undefined | { start: number, url?: string, urlStart?: number, urlEnd?: number, layer?: string, layerStart?: number, layerEnd?: number, supports?: string, supportsStart?: number, supportsEnd?: number, inSupports?:boolean, media?: string  }} */\n    let importData = undefined;\n    /** @type {boolean} */\n    let inAnimationProperty = false;\n    /** @type {boolean} */\n    let isNextRulePrelude = true;\n\n    /**\n     * @param {string} input input\n     * @param {number} pos position\n     * @returns {boolean} true, when next is nested syntax\n     */\n    const isNextNestedSyntax = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      if (input[pos] === \"}\") {\n        return false;\n      }\n\n      // According spec only identifier can be used as a property name\n      const isIdentifier = walkCssTokens.isIdentStartCodePoint(input.charCodeAt(pos));\n      return !isIdentifier;\n    };\n    /**\n     * @returns {boolean} true, when in local scope\n     */\n    const isLocalMode = () => modeData === \"local\" || this.defaultMode === \"local\" && modeData === undefined;\n    /**\n     * @param {string} chars characters\n     * @returns {(input: string, pos: number) => number} function to eat characters\n     */\n    const eatUntil = chars => {\n      const charCodes = Array.from({\n        length: chars.length\n      }, (_, i) => chars.charCodeAt(i));\n      const arr = Array.from({\n        length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1\n      }, () => false);\n      charCodes.forEach(cc => arr[cc] = true);\n      return (input, pos) => {\n        for (;;) {\n          const cc = input.charCodeAt(pos);\n          if (cc < arr.length && arr[cc]) {\n            return pos;\n          }\n          pos++;\n          if (pos === input.length) return pos;\n        }\n      };\n    };\n    /**\n     * @param {string} input input\n     * @param {number} pos start position\n     * @param {(input: string, pos: number) => number} eater eater\n     * @returns {[number,string]} new position and text\n     */\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n        const newPos = eater(input, pos);\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n        if (pos === input.length) break;\n      }\n      return [pos, text.trimEnd()];\n    };\n    const eatExportName = eatUntil(\":};/\");\n    const eatExportValue = eatUntil(\"};/\");\n    /**\n     * @param {string} input input\n     * @param {number} pos start position\n     * @returns {number} position after parse\n     */\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n      if (cc !== CC_LEFT_CURLY) {\n        this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`, locConverter, pos, pos);\n        return pos;\n      }\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`, locConverter, start, pos);\n          return pos;\n        }\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`, locConverter, start, pos);\n          return pos;\n        }\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n      pos++;\n      if (pos === input.length) return pos;\n      pos = walkCssTokens.eatWhiteLine(input, pos);\n      return pos;\n    };\n    const eatPropertyName = eatUntil(\":{};\");\n    /**\n     * @param {string} input input\n     * @param {number} pos name start position\n     * @param {number} end name end position\n     * @returns {number} position after handling\n     */\n    const processLocalDeclaration = (input, pos, end) => {\n      modeData = undefined;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return end;\n      pos = propertyNameEnd + 1;\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (!propertyName.startsWith(\"--\") && OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)) {\n        inAnimationProperty = true;\n      }\n      return pos;\n    };\n    /**\n     * @param {string} input input\n     */\n    const processDeclarationValueDone = input => {\n      if (inAnimationProperty && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n        const dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        lastIdentifier = undefined;\n      }\n    };\n    const eatKeyframes = eatUntil(\"{};/\");\n    const eatNameInVar = eatUntil(\",)};/\");\n    walkCssTokens(source, {\n      isSelector: () => {\n        return isNextRulePrelude;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        let value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              // Do not parse URLs in `supports(...)`\n              if (importData.inSupports) {\n                break;\n              }\n              if (importData.url) {\n                this._emitWarning(state, `Duplicate of 'url(...)' in '${input.slice(importData.start, end)}'`, locConverter, start, end);\n                break;\n              }\n              importData.url = value;\n              importData.urlStart = start;\n              importData.urlEnd = end;\n              break;\n            }\n          // Do not parse URLs in import between rules\n          case CSS_MODE_AT_NAMESPACE_INVALID:\n          case CSS_MODE_AT_IMPORT_INVALID:\n            {\n              break;\n            }\n          case CSS_MODE_IN_BLOCK:\n            {\n              // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n              if (value.length === 0) {\n                break;\n              }\n              const dep = new CssUrlDependency(value, [start, end], \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              break;\n            }\n        }\n        return end;\n      },\n      string: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              const insideURLFunction = balanced[balanced.length - 1] && balanced[balanced.length - 1][0] === \"url\";\n\n              // Do not parse URLs in `supports(...)` and other strings if we already have a URL\n              if (importData.inSupports || !insideURLFunction && importData.url) {\n                break;\n              }\n              if (insideURLFunction && importData.url) {\n                this._emitWarning(state, `Duplicate of 'url(...)' in '${input.slice(importData.start, end)}'`, locConverter, start, end);\n                break;\n              }\n              importData.url = normalizeUrl(input.slice(start + 1, end - 1), true);\n              if (!insideURLFunction) {\n                importData.urlStart = start;\n                importData.urlEnd = end;\n              }\n              break;\n            }\n          case CSS_MODE_IN_BLOCK:\n            {\n              // TODO move escaped parsing to tokenizer\n              const last = balanced[balanced.length - 1];\n              if (last && (last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\" || IMAGE_SET_FUNCTION.test(last[0].replace(/\\\\/g, \"\")))) {\n                let value = normalizeUrl(input.slice(start + 1, end - 1), true);\n\n                // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n                if (value.length === 0) {\n                  break;\n                }\n                const isUrl = last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\";\n                const dep = new CssUrlDependency(value, [start, end], isUrl ? \"string\" : \"url\");\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                module.addCodeGenerationDependency(dep);\n              }\n            }\n        }\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end).toLowerCase();\n        if (name === \"@namespace\") {\n          scope = CSS_MODE_AT_NAMESPACE_INVALID;\n          this._emitWarning(state, \"'@namespace' is not supported in bundled CSS\", locConverter, start, end);\n          return end;\n        } else if (name === \"@import\") {\n          if (!allowImportAtRule) {\n            scope = CSS_MODE_AT_IMPORT_INVALID;\n            this._emitWarning(state, \"Any '@import' rules must precede all other rules\", locConverter, start, end);\n            return end;\n          }\n          scope = CSS_MODE_IN_AT_IMPORT;\n          importData = {\n            start\n          };\n        } else if (this.allowModeSwitch && OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)) {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const [newPos, name] = eatText(input, pos, eatKeyframes);\n          if (newPos === input.length) return newPos;\n          if (input.charCodeAt(newPos) !== CC_LEFT_CURLY) {\n            this._emitWarning(state, `Unexpected '${input[newPos]}' at ${newPos} during parsing of @keyframes (expected '{')`, locConverter, start, end);\n            return newPos;\n          }\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(newPos);\n          const dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          pos = newPos;\n          return pos + 1;\n        } else if (this.allowModeSwitch && name === \"@property\") {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const propertyNameStart = pos;\n          const [propertyNameEnd, propertyName] = eatText(input, pos, eatKeyframes);\n          if (propertyNameEnd === input.length) return propertyNameEnd;\n          if (!propertyName.startsWith(\"--\")) return propertyNameEnd;\n          if (input.charCodeAt(propertyNameEnd) !== CC_LEFT_CURLY) {\n            this._emitWarning(state, `Unexpected '${input[propertyNameEnd]}' at ${propertyNameEnd} during parsing of @property (expected '{')`, locConverter, start, end);\n            return propertyNameEnd;\n          }\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(propertyNameEnd);\n          const name = propertyName.slice(2);\n          const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          declaredCssVariables.add(name);\n          pos = propertyNameEnd;\n          return pos + 1;\n        } else if (name === \"@media\" || name === \"@supports\" || name === \"@layer\" || name === \"@container\") {\n          modeData = isLocalMode() ? \"local\" : \"global\";\n          isNextRulePrelude = true;\n          return end;\n        } else if (this.allowModeSwitch) {\n          modeData = \"global\";\n          isNextRulePrelude = false;\n        }\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              const {\n                start\n              } = importData;\n              if (importData.url === undefined) {\n                this._emitWarning(state, `Expected URL in '${input.slice(start, end)}'`, locConverter, start, end);\n                importData = undefined;\n                scope = CSS_MODE_TOP_LEVEL;\n                return end;\n              }\n              if (importData.urlStart > importData.layerStart || importData.urlStart > importData.supportsStart) {\n                this._emitWarning(state, `An URL in '${input.slice(start, end)}' should be before 'layer(...)' or 'supports(...)'`, locConverter, start, end);\n                importData = undefined;\n                scope = CSS_MODE_TOP_LEVEL;\n                return end;\n              }\n              if (importData.layerStart > importData.supportsStart) {\n                this._emitWarning(state, `The 'layer(...)' in '${input.slice(start, end)}' should be before 'supports(...)'`, locConverter, start, end);\n                importData = undefined;\n                scope = CSS_MODE_TOP_LEVEL;\n                return end;\n              }\n              const semicolonPos = end;\n              end = walkCssTokens.eatWhiteLine(input, end + 1);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              const lastEnd = importData.supportsEnd || importData.layerEnd || importData.urlEnd || start;\n              const pos = walkCssTokens.eatWhitespaceAndComments(input, lastEnd);\n              // Prevent to consider comments as a part of media query\n              if (pos !== semicolonPos - 1) {\n                importData.media = input.slice(lastEnd, semicolonPos - 1).trim();\n              }\n              const url = importData.url.trim();\n              if (url.length === 0) {\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n                dep.setLoc(sl, sc, el, ec);\n              } else {\n                const dep = new CssImportDependency(url, [start, end], importData.layer, importData.supports, importData.media && importData.media.length > 0 ? importData.media : undefined);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n              }\n              importData = undefined;\n              scope = CSS_MODE_TOP_LEVEL;\n              break;\n            }\n          case CSS_MODE_AT_IMPORT_INVALID:\n          case CSS_MODE_AT_NAMESPACE_INVALID:\n            {\n              scope = CSS_MODE_TOP_LEVEL;\n              break;\n            }\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (this.allowModeSwitch) {\n                processDeclarationValueDone(input);\n                inAnimationProperty = false;\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      leftCurlyBracket: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              allowImportAtRule = false;\n              scope = CSS_MODE_IN_BLOCK;\n              blockNestingLevel = 1;\n              if (this.allowModeSwitch) {\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n          case CSS_MODE_IN_BLOCK:\n            {\n              blockNestingLevel++;\n              if (this.allowModeSwitch) {\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (isLocalMode()) {\n                processDeclarationValueDone(input);\n                inAnimationProperty = false;\n              }\n              if (--blockNestingLevel === 0) {\n                scope = CSS_MODE_TOP_LEVEL;\n                if (this.allowModeSwitch) {\n                  isNextRulePrelude = true;\n                  modeData = undefined;\n                }\n              } else if (this.allowModeSwitch) {\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      identifier: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (isLocalMode()) {\n                // Handle only top level values and not inside functions\n                if (inAnimationProperty && balanced.length === 0) {\n                  lastIdentifier = [start, end];\n                } else {\n                  return processLocalDeclaration(input, start, end);\n                }\n              }\n              break;\n            }\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              if (input.slice(start, end).toLowerCase() === \"layer\") {\n                importData.layer = \"\";\n                importData.layerStart = start;\n                importData.layerEnd = end;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      class: (input, start, end) => {\n        if (isLocalMode()) {\n          const name = input.slice(start + 1, end);\n          const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(start);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(end);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n        }\n        return end;\n      },\n      id: (input, start, end) => {\n        if (isLocalMode()) {\n          const name = input.slice(start + 1, end);\n          const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(start);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(end);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n        }\n        return end;\n      },\n      function: (input, start, end) => {\n        let name = input.slice(start, end - 1);\n        balanced.push([name, start, end]);\n        if (scope === CSS_MODE_IN_AT_IMPORT && name.toLowerCase() === \"supports\") {\n          importData.inSupports = true;\n        }\n        if (isLocalMode()) {\n          name = name.toLowerCase();\n\n          // Don't rename animation name when we have `var()` function\n          if (inAnimationProperty && balanced.length === 1) {\n            lastIdentifier = undefined;\n          }\n          if (name === \"var\") {\n            let pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n            if (pos === input.length) return pos;\n            const [newPos, name] = eatText(input, pos, eatNameInVar);\n            if (!name.startsWith(\"--\")) return end;\n            const {\n              line: sl,\n              column: sc\n            } = locConverter.get(pos);\n            const {\n              line: el,\n              column: ec\n            } = locConverter.get(newPos);\n            const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [pos, newPos], \"--\", declaredCssVariables);\n            dep.setLoc(sl, sc, el, ec);\n            module.addDependency(dep);\n            return newPos;\n          }\n        }\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        balanced.push([\"(\", start, end]);\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        const last = balanced[balanced.length - 1];\n        const popped = balanced.pop();\n        if (this.allowModeSwitch && popped && (popped[0] === \":local\" || popped[0] === \":global\")) {\n          modeData = balanced[balanced.length - 1] ? /** @type {\"local\" | \"global\"} */\n          balanced[balanced.length - 1][0] : undefined;\n          const dep = new ConstDependency(\"\", [start, end]);\n          module.addPresentationalDependency(dep);\n          return end;\n        }\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              if (last && last[0] === \"url\" && !importData.inSupports) {\n                importData.urlStart = last[1];\n                importData.urlEnd = end;\n              } else if (last && last[0].toLowerCase() === \"layer\" && !importData.inSupports) {\n                importData.layer = input.slice(last[2], end - 1).trim();\n                importData.layerStart = last[1];\n                importData.layerEnd = end;\n              } else if (last && last[0].toLowerCase() === \"supports\") {\n                importData.supports = input.slice(last[2], end - 1).trim();\n                importData.supportsStart = last[1];\n                importData.supportsEnd = end;\n                importData.inSupports = false;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      pseudoClass: (input, start, end) => {\n        if (this.allowModeSwitch) {\n          const name = input.slice(start, end).toLowerCase();\n          if (name === \":global\") {\n            modeData = \"global\";\n            // Eat extra whitespace and comments\n            end = walkCssTokens.eatWhitespace(input, end);\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n            return end;\n          } else if (name === \":local\") {\n            modeData = \"local\";\n            // Eat extra whitespace and comments\n            end = walkCssTokens.eatWhitespace(input, end);\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n            return end;\n          }\n          switch (scope) {\n            case CSS_MODE_TOP_LEVEL:\n              {\n                if (name === \":export\") {\n                  const pos = parseExports(input, end);\n                  const dep = new ConstDependency(\"\", [start, pos]);\n                  module.addPresentationalDependency(dep);\n                  return pos;\n                }\n                break;\n              }\n          }\n        }\n        return end;\n      },\n      pseudoFunction: (input, start, end) => {\n        let name = input.slice(start, end - 1);\n        balanced.push([name, start, end]);\n        if (this.allowModeSwitch) {\n          name = name.toLowerCase();\n          if (name === \":global\") {\n            modeData = \"global\";\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n          } else if (name === \":local\") {\n            modeData = \"local\";\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n          }\n        }\n        return end;\n      },\n      comma: (input, start, end) => {\n        if (this.allowModeSwitch) {\n          // Reset stack for `:global .class :local .class-other` selector after\n          modeData = undefined;\n          switch (scope) {\n            case CSS_MODE_IN_BLOCK:\n              {\n                if (isLocalMode()) {\n                  processDeclarationValueDone(input);\n                }\n                break;\n              }\n          }\n        }\n        return end;\n      }\n    });\n    module.buildInfo.strict = true;\n    module.buildMeta.exportsType = \"namespace\";\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n}\nmodule.exports = CssParser;","map":{"version":3,"names":["ModuleDependencyWarning","require","Parser","WebpackError","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","STRING_MULTILINE","TRIM_WHITE_SPACES","UNESCAPE","IMAGE_SET_FUNCTION","OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE","OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY","normalizeUrl","str","isString","replace","match","length","String","fromCharCode","parseInt","slice","trim","test","includes","decodeURIComponent","error","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_BLOCK","CSS_MODE_IN_AT_IMPORT","CSS_MODE_AT_IMPORT_INVALID","CSS_MODE_AT_NAMESPACE_INVALID","CssParser","allowModeSwitch","defaultMode","arguments","undefined","_emitWarning","state","message","locConverter","start","end","sl","sc","el","ec","current","addWarning","module","parse","source","Buffer","isBuffer","toString","Error","declaredCssVariables","Set","scope","blockNestingLevel","allowImportAtRule","modeData","lastIdentifier","balanced","importData","inAnimationProperty","isNextRulePrelude","isNextNestedSyntax","eatWhitespaceAndComments","isIdentifier","isIdentStartCodePoint","isLocalMode","eatUntil","chars","charCodes","Array","from","_","arr","reduce","a","b","Math","max","forEach","cc","eatText","eater","text","newPos","eatComments","trimEnd","eatExportName","eatExportValue","parseExports","name","value","dep","setLoc","addDependency","eatWhiteLine","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatKeyframes","eatNameInVar","isSelector","url","contentStart","contentEnd","inSupports","urlStart","urlEnd","addCodeGenerationDependency","string","insideURLFunction","last","toLowerCase","isUrl","atKeyword","semicolon","layerStart","supportsStart","semicolonPos","lastEnd","supportsEnd","layerEnd","media","addPresentationalDependency","layer","supports","leftCurlyBracket","rightCurlyBracket","identifier","class","id","function","push","leftParenthesis","rightParenthesis","popped","pop","pseudoClass","eatWhitespace","pseudoFunction","comma","buildInfo","strict","buildMeta","exportsType","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/css/CssParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst Parser = require(\"../Parser\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n/** @typedef {[number, number]} Range */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY =\n\t/^(-\\w+-)?animation(-name)?$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n\t// Remove extra spaces and newlines:\n\t// `url(\"im\\\n\t// g.png\")`\n\tif (isString) {\n\t\tstr = str.replace(STRING_MULTILINE, \"\");\n\t}\n\n\tstr = str\n\t\t// Remove unnecessary spaces from `url(\"   img.png\t \")`\n\t\t.replace(TRIM_WHITE_SPACES, \"\")\n\t\t// Unescape\n\t\t.replace(UNESCAPE, match => {\n\t\t\tif (match.length > 2) {\n\t\t\t\treturn String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n\t\t\t} else {\n\t\t\t\treturn match[1];\n\t\t\t}\n\t\t});\n\n\tif (/^data:/i.test(str)) {\n\t\treturn str;\n\t}\n\n\tif (str.includes(\"%\")) {\n\t\t// Convert `url('%2E/img.png')` -> `url('./img.png')`\n\t\ttry {\n\t\t\tstr = decodeURIComponent(str);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\treturn str;\n};\n\nclass LocConverter {\n\t/**\n\t * @param {string} input input\n\t */\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\t/**\n\t * @param {number} pos position\n\t * @returns {LocConverter} location converter\n\t */\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_BLOCK = 1;\nconst CSS_MODE_IN_AT_IMPORT = 2;\nconst CSS_MODE_AT_IMPORT_INVALID = 3;\nconst CSS_MODE_AT_NAMESPACE_INVALID = 4;\n\nclass CssParser extends Parser {\n\tconstructor({ allowModeSwitch = true, defaultMode = \"global\" } = {}) {\n\t\tsuper();\n\t\tthis.allowModeSwitch = allowModeSwitch;\n\t\tthis.defaultMode = defaultMode;\n\t}\n\n\t/**\n\t * @param {ParserState} state parser state\n\t * @param {string} message warning message\n\t * @param {LocConverter} locConverter location converter\n\t * @param {number} start start offset\n\t * @param {number} end end offset\n\t */\n\t_emitWarning(state, message, locConverter, start, end) {\n\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\tconst { line: el, column: ec } = locConverter.get(end);\n\n\t\tstate.current.addWarning(\n\t\t\tnew ModuleDependencyWarning(state.module, new WebpackError(message), {\n\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\tend: { line: el, column: ec }\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\ufeff\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tconst module = state.module;\n\t\tconst locConverter = new LocConverter(source);\n\t\t/** @type {Set<string>}*/\n\t\tconst declaredCssVariables = new Set();\n\t\t/** @type {number} */\n\t\tlet scope = CSS_MODE_TOP_LEVEL;\n\t\t/** @type {number} */\n\t\tlet blockNestingLevel = 0;\n\t\t/** @type {boolean} */\n\t\tlet allowImportAtRule = true;\n\t\t/** @type {\"local\" | \"global\" | undefined} */\n\t\tlet modeData = undefined;\n\t\t/** @type {[number, number] | undefined} */\n\t\tlet lastIdentifier = undefined;\n\t\t/** @type [string, number, number][] */\n\t\tlet balanced = [];\n\t\t/** @type {undefined | { start: number, url?: string, urlStart?: number, urlEnd?: number, layer?: string, layerStart?: number, layerEnd?: number, supports?: string, supportsStart?: number, supportsEnd?: number, inSupports?:boolean, media?: string  }} */\n\t\tlet importData = undefined;\n\t\t/** @type {boolean} */\n\t\tlet inAnimationProperty = false;\n\t\t/** @type {boolean} */\n\t\tlet isNextRulePrelude = true;\n\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos position\n\t\t * @returns {boolean} true, when next is nested syntax\n\t\t */\n\t\tconst isNextNestedSyntax = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n\t\t\tif (input[pos] === \"}\") {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// According spec only identifier can be used as a property name\n\t\t\tconst isIdentifier = walkCssTokens.isIdentStartCodePoint(\n\t\t\t\tinput.charCodeAt(pos)\n\t\t\t);\n\n\t\t\treturn !isIdentifier;\n\t\t};\n\t\t/**\n\t\t * @returns {boolean} true, when in local scope\n\t\t */\n\t\tconst isLocalMode = () =>\n\t\t\tmodeData === \"local\" ||\n\t\t\t(this.defaultMode === \"local\" && modeData === undefined);\n\t\t/**\n\t\t * @param {string} chars characters\n\t\t * @returns {(input: string, pos: number) => number} function to eat characters\n\t\t */\n\t\tconst eatUntil = chars => {\n\t\t\tconst charCodes = Array.from({ length: chars.length }, (_, i) =>\n\t\t\t\tchars.charCodeAt(i)\n\t\t\t);\n\t\t\tconst arr = Array.from(\n\t\t\t\t{ length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1 },\n\t\t\t\t() => false\n\t\t\t);\n\t\t\tcharCodes.forEach(cc => (arr[cc] = true));\n\t\t\treturn (input, pos) => {\n\t\t\t\tfor (;;) {\n\t\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc < arr.length && arr[cc]) {\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos start position\n\t\t * @param {(input: string, pos: number) => number} eater eater\n\t\t * @returns {[number,string]} new position and text\n\t\t */\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimEnd()];\n\t\t};\n\t\tconst eatExportName = eatUntil(\":};/\");\n\t\tconst eatExportValue = eatUntil(\"};/\");\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos start position\n\t\t * @returns {number} position after parse\n\t\t */\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY) {\n\t\t\t\tthis._emitWarning(\n\t\t\t\t\tstate,\n\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`,\n\t\t\t\t\tlocConverter,\n\t\t\t\t\tpos,\n\t\t\t\t\tpos\n\t\t\t\t);\n\t\t\t\treturn pos;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = walkCssTokens.eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = eatUntil(\":{};\");\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos name start position\n\t\t * @param {number} end name end position\n\t\t * @returns {number} position after handling\n\t\t */\n\t\tconst processLocalDeclaration = (input, pos, end) => {\n\t\t\tmodeData = undefined;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return end;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\t!propertyName.startsWith(\"--\") &&\n\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)\n\t\t\t) {\n\t\t\t\tinAnimationProperty = true;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\t/**\n\t\t * @param {string} input input\n\t\t */\n\t\tconst processDeclarationValueDone = input => {\n\t\t\tif (inAnimationProperty && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t};\n\t\tconst eatKeyframes = eatUntil(\"{};/\");\n\t\tconst eatNameInVar = eatUntil(\",)};/\");\n\t\twalkCssTokens(source, {\n\t\t\tisSelector: () => {\n\t\t\t\treturn isNextRulePrelude;\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tlet value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\t// Do not parse URLs in `supports(...)`\n\t\t\t\t\t\tif (importData.inSupports) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (importData.url) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Duplicate of 'url(...)' in '${input.slice(\n\t\t\t\t\t\t\t\t\timportData.start,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timportData.url = value;\n\t\t\t\t\t\timportData.urlStart = start;\n\t\t\t\t\t\timportData.urlEnd = end;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// Do not parse URLs in import between rules\n\t\t\t\t\tcase CSS_MODE_AT_NAMESPACE_INVALID:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_INVALID: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tconst insideURLFunction =\n\t\t\t\t\t\t\tbalanced[balanced.length - 1] &&\n\t\t\t\t\t\t\tbalanced[balanced.length - 1][0] === \"url\";\n\n\t\t\t\t\t\t// Do not parse URLs in `supports(...)` and other strings if we already have a URL\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\timportData.inSupports ||\n\t\t\t\t\t\t\t(!insideURLFunction && importData.url)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (insideURLFunction && importData.url) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Duplicate of 'url(...)' in '${input.slice(\n\t\t\t\t\t\t\t\t\timportData.start,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timportData.url = normalizeUrl(\n\t\t\t\t\t\t\tinput.slice(start + 1, end - 1),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!insideURLFunction) {\n\t\t\t\t\t\t\timportData.urlStart = start;\n\t\t\t\t\t\t\timportData.urlEnd = end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\t// TODO move escaped parsing to tokenizer\n\t\t\t\t\t\tconst last = balanced[balanced.length - 1];\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlast &&\n\t\t\t\t\t\t\t(last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\" ||\n\t\t\t\t\t\t\t\tIMAGE_SET_FUNCTION.test(last[0].replace(/\\\\/g, \"\")))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlet value = normalizeUrl(input.slice(start + 1, end - 1), true);\n\n\t\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst isUrl = last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\";\n\t\t\t\t\t\t\tconst dep = new CssUrlDependency(\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t[start, end],\n\t\t\t\t\t\t\t\tisUrl ? \"string\" : \"url\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\t\t\t\tif (name === \"@namespace\") {\n\t\t\t\t\tscope = CSS_MODE_AT_NAMESPACE_INVALID;\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\"'@namespace' is not supported in bundled CSS\",\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend\n\t\t\t\t\t);\n\t\t\t\t\treturn end;\n\t\t\t\t} else if (name === \"@import\") {\n\t\t\t\t\tif (!allowImportAtRule) {\n\t\t\t\t\t\tscope = CSS_MODE_AT_IMPORT_INVALID;\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\"Any '@import' rules must precede all other rules\",\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope = CSS_MODE_IN_AT_IMPORT;\n\t\t\t\t\timportData = { start };\n\t\t\t\t} else if (\n\t\t\t\t\tthis.allowModeSwitch &&\n\t\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)\n\t\t\t\t) {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatKeyframes);\n\t\t\t\t\tif (newPos === input.length) return newPos;\n\t\t\t\t\tif (input.charCodeAt(newPos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Unexpected '${input[newPos]}' at ${newPos} during parsing of @keyframes (expected '{')`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t}\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t} else if (this.allowModeSwitch && name === \"@property\") {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst propertyNameStart = pos;\n\t\t\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tpos,\n\t\t\t\t\t\teatKeyframes\n\t\t\t\t\t);\n\t\t\t\t\tif (propertyNameEnd === input.length) return propertyNameEnd;\n\t\t\t\t\tif (!propertyName.startsWith(\"--\")) return propertyNameEnd;\n\t\t\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Unexpected '${input[propertyNameEnd]}' at ${propertyNameEnd} during parsing of @property (expected '{')`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn propertyNameEnd;\n\t\t\t\t\t}\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\t\"--\"\n\t\t\t\t\t);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t\t\tpos = propertyNameEnd;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t} else if (\n\t\t\t\t\tname === \"@media\" ||\n\t\t\t\t\tname === \"@supports\" ||\n\t\t\t\t\tname === \"@layer\" ||\n\t\t\t\t\tname === \"@container\"\n\t\t\t\t) {\n\t\t\t\t\tmodeData = isLocalMode() ? \"local\" : \"global\";\n\t\t\t\t\tisNextRulePrelude = true;\n\t\t\t\t\treturn end;\n\t\t\t\t} else if (this.allowModeSwitch) {\n\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\tisNextRulePrelude = false;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tconst { start } = importData;\n\n\t\t\t\t\t\tif (importData.url === undefined) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Expected URL in '${input.slice(start, end)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\timportData.urlStart > importData.layerStart ||\n\t\t\t\t\t\t\timportData.urlStart > importData.supportsStart\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`An URL in '${input.slice(\n\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}' should be before 'layer(...)' or 'supports(...)'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (importData.layerStart > importData.supportsStart) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`The 'layer(...)' in '${input.slice(\n\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}' should be before 'supports(...)'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst semicolonPos = end;\n\t\t\t\t\t\tend = walkCssTokens.eatWhiteLine(input, end + 1);\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tconst lastEnd =\n\t\t\t\t\t\t\timportData.supportsEnd ||\n\t\t\t\t\t\t\timportData.layerEnd ||\n\t\t\t\t\t\t\timportData.urlEnd ||\n\t\t\t\t\t\t\tstart;\n\t\t\t\t\t\tconst pos = walkCssTokens.eatWhitespaceAndComments(input, lastEnd);\n\t\t\t\t\t\t// Prevent to consider comments as a part of media query\n\t\t\t\t\t\tif (pos !== semicolonPos - 1) {\n\t\t\t\t\t\t\timportData.media = input.slice(lastEnd, semicolonPos - 1).trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst url = importData.url.trim();\n\n\t\t\t\t\t\tif (url.length === 0) {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t[start, end],\n\t\t\t\t\t\t\t\timportData.layer,\n\t\t\t\t\t\t\t\timportData.supports,\n\t\t\t\t\t\t\t\timportData.media && importData.media.length > 0\n\t\t\t\t\t\t\t\t\t? importData.media\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_INVALID:\n\t\t\t\t\tcase CSS_MODE_AT_NAMESPACE_INVALID: {\n\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\tinAnimationProperty = false;\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tallowImportAtRule = false;\n\t\t\t\t\t\tscope = CSS_MODE_IN_BLOCK;\n\t\t\t\t\t\tblockNestingLevel = 1;\n\n\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tblockNestingLevel++;\n\n\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\tinAnimationProperty = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (--blockNestingLevel === 0) {\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\t\tisNextRulePrelude = true;\n\t\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.allowModeSwitch) {\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t// Handle only top level values and not inside functions\n\t\t\t\t\t\t\tif (inAnimationProperty && balanced.length === 0) {\n\t\t\t\t\t\t\t\tlastIdentifier = [start, end];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn processLocalDeclaration(input, start, end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tif (input.slice(start, end).toLowerCase() === \"layer\") {\n\t\t\t\t\t\t\timportData.layer = \"\";\n\t\t\t\t\t\t\timportData.layerStart = start;\n\t\t\t\t\t\t\timportData.layerEnd = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tclass: (input, start, end) => {\n\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tid: (input, start, end) => {\n\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tlet name = input.slice(start, end - 1);\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tif (\n\t\t\t\t\tscope === CSS_MODE_IN_AT_IMPORT &&\n\t\t\t\t\tname.toLowerCase() === \"supports\"\n\t\t\t\t) {\n\t\t\t\t\timportData.inSupports = true;\n\t\t\t\t}\n\n\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\tname = name.toLowerCase();\n\n\t\t\t\t\t// Don't rename animation name when we have `var()` function\n\t\t\t\t\tif (inAnimationProperty && balanced.length === 1) {\n\t\t\t\t\t\tlastIdentifier = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\tlet pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatNameInVar);\n\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t[pos, newPos],\n\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tbalanced.push([\"(\", start, end]);\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tconst last = balanced[balanced.length - 1];\n\t\t\t\tconst popped = balanced.pop();\n\n\t\t\t\tif (\n\t\t\t\t\tthis.allowModeSwitch &&\n\t\t\t\t\tpopped &&\n\t\t\t\t\t(popped[0] === \":local\" || popped[0] === \":global\")\n\t\t\t\t) {\n\t\t\t\t\tmodeData = balanced[balanced.length - 1]\n\t\t\t\t\t\t? /** @type {\"local\" | \"global\"} */\n\t\t\t\t\t\t  (balanced[balanced.length - 1][0])\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\n\t\t\t\t\treturn end;\n\t\t\t\t}\n\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tif (last && last[0] === \"url\" && !importData.inSupports) {\n\t\t\t\t\t\t\timportData.urlStart = last[1];\n\t\t\t\t\t\t\timportData.urlEnd = end;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tlast &&\n\t\t\t\t\t\t\tlast[0].toLowerCase() === \"layer\" &&\n\t\t\t\t\t\t\t!importData.inSupports\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\timportData.layer = input.slice(last[2], end - 1).trim();\n\t\t\t\t\t\t\timportData.layerStart = last[1];\n\t\t\t\t\t\t\timportData.layerEnd = end;\n\t\t\t\t\t\t} else if (last && last[0].toLowerCase() === \"supports\") {\n\t\t\t\t\t\t\timportData.supports = input.slice(last[2], end - 1).trim();\n\t\t\t\t\t\t\timportData.supportsStart = last[1];\n\t\t\t\t\t\t\timportData.supportsEnd = end;\n\t\t\t\t\t\t\timportData.inSupports = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoClass: (input, start, end) => {\n\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\n\t\t\t\t\tif (name === \":global\") {\n\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t// Eat extra whitespace and comments\n\t\t\t\t\t\tend = walkCssTokens.eatWhitespace(input, end);\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t} else if (name === \":local\") {\n\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t// Eat extra whitespace and comments\n\t\t\t\t\t\tend = walkCssTokens.eatWhitespace(input, end);\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (scope) {\n\t\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\t\tif (name === \":export\") {\n\t\t\t\t\t\t\t\tconst pos = parseExports(input, end);\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoFunction: (input, start, end) => {\n\t\t\t\tlet name = input.slice(start, end - 1);\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\tname = name.toLowerCase();\n\n\t\t\t\t\tif (name === \":global\") {\n\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t} else if (name === \":local\") {\n\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t// Reset stack for `:global .class :local .class-other` selector after\n\t\t\t\t\tmodeData = undefined;\n\n\t\t\t\t\tswitch (scope) {\n\t\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = CssParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
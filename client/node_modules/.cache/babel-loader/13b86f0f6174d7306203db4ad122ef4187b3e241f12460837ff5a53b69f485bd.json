{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"ImportPlugin\";\nclass ImportPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\n      compilation.dependencyFactories.set(ImportEagerDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportEagerDependency, new ImportEagerDependency.Template());\n      compilation.dependencyFactories.set(ImportWeakDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportWeakDependency, new ImportWeakDependency.Template());\n      compilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\n\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.import !== undefined && !parserOptions.import) return;\n        new ImportParserPlugin(parserOptions).apply(parser);\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, handler);\n    });\n  }\n}\nmodule.exports = ImportPlugin;","map":{"version":3,"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","JAVASCRIPT_MODULE_TYPE_ESM","require","ImportContextDependency","ImportDependency","ImportEagerDependency","ImportParserPlugin","ImportWeakDependency","PLUGIN_NAME","ImportPlugin","apply","compiler","hooks","compilation","tap","_ref","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","import","undefined","for","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/ImportPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"ImportPlugin\";\n\nclass ImportPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnew ImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnew ImportEagerDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnew ImportWeakDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tnew ImportContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.import !== undefined && !parserOptions.import)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportParserPlugin(parserOptions).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ImportPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EACLA,2BAA2B;EAC3BC,8BAA8B;EAC9BC;AACD,CAAC,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACrC,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACpE,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACtD,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMI,kBAAkB,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AAC1D,MAAMK,oBAAoB,GAAGL,OAAO,CAAC,wBAAwB,CAAC;;AAE9D;AACA;AACA;;AAEA,MAAMM,WAAW,GAAG,cAAc;AAElC,MAAMC,YAAY,CAAC;EAClB;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7BN,WAAW,EACX,CAACK,WAAW,EAAAE,IAAA,KAAoD;MAAA,IAAlD;QAAEC,oBAAoB;QAAEC;MAAoB,CAAC,GAAAF,IAAA;MAC1DF,WAAW,CAACK,mBAAmB,CAACC,GAAG,CAClCf,gBAAgB,EAChBa,mBACD,CAAC;MACDJ,WAAW,CAACO,mBAAmB,CAACD,GAAG,CAClCf,gBAAgB,EAChB,IAAIA,gBAAgB,CAACiB,QAAQ,CAAC,CAC/B,CAAC;MAEDR,WAAW,CAACK,mBAAmB,CAACC,GAAG,CAClCd,qBAAqB,EACrBY,mBACD,CAAC;MACDJ,WAAW,CAACO,mBAAmB,CAACD,GAAG,CAClCd,qBAAqB,EACrB,IAAIA,qBAAqB,CAACgB,QAAQ,CAAC,CACpC,CAAC;MAEDR,WAAW,CAACK,mBAAmB,CAACC,GAAG,CAClCZ,oBAAoB,EACpBU,mBACD,CAAC;MACDJ,WAAW,CAACO,mBAAmB,CAACD,GAAG,CAClCZ,oBAAoB,EACpB,IAAIA,oBAAoB,CAACc,QAAQ,CAAC,CACnC,CAAC;MAEDR,WAAW,CAACK,mBAAmB,CAACC,GAAG,CAClChB,uBAAuB,EACvBa,oBACD,CAAC;MACDH,WAAW,CAACO,mBAAmB,CAACD,GAAG,CAClChB,uBAAuB,EACvB,IAAIA,uBAAuB,CAACkB,QAAQ,CAAC,CACtC,CAAC;;MAED;AACJ;AACA;AACA;AACA;MACI,MAAMC,OAAO,GAAGA,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IAAIA,aAAa,CAACC,MAAM,KAAKC,SAAS,IAAI,CAACF,aAAa,CAACC,MAAM,EAC9D;QAED,IAAInB,kBAAkB,CAACkB,aAAa,CAAC,CAACd,KAAK,CAACa,MAAM,CAAC;MACpD,CAAC;MAEDN,mBAAmB,CAACL,KAAK,CAACW,MAAM,CAC9BI,GAAG,CAAC5B,2BAA2B,CAAC,CAChCe,GAAG,CAACN,WAAW,EAAEc,OAAO,CAAC;MAC3BL,mBAAmB,CAACL,KAAK,CAACW,MAAM,CAC9BI,GAAG,CAAC3B,8BAA8B,CAAC,CACnCc,GAAG,CAACN,WAAW,EAAEc,OAAO,CAAC;MAC3BL,mBAAmB,CAACL,KAAK,CAACW,MAAM,CAC9BI,GAAG,CAAC1B,0BAA0B,CAAC,CAC/Ba,GAAG,CAACN,WAAW,EAAEc,OAAO,CAAC;IAC5B,CACD,CAAC;EACF;AACD;AACAM,MAAM,CAACC,OAAO,GAAGpB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var packet = require('dns-packet');\nvar dgram = require('dgram');\nvar thunky = require('thunky');\nvar events = require('events');\nvar os = require('os');\nvar noop = function () {};\nmodule.exports = function (opts) {\n  if (!opts) opts = {};\n  var that = new events.EventEmitter();\n  var port = typeof opts.port === 'number' ? opts.port : 5353;\n  var type = opts.type || 'udp4';\n  var ip = opts.ip || opts.host || (type === 'udp4' ? '224.0.0.251' : null);\n  var me = {\n    address: ip,\n    port: port\n  };\n  var memberships = {};\n  var destroyed = false;\n  var interval = null;\n  if (type === 'udp6' && (!ip || !opts.interface)) {\n    throw new Error('For IPv6 multicast you must specify `ip` and `interface`');\n  }\n  var socket = opts.socket || dgram.createSocket({\n    type: type,\n    reuseAddr: opts.reuseAddr !== false,\n    toString: function () {\n      return type;\n    }\n  });\n  socket.on('error', function (err) {\n    if (err.code === 'EACCES' || err.code === 'EADDRINUSE') that.emit('error', err);else that.emit('warning', err);\n  });\n  socket.on('message', function (message, rinfo) {\n    try {\n      message = packet.decode(message);\n    } catch (err) {\n      that.emit('warning', err);\n      return;\n    }\n    that.emit('packet', message, rinfo);\n    if (message.type === 'query') that.emit('query', message, rinfo);\n    if (message.type === 'response') that.emit('response', message, rinfo);\n  });\n  socket.on('listening', function () {\n    if (!port) port = me.port = socket.address().port;\n    if (opts.multicast !== false) {\n      that.update();\n      interval = setInterval(that.update, 5000);\n      socket.setMulticastTTL(opts.ttl || 255);\n      socket.setMulticastLoopback(opts.loopback !== false);\n    }\n  });\n  var bind = thunky(function (cb) {\n    if (!port || opts.bind === false) return cb(null);\n    socket.once('error', cb);\n    socket.bind(port, opts.bind || opts.interface, function () {\n      socket.removeListener('error', cb);\n      cb(null);\n    });\n  });\n  bind(function (err) {\n    if (err) return that.emit('error', err);\n    that.emit('ready');\n  });\n  that.send = function (value, rinfo, cb) {\n    if (typeof rinfo === 'function') return that.send(value, null, rinfo);\n    if (!cb) cb = noop;\n    if (!rinfo) rinfo = me;else if (!rinfo.host && !rinfo.address) rinfo.address = me.address;\n    bind(onbind);\n    function onbind(err) {\n      if (destroyed) return cb();\n      if (err) return cb(err);\n      var message = packet.encode(value);\n      socket.send(message, 0, message.length, rinfo.port, rinfo.address || rinfo.host, cb);\n    }\n  };\n  that.response = that.respond = function (res, rinfo, cb) {\n    if (Array.isArray(res)) res = {\n      answers: res\n    };\n    res.type = 'response';\n    res.flags = (res.flags || 0) | packet.AUTHORITATIVE_ANSWER;\n    that.send(res, rinfo, cb);\n  };\n  that.query = function (q, type, rinfo, cb) {\n    if (typeof type === 'function') return that.query(q, null, null, type);\n    if (typeof type === 'object' && type && type.port) return that.query(q, null, type, rinfo);\n    if (typeof rinfo === 'function') return that.query(q, type, null, rinfo);\n    if (!cb) cb = noop;\n    if (typeof q === 'string') q = [{\n      name: q,\n      type: type || 'ANY'\n    }];\n    if (Array.isArray(q)) q = {\n      type: 'query',\n      questions: q\n    };\n    q.type = 'query';\n    that.send(q, rinfo, cb);\n  };\n  that.destroy = function (cb) {\n    if (!cb) cb = noop;\n    if (destroyed) return process.nextTick(cb);\n    destroyed = true;\n    clearInterval(interval);\n\n    // Need to drop memberships by hand and ignore errors.\n    // socket.close() does not cope with errors.\n    for (var iface in memberships) {\n      try {\n        socket.dropMembership(ip, iface);\n      } catch (e) {\n        // eat it\n      }\n    }\n    memberships = {};\n    socket.close(cb);\n  };\n  that.update = function () {\n    var ifaces = opts.interface ? [].concat(opts.interface) : allInterfaces();\n    var updated = false;\n    for (var i = 0; i < ifaces.length; i++) {\n      var addr = ifaces[i];\n      if (memberships[addr]) continue;\n      try {\n        socket.addMembership(ip, addr);\n        memberships[addr] = true;\n        updated = true;\n      } catch (err) {\n        that.emit('warning', err);\n      }\n    }\n    if (updated) {\n      if (socket.setMulticastInterface) {\n        try {\n          socket.setMulticastInterface(opts.interface || defaultInterface());\n        } catch (err) {\n          that.emit('warning', err);\n        }\n      }\n      that.emit('networkInterface');\n    }\n  };\n  return that;\n};\nfunction defaultInterface() {\n  var networks = os.networkInterfaces();\n  var names = Object.keys(networks);\n  for (var i = 0; i < names.length; i++) {\n    var net = networks[names[i]];\n    for (var j = 0; j < net.length; j++) {\n      var iface = net[j];\n      if (isIPv4(iface.family) && !iface.internal) {\n        if (os.platform() === 'darwin' && names[i] === 'en0') return iface.address;\n        return '0.0.0.0';\n      }\n    }\n  }\n  return '127.0.0.1';\n}\nfunction allInterfaces() {\n  var networks = os.networkInterfaces();\n  var names = Object.keys(networks);\n  var res = [];\n  for (var i = 0; i < names.length; i++) {\n    var net = networks[names[i]];\n    for (var j = 0; j < net.length; j++) {\n      var iface = net[j];\n      if (isIPv4(iface.family)) {\n        res.push(iface.address);\n        // could only addMembership once per interface (https://nodejs.org/api/dgram.html#dgram_socket_addmembership_multicastaddress_multicastinterface)\n        break;\n      }\n    }\n  }\n  return res;\n}\nfunction isIPv4(family) {\n  // for backwards compat\n  return family === 4 || family === 'IPv4';\n}","map":{"version":3,"names":["packet","require","dgram","thunky","events","os","noop","module","exports","opts","that","EventEmitter","port","type","ip","host","me","address","memberships","destroyed","interval","interface","Error","socket","createSocket","reuseAddr","toString","on","err","code","emit","message","rinfo","decode","multicast","update","setInterval","setMulticastTTL","ttl","setMulticastLoopback","loopback","bind","cb","once","removeListener","send","value","onbind","encode","length","response","respond","res","Array","isArray","answers","flags","AUTHORITATIVE_ANSWER","query","q","name","questions","destroy","process","nextTick","clearInterval","iface","dropMembership","e","close","ifaces","concat","allInterfaces","updated","i","addr","addMembership","setMulticastInterface","defaultInterface","networks","networkInterfaces","names","Object","keys","net","j","isIPv4","family","internal","platform","push"],"sources":["/home/hemanth/react-project/client/node_modules/multicast-dns/index.js"],"sourcesContent":["var packet = require('dns-packet')\nvar dgram = require('dgram')\nvar thunky = require('thunky')\nvar events = require('events')\nvar os = require('os')\n\nvar noop = function () {}\n\nmodule.exports = function (opts) {\n  if (!opts) opts = {}\n\n  var that = new events.EventEmitter()\n  var port = typeof opts.port === 'number' ? opts.port : 5353\n  var type = opts.type || 'udp4'\n  var ip = opts.ip || opts.host || (type === 'udp4' ? '224.0.0.251' : null)\n  var me = {address: ip, port: port}\n  var memberships = {}\n  var destroyed = false\n  var interval = null\n\n  if (type === 'udp6' && (!ip || !opts.interface)) {\n    throw new Error('For IPv6 multicast you must specify `ip` and `interface`')\n  }\n\n  var socket = opts.socket || dgram.createSocket({\n    type: type,\n    reuseAddr: opts.reuseAddr !== false,\n    toString: function () {\n      return type\n    }\n  })\n\n  socket.on('error', function (err) {\n    if (err.code === 'EACCES' || err.code === 'EADDRINUSE') that.emit('error', err)\n    else that.emit('warning', err)\n  })\n\n  socket.on('message', function (message, rinfo) {\n    try {\n      message = packet.decode(message)\n    } catch (err) {\n      that.emit('warning', err)\n      return\n    }\n\n    that.emit('packet', message, rinfo)\n\n    if (message.type === 'query') that.emit('query', message, rinfo)\n    if (message.type === 'response') that.emit('response', message, rinfo)\n  })\n\n  socket.on('listening', function () {\n    if (!port) port = me.port = socket.address().port\n    if (opts.multicast !== false) {\n      that.update()\n      interval = setInterval(that.update, 5000)\n      socket.setMulticastTTL(opts.ttl || 255)\n      socket.setMulticastLoopback(opts.loopback !== false)\n    }\n  })\n\n  var bind = thunky(function (cb) {\n    if (!port || opts.bind === false) return cb(null)\n    socket.once('error', cb)\n    socket.bind(port, opts.bind || opts.interface, function () {\n      socket.removeListener('error', cb)\n      cb(null)\n    })\n  })\n\n  bind(function (err) {\n    if (err) return that.emit('error', err)\n    that.emit('ready')\n  })\n\n  that.send = function (value, rinfo, cb) {\n    if (typeof rinfo === 'function') return that.send(value, null, rinfo)\n    if (!cb) cb = noop\n    if (!rinfo) rinfo = me\n    else if (!rinfo.host && !rinfo.address) rinfo.address = me.address\n\n    bind(onbind)\n\n    function onbind (err) {\n      if (destroyed) return cb()\n      if (err) return cb(err)\n      var message = packet.encode(value)\n      socket.send(message, 0, message.length, rinfo.port, rinfo.address || rinfo.host, cb)\n    }\n  }\n\n  that.response =\n  that.respond = function (res, rinfo, cb) {\n    if (Array.isArray(res)) res = {answers: res}\n\n    res.type = 'response'\n    res.flags = (res.flags || 0) | packet.AUTHORITATIVE_ANSWER\n    that.send(res, rinfo, cb)\n  }\n\n  that.query = function (q, type, rinfo, cb) {\n    if (typeof type === 'function') return that.query(q, null, null, type)\n    if (typeof type === 'object' && type && type.port) return that.query(q, null, type, rinfo)\n    if (typeof rinfo === 'function') return that.query(q, type, null, rinfo)\n    if (!cb) cb = noop\n\n    if (typeof q === 'string') q = [{name: q, type: type || 'ANY'}]\n    if (Array.isArray(q)) q = {type: 'query', questions: q}\n\n    q.type = 'query'\n    that.send(q, rinfo, cb)\n  }\n\n  that.destroy = function (cb) {\n    if (!cb) cb = noop\n    if (destroyed) return process.nextTick(cb)\n    destroyed = true\n    clearInterval(interval)\n\n    // Need to drop memberships by hand and ignore errors.\n    // socket.close() does not cope with errors.\n    for (var iface in memberships) {\n      try {\n        socket.dropMembership(ip, iface)\n      } catch (e) {\n        // eat it\n      }\n    }\n    memberships = {}\n    socket.close(cb)\n  }\n\n  that.update = function () {\n    var ifaces = opts.interface ? [].concat(opts.interface) : allInterfaces()\n    var updated = false\n\n    for (var i = 0; i < ifaces.length; i++) {\n      var addr = ifaces[i]\n      if (memberships[addr]) continue\n\n      try {\n        socket.addMembership(ip, addr)\n        memberships[addr] = true\n        updated = true\n      } catch (err) {\n        that.emit('warning', err)\n      }\n    }\n\n    if (updated) {\n      if (socket.setMulticastInterface) {\n        try {\n          socket.setMulticastInterface(opts.interface || defaultInterface())\n        } catch (err) {\n          that.emit('warning', err)\n        }\n      }\n      that.emit('networkInterface')\n    }\n  }\n\n  return that\n}\n\nfunction defaultInterface () {\n  var networks = os.networkInterfaces()\n  var names = Object.keys(networks)\n\n  for (var i = 0; i < names.length; i++) {\n    var net = networks[names[i]]\n    for (var j = 0; j < net.length; j++) {\n      var iface = net[j]\n      if (isIPv4(iface.family) && !iface.internal) {\n        if (os.platform() === 'darwin' && names[i] === 'en0') return iface.address\n        return '0.0.0.0'\n      }\n    }\n  }\n\n  return '127.0.0.1'\n}\n\nfunction allInterfaces () {\n  var networks = os.networkInterfaces()\n  var names = Object.keys(networks)\n  var res = []\n\n  for (var i = 0; i < names.length; i++) {\n    var net = networks[names[i]]\n    for (var j = 0; j < net.length; j++) {\n      var iface = net[j]\n      if (isIPv4(iface.family)) {\n        res.push(iface.address)\n        // could only addMembership once per interface (https://nodejs.org/api/dgram.html#dgram_socket_addmembership_multicastaddress_multicastinterface)\n        break\n      }\n    }\n  }\n\n  return res\n}\n\nfunction isIPv4 (family) { // for backwards compat\n  return family === 4 || family === 'IPv4'\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
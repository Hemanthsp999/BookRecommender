{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @template T\n * @template {Error} E\n * @param {Iterable<T>} items initial items\n * @param {number} concurrency number of items running in parallel\n * @param {function(T, function(T): void, function(E=): void): void} processor worker which pushes more items\n * @param {function(E=): void} callback all items processed\n * @returns {void}\n */\nconst processAsyncTree = (items, concurrency, processor, callback) => {\n  const queue = Array.from(items);\n  if (queue.length === 0) return callback();\n  let processing = 0;\n  let finished = false;\n  let processScheduled = true;\n  const push = item => {\n    queue.push(item);\n    if (!processScheduled && processing < concurrency) {\n      processScheduled = true;\n      process.nextTick(processQueue);\n    }\n  };\n  const processorCallback = err => {\n    processing--;\n    if (err && !finished) {\n      finished = true;\n      callback(err);\n      return;\n    }\n    if (!processScheduled) {\n      processScheduled = true;\n      process.nextTick(processQueue);\n    }\n  };\n  const processQueue = () => {\n    if (finished) return;\n    while (processing < concurrency && queue.length > 0) {\n      processing++;\n      const item = queue.pop();\n      processor(item, push, processorCallback);\n    }\n    processScheduled = false;\n    if (queue.length === 0 && processing === 0 && !finished) {\n      finished = true;\n      callback();\n    }\n  };\n  processQueue();\n};\nmodule.exports = processAsyncTree;","map":{"version":3,"names":["processAsyncTree","items","concurrency","processor","callback","queue","Array","from","length","processing","finished","processScheduled","push","item","process","nextTick","processQueue","processorCallback","err","pop","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/util/processAsyncTree.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @template T\n * @template {Error} E\n * @param {Iterable<T>} items initial items\n * @param {number} concurrency number of items running in parallel\n * @param {function(T, function(T): void, function(E=): void): void} processor worker which pushes more items\n * @param {function(E=): void} callback all items processed\n * @returns {void}\n */\nconst processAsyncTree = (items, concurrency, processor, callback) => {\n\tconst queue = Array.from(items);\n\tif (queue.length === 0) return callback();\n\tlet processing = 0;\n\tlet finished = false;\n\tlet processScheduled = true;\n\n\tconst push = item => {\n\t\tqueue.push(item);\n\t\tif (!processScheduled && processing < concurrency) {\n\t\t\tprocessScheduled = true;\n\t\t\tprocess.nextTick(processQueue);\n\t\t}\n\t};\n\n\tconst processorCallback = err => {\n\t\tprocessing--;\n\t\tif (err && !finished) {\n\t\t\tfinished = true;\n\t\t\tcallback(err);\n\t\t\treturn;\n\t\t}\n\t\tif (!processScheduled) {\n\t\t\tprocessScheduled = true;\n\t\t\tprocess.nextTick(processQueue);\n\t\t}\n\t};\n\n\tconst processQueue = () => {\n\t\tif (finished) return;\n\t\twhile (processing < concurrency && queue.length > 0) {\n\t\t\tprocessing++;\n\t\t\tconst item = queue.pop();\n\t\t\tprocessor(item, push, processorCallback);\n\t\t}\n\t\tprocessScheduled = false;\n\t\tif (queue.length === 0 && processing === 0 && !finished) {\n\t\t\tfinished = true;\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tprocessQueue();\n};\n\nmodule.exports = processAsyncTree;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EACrE,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACN,KAAK,CAAC;EAC/B,IAAII,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE,OAAOJ,QAAQ,CAAC,CAAC;EACzC,IAAIK,UAAU,GAAG,CAAC;EAClB,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,MAAMC,IAAI,GAAGC,IAAI,IAAI;IACpBR,KAAK,CAACO,IAAI,CAACC,IAAI,CAAC;IAChB,IAAI,CAACF,gBAAgB,IAAIF,UAAU,GAAGP,WAAW,EAAE;MAClDS,gBAAgB,GAAG,IAAI;MACvBG,OAAO,CAACC,QAAQ,CAACC,YAAY,CAAC;IAC/B;EACD,CAAC;EAED,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;IAChCT,UAAU,EAAE;IACZ,IAAIS,GAAG,IAAI,CAACR,QAAQ,EAAE;MACrBA,QAAQ,GAAG,IAAI;MACfN,QAAQ,CAACc,GAAG,CAAC;MACb;IACD;IACA,IAAI,CAACP,gBAAgB,EAAE;MACtBA,gBAAgB,GAAG,IAAI;MACvBG,OAAO,CAACC,QAAQ,CAACC,YAAY,CAAC;IAC/B;EACD,CAAC;EAED,MAAMA,YAAY,GAAGA,CAAA,KAAM;IAC1B,IAAIN,QAAQ,EAAE;IACd,OAAOD,UAAU,GAAGP,WAAW,IAAIG,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACpDC,UAAU,EAAE;MACZ,MAAMI,IAAI,GAAGR,KAAK,CAACc,GAAG,CAAC,CAAC;MACxBhB,SAAS,CAACU,IAAI,EAAED,IAAI,EAAEK,iBAAiB,CAAC;IACzC;IACAN,gBAAgB,GAAG,KAAK;IACxB,IAAIN,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIC,UAAU,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE;MACxDA,QAAQ,GAAG,IAAI;MACfN,QAAQ,CAAC,CAAC;IACX;EACD,CAAC;EAEDY,YAAY,CAAC,CAAC;AACf,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGrB,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
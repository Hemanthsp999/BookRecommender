{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\n\n/** @type {Map<string, Function>} */\nconst deprecationCache = new Map();\n\n/**\n * @typedef {Object} FakeHookMarker\n * @property {true} _fakeHook it's a fake hook\n */\n\n/** @template T @typedef {T & FakeHookMarker} FakeHook<T> */\n\n/**\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {Function} function to trigger deprecation\n */\nconst createDeprecation = (message, code) => {\n  const cached = deprecationCache.get(message);\n  if (cached !== undefined) return cached;\n  const fn = util.deprecate(() => {}, message, \"DEP_WEBPACK_DEPRECATION_\" + code);\n  deprecationCache.set(message, fn);\n  return fn;\n};\nconst COPY_METHODS = [\"concat\", \"entry\", \"filter\", \"find\", \"findIndex\", \"includes\", \"indexOf\", \"join\", \"lastIndexOf\", \"map\", \"reduce\", \"reduceRight\", \"slice\", \"some\"];\nconst DISABLED_METHODS = [\"copyWithin\", \"entries\", \"fill\", \"keys\", \"pop\", \"reverse\", \"shift\", \"splice\", \"sort\", \"unshift\"];\n\n/**\n * @param {any} set new set\n * @param {string} name property name\n * @returns {void}\n */\nexports.arrayToSetDeprecation = (set, name) => {\n  for (const method of COPY_METHODS) {\n    if (set[method]) continue;\n    const d = createDeprecation(`${name} was changed from Array to Set (using Array method '${method}' is deprecated)`, \"ARRAY_TO_SET\");\n    /**\n     * @deprecated\n     * @this {Set}\n     * @returns {number} count\n     */\n    set[method] = function () {\n      d();\n      const array = Array.from(this);\n      return Array.prototype[method].apply(array, arguments);\n    };\n  }\n  const dPush = createDeprecation(`${name} was changed from Array to Set (using Array method 'push' is deprecated)`, \"ARRAY_TO_SET_PUSH\");\n  const dLength = createDeprecation(`${name} was changed from Array to Set (using Array property 'length' is deprecated)`, \"ARRAY_TO_SET_LENGTH\");\n  const dIndexer = createDeprecation(`${name} was changed from Array to Set (indexing Array is deprecated)`, \"ARRAY_TO_SET_INDEXER\");\n  /**\n   * @deprecated\n   * @this {Set}\n   * @returns {number} count\n   */\n  set.push = function () {\n    dPush();\n    for (const item of Array.from(arguments)) {\n      this.add(item);\n    }\n    return this.size;\n  };\n  for (const method of DISABLED_METHODS) {\n    if (set[method]) continue;\n    set[method] = () => {\n      throw new Error(`${name} was changed from Array to Set (using Array method '${method}' is not possible)`);\n    };\n  }\n  const createIndexGetter = index => {\n    /**\n     * @this {Set} a Set\n     * @returns {any} the value at this location\n     */\n    const fn = function () {\n      dIndexer();\n      let i = 0;\n      for (const item of this) {\n        if (i++ === index) return item;\n      }\n      return undefined;\n    };\n    return fn;\n  };\n  const defineIndexGetter = index => {\n    Object.defineProperty(set, index, {\n      get: createIndexGetter(index),\n      set(value) {\n        throw new Error(`${name} was changed from Array to Set (indexing Array with write is not possible)`);\n      }\n    });\n  };\n  defineIndexGetter(0);\n  let indexerDefined = 1;\n  Object.defineProperty(set, \"length\", {\n    get() {\n      dLength();\n      const length = this.size;\n      for (indexerDefined; indexerDefined < length + 1; indexerDefined++) {\n        defineIndexGetter(indexerDefined);\n      }\n      return length;\n    },\n    set(value) {\n      throw new Error(`${name} was changed from Array to Set (writing to Array property 'length' is not possible)`);\n    }\n  });\n  set[Symbol.isConcatSpreadable] = true;\n};\nexports.createArrayToSetDeprecationSet = name => {\n  let initialized = false;\n  class SetDeprecatedArray extends Set {\n    constructor(items) {\n      super(items);\n      if (!initialized) {\n        initialized = true;\n        exports.arrayToSetDeprecation(SetDeprecatedArray.prototype, name);\n      }\n    }\n  }\n  return SetDeprecatedArray;\n};\n\n/**\n * @template T\n * @param {Object} obj object\n * @param {string} name property name\n * @param {string} code deprecation code\n * @param {string} note additional note\n * @returns {Object} frozen object with deprecation when modifying\n */\nexports.soonFrozenObjectDeprecation = function (obj, name, code) {\n  let note = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  const message = `${name} will be frozen in future, all modifications are deprecated.${note && `\\n${note}`}`;\n  return new Proxy(obj, {\n    set: util.deprecate((target, property, value, receiver) => Reflect.set(target, property, value, receiver), message, code),\n    defineProperty: util.deprecate((target, property, descriptor) => Reflect.defineProperty(target, property, descriptor), message, code),\n    deleteProperty: util.deprecate((target, property) => Reflect.deleteProperty(target, property), message, code),\n    setPrototypeOf: util.deprecate((target, proto) => Reflect.setPrototypeOf(target, proto), message, code)\n  });\n};\n\n/**\n * @template T\n * @param {T} obj object\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {T} object with property access deprecated\n */\nconst deprecateAllProperties = (obj, message, code) => {\n  const newObj = {};\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  for (const name of Object.keys(descriptors)) {\n    const descriptor = descriptors[name];\n    if (typeof descriptor.value === \"function\") {\n      Object.defineProperty(newObj, name, {\n        ...descriptor,\n        value: util.deprecate(descriptor.value, message, code)\n      });\n    } else if (descriptor.get || descriptor.set) {\n      Object.defineProperty(newObj, name, {\n        ...descriptor,\n        get: descriptor.get && util.deprecate(descriptor.get, message, code),\n        set: descriptor.set && util.deprecate(descriptor.set, message, code)\n      });\n    } else {\n      let value = descriptor.value;\n      Object.defineProperty(newObj, name, {\n        configurable: descriptor.configurable,\n        enumerable: descriptor.enumerable,\n        get: util.deprecate(() => value, message, code),\n        set: descriptor.writable ? util.deprecate(v => value = v, message, code) : undefined\n      });\n    }\n  }\n  return (/** @type {T} */newObj\n  );\n};\nexports.deprecateAllProperties = deprecateAllProperties;\n\n/**\n * @template T\n * @param {T} fakeHook fake hook implementation\n * @param {string=} message deprecation message (not deprecated when unset)\n * @param {string=} code deprecation code (not deprecated when unset)\n * @returns {FakeHook<T>} fake hook which redirects\n */\nexports.createFakeHook = (fakeHook, message, code) => {\n  if (message && code) {\n    fakeHook = deprecateAllProperties(fakeHook, message, code);\n  }\n  return Object.freeze(Object.assign(fakeHook, {\n    _fakeHook: /** @type {true} */true\n  }));\n};","map":{"version":3,"names":["util","require","deprecationCache","Map","createDeprecation","message","code","cached","get","undefined","fn","deprecate","set","COPY_METHODS","DISABLED_METHODS","exports","arrayToSetDeprecation","name","method","d","array","Array","from","prototype","apply","arguments","dPush","dLength","dIndexer","push","item","add","size","Error","createIndexGetter","index","i","defineIndexGetter","Object","defineProperty","value","indexerDefined","length","Symbol","isConcatSpreadable","createArrayToSetDeprecationSet","initialized","SetDeprecatedArray","Set","constructor","items","soonFrozenObjectDeprecation","obj","note","Proxy","target","property","receiver","Reflect","descriptor","deleteProperty","setPrototypeOf","proto","deprecateAllProperties","newObj","descriptors","getOwnPropertyDescriptors","keys","configurable","enumerable","writable","v","createFakeHook","fakeHook","freeze","assign","_fakeHook"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/util/deprecation.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\n\n/** @type {Map<string, Function>} */\nconst deprecationCache = new Map();\n\n/**\n * @typedef {Object} FakeHookMarker\n * @property {true} _fakeHook it's a fake hook\n */\n\n/** @template T @typedef {T & FakeHookMarker} FakeHook<T> */\n\n/**\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {Function} function to trigger deprecation\n */\nconst createDeprecation = (message, code) => {\n\tconst cached = deprecationCache.get(message);\n\tif (cached !== undefined) return cached;\n\tconst fn = util.deprecate(\n\t\t() => {},\n\t\tmessage,\n\t\t\"DEP_WEBPACK_DEPRECATION_\" + code\n\t);\n\tdeprecationCache.set(message, fn);\n\treturn fn;\n};\n\nconst COPY_METHODS = [\n\t\"concat\",\n\t\"entry\",\n\t\"filter\",\n\t\"find\",\n\t\"findIndex\",\n\t\"includes\",\n\t\"indexOf\",\n\t\"join\",\n\t\"lastIndexOf\",\n\t\"map\",\n\t\"reduce\",\n\t\"reduceRight\",\n\t\"slice\",\n\t\"some\"\n];\n\nconst DISABLED_METHODS = [\n\t\"copyWithin\",\n\t\"entries\",\n\t\"fill\",\n\t\"keys\",\n\t\"pop\",\n\t\"reverse\",\n\t\"shift\",\n\t\"splice\",\n\t\"sort\",\n\t\"unshift\"\n];\n\n/**\n * @param {any} set new set\n * @param {string} name property name\n * @returns {void}\n */\nexports.arrayToSetDeprecation = (set, name) => {\n\tfor (const method of COPY_METHODS) {\n\t\tif (set[method]) continue;\n\t\tconst d = createDeprecation(\n\t\t\t`${name} was changed from Array to Set (using Array method '${method}' is deprecated)`,\n\t\t\t\"ARRAY_TO_SET\"\n\t\t);\n\t\t/**\n\t\t * @deprecated\n\t\t * @this {Set}\n\t\t * @returns {number} count\n\t\t */\n\t\tset[method] = function () {\n\t\t\td();\n\t\t\tconst array = Array.from(this);\n\t\t\treturn Array.prototype[method].apply(array, arguments);\n\t\t};\n\t}\n\tconst dPush = createDeprecation(\n\t\t`${name} was changed from Array to Set (using Array method 'push' is deprecated)`,\n\t\t\"ARRAY_TO_SET_PUSH\"\n\t);\n\tconst dLength = createDeprecation(\n\t\t`${name} was changed from Array to Set (using Array property 'length' is deprecated)`,\n\t\t\"ARRAY_TO_SET_LENGTH\"\n\t);\n\tconst dIndexer = createDeprecation(\n\t\t`${name} was changed from Array to Set (indexing Array is deprecated)`,\n\t\t\"ARRAY_TO_SET_INDEXER\"\n\t);\n\t/**\n\t * @deprecated\n\t * @this {Set}\n\t * @returns {number} count\n\t */\n\tset.push = function () {\n\t\tdPush();\n\t\tfor (const item of Array.from(arguments)) {\n\t\t\tthis.add(item);\n\t\t}\n\t\treturn this.size;\n\t};\n\tfor (const method of DISABLED_METHODS) {\n\t\tif (set[method]) continue;\n\t\tset[method] = () => {\n\t\t\tthrow new Error(\n\t\t\t\t`${name} was changed from Array to Set (using Array method '${method}' is not possible)`\n\t\t\t);\n\t\t};\n\t}\n\tconst createIndexGetter = index => {\n\t\t/**\n\t\t * @this {Set} a Set\n\t\t * @returns {any} the value at this location\n\t\t */\n\t\tconst fn = function () {\n\t\t\tdIndexer();\n\t\t\tlet i = 0;\n\t\t\tfor (const item of this) {\n\t\t\t\tif (i++ === index) return item;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t\treturn fn;\n\t};\n\tconst defineIndexGetter = index => {\n\t\tObject.defineProperty(set, index, {\n\t\t\tget: createIndexGetter(index),\n\t\t\tset(value) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`${name} was changed from Array to Set (indexing Array with write is not possible)`\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\tdefineIndexGetter(0);\n\tlet indexerDefined = 1;\n\tObject.defineProperty(set, \"length\", {\n\t\tget() {\n\t\t\tdLength();\n\t\t\tconst length = this.size;\n\t\t\tfor (indexerDefined; indexerDefined < length + 1; indexerDefined++) {\n\t\t\t\tdefineIndexGetter(indexerDefined);\n\t\t\t}\n\t\t\treturn length;\n\t\t},\n\t\tset(value) {\n\t\t\tthrow new Error(\n\t\t\t\t`${name} was changed from Array to Set (writing to Array property 'length' is not possible)`\n\t\t\t);\n\t\t}\n\t});\n\tset[Symbol.isConcatSpreadable] = true;\n};\n\nexports.createArrayToSetDeprecationSet = name => {\n\tlet initialized = false;\n\tclass SetDeprecatedArray extends Set {\n\t\tconstructor(items) {\n\t\t\tsuper(items);\n\t\t\tif (!initialized) {\n\t\t\t\tinitialized = true;\n\t\t\t\texports.arrayToSetDeprecation(SetDeprecatedArray.prototype, name);\n\t\t\t}\n\t\t}\n\t}\n\treturn SetDeprecatedArray;\n};\n\n/**\n * @template T\n * @param {Object} obj object\n * @param {string} name property name\n * @param {string} code deprecation code\n * @param {string} note additional note\n * @returns {Object} frozen object with deprecation when modifying\n */\nexports.soonFrozenObjectDeprecation = (obj, name, code, note = \"\") => {\n\tconst message = `${name} will be frozen in future, all modifications are deprecated.${\n\t\tnote && `\\n${note}`\n\t}`;\n\treturn new Proxy(obj, {\n\t\tset: util.deprecate(\n\t\t\t(target, property, value, receiver) =>\n\t\t\t\tReflect.set(target, property, value, receiver),\n\t\t\tmessage,\n\t\t\tcode\n\t\t),\n\t\tdefineProperty: util.deprecate(\n\t\t\t(target, property, descriptor) =>\n\t\t\t\tReflect.defineProperty(target, property, descriptor),\n\t\t\tmessage,\n\t\t\tcode\n\t\t),\n\t\tdeleteProperty: util.deprecate(\n\t\t\t(target, property) => Reflect.deleteProperty(target, property),\n\t\t\tmessage,\n\t\t\tcode\n\t\t),\n\t\tsetPrototypeOf: util.deprecate(\n\t\t\t(target, proto) => Reflect.setPrototypeOf(target, proto),\n\t\t\tmessage,\n\t\t\tcode\n\t\t)\n\t});\n};\n\n/**\n * @template T\n * @param {T} obj object\n * @param {string} message deprecation message\n * @param {string} code deprecation code\n * @returns {T} object with property access deprecated\n */\nconst deprecateAllProperties = (obj, message, code) => {\n\tconst newObj = {};\n\tconst descriptors = Object.getOwnPropertyDescriptors(obj);\n\tfor (const name of Object.keys(descriptors)) {\n\t\tconst descriptor = descriptors[name];\n\t\tif (typeof descriptor.value === \"function\") {\n\t\t\tObject.defineProperty(newObj, name, {\n\t\t\t\t...descriptor,\n\t\t\t\tvalue: util.deprecate(descriptor.value, message, code)\n\t\t\t});\n\t\t} else if (descriptor.get || descriptor.set) {\n\t\t\tObject.defineProperty(newObj, name, {\n\t\t\t\t...descriptor,\n\t\t\t\tget: descriptor.get && util.deprecate(descriptor.get, message, code),\n\t\t\t\tset: descriptor.set && util.deprecate(descriptor.set, message, code)\n\t\t\t});\n\t\t} else {\n\t\t\tlet value = descriptor.value;\n\t\t\tObject.defineProperty(newObj, name, {\n\t\t\t\tconfigurable: descriptor.configurable,\n\t\t\t\tenumerable: descriptor.enumerable,\n\t\t\t\tget: util.deprecate(() => value, message, code),\n\t\t\t\tset: descriptor.writable\n\t\t\t\t\t? util.deprecate(v => (value = v), message, code)\n\t\t\t\t\t: undefined\n\t\t\t});\n\t\t}\n\t}\n\treturn /** @type {T} */ (newObj);\n};\nexports.deprecateAllProperties = deprecateAllProperties;\n\n/**\n * @template T\n * @param {T} fakeHook fake hook implementation\n * @param {string=} message deprecation message (not deprecated when unset)\n * @param {string=} code deprecation code (not deprecated when unset)\n * @returns {FakeHook<T>} fake hook which redirects\n */\nexports.createFakeHook = (fakeHook, message, code) => {\n\tif (message && code) {\n\t\tfakeHook = deprecateAllProperties(fakeHook, message, code);\n\t}\n\treturn Object.freeze(\n\t\tObject.assign(fakeHook, { _fakeHook: /** @type {true} */ (true) })\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
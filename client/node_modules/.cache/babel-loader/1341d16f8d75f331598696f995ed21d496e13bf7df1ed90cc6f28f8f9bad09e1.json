{"ast":null,"code":"\"use strict\";\n\nconst {\n  isIP\n} = require(\"net\");\nconst execa = require(\"execa\");\nconst args = {\n  v4: [\"-4\", \"r\"],\n  v6: [\"-6\", \"r\"]\n};\nconst parse = stdout => {\n  let result;\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const [_, gateway, iface] = /default via (.+?) dev (.+?)( |$)/.exec(line) || [];\n    if (gateway && isIP(gateway)) {\n      result = {\n        gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    }\n  });\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n  return result;\n};\nconst promise = async family => {\n  const {\n    stdout\n  } = await execa(\"ip\", args[family]);\n  return parse(stdout, family);\n};\nconst sync = family => {\n  const {\n    stdout\n  } = execa.sync(\"ip\", args[family]);\n  return parse(stdout);\n};\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");","map":{"version":3,"names":["isIP","require","execa","args","v4","v6","parse","stdout","result","trim","split","some","line","_","gateway","iface","exec","interface","Error","promise","family","sync","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/default-gateway/android.js"],"sourcesContent":["\"use strict\";\n\nconst {isIP} = require(\"net\");\nconst execa = require(\"execa\");\n\nconst args = {\n  v4: [\"-4\", \"r\"],\n  v6: [\"-6\", \"r\"],\n};\n\nconst parse = stdout => {\n  let result;\n\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const [_, gateway, iface] = /default via (.+?) dev (.+?)( |$)/.exec(line) || [];\n    if (gateway && isIP(gateway)) {\n      result = {gateway, interface: (iface ? iface : null)};\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(\"ip\", args[family]);\n  return parse(stdout, family);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(\"ip\", args[family]);\n  return parse(stdout);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAACA;AAAI,CAAC,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC7B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAME,IAAI,GAAG;EACXC,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC;EACfC,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG;AAChB,CAAC;AAED,MAAMC,KAAK,GAAGC,MAAM,IAAI;EACtB,IAAIC,MAAM;EAEV,CAACD,MAAM,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;IAC7C,MAAM,CAACC,CAAC,EAAEC,OAAO,EAAEC,KAAK,CAAC,GAAG,kCAAkC,CAACC,IAAI,CAACJ,IAAI,CAAC,IAAI,EAAE;IAC/E,IAAIE,OAAO,IAAId,IAAI,CAACc,OAAO,CAAC,EAAE;MAC5BN,MAAM,GAAG;QAACM,OAAO;QAAEG,SAAS,EAAGF,KAAK,GAAGA,KAAK,GAAG;MAAK,CAAC;MACrD,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,IAAI,CAACP,MAAM,EAAE;IACX,MAAM,IAAIU,KAAK,CAAC,qCAAqC,CAAC;EACxD;EAEA,OAAOV,MAAM;AACf,CAAC;AAED,MAAMW,OAAO,GAAG,MAAMC,MAAM,IAAI;EAC9B,MAAM;IAACb;EAAM,CAAC,GAAG,MAAML,KAAK,CAAC,IAAI,EAAEC,IAAI,CAACiB,MAAM,CAAC,CAAC;EAChD,OAAOd,KAAK,CAACC,MAAM,EAAEa,MAAM,CAAC;AAC9B,CAAC;AAED,MAAMC,IAAI,GAAGD,MAAM,IAAI;EACrB,MAAM;IAACb;EAAM,CAAC,GAAGL,KAAK,CAACmB,IAAI,CAAC,IAAI,EAAElB,IAAI,CAACiB,MAAM,CAAC,CAAC;EAC/C,OAAOd,KAAK,CAACC,MAAM,CAAC;AACtB,CAAC;AAEDe,MAAM,CAACC,OAAO,CAACnB,EAAE,GAAG,MAAMe,OAAO,CAAC,IAAI,CAAC;AACvCG,MAAM,CAACC,OAAO,CAAClB,EAAE,GAAG,MAAMc,OAAO,CAAC,IAAI,CAAC;AAEvCG,MAAM,CAACC,OAAO,CAACnB,EAAE,CAACiB,IAAI,GAAG,MAAMA,IAAI,CAAC,IAAI,CAAC;AACzCC,MAAM,CAACC,OAAO,CAAClB,EAAE,CAACgB,IAAI,GAAG,MAAMA,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
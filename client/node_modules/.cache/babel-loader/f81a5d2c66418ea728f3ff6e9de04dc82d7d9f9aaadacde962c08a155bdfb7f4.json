{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst {\n  ExportPresenceModes\n} = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {Object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | ImportExpression} node node with assertions\n * @returns {Record<string, any> | undefined} assertions\n */\nfunction getAssertions(node) {\n  // TODO remove cast when @types/estree has been updated to import assertions\n  const assertions = /** @type {{ assertions?: ImportAttributeNode[] }} */node.assertions;\n  if (assertions === undefined) {\n    return undefined;\n  }\n  const result = {};\n  for (const assertion of assertions) {\n    const key = assertion.key.type === \"Identifier\" ? assertion.key.name : assertion.key.value;\n    result[key] = assertion.value.value;\n  }\n  return result;\n}\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n  /**\n   * @param {JavascriptParserOptions} options options\n   */\n  constructor(options) {\n    this.exportPresenceMode = options.importExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.importExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n    this.strictThisContextOnImports = options.strictThisContextOnImports;\n  }\n\n  /**\n   * @param {JavascriptParser} parser the parser\n   * @returns {void}\n   */\n  apply(parser) {\n    const {\n      exportPresenceMode\n    } = this;\n    function getNonOptionalPart(members, membersOptionals) {\n      let i = 0;\n      while (i < members.length && membersOptionals[i] === false) i++;\n      return i !== members.length ? members.slice(0, i) : members;\n    }\n    function getNonOptionalMemberChain(node, count) {\n      while (count--) node = node.object;\n      return node;\n    }\n    parser.hooks.isPure.for(\"Identifier\").tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      const expr = /** @type {Identifier} */expression;\n      if (parser.isVariableDefined(expr.name) || parser.getTagData(expr.name, harmonySpecifierTag)) {\n        return true;\n      }\n    });\n    parser.hooks.import.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(parser.isAsiPosition(statement.range[0]) ? \";\" : \"\", statement.range);\n      clearDep.loc = statement.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      parser.unsetAsiPosition(statement.range[1]);\n      const assertions = getAssertions(statement);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.lastHarmonyImportOrder, assertions);\n      sideEffectDep.loc = statement.loc;\n      parser.state.module.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.importSpecifier.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source, id, name) => {\n      const ids = id === null ? [] : [id];\n      parser.tagVariable(name, harmonySpecifierTag, {\n        name,\n        source,\n        ids,\n        sourceOrder: parser.state.lastHarmonyImportOrder,\n        assertions: getAssertions(statement)\n      });\n      return true;\n    });\n    parser.hooks.binaryExpression.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      if (expression.operator !== \"in\") return;\n      const leftPartEvaluated = parser.evaluateExpression(expression.left);\n      if (leftPartEvaluated.couldHaveSideEffects()) return;\n      const leftPart = leftPartEvaluated.asString();\n      if (!leftPart) return;\n      const rightPart = parser.evaluateExpression(expression.right);\n      if (!rightPart.isIdentifier()) return;\n      const rootInfo = rightPart.rootInfo;\n      if (typeof rootInfo === \"string\" || !rootInfo || !rootInfo.tagInfo || rootInfo.tagInfo.tag !== harmonySpecifierTag) return;\n      const settings = rootInfo.tagInfo.data;\n      const members = rightPart.getMembers();\n      const dep = new HarmonyEvaluatedImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids.concat(members).concat([leftPart]), settings.name, expression.range, settings.assertions, \"in\");\n      dep.directImport = members.length === 0;\n      dep.asiSafe = !parser.isAsiPosition(expression.range[0]);\n      dep.loc = expression.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expression.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n      const settings = /** @type {HarmonySettings} */parser.currentTagData;\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n      dep.referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(expr);\n      dep.shorthand = parser.scope.inShorthand;\n      dep.directImport = true;\n      dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n      dep.loc = expr.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expressionMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expression, members, membersOptionals) => {\n      const settings = /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n      const expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(expression, members.length - nonOptionalMembers.length) : expression;\n      const ids = settings.ids.concat(nonOptionalMembers);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n      dep.referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(expr);\n      dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n      dep.loc = expr.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.callMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expression, members, membersOptionals) => {\n      const {\n        arguments: args,\n        callee\n      } = expression;\n      const settings = /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n      const expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(callee, members.length - nonOptionalMembers.length) : callee;\n      const ids = settings.ids.concat(nonOptionalMembers);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n      dep.directImport = members.length === 0;\n      dep.call = true;\n      dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n      // only in case when we strictly follow the spec we need a special case here\n      dep.namespaceObjectAsContext = members.length > 0 && this.strictThisContextOnImports;\n      dep.loc = expr.loc;\n      parser.state.module.addDependency(dep);\n      if (args) parser.walkExpressions(args);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    const {\n      hotAcceptCallback,\n      hotAcceptWithoutCallback\n    } = HotModuleReplacementPlugin.getParserHooks(parser);\n    hotAcceptCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(expr.range, dependencies, true);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n    hotAcceptWithoutCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(expr.range, dependencies, false);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n  }\n};\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\nmodule.exports.getAssertions = getAssertions;","map":{"version":3,"names":["HotModuleReplacementPlugin","require","InnerGraph","ConstDependency","HarmonyAcceptDependency","HarmonyAcceptImportDependency","HarmonyEvaluatedImportSpecifierDependency","HarmonyExports","ExportPresenceModes","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","harmonySpecifierTag","Symbol","getAssertions","node","assertions","undefined","result","assertion","key","type","name","value","module","exports","HarmonyImportDependencyParserPlugin","constructor","options","exportPresenceMode","importExportsPresence","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","strictThisContextOnImports","apply","parser","getNonOptionalPart","members","membersOptionals","i","length","slice","getNonOptionalMemberChain","count","object","hooks","isPure","for","tap","expression","expr","isVariableDefined","getTagData","import","statement","source","state","lastHarmonyImportOrder","clearDep","isAsiPosition","range","loc","addPresentationalDependency","unsetAsiPosition","sideEffectDep","addDependency","importSpecifier","id","ids","tagVariable","sourceOrder","binaryExpression","operator","leftPartEvaluated","evaluateExpression","left","couldHaveSideEffects","leftPart","asString","rightPart","right","isIdentifier","rootInfo","tagInfo","tag","settings","data","getMembers","dep","concat","directImport","asiSafe","onUsage","e","usedByExports","currentTagData","referencedPropertiesInDestructuring","destructuringAssignmentPropertiesFor","shorthand","scope","inShorthand","expressionMemberChain","nonOptionalMembers","callMemberChain","arguments","args","callee","call","namespaceObjectAsContext","walkExpressions","hotAcceptCallback","hotAcceptWithoutCallback","getParserHooks","requests","isEnabled","dependencies","map","request"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {Object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | ImportExpression} node node with assertions\n * @returns {Record<string, any> | undefined} assertions\n */\nfunction getAssertions(node) {\n\t// TODO remove cast when @types/estree has been updated to import assertions\n\tconst assertions = /** @type {{ assertions?: ImportAttributeNode[] }} */ (\n\t\tnode\n\t).assertions;\n\tif (assertions === undefined) {\n\t\treturn undefined;\n\t}\n\tconst result = {};\n\tfor (const assertion of assertions) {\n\t\tconst key =\n\t\t\tassertion.key.type === \"Identifier\"\n\t\t\t\t? assertion.key.name\n\t\t\t\t: assertion.key.value;\n\t\tresult[key] = assertion.value.value;\n\t}\n\treturn result;\n}\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options options\n\t */\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.importExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.importExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t: options.strictExportPresence\n\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t: ExportPresenceModes.AUTO;\n\t\tthis.strictThisContextOnImports = options.strictThisContextOnImports;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t * @returns {void}\n\t */\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\n\t\tfunction getNonOptionalPart(members, membersOptionals) {\n\t\t\tlet i = 0;\n\t\t\twhile (i < members.length && membersOptionals[i] === false) i++;\n\t\t\treturn i !== members.length ? members.slice(0, i) : members;\n\t\t}\n\n\t\tfunction getNonOptionalMemberChain(node, count) {\n\t\t\twhile (count--) node = node.object;\n\t\t\treturn node;\n\t\t}\n\n\t\tparser.hooks.isPure\n\t\t\t.for(\"Identifier\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n\t\t\t\tconst expr = /** @type {Identifier} */ (expression);\n\t\t\t\tif (\n\t\t\t\t\tparser.isVariableDefined(expr.name) ||\n\t\t\t\t\tparser.getTagData(expr.name, harmonySpecifierTag)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.import.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(statement.range[0]) ? \";\" : \"\",\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(statement.range[1]);\n\t\t\t\tconst assertions = getAssertions(statement);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tconst ids = id === null ? [] : [id];\n\t\t\t\tparser.tagVariable(name, harmonySpecifierTag, {\n\t\t\t\t\tname,\n\t\t\t\t\tsource,\n\t\t\t\t\tids,\n\t\t\t\t\tsourceOrder: parser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions: getAssertions(statement)\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.binaryExpression.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\texpression => {\n\t\t\t\tif (expression.operator !== \"in\") return;\n\n\t\t\t\tconst leftPartEvaluated = parser.evaluateExpression(expression.left);\n\t\t\t\tif (leftPartEvaluated.couldHaveSideEffects()) return;\n\t\t\t\tconst leftPart = leftPartEvaluated.asString();\n\t\t\t\tif (!leftPart) return;\n\n\t\t\t\tconst rightPart = parser.evaluateExpression(expression.right);\n\t\t\t\tif (!rightPart.isIdentifier()) return;\n\n\t\t\t\tconst rootInfo = rightPart.rootInfo;\n\t\t\t\tif (\n\t\t\t\t\ttypeof rootInfo === \"string\" ||\n\t\t\t\t\t!rootInfo ||\n\t\t\t\t\t!rootInfo.tagInfo ||\n\t\t\t\t\trootInfo.tagInfo.tag !== harmonySpecifierTag\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst settings = rootInfo.tagInfo.data;\n\t\t\t\tconst members = rightPart.getMembers();\n\t\t\t\tconst dep = new HarmonyEvaluatedImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids.concat(members).concat([leftPart]),\n\t\t\t\t\tsettings.name,\n\t\t\t\t\texpression.range,\n\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\"in\"\n\t\t\t\t);\n\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expression.range[0]);\n\t\t\t\tdep.loc = expression.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\texpr.range,\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions\n\t\t\t\t);\n\t\t\t\tdep.referencedPropertiesInDestructuring =\n\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(expr);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals) => {\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: expression;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions\n\t\t\t\t\t);\n\t\t\t\t\tdep.referencedPropertiesInDestructuring =\n\t\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(expr);\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals) => {\n\t\t\t\t\tconst { arguments: args, callee } = expression;\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\tcallee,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: callee;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions\n\t\t\t\t\t);\n\t\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\t\tdep.call = true;\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\t\t// only in case when we strictly follow the spec we need a special case here\n\t\t\t\t\tdep.namespaceObjectAsContext =\n\t\t\t\t\t\tmembers.length > 0 && this.strictThisContextOnImports;\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tif (args) parser.walkExpressions(args);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tconst { hotAcceptCallback, hotAcceptWithoutCallback } =\n\t\t\tHotModuleReplacementPlugin.getParserHooks(parser);\n\t\thotAcceptCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\thotAcceptWithoutCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\nmodule.exports.getAssertions = getAssertions;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
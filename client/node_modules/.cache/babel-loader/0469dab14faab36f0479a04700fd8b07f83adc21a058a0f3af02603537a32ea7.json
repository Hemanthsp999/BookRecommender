{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\nconst memfs = require(\"memfs\");\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\nfunction setupOutputFileSystem(context) {\n  let outputFileSystem;\n  if (context.options.outputFileSystem) {\n    const {\n      outputFileSystem: outputFileSystemFromOptions\n    } = context.options; // Todo remove when we drop webpack@4 support\n\n    if (typeof outputFileSystemFromOptions.join !== \"function\") {\n      throw new Error(\"Invalid options: options.outputFileSystem.join() method is expected\");\n    } // Todo remove when we drop webpack@4 support\n    // @ts-ignore\n\n    if (typeof outputFileSystemFromOptions.mkdirp !== \"function\") {\n      throw new Error(\"Invalid options: options.outputFileSystem.mkdirp() method is expected\");\n    }\n    outputFileSystem = outputFileSystemFromOptions;\n  } else {\n    outputFileSystem = memfs.createFsFromVolume(new memfs.Volume()); // TODO: remove when we drop webpack@4 support\n    // @ts-ignore\n\n    outputFileSystem.join = path.join.bind(path);\n  }\n  const compilers = /** @type {MultiCompiler} */\n  context.compiler.compilers || [context.compiler];\n  for (const compiler of compilers) {\n    compiler.outputFileSystem = outputFileSystem;\n  } // @ts-ignore\n  // eslint-disable-next-line no-param-reassign\n\n  context.outputFileSystem = outputFileSystem;\n}\nmodule.exports = setupOutputFileSystem;","map":{"version":3,"names":["path","require","memfs","setupOutputFileSystem","context","outputFileSystem","options","outputFileSystemFromOptions","join","Error","mkdirp","createFsFromVolume","Volume","bind","compilers","compiler","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-dev-middleware/dist/utils/setupOutputFileSystem.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\n\nconst memfs = require(\"memfs\");\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\n\nfunction setupOutputFileSystem(context) {\n  let outputFileSystem;\n\n  if (context.options.outputFileSystem) {\n    const {\n      outputFileSystem: outputFileSystemFromOptions\n    } = context.options; // Todo remove when we drop webpack@4 support\n\n    if (typeof outputFileSystemFromOptions.join !== \"function\") {\n      throw new Error(\"Invalid options: options.outputFileSystem.join() method is expected\");\n    } // Todo remove when we drop webpack@4 support\n    // @ts-ignore\n\n\n    if (typeof outputFileSystemFromOptions.mkdirp !== \"function\") {\n      throw new Error(\"Invalid options: options.outputFileSystem.mkdirp() method is expected\");\n    }\n\n    outputFileSystem = outputFileSystemFromOptions;\n  } else {\n    outputFileSystem = memfs.createFsFromVolume(new memfs.Volume()); // TODO: remove when we drop webpack@4 support\n    // @ts-ignore\n\n    outputFileSystem.join = path.join.bind(path);\n  }\n\n  const compilers =\n  /** @type {MultiCompiler} */\n  context.compiler.compilers || [context.compiler];\n\n  for (const compiler of compilers) {\n    compiler.outputFileSystem = outputFileSystem;\n  } // @ts-ignore\n  // eslint-disable-next-line no-param-reassign\n\n\n  context.outputFileSystem = outputFileSystem;\n}\n\nmodule.exports = setupOutputFileSystem;"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,SAASE,qBAAqBA,CAACC,OAAO,EAAE;EACtC,IAAIC,gBAAgB;EAEpB,IAAID,OAAO,CAACE,OAAO,CAACD,gBAAgB,EAAE;IACpC,MAAM;MACJA,gBAAgB,EAAEE;IACpB,CAAC,GAAGH,OAAO,CAACE,OAAO,CAAC,CAAC;;IAErB,IAAI,OAAOC,2BAA2B,CAACC,IAAI,KAAK,UAAU,EAAE;MAC1D,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;IACxF,CAAC,CAAC;IACF;;IAGA,IAAI,OAAOF,2BAA2B,CAACG,MAAM,KAAK,UAAU,EAAE;MAC5D,MAAM,IAAID,KAAK,CAAC,uEAAuE,CAAC;IAC1F;IAEAJ,gBAAgB,GAAGE,2BAA2B;EAChD,CAAC,MAAM;IACLF,gBAAgB,GAAGH,KAAK,CAACS,kBAAkB,CAAC,IAAIT,KAAK,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE;;IAEAP,gBAAgB,CAACG,IAAI,GAAGR,IAAI,CAACQ,IAAI,CAACK,IAAI,CAACb,IAAI,CAAC;EAC9C;EAEA,MAAMc,SAAS,GACf;EACAV,OAAO,CAACW,QAAQ,CAACD,SAAS,IAAI,CAACV,OAAO,CAACW,QAAQ,CAAC;EAEhD,KAAK,MAAMA,QAAQ,IAAID,SAAS,EAAE;IAChCC,QAAQ,CAACV,gBAAgB,GAAGA,gBAAgB;EAC9C,CAAC,CAAC;EACF;;EAGAD,OAAO,CAACC,gBAAgB,GAAGA,gBAAgB;AAC7C;AAEAW,MAAM,CAACC,OAAO,GAAGd,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [property, Reflect.getOwnPropertyDescriptor(nativePromisePrototype, property)]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nconst mergePromise = (spawned, promise) => {\n  for (const [property, descriptor] of descriptors) {\n    // Starting the main `promise` is deferred to avoid consuming streams\n    const value = typeof promise === 'function' ? function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return Reflect.apply(descriptor.value, promise(), args);\n    } : descriptor.value.bind(promise);\n    Reflect.defineProperty(spawned, property, {\n      ...descriptor,\n      value\n    });\n  }\n  return spawned;\n};\n\n// Use promises instead of `child_process` events\nconst getSpawnedPromise = spawned => {\n  return new Promise((resolve, reject) => {\n    spawned.on('exit', (exitCode, signal) => {\n      resolve({\n        exitCode,\n        signal\n      });\n    });\n    spawned.on('error', error => {\n      reject(error);\n    });\n    if (spawned.stdin) {\n      spawned.stdin.on('error', error => {\n        reject(error);\n      });\n    }\n  });\n};\nmodule.exports = {\n  mergePromise,\n  getSpawnedPromise\n};","map":{"version":3,"names":["nativePromisePrototype","constructor","prototype","descriptors","map","property","Reflect","getOwnPropertyDescriptor","mergePromise","spawned","promise","descriptor","value","_len","arguments","length","args","Array","_key","apply","bind","defineProperty","getSpawnedPromise","Promise","resolve","reject","on","exitCode","signal","error","stdin","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/execa/lib/promise.js"],"sourcesContent":["'use strict';\n\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property)\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nconst mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function' ?\n\t\t\t(...args) => Reflect.apply(descriptor.value, promise(), args) :\n\t\t\tdescriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n\n\treturn spawned;\n};\n\n// Use promises instead of `child_process` events\nconst getSpawnedPromise = spawned => {\n\treturn new Promise((resolve, reject) => {\n\t\tspawned.on('exit', (exitCode, signal) => {\n\t\t\tresolve({exitCode, signal});\n\t\t});\n\n\t\tspawned.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', error => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}\n\t});\n};\n\nmodule.exports = {\n\tmergePromise,\n\tgetSpawnedPromise\n};\n\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,sBAAsB,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAACC,WAAW,CAACC,SAAS;AACvE,MAAMC,WAAW,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAACC,GAAG,CAACC,QAAQ,IAAI,CAChEA,QAAQ,EACRC,OAAO,CAACC,wBAAwB,CAACP,sBAAsB,EAAEK,QAAQ,CAAC,CAClE,CAAC;;AAEF;AACA,MAAMG,YAAY,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAK;EAC1C,KAAK,MAAM,CAACL,QAAQ,EAAEM,UAAU,CAAC,IAAIR,WAAW,EAAE;IACjD;IACA,MAAMS,KAAK,GAAG,OAAOF,OAAO,KAAK,UAAU,GAC1C;MAAA,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAAA,OAAKZ,OAAO,CAACa,KAAK,CAACR,UAAU,CAACC,KAAK,EAAEF,OAAO,CAAC,CAAC,EAAEM,IAAI,CAAC;IAAA,IAC7DL,UAAU,CAACC,KAAK,CAACQ,IAAI,CAACV,OAAO,CAAC;IAE/BJ,OAAO,CAACe,cAAc,CAACZ,OAAO,EAAEJ,QAAQ,EAAE;MAAC,GAAGM,UAAU;MAAEC;IAAK,CAAC,CAAC;EAClE;EAEA,OAAOH,OAAO;AACf,CAAC;;AAED;AACA,MAAMa,iBAAiB,GAAGb,OAAO,IAAI;EACpC,OAAO,IAAIc,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACvChB,OAAO,CAACiB,EAAE,CAAC,MAAM,EAAE,CAACC,QAAQ,EAAEC,MAAM,KAAK;MACxCJ,OAAO,CAAC;QAACG,QAAQ;QAAEC;MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEFnB,OAAO,CAACiB,EAAE,CAAC,OAAO,EAAEG,KAAK,IAAI;MAC5BJ,MAAM,CAACI,KAAK,CAAC;IACd,CAAC,CAAC;IAEF,IAAIpB,OAAO,CAACqB,KAAK,EAAE;MAClBrB,OAAO,CAACqB,KAAK,CAACJ,EAAE,CAAC,OAAO,EAAEG,KAAK,IAAI;QAClCJ,MAAM,CAACI,KAAK,CAAC;MACd,CAAC,CAAC;IACH;EACD,CAAC,CAAC;AACH,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG;EAChBxB,YAAY;EACZc;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @typedef {Object} ModuleFactoryResult\n * @property {Module=} module the created module or unset if no module was created\n * @property {Set<string>=} fileDependencies\n * @property {Set<string>=} contextDependencies\n * @property {Set<string>=} missingDependencies\n * @property {boolean=} cacheable allow to use the unsafe cache\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\n * @property {string} issuer\n * @property {string | null=} issuerLayer\n * @property {string} compiler\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateData\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\n * @property {ResolveOptions=} resolveOptions\n * @property {string} context\n * @property {Dependency[]} dependencies\n */\nclass ModuleFactory {\n  /* istanbul ignore next */\n  /**\n   * @abstract\n   * @param {ModuleFactoryCreateData} data data object\n   * @param {function(Error=, ModuleFactoryResult=): void} callback callback\n   * @returns {void}\n   */\n  create(data, callback) {\n    const AbstractMethodError = require(\"./AbstractMethodError\");\n    throw new AbstractMethodError();\n  }\n}\nmodule.exports = ModuleFactory;","map":{"version":3,"names":["ModuleFactory","create","data","callback","AbstractMethodError","require","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ModuleFactory.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @typedef {Object} ModuleFactoryResult\n * @property {Module=} module the created module or unset if no module was created\n * @property {Set<string>=} fileDependencies\n * @property {Set<string>=} contextDependencies\n * @property {Set<string>=} missingDependencies\n * @property {boolean=} cacheable allow to use the unsafe cache\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateDataContextInfo\n * @property {string} issuer\n * @property {string | null=} issuerLayer\n * @property {string} compiler\n */\n\n/**\n * @typedef {Object} ModuleFactoryCreateData\n * @property {ModuleFactoryCreateDataContextInfo} contextInfo\n * @property {ResolveOptions=} resolveOptions\n * @property {string} context\n * @property {Dependency[]} dependencies\n */\n\nclass ModuleFactory {\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {ModuleFactoryCreateData} data data object\n\t * @param {function(Error=, ModuleFactoryResult=): void} callback callback\n\t * @returns {void}\n\t */\n\tcreate(data, callback) {\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nmodule.exports = ModuleFactory;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,aAAa,CAAC;EACnB;EACA;AACD;AACA;AACA;AACA;AACA;EACCC,MAAMA,CAACC,IAAI,EAAEC,QAAQ,EAAE;IACtB,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;IAC5D,MAAM,IAAID,mBAAmB,CAAC,CAAC;EAChC;AACD;AAEAE,MAAM,CAACC,OAAO,GAAGP,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}
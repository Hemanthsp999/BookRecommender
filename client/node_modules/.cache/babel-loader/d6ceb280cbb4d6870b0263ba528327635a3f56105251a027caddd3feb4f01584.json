{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource,\n  RawSource\n} = require(\"webpack-sources\");\nconst ExternalModule = require(\"./ExternalModule\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\nconst cache = new WeakMap();\nconst devtoolWarning = new RawSource(`/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n`);\nclass EvalDevToolModulePlugin {\n  constructor(options) {\n    this.namespace = options.namespace || \"\";\n    this.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\n    this.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack://[namespace]/[resourcePath]?[loaders]\";\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", compilation => {\n      const hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n      hooks.renderModuleContent.tap(\"EvalDevToolModulePlugin\", (source, module, _ref) => {\n        let {\n          runtimeTemplate,\n          chunkGraph\n        } = _ref;\n        const cacheEntry = cache.get(source);\n        if (cacheEntry !== undefined) return cacheEntry;\n        if (module instanceof ExternalModule) {\n          cache.set(source, source);\n          return source;\n        }\n        const content = source.source();\n        const str = ModuleFilenameHelpers.createFilename(module, {\n          moduleFilenameTemplate: this.moduleFilenameTemplate,\n          namespace: this.namespace\n        }, {\n          requestShortener: runtimeTemplate.requestShortener,\n          chunkGraph,\n          hashFunction: compilation.outputOptions.hashFunction\n        });\n        const footer = \"\\n\" + this.sourceUrlComment.replace(/\\[url\\]/g, encodeURI(str).replace(/%2F/g, \"/\").replace(/%20/g, \"_\").replace(/%5E/g, \"^\").replace(/%5C/g, \"\\\\\").replace(/^\\//, \"\"));\n        const result = new RawSource(`eval(${compilation.outputOptions.trustedTypes ? `${RuntimeGlobals.createScript}(${JSON.stringify(content + footer)})` : JSON.stringify(content + footer)});`);\n        cache.set(source, result);\n        return result;\n      });\n      hooks.inlineInRuntimeBailout.tap(\"EvalDevToolModulePlugin\", () => \"the eval devtool is used.\");\n      hooks.render.tap(\"EvalDevToolModulePlugin\", source => new ConcatSource(devtoolWarning, source));\n      hooks.chunkHash.tap(\"EvalDevToolModulePlugin\", (chunk, hash) => {\n        hash.update(\"EvalDevToolModulePlugin\");\n        hash.update(\"2\");\n      });\n      if (compilation.outputOptions.trustedTypes) {\n        compilation.hooks.additionalModuleRuntimeRequirements.tap(\"EvalDevToolModulePlugin\", (module, set, context) => {\n          set.add(RuntimeGlobals.createScript);\n        });\n      }\n    });\n  }\n}\nmodule.exports = EvalDevToolModulePlugin;","map":{"version":3,"names":["ConcatSource","RawSource","require","ExternalModule","ModuleFilenameHelpers","RuntimeGlobals","JavascriptModulesPlugin","cache","WeakMap","devtoolWarning","EvalDevToolModulePlugin","constructor","options","namespace","sourceUrlComment","moduleFilenameTemplate","apply","compiler","hooks","compilation","tap","getCompilationHooks","renderModuleContent","source","module","_ref","runtimeTemplate","chunkGraph","cacheEntry","get","undefined","set","content","str","createFilename","requestShortener","hashFunction","outputOptions","footer","replace","encodeURI","result","trustedTypes","createScript","JSON","stringify","inlineInRuntimeBailout","render","chunkHash","chunk","hash","update","additionalModuleRuntimeRequirements","context","add","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/EvalDevToolModulePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst ExternalModule = require(\"./ExternalModule\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @type {WeakMap<Source, Source>} */\nconst cache = new WeakMap();\n\nconst devtoolWarning = new RawSource(`/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n`);\n\nclass EvalDevToolModulePlugin {\n\tconstructor(options) {\n\t\tthis.namespace = options.namespace || \"\";\n\t\tthis.sourceUrlComment = options.sourceUrlComment || \"\\n//# sourceURL=[url]\";\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resourcePath]?[loaders]\";\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"EvalDevToolModulePlugin\", compilation => {\n\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\t\t\thooks.renderModuleContent.tap(\n\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t(source, module, { runtimeTemplate, chunkGraph }) => {\n\t\t\t\t\tconst cacheEntry = cache.get(source);\n\t\t\t\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\t\t\t\tif (module instanceof ExternalModule) {\n\t\t\t\t\t\tcache.set(source, source);\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t\tconst content = source.source();\n\t\t\t\t\tconst str = ModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmoduleFilenameTemplate: this.moduleFilenameTemplate,\n\t\t\t\t\t\t\tnamespace: this.namespace\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trequestShortener: runtimeTemplate.requestShortener,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\thashFunction: compilation.outputOptions.hashFunction\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tconst footer =\n\t\t\t\t\t\t\"\\n\" +\n\t\t\t\t\t\tthis.sourceUrlComment.replace(\n\t\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\t\tencodeURI(str)\n\t\t\t\t\t\t\t\t.replace(/%2F/g, \"/\")\n\t\t\t\t\t\t\t\t.replace(/%20/g, \"_\")\n\t\t\t\t\t\t\t\t.replace(/%5E/g, \"^\")\n\t\t\t\t\t\t\t\t.replace(/%5C/g, \"\\\\\")\n\t\t\t\t\t\t\t\t.replace(/^\\//, \"\")\n\t\t\t\t\t\t);\n\t\t\t\t\tconst result = new RawSource(\n\t\t\t\t\t\t`eval(${\n\t\t\t\t\t\t\tcompilation.outputOptions.trustedTypes\n\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScript}(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tcontent + footer\n\t\t\t\t\t\t\t\t  )})`\n\t\t\t\t\t\t\t\t: JSON.stringify(content + footer)\n\t\t\t\t\t\t});`\n\t\t\t\t\t);\n\t\t\t\t\tcache.set(source, result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t);\n\t\t\thooks.inlineInRuntimeBailout.tap(\n\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t() => \"the eval devtool is used.\"\n\t\t\t);\n\t\t\thooks.render.tap(\n\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\tsource => new ConcatSource(devtoolWarning, source)\n\t\t\t);\n\t\t\thooks.chunkHash.tap(\"EvalDevToolModulePlugin\", (chunk, hash) => {\n\t\t\t\thash.update(\"EvalDevToolModulePlugin\");\n\t\t\t\thash.update(\"2\");\n\t\t\t});\n\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\tcompilation.hooks.additionalModuleRuntimeRequirements.tap(\n\t\t\t\t\t\"EvalDevToolModulePlugin\",\n\t\t\t\t\t(module, set, context) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.createScript);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = EvalDevToolModulePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA,YAAY;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9D,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAME,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAChE,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMI,uBAAuB,GAAGJ,OAAO,CAAC,sCAAsC,CAAC;;AAE/E;AACA;;AAEA;AACA,MAAMK,KAAK,GAAG,IAAIC,OAAO,CAAC,CAAC;AAE3B,MAAMC,cAAc,GAAG,IAAIR,SAAS,CAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,MAAMS,uBAAuB,CAAC;EAC7BC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,IAAI,EAAE;IACxC,IAAI,CAACC,gBAAgB,GAAGF,OAAO,CAACE,gBAAgB,IAAI,uBAAuB;IAC3E,IAAI,CAACC,sBAAsB,GAC1BH,OAAO,CAACG,sBAAsB,IAC9B,gDAAgD;EAClD;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,yBAAyB,EAAED,WAAW,IAAI;MACxE,MAAMD,KAAK,GAAGZ,uBAAuB,CAACe,mBAAmB,CAACF,WAAW,CAAC;MACtED,KAAK,CAACI,mBAAmB,CAACF,GAAG,CAC5B,yBAAyB,EACzB,CAACG,MAAM,EAAEC,MAAM,EAAAC,IAAA,KAAsC;QAAA,IAApC;UAAEC,eAAe;UAAEC;QAAW,CAAC,GAAAF,IAAA;QAC/C,MAAMG,UAAU,GAAGrB,KAAK,CAACsB,GAAG,CAACN,MAAM,CAAC;QACpC,IAAIK,UAAU,KAAKE,SAAS,EAAE,OAAOF,UAAU;QAC/C,IAAIJ,MAAM,YAAYrB,cAAc,EAAE;UACrCI,KAAK,CAACwB,GAAG,CAACR,MAAM,EAAEA,MAAM,CAAC;UACzB,OAAOA,MAAM;QACd;QACA,MAAMS,OAAO,GAAGT,MAAM,CAACA,MAAM,CAAC,CAAC;QAC/B,MAAMU,GAAG,GAAG7B,qBAAqB,CAAC8B,cAAc,CAC/CV,MAAM,EACN;UACCT,sBAAsB,EAAE,IAAI,CAACA,sBAAsB;UACnDF,SAAS,EAAE,IAAI,CAACA;QACjB,CAAC,EACD;UACCsB,gBAAgB,EAAET,eAAe,CAACS,gBAAgB;UAClDR,UAAU;UACVS,YAAY,EAAEjB,WAAW,CAACkB,aAAa,CAACD;QACzC,CACD,CAAC;QACD,MAAME,MAAM,GACX,IAAI,GACJ,IAAI,CAACxB,gBAAgB,CAACyB,OAAO,CAC5B,UAAU,EACVC,SAAS,CAACP,GAAG,CAAC,CACZM,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CACrBA,OAAO,CAAC,KAAK,EAAE,EAAE,CACpB,CAAC;QACF,MAAME,MAAM,GAAG,IAAIxC,SAAS,CAC1B,QACAkB,WAAW,CAACkB,aAAa,CAACK,YAAY,GAClC,GAAErC,cAAc,CAACsC,YAAa,IAAGC,IAAI,CAACC,SAAS,CAChDb,OAAO,GAAGM,MACV,CAAE,GAAE,GACJM,IAAI,CAACC,SAAS,CAACb,OAAO,GAAGM,MAAM,CAClC,IACF,CAAC;QACD/B,KAAK,CAACwB,GAAG,CAACR,MAAM,EAAEkB,MAAM,CAAC;QACzB,OAAOA,MAAM;MACd,CACD,CAAC;MACDvB,KAAK,CAAC4B,sBAAsB,CAAC1B,GAAG,CAC/B,yBAAyB,EACzB,MAAM,2BACP,CAAC;MACDF,KAAK,CAAC6B,MAAM,CAAC3B,GAAG,CACf,yBAAyB,EACzBG,MAAM,IAAI,IAAIvB,YAAY,CAACS,cAAc,EAAEc,MAAM,CAClD,CAAC;MACDL,KAAK,CAAC8B,SAAS,CAAC5B,GAAG,CAAC,yBAAyB,EAAE,CAAC6B,KAAK,EAAEC,IAAI,KAAK;QAC/DA,IAAI,CAACC,MAAM,CAAC,yBAAyB,CAAC;QACtCD,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;MACjB,CAAC,CAAC;MACF,IAAIhC,WAAW,CAACkB,aAAa,CAACK,YAAY,EAAE;QAC3CvB,WAAW,CAACD,KAAK,CAACkC,mCAAmC,CAAChC,GAAG,CACxD,yBAAyB,EACzB,CAACI,MAAM,EAAEO,GAAG,EAAEsB,OAAO,KAAK;UACzBtB,GAAG,CAACuB,GAAG,CAACjD,cAAc,CAACsC,YAAY,CAAC;QACrC,CACD,CAAC;MACF;IACD,CAAC,CAAC;EACH;AACD;AAEAnB,MAAM,CAAC+B,OAAO,GAAG7C,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
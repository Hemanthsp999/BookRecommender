{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst LocalModule = require(\"./LocalModule\");\n\n/** @typedef {import(\"../javascript/JavascriptParser\").ParserState} ParserState */\n\n/**\n * @param {string} parent parent module\n * @param {string} mod module to resolve\n * @returns {string} resolved module\n */\nconst lookup = (parent, mod) => {\n  if (mod.charAt(0) !== \".\") return mod;\n  var path = parent.split(\"/\");\n  var segments = mod.split(\"/\");\n  path.pop();\n  for (let i = 0; i < segments.length; i++) {\n    const seg = segments[i];\n    if (seg === \"..\") {\n      path.pop();\n    } else if (seg !== \".\") {\n      path.push(seg);\n    }\n  }\n  return path.join(\"/\");\n};\n\n/**\n * @param {ParserState} state parser state\n * @param {string} name name\n * @returns {LocalModule} local module\n */\nexports.addLocalModule = (state, name) => {\n  if (!state.localModules) {\n    state.localModules = [];\n  }\n  const m = new LocalModule(name, state.localModules.length);\n  state.localModules.push(m);\n  return m;\n};\n\n/**\n * @param {ParserState} state parser state\n * @param {string} name name\n * @param {string} [namedModule] named module\n * @returns {LocalModule | null} local module or null\n */\nexports.getLocalModule = (state, name, namedModule) => {\n  if (!state.localModules) return null;\n  if (namedModule) {\n    // resolve dependency name relative to the defining named module\n    name = lookup(namedModule, name);\n  }\n  for (let i = 0; i < state.localModules.length; i++) {\n    if (state.localModules[i].name === name) {\n      return state.localModules[i];\n    }\n  }\n  return null;\n};","map":{"version":3,"names":["LocalModule","require","lookup","parent","mod","charAt","path","split","segments","pop","i","length","seg","push","join","exports","addLocalModule","state","name","localModules","m","getLocalModule","namedModule"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/LocalModulesHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst LocalModule = require(\"./LocalModule\");\n\n/** @typedef {import(\"../javascript/JavascriptParser\").ParserState} ParserState */\n\n/**\n * @param {string} parent parent module\n * @param {string} mod module to resolve\n * @returns {string} resolved module\n */\nconst lookup = (parent, mod) => {\n\tif (mod.charAt(0) !== \".\") return mod;\n\n\tvar path = parent.split(\"/\");\n\tvar segments = mod.split(\"/\");\n\tpath.pop();\n\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tconst seg = segments[i];\n\t\tif (seg === \"..\") {\n\t\t\tpath.pop();\n\t\t} else if (seg !== \".\") {\n\t\t\tpath.push(seg);\n\t\t}\n\t}\n\n\treturn path.join(\"/\");\n};\n\n/**\n * @param {ParserState} state parser state\n * @param {string} name name\n * @returns {LocalModule} local module\n */\nexports.addLocalModule = (state, name) => {\n\tif (!state.localModules) {\n\t\tstate.localModules = [];\n\t}\n\tconst m = new LocalModule(name, state.localModules.length);\n\tstate.localModules.push(m);\n\treturn m;\n};\n\n/**\n * @param {ParserState} state parser state\n * @param {string} name name\n * @param {string} [namedModule] named module\n * @returns {LocalModule | null} local module or null\n */\nexports.getLocalModule = (state, name, namedModule) => {\n\tif (!state.localModules) return null;\n\tif (namedModule) {\n\t\t// resolve dependency name relative to the defining named module\n\t\tname = lookup(namedModule, name);\n\t}\n\tfor (let i = 0; i < state.localModules.length; i++) {\n\t\tif (state.localModules[i].name === name) {\n\t\t\treturn state.localModules[i];\n\t\t}\n\t}\n\treturn null;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC/B,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAOD,GAAG;EAErC,IAAIE,IAAI,GAAGH,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;EAC5B,IAAIC,QAAQ,GAAGJ,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;EAC7BD,IAAI,CAACG,GAAG,CAAC,CAAC;EAEV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,MAAME,GAAG,GAAGJ,QAAQ,CAACE,CAAC,CAAC;IACvB,IAAIE,GAAG,KAAK,IAAI,EAAE;MACjBN,IAAI,CAACG,GAAG,CAAC,CAAC;IACX,CAAC,MAAM,IAAIG,GAAG,KAAK,GAAG,EAAE;MACvBN,IAAI,CAACO,IAAI,CAACD,GAAG,CAAC;IACf;EACD;EAEA,OAAON,IAAI,CAACQ,IAAI,CAAC,GAAG,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAC,OAAO,CAACC,cAAc,GAAG,CAACC,KAAK,EAAEC,IAAI,KAAK;EACzC,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;IACxBF,KAAK,CAACE,YAAY,GAAG,EAAE;EACxB;EACA,MAAMC,CAAC,GAAG,IAAIpB,WAAW,CAACkB,IAAI,EAAED,KAAK,CAACE,YAAY,CAACR,MAAM,CAAC;EAC1DM,KAAK,CAACE,YAAY,CAACN,IAAI,CAACO,CAAC,CAAC;EAC1B,OAAOA,CAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAL,OAAO,CAACM,cAAc,GAAG,CAACJ,KAAK,EAAEC,IAAI,EAAEI,WAAW,KAAK;EACtD,IAAI,CAACL,KAAK,CAACE,YAAY,EAAE,OAAO,IAAI;EACpC,IAAIG,WAAW,EAAE;IAChB;IACAJ,IAAI,GAAGhB,MAAM,CAACoB,WAAW,EAAEJ,IAAI,CAAC;EACjC;EACA,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,KAAK,CAACE,YAAY,CAACR,MAAM,EAAED,CAAC,EAAE,EAAE;IACnD,IAAIO,KAAK,CAACE,YAAY,CAACT,CAAC,CAAC,CAACQ,IAAI,KAAKA,IAAI,EAAE;MACxC,OAAOD,KAAK,CAACE,YAAY,CAACT,CAAC,CAAC;IAC7B;EACD;EACA,OAAO,IAAI;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
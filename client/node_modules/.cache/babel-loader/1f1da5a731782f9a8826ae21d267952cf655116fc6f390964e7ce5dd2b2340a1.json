{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst {\n  equals\n} = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst {\n  forEachRuntime,\n  subtractRuntime\n} = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n  return `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${Array.from(chunkGraph.getModuleChunksIterable(module), c => c.name || c.id || c.debugId).join(\", \") || \"none\"} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(chunkGraph.moduleGraph.getIncomingConnections(module), connection => `\\n - ${connection.originModule && connection.originModule.identifier()} ${connection.dependency && connection.dependency.type} ${connection.explanations && Array.from(connection.explanations).join(\", \") || \"\"}`).join(\"\")}`;\n};\n\n/**\n * @param {string|undefined} definition global object definition\n * @returns {string} save to use global object\n */\nfunction getGlobalObject(definition) {\n  if (!definition) return definition;\n  const trimmed = definition.trim();\n  if (\n  // identifier, we do not need real identifier regarding ECMAScript/Unicode\n  trimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n  // iife\n  // call expression\n  // expression in parentheses\n  trimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)) return trimmed;\n  return `Object(${trimmed})`;\n}\nclass RuntimeTemplate {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @param {OutputOptions} outputOptions the compilation output options\n   * @param {RequestShortener} requestShortener the request shortener\n   */\n  constructor(compilation, outputOptions, requestShortener) {\n    this.compilation = compilation;\n    this.outputOptions = outputOptions || {};\n    this.requestShortener = requestShortener;\n    this.globalObject = getGlobalObject(outputOptions.globalObject);\n    this.contentHashReplacement = \"X\".repeat(outputOptions.hashDigestLength);\n  }\n  isIIFE() {\n    return this.outputOptions.iife;\n  }\n  isModule() {\n    return this.outputOptions.module;\n  }\n  supportsConst() {\n    return this.outputOptions.environment.const;\n  }\n  supportsArrowFunction() {\n    return this.outputOptions.environment.arrowFunction;\n  }\n  supportsOptionalChaining() {\n    return this.outputOptions.environment.optionalChaining;\n  }\n  supportsForOf() {\n    return this.outputOptions.environment.forOf;\n  }\n  supportsDestructuring() {\n    return this.outputOptions.environment.destructuring;\n  }\n  supportsBigIntLiteral() {\n    return this.outputOptions.environment.bigIntLiteral;\n  }\n  supportsDynamicImport() {\n    return this.outputOptions.environment.dynamicImport;\n  }\n  supportsEcmaScriptModuleSyntax() {\n    return this.outputOptions.environment.module;\n  }\n  supportTemplateLiteral() {\n    return this.outputOptions.environment.templateLiteral;\n  }\n  returningFunction(returnValue) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return this.supportsArrowFunction() ? `(${args}) => (${returnValue})` : `function(${args}) { return ${returnValue}; }`;\n  }\n  basicFunction(args, body) {\n    return this.supportsArrowFunction() ? `(${args}) => {\\n${Template.indent(body)}\\n}` : `function(${args}) {\\n${Template.indent(body)}\\n}`;\n  }\n\n  /**\n   * @param {Array<string|{expr: string}>} args args\n   * @returns {string} result expression\n   */\n  concatenation() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const len = args.length;\n    if (len === 2) return this._es5Concatenation(args);\n    if (len === 0) return '\"\"';\n    if (len === 1) {\n      return typeof args[0] === \"string\" ? JSON.stringify(args[0]) : `\"\" + ${args[0].expr}`;\n    }\n    if (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n    // cost comparison between template literal and concatenation:\n    // both need equal surroundings: `xxx` vs \"xxx\"\n    // template literal has constant cost of 3 chars for each expression\n    // es5 concatenation has cost of 3 + n chars for n expressions in row\n    // when a es5 concatenation ends with an expression it reduces cost by 3\n    // when a es5 concatenation starts with an single expression it reduces cost by 3\n    // e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n    // e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n    let templateCost = 0;\n    let concatenationCost = 0;\n    let lastWasExpr = false;\n    for (const arg of args) {\n      const isExpr = typeof arg !== \"string\";\n      if (isExpr) {\n        templateCost += 3;\n        concatenationCost += lastWasExpr ? 1 : 4;\n      }\n      lastWasExpr = isExpr;\n    }\n    if (lastWasExpr) concatenationCost -= 3;\n    if (typeof args[0] !== \"string\" && typeof args[1] === \"string\") concatenationCost -= 3;\n    if (concatenationCost <= templateCost) return this._es5Concatenation(args);\n    return `\\`${args.map(arg => typeof arg === \"string\" ? arg : `\\${${arg.expr}}`).join(\"\")}\\``;\n  }\n\n  /**\n   * @param {Array<string|{expr: string}>} args args (len >= 2)\n   * @returns {string} result expression\n   * @private\n   */\n  _es5Concatenation(args) {\n    const str = args.map(arg => typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr).join(\" + \");\n\n    // when the first two args are expression, we need to prepend \"\" + to force string\n    // concatenation instead of number addition.\n    return typeof args[0] !== \"string\" && typeof args[1] !== \"string\" ? `\"\" + ${str}` : str;\n  }\n  expressionFunction(expression) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return this.supportsArrowFunction() ? `(${args}) => (${expression})` : `function(${args}) { ${expression}; }`;\n  }\n  emptyFunction() {\n    return this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n  }\n  destructureArray(items, value) {\n    return this.supportsDestructuring() ? `var [${items.join(\", \")}] = ${value};` : Template.asString(items.map((item, i) => `var ${item} = ${value}[${i}];`));\n  }\n  destructureObject(items, value) {\n    return this.supportsDestructuring() ? `var {${items.join(\", \")}} = ${value};` : Template.asString(items.map(item => `var ${item} = ${value}${propertyAccess([item])};`));\n  }\n  iife(args, body) {\n    return `(${this.basicFunction(args, body)})()`;\n  }\n  forEach(variable, array, body) {\n    return this.supportsForOf() ? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}` : `${array}.forEach(function(${variable}) {\\n${Template.indent(body)}\\n});`;\n  }\n\n  /**\n   * Add a comment\n   * @param {object} options Information content of the comment\n   * @param {string=} options.request request string used originally\n   * @param {string=} options.chunkName name of the chunk referenced\n   * @param {string=} options.chunkReason reason information of the chunk\n   * @param {string=} options.message additional message\n   * @param {string=} options.exportName name of the export\n   * @returns {string} comment\n   */\n  comment(_ref) {\n    let {\n      request,\n      chunkName,\n      chunkReason,\n      message,\n      exportName\n    } = _ref;\n    let content;\n    if (this.outputOptions.pathinfo) {\n      content = [message, request, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    } else {\n      content = [message, chunkName, chunkReason].filter(Boolean).map(item => this.requestShortener.shorten(item)).join(\" | \");\n    }\n    if (!content) return \"\";\n    if (this.outputOptions.pathinfo) {\n      return Template.toComment(content) + \" \";\n    } else {\n      return Template.toNormalComment(content) + \" \";\n    }\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error block\n   */\n  throwMissingModuleErrorBlock(_ref2) {\n    let {\n      request\n    } = _ref2;\n    const err = `Cannot find module '${request}'`;\n    return `var e = new Error(${JSON.stringify(err)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error function\n   */\n  throwMissingModuleErrorFunction(_ref3) {\n    let {\n      request\n    } = _ref3;\n    return `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock({\n      request\n    })} }`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error IIFE\n   */\n  missingModule(_ref4) {\n    let {\n      request\n    } = _ref4;\n    return `Object(${this.throwMissingModuleErrorFunction({\n      request\n    })}())`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error statement\n   */\n  missingModuleStatement(_ref5) {\n    let {\n      request\n    } = _ref5;\n    return `${this.missingModule({\n      request\n    })};\\n`;\n  }\n\n  /**\n   * @param {object} options generation options\n   * @param {string=} options.request request string used originally\n   * @returns {string} generated error code\n   */\n  missingModulePromise(_ref6) {\n    let {\n      request\n    } = _ref6;\n    return `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n      request\n    })})`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string=} options.idExpr expression to use as id expression\n   * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n   * @returns {string} the code\n   */\n  weakError(_ref7) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      idExpr,\n      type\n    } = _ref7;\n    const moduleId = chunkGraph.getModuleId(module);\n    const errorMessage = moduleId === null ? JSON.stringify(\"Module is not available (weak dependency)\") : idExpr ? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"` : JSON.stringify(`Module '${moduleId}' is not available (weak dependency)`);\n    const comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n    const errorStatements = `var e = new Error(${errorMessage}); ` + comment + \"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n    switch (type) {\n      case \"statements\":\n        return errorStatements;\n      case \"promise\":\n        return `Promise.resolve().then(${this.basicFunction(\"\", errorStatements)})`;\n      case \"expression\":\n        return this.iife(\"\", errorStatements);\n    }\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @returns {string} the expression\n   */\n  moduleId(_ref8) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak\n    } = _ref8;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        return \"null /* weak dependency, without id */\";\n      }\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    return `${this.comment({\n      request\n    })}${JSON.stringify(moduleId)}`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleRaw(_ref9) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    } = _ref9;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    runtimeRequirements.add(RuntimeGlobals.require);\n    return `${RuntimeGlobals.require}(${this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    })})`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleExports(_ref10) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    } = _ref10;\n    return this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      weak,\n      runtimeRequirements\n    });\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the expression\n   */\n  moduleNamespace(_ref11) {\n    let {\n      module,\n      chunkGraph,\n      request,\n      strict,\n      weak,\n      runtimeRequirements\n    } = _ref11;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"expression\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    switch (exportsType) {\n      case \"namespace\":\n        return this.moduleRaw({\n          module,\n          chunkGraph,\n          request,\n          weak,\n          runtimeRequirements\n        });\n      case \"default-with-named\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n      case \"dynamic\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        return `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n    }\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n   * @param {Module} options.module the module\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.message a message for the comment\n   * @param {boolean=} options.strict if the current module is in strict esm mode\n   * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} the promise expression\n   */\n  moduleNamespacePromise(_ref12) {\n    let {\n      chunkGraph,\n      block,\n      module,\n      request,\n      message,\n      strict,\n      weak,\n      runtimeRequirements\n    } = _ref12;\n    if (!module) {\n      return this.missingModulePromise({\n        request\n      });\n    }\n    const moduleId = chunkGraph.getModuleId(module);\n    if (moduleId === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"promise\"\n        });\n      }\n      throw new Error(`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const promise = this.blockPromise({\n      chunkGraph,\n      block,\n      message,\n      runtimeRequirements\n    });\n    let appending;\n    let idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n    const comment = this.comment({\n      request\n    });\n    let header = \"\";\n    if (weak) {\n      if (idExpr.length > 8) {\n        // 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n        header += `var id = ${idExpr}; `;\n        idExpr = \"id\";\n      }\n      runtimeRequirements.add(RuntimeGlobals.moduleFactories);\n      header += `if(!${RuntimeGlobals.moduleFactories}[${idExpr}]) { ${this.weakError({\n        module,\n        chunkGraph,\n        request,\n        idExpr,\n        type: \"statements\"\n      })} } `;\n    }\n    const moduleIdExpr = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n    let fakeType = 16;\n    switch (exportsType) {\n      case \"namespace\":\n        if (header) {\n          const rawModule = this.moduleRaw({\n            module,\n            chunkGraph,\n            request,\n            weak,\n            runtimeRequirements\n          });\n          appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n        } else {\n          runtimeRequirements.add(RuntimeGlobals.require);\n          appending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n        }\n        break;\n      case \"dynamic\":\n        fakeType |= 4;\n      /* fall through */\n      case \"default-with-named\":\n        fakeType |= 2;\n      /* fall through */\n      case \"default-only\":\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        if (chunkGraph.moduleGraph.isAsync(module)) {\n          if (header) {\n            const rawModule = this.moduleRaw({\n              module,\n              chunkGraph,\n              request,\n              weak,\n              runtimeRequirements\n            });\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${rawModule};`)})`;\n          } else {\n            runtimeRequirements.add(RuntimeGlobals.require);\n            appending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n          }\n          appending += `.then(${this.returningFunction(`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`, \"m\")})`;\n        } else {\n          fakeType |= 1;\n          if (header) {\n            const returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n            appending = `.then(${this.basicFunction(\"\", `${header}return ${returnExpression};`)})`;\n          } else {\n            appending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}, ${fakeType}))`;\n          }\n        }\n        break;\n    }\n    return `${promise || \"Promise.resolve()\"}${appending}`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n   * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  runtimeConditionExpression(_ref13) {\n    let {\n      chunkGraph,\n      runtimeCondition,\n      runtime,\n      runtimeRequirements\n    } = _ref13;\n    if (runtimeCondition === undefined) return \"true\";\n    if (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n    /** @type {Set<string>} */\n    const positiveRuntimeIds = new Set();\n    forEachRuntime(runtimeCondition, runtime => positiveRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`));\n    /** @type {Set<string>} */\n    const negativeRuntimeIds = new Set();\n    forEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime => negativeRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`));\n    runtimeRequirements.add(RuntimeGlobals.runtimeId);\n    return compileBooleanMatcher.fromLists(Array.from(positiveRuntimeIds), Array.from(negativeRuntimeIds))(RuntimeGlobals.runtimeId);\n  }\n\n  /**\n   *\n   * @param {Object} options options object\n   * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n   * @param {Module} options.module the module\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {string} options.request the request that should be printed as comment\n   * @param {string} options.importVar name of the import variable\n   * @param {Module} options.originModule module in which the statement is emitted\n   * @param {boolean=} options.weak true, if this is a weak dependency\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {[string, string]} the import statement and the compat statement\n   */\n  importStatement(_ref14) {\n    let {\n      update,\n      module,\n      chunkGraph,\n      request,\n      importVar,\n      originModule,\n      weak,\n      runtimeRequirements\n    } = _ref14;\n    if (!module) {\n      return [this.missingModuleStatement({\n        request\n      }), \"\"];\n    }\n    if (chunkGraph.getModuleId(module) === null) {\n      if (weak) {\n        // only weak referenced modules don't get an id\n        // we can always emit an error emitting code here\n        return [this.weakError({\n          module,\n          chunkGraph,\n          request,\n          type: \"statements\"\n        }), \"\"];\n      }\n      throw new Error(`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(module, chunkGraph)}`);\n    }\n    const moduleId = this.moduleId({\n      module,\n      chunkGraph,\n      request,\n      weak\n    });\n    const optDeclaration = update ? \"\" : \"var \";\n    const exportsType = module.getExportsType(chunkGraph.moduleGraph, originModule.buildMeta.strictHarmonyModule);\n    runtimeRequirements.add(RuntimeGlobals.require);\n    const importContent = `/* harmony import */ ${optDeclaration}${importVar} = ${RuntimeGlobals.require}(${moduleId});\\n`;\n    if (exportsType === \"dynamic\") {\n      runtimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n      return [importContent, `/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`];\n    }\n    return [importContent, \"\"];\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {ModuleGraph} options.moduleGraph the module graph\n   * @param {Module} options.module the module\n   * @param {string} options.request the request\n   * @param {string | string[]} options.exportName the export name\n   * @param {Module} options.originModule the origin module\n   * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n   * @param {boolean} options.isCall true, if expression will be called\n   * @param {boolean} options.callContext when false, call context will not be preserved\n   * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n   * @param {string} options.importVar the identifier name of the import variable\n   * @param {InitFragment[]} options.initFragments init fragments will be added here\n   * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  exportFromImport(_ref15) {\n    let {\n      moduleGraph,\n      module,\n      request,\n      exportName,\n      originModule,\n      asiSafe,\n      isCall,\n      callContext,\n      defaultInterop,\n      importVar,\n      initFragments,\n      runtime,\n      runtimeRequirements\n    } = _ref15;\n    if (!module) {\n      return this.missingModule({\n        request\n      });\n    }\n    if (!Array.isArray(exportName)) {\n      exportName = exportName ? [exportName] : [];\n    }\n    const exportsType = module.getExportsType(moduleGraph, originModule.buildMeta.strictHarmonyModule);\n    if (defaultInterop) {\n      if (exportName.length > 0 && exportName[0] === \"default\") {\n        switch (exportsType) {\n          case \"dynamic\":\n            if (isCall) {\n              return `${importVar}_default()${propertyAccess(exportName, 1)}`;\n            } else {\n              return asiSafe ? `(${importVar}_default()${propertyAccess(exportName, 1)})` : asiSafe === false ? `;(${importVar}_default()${propertyAccess(exportName, 1)})` : `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n            }\n          case \"default-only\":\n          case \"default-with-named\":\n            exportName = exportName.slice(1);\n            break;\n        }\n      } else if (exportName.length > 0) {\n        if (exportsType === \"default-only\") {\n          return \"/* non-default import from non-esm module */undefined\" + propertyAccess(exportName, 1);\n        } else if (exportsType !== \"namespace\" && exportName[0] === \"__esModule\") {\n          return \"/* __esModule */true\";\n        }\n      } else if (exportsType === \"default-only\" || exportsType === \"default-with-named\") {\n        runtimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n        initFragments.push(new InitFragment(`var ${importVar}_namespace_cache;\\n`, InitFragment.STAGE_CONSTANTS, -1, `${importVar}_namespace_cache`));\n        return `/*#__PURE__*/ ${asiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${RuntimeGlobals.createFakeNamespaceObject}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n      }\n    }\n    if (exportName.length > 0) {\n      const exportsInfo = moduleGraph.getExportsInfo(module);\n      const used = exportsInfo.getUsedName(exportName, runtime);\n      if (!used) {\n        const comment = Template.toNormalComment(`unused export ${propertyAccess(exportName)}`);\n        return `${comment} undefined`;\n      }\n      const comment = equals(used, exportName) ? \"\" : Template.toNormalComment(propertyAccess(exportName)) + \" \";\n      const access = `${importVar}${comment}${propertyAccess(used)}`;\n      if (isCall && callContext === false) {\n        return asiSafe ? `(0,${access})` : asiSafe === false ? `;(0,${access})` : `/*#__PURE__*/Object(${access})`;\n      }\n      return access;\n    } else {\n      return importVar;\n    }\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {string} options.message the message\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} expression\n   */\n  blockPromise(_ref16) {\n    let {\n      block,\n      message,\n      chunkGraph,\n      runtimeRequirements\n    } = _ref16;\n    if (!block) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n    const chunkGroup = chunkGraph.getBlockChunkGroup(block);\n    if (!chunkGroup || chunkGroup.chunks.length === 0) {\n      const comment = this.comment({\n        message\n      });\n      return `Promise.resolve(${comment.trim()})`;\n    }\n    const chunks = chunkGroup.chunks.filter(chunk => !chunk.hasRuntime() && chunk.id !== null);\n    const comment = this.comment({\n      message,\n      chunkName: block.chunkName\n    });\n    if (chunks.length === 1) {\n      const chunkId = JSON.stringify(chunks[0].id);\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      return `${RuntimeGlobals.ensureChunk}(${comment}${chunkId})`;\n    } else if (chunks.length > 0) {\n      runtimeRequirements.add(RuntimeGlobals.ensureChunk);\n      const requireChunkId = chunk => `${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)})`;\n      return `Promise.all(${comment.trim()}[${chunks.map(requireChunkId).join(\", \")}])`;\n    } else {\n      return `Promise.resolve(${comment.trim()})`;\n    }\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {AsyncDependenciesBlock} options.block the async block\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n  asyncModuleFactory(_ref17) {\n    let {\n      block,\n      chunkGraph,\n      runtimeRequirements,\n      request\n    } = _ref17;\n    const dep = block.dependencies[0];\n    const module = chunkGraph.moduleGraph.getModule(dep);\n    const ensureChunk = this.blockPromise({\n      block,\n      message: \"\",\n      chunkGraph,\n      runtimeRequirements\n    });\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(ensureChunk.startsWith(\"Promise.resolve(\") ? `${factory}` : `${ensureChunk}.then(${this.returningFunction(factory)})`);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {Dependency} options.dependency the dependency\n   * @param {ChunkGraph} options.chunkGraph the chunk graph\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @param {string=} options.request request string used originally\n   * @returns {string} expression\n   */\n  syncModuleFactory(_ref18) {\n    let {\n      dependency,\n      chunkGraph,\n      runtimeRequirements,\n      request\n    } = _ref18;\n    const module = chunkGraph.moduleGraph.getModule(dependency);\n    const factory = this.returningFunction(this.moduleRaw({\n      module,\n      chunkGraph,\n      request,\n      runtimeRequirements\n    }));\n    return this.returningFunction(factory);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {string} options.exportsArgument the name of the exports object\n   * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n   * @returns {string} statement\n   */\n  defineEsModuleFlagStatement(_ref19) {\n    let {\n      exportsArgument,\n      runtimeRequirements\n    } = _ref19;\n    runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n    runtimeRequirements.add(RuntimeGlobals.exports);\n    return `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n  }\n\n  /**\n   * @param {Object} options options object\n   * @param {Module} options.module the module\n   * @param {string} options.publicPath the public path\n   * @param {RuntimeSpec=} options.runtime runtime\n   * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n   * @returns {string} the url of the asset\n   */\n  assetUrl(_ref20) {\n    let {\n      publicPath,\n      runtime,\n      module,\n      codeGenerationResults\n    } = _ref20;\n    if (!module) {\n      return \"data:,\";\n    }\n    const codeGen = codeGenerationResults.get(module, runtime);\n    const {\n      data\n    } = codeGen;\n    const url = data.get(\"url\");\n    if (url) return url.toString();\n    const filename = data.get(\"filename\");\n    return publicPath + filename;\n  }\n}\nmodule.exports = RuntimeTemplate;","map":{"version":3,"names":["InitFragment","require","RuntimeGlobals","Template","equals","compileBooleanMatcher","propertyAccess","forEachRuntime","subtractRuntime","noModuleIdErrorMessage","module","chunkGraph","identifier","Array","from","getModuleChunksIterable","c","name","id","debugId","join","moduleGraph","getIncomingConnections","connection","originModule","dependency","type","explanations","getGlobalObject","definition","trimmed","trim","match","RuntimeTemplate","constructor","compilation","outputOptions","requestShortener","globalObject","contentHashReplacement","repeat","hashDigestLength","isIIFE","iife","isModule","supportsConst","environment","const","supportsArrowFunction","arrowFunction","supportsOptionalChaining","optionalChaining","supportsForOf","forOf","supportsDestructuring","destructuring","supportsBigIntLiteral","bigIntLiteral","supportsDynamicImport","dynamicImport","supportsEcmaScriptModuleSyntax","supportTemplateLiteral","templateLiteral","returningFunction","returnValue","args","arguments","length","undefined","basicFunction","body","indent","concatenation","_len","_key","len","_es5Concatenation","JSON","stringify","expr","templateCost","concatenationCost","lastWasExpr","arg","isExpr","map","str","expressionFunction","expression","emptyFunction","destructureArray","items","value","asString","item","i","destructureObject","forEach","variable","array","comment","_ref","request","chunkName","chunkReason","message","exportName","content","pathinfo","filter","Boolean","shorten","toComment","toNormalComment","throwMissingModuleErrorBlock","_ref2","err","throwMissingModuleErrorFunction","_ref3","missingModule","_ref4","missingModuleStatement","_ref5","missingModulePromise","_ref6","weakError","_ref7","idExpr","moduleId","getModuleId","errorMessage","errorStatements","_ref8","weak","Error","moduleRaw","_ref9","runtimeRequirements","add","moduleExports","_ref10","moduleNamespace","_ref11","strict","exportsType","getExportsType","createFakeNamespaceObject","moduleNamespacePromise","_ref12","block","promise","blockPromise","appending","header","moduleFactories","moduleIdExpr","fakeType","rawModule","isAsync","returnExpression","runtimeConditionExpression","_ref13","runtimeCondition","runtime","positiveRuntimeIds","Set","getRuntimeId","negativeRuntimeIds","runtimeId","fromLists","importStatement","_ref14","update","importVar","optDeclaration","buildMeta","strictHarmonyModule","importContent","compatGetDefaultExport","exportFromImport","_ref15","asiSafe","isCall","callContext","defaultInterop","initFragments","isArray","slice","push","STAGE_CONSTANTS","exportsInfo","getExportsInfo","used","getUsedName","access","_ref16","chunkGroup","getBlockChunkGroup","chunks","chunk","hasRuntime","chunkId","ensureChunk","requireChunkId","asyncModuleFactory","_ref17","dep","dependencies","getModule","factory","startsWith","syncModuleFactory","_ref18","defineEsModuleFlagStatement","_ref19","exportsArgument","makeNamespaceObject","exports","assetUrl","_ref20","publicPath","codeGenerationResults","codeGen","get","data","url","toString","filename"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/RuntimeTemplate.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InitFragment = require(\"./InitFragment\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst { equals } = require(\"./util/ArrayHelpers\");\nconst compileBooleanMatcher = require(\"./util/compileBooleanMatcher\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { forEachRuntime, subtractRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {Module} module the module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {string} error message\n */\nconst noModuleIdErrorMessage = (module, chunkGraph) => {\n\treturn `Module ${module.identifier()} has no id assigned.\nThis should not happen.\nIt's in these chunks: ${\n\t\tArray.from(\n\t\t\tchunkGraph.getModuleChunksIterable(module),\n\t\t\tc => c.name || c.id || c.debugId\n\t\t).join(\", \") || \"none\"\n\t} (If module is in no chunk this indicates a bug in some chunk/module optimization logic)\nModule has these incoming connections: ${Array.from(\n\t\tchunkGraph.moduleGraph.getIncomingConnections(module),\n\t\tconnection =>\n\t\t\t`\\n - ${\n\t\t\t\tconnection.originModule && connection.originModule.identifier()\n\t\t\t} ${connection.dependency && connection.dependency.type} ${\n\t\t\t\t(connection.explanations &&\n\t\t\t\t\tArray.from(connection.explanations).join(\", \")) ||\n\t\t\t\t\"\"\n\t\t\t}`\n\t).join(\"\")}`;\n};\n\n/**\n * @param {string|undefined} definition global object definition\n * @returns {string} save to use global object\n */\nfunction getGlobalObject(definition) {\n\tif (!definition) return definition;\n\tconst trimmed = definition.trim();\n\n\tif (\n\t\t// identifier, we do not need real identifier regarding ECMAScript/Unicode\n\t\ttrimmed.match(/^[_\\p{L}][_0-9\\p{L}]*$/iu) ||\n\t\t// iife\n\t\t// call expression\n\t\t// expression in parentheses\n\t\ttrimmed.match(/^([_\\p{L}][_0-9\\p{L}]*)?\\(.*\\)$/iu)\n\t)\n\t\treturn trimmed;\n\n\treturn `Object(${trimmed})`;\n}\n\nclass RuntimeTemplate {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @param {OutputOptions} outputOptions the compilation output options\n\t * @param {RequestShortener} requestShortener the request shortener\n\t */\n\tconstructor(compilation, outputOptions, requestShortener) {\n\t\tthis.compilation = compilation;\n\t\tthis.outputOptions = outputOptions || {};\n\t\tthis.requestShortener = requestShortener;\n\t\tthis.globalObject = getGlobalObject(outputOptions.globalObject);\n\t\tthis.contentHashReplacement = \"X\".repeat(outputOptions.hashDigestLength);\n\t}\n\n\tisIIFE() {\n\t\treturn this.outputOptions.iife;\n\t}\n\n\tisModule() {\n\t\treturn this.outputOptions.module;\n\t}\n\n\tsupportsConst() {\n\t\treturn this.outputOptions.environment.const;\n\t}\n\n\tsupportsArrowFunction() {\n\t\treturn this.outputOptions.environment.arrowFunction;\n\t}\n\n\tsupportsOptionalChaining() {\n\t\treturn this.outputOptions.environment.optionalChaining;\n\t}\n\n\tsupportsForOf() {\n\t\treturn this.outputOptions.environment.forOf;\n\t}\n\n\tsupportsDestructuring() {\n\t\treturn this.outputOptions.environment.destructuring;\n\t}\n\n\tsupportsBigIntLiteral() {\n\t\treturn this.outputOptions.environment.bigIntLiteral;\n\t}\n\n\tsupportsDynamicImport() {\n\t\treturn this.outputOptions.environment.dynamicImport;\n\t}\n\n\tsupportsEcmaScriptModuleSyntax() {\n\t\treturn this.outputOptions.environment.module;\n\t}\n\n\tsupportTemplateLiteral() {\n\t\treturn this.outputOptions.environment.templateLiteral;\n\t}\n\n\treturningFunction(returnValue, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${returnValue})`\n\t\t\t: `function(${args}) { return ${returnValue}; }`;\n\t}\n\n\tbasicFunction(args, body) {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => {\\n${Template.indent(body)}\\n}`\n\t\t\t: `function(${args}) {\\n${Template.indent(body)}\\n}`;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args\n\t * @returns {string} result expression\n\t */\n\tconcatenation(...args) {\n\t\tconst len = args.length;\n\n\t\tif (len === 2) return this._es5Concatenation(args);\n\t\tif (len === 0) return '\"\"';\n\t\tif (len === 1) {\n\t\t\treturn typeof args[0] === \"string\"\n\t\t\t\t? JSON.stringify(args[0])\n\t\t\t\t: `\"\" + ${args[0].expr}`;\n\t\t}\n\t\tif (!this.supportTemplateLiteral()) return this._es5Concatenation(args);\n\n\t\t// cost comparison between template literal and concatenation:\n\t\t// both need equal surroundings: `xxx` vs \"xxx\"\n\t\t// template literal has constant cost of 3 chars for each expression\n\t\t// es5 concatenation has cost of 3 + n chars for n expressions in row\n\t\t// when a es5 concatenation ends with an expression it reduces cost by 3\n\t\t// when a es5 concatenation starts with an single expression it reduces cost by 3\n\t\t// e. g. `${a}${b}${c}` (3*3 = 9) is longer than \"\"+a+b+c ((3+3)-3 = 3)\n\t\t// e. g. `x${a}x${b}x${c}x` (3*3 = 9) is shorter than \"x\"+a+\"x\"+b+\"x\"+c+\"x\" (4+4+4 = 12)\n\n\t\tlet templateCost = 0;\n\t\tlet concatenationCost = 0;\n\n\t\tlet lastWasExpr = false;\n\t\tfor (const arg of args) {\n\t\t\tconst isExpr = typeof arg !== \"string\";\n\t\t\tif (isExpr) {\n\t\t\t\ttemplateCost += 3;\n\t\t\t\tconcatenationCost += lastWasExpr ? 1 : 4;\n\t\t\t}\n\t\t\tlastWasExpr = isExpr;\n\t\t}\n\t\tif (lastWasExpr) concatenationCost -= 3;\n\t\tif (typeof args[0] !== \"string\" && typeof args[1] === \"string\")\n\t\t\tconcatenationCost -= 3;\n\n\t\tif (concatenationCost <= templateCost) return this._es5Concatenation(args);\n\n\t\treturn `\\`${args\n\t\t\t.map(arg => (typeof arg === \"string\" ? arg : `\\${${arg.expr}}`))\n\t\t\t.join(\"\")}\\``;\n\t}\n\n\t/**\n\t * @param {Array<string|{expr: string}>} args args (len >= 2)\n\t * @returns {string} result expression\n\t * @private\n\t */\n\t_es5Concatenation(args) {\n\t\tconst str = args\n\t\t\t.map(arg => (typeof arg === \"string\" ? JSON.stringify(arg) : arg.expr))\n\t\t\t.join(\" + \");\n\n\t\t// when the first two args are expression, we need to prepend \"\" + to force string\n\t\t// concatenation instead of number addition.\n\t\treturn typeof args[0] !== \"string\" && typeof args[1] !== \"string\"\n\t\t\t? `\"\" + ${str}`\n\t\t\t: str;\n\t}\n\n\texpressionFunction(expression, args = \"\") {\n\t\treturn this.supportsArrowFunction()\n\t\t\t? `(${args}) => (${expression})`\n\t\t\t: `function(${args}) { ${expression}; }`;\n\t}\n\n\temptyFunction() {\n\t\treturn this.supportsArrowFunction() ? \"x => {}\" : \"function() {}\";\n\t}\n\n\tdestructureArray(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var [${items.join(\", \")}] = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map((item, i) => `var ${item} = ${value}[${i}];`)\n\t\t\t  );\n\t}\n\n\tdestructureObject(items, value) {\n\t\treturn this.supportsDestructuring()\n\t\t\t? `var {${items.join(\", \")}} = ${value};`\n\t\t\t: Template.asString(\n\t\t\t\t\titems.map(item => `var ${item} = ${value}${propertyAccess([item])};`)\n\t\t\t  );\n\t}\n\n\tiife(args, body) {\n\t\treturn `(${this.basicFunction(args, body)})()`;\n\t}\n\n\tforEach(variable, array, body) {\n\t\treturn this.supportsForOf()\n\t\t\t? `for(const ${variable} of ${array}) {\\n${Template.indent(body)}\\n}`\n\t\t\t: `${array}.forEach(function(${variable}) {\\n${Template.indent(\n\t\t\t\t\tbody\n\t\t\t  )}\\n});`;\n\t}\n\n\t/**\n\t * Add a comment\n\t * @param {object} options Information content of the comment\n\t * @param {string=} options.request request string used originally\n\t * @param {string=} options.chunkName name of the chunk referenced\n\t * @param {string=} options.chunkReason reason information of the chunk\n\t * @param {string=} options.message additional message\n\t * @param {string=} options.exportName name of the export\n\t * @returns {string} comment\n\t */\n\tcomment({ request, chunkName, chunkReason, message, exportName }) {\n\t\tlet content;\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\tcontent = [message, request, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t} else {\n\t\t\tcontent = [message, chunkName, chunkReason]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(item => this.requestShortener.shorten(item))\n\t\t\t\t.join(\" | \");\n\t\t}\n\t\tif (!content) return \"\";\n\t\tif (this.outputOptions.pathinfo) {\n\t\t\treturn Template.toComment(content) + \" \";\n\t\t} else {\n\t\t\treturn Template.toNormalComment(content) + \" \";\n\t\t}\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error block\n\t */\n\tthrowMissingModuleErrorBlock({ request }) {\n\t\tconst err = `Cannot find module '${request}'`;\n\t\treturn `var e = new Error(${JSON.stringify(\n\t\t\terr\n\t\t)}); e.code = 'MODULE_NOT_FOUND'; throw e;`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error function\n\t */\n\tthrowMissingModuleErrorFunction({ request }) {\n\t\treturn `function webpackMissingModule() { ${this.throwMissingModuleErrorBlock(\n\t\t\t{ request }\n\t\t)} }`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error IIFE\n\t */\n\tmissingModule({ request }) {\n\t\treturn `Object(${this.throwMissingModuleErrorFunction({ request })}())`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error statement\n\t */\n\tmissingModuleStatement({ request }) {\n\t\treturn `${this.missingModule({ request })};\\n`;\n\t}\n\n\t/**\n\t * @param {object} options generation options\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} generated error code\n\t */\n\tmissingModulePromise({ request }) {\n\t\treturn `Promise.resolve().then(${this.throwMissingModuleErrorFunction({\n\t\t\trequest\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string=} options.idExpr expression to use as id expression\n\t * @param {\"expression\" | \"promise\" | \"statements\"} options.type which kind of code should be returned\n\t * @returns {string} the code\n\t */\n\tweakError({ module, chunkGraph, request, idExpr, type }) {\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tconst errorMessage =\n\t\t\tmoduleId === null\n\t\t\t\t? JSON.stringify(\"Module is not available (weak dependency)\")\n\t\t\t\t: idExpr\n\t\t\t\t? `\"Module '\" + ${idExpr} + \"' is not available (weak dependency)\"`\n\t\t\t\t: JSON.stringify(\n\t\t\t\t\t\t`Module '${moduleId}' is not available (weak dependency)`\n\t\t\t\t  );\n\t\tconst comment = request ? Template.toNormalComment(request) + \" \" : \"\";\n\t\tconst errorStatements =\n\t\t\t`var e = new Error(${errorMessage}); ` +\n\t\t\tcomment +\n\t\t\t\"e.code = 'MODULE_NOT_FOUND'; throw e;\";\n\t\tswitch (type) {\n\t\t\tcase \"statements\":\n\t\t\t\treturn errorStatements;\n\t\t\tcase \"promise\":\n\t\t\t\treturn `Promise.resolve().then(${this.basicFunction(\n\t\t\t\t\t\"\",\n\t\t\t\t\terrorStatements\n\t\t\t\t)})`;\n\t\t\tcase \"expression\":\n\t\t\t\treturn this.iife(\"\", errorStatements);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @returns {string} the expression\n\t */\n\tmoduleId({ module, chunkGraph, request, weak }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\treturn \"null /* weak dependency, without id */\";\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\treturn `${this.comment({ request })}${JSON.stringify(moduleId)}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleRaw({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleId(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\treturn `${RuntimeGlobals.require}(${this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t})})`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleExports({ module, chunkGraph, request, weak, runtimeRequirements }) {\n\t\treturn this.moduleRaw({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak,\n\t\t\truntimeRequirements\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the expression\n\t */\n\tmoduleNamespace({\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"expression\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespace(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\treturn this.moduleRaw({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\tweak,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t});\n\t\t\tcase \"default-with-named\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 3)`;\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 1)`;\n\t\t\tcase \"dynamic\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\treturn `${RuntimeGlobals.createFakeNamespaceObject}(${moduleId}, 7)`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {AsyncDependenciesBlock=} options.block the current dependencies block\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.message a message for the comment\n\t * @param {boolean=} options.strict if the current module is in strict esm mode\n\t * @param {boolean=} options.weak if the dependency is weak (will create a nice error message)\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} the promise expression\n\t */\n\tmoduleNamespacePromise({\n\t\tchunkGraph,\n\t\tblock,\n\t\tmodule,\n\t\trequest,\n\t\tmessage,\n\t\tstrict,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModulePromise({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tif (moduleId === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn this.weakError({\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest,\n\t\t\t\t\ttype: \"promise\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.moduleNamespacePromise(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst promise = this.blockPromise({\n\t\t\tchunkGraph,\n\t\t\tblock,\n\t\t\tmessage,\n\t\t\truntimeRequirements\n\t\t});\n\n\t\tlet appending;\n\t\tlet idExpr = JSON.stringify(chunkGraph.getModuleId(module));\n\t\tconst comment = this.comment({\n\t\t\trequest\n\t\t});\n\t\tlet header = \"\";\n\t\tif (weak) {\n\t\t\tif (idExpr.length > 8) {\n\t\t\t\t// 'var x=\"nnnnnn\";x,\"+x+\",x' vs '\"nnnnnn\",nnnnnn,\"nnnnnn\"'\n\t\t\t\theader += `var id = ${idExpr}; `;\n\t\t\t\tidExpr = \"id\";\n\t\t\t}\n\t\t\truntimeRequirements.add(RuntimeGlobals.moduleFactories);\n\t\t\theader += `if(!${\n\t\t\t\tRuntimeGlobals.moduleFactories\n\t\t\t}[${idExpr}]) { ${this.weakError({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\tidExpr,\n\t\t\t\ttype: \"statements\"\n\t\t\t})} } `;\n\t\t}\n\t\tconst moduleIdExpr = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst exportsType = module.getExportsType(chunkGraph.moduleGraph, strict);\n\t\tlet fakeType = 16;\n\t\tswitch (exportsType) {\n\t\t\tcase \"namespace\":\n\t\t\t\tif (header) {\n\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tweak,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t});\n\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\tappending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"dynamic\":\n\t\t\t\tfakeType |= 4;\n\t\t\t/* fall through */\n\t\t\tcase \"default-with-named\":\n\t\t\t\tfakeType |= 2;\n\t\t\t/* fall through */\n\t\t\tcase \"default-only\":\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tif (chunkGraph.moduleGraph.isAsync(module)) {\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst rawModule = this.moduleRaw({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\tweak,\n\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t});\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${rawModule};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\t\t\t\t\tappending = `.then(${RuntimeGlobals.require}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}))`;\n\t\t\t\t\t}\n\t\t\t\t\tappending += `.then(${this.returningFunction(\n\t\t\t\t\t\t`${RuntimeGlobals.createFakeNamespaceObject}(m, ${fakeType})`,\n\t\t\t\t\t\t\"m\"\n\t\t\t\t\t)})`;\n\t\t\t\t} else {\n\t\t\t\t\tfakeType |= 1;\n\t\t\t\t\tif (header) {\n\t\t\t\t\t\tconst returnExpression = `${RuntimeGlobals.createFakeNamespaceObject}(${moduleIdExpr}, ${fakeType})`;\n\t\t\t\t\t\tappending = `.then(${this.basicFunction(\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t`${header}return ${returnExpression};`\n\t\t\t\t\t\t)})`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tappending = `.then(${RuntimeGlobals.createFakeNamespaceObject}.bind(${RuntimeGlobals.require}, ${comment}${idExpr}, ${fakeType}))`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn `${promise || \"Promise.resolve()\"}${appending}`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {RuntimeSpec=} options.runtime runtime for which this code will be generated\n\t * @param {RuntimeSpec | boolean=} options.runtimeCondition only execute the statement in some runtimes\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\truntimeConditionExpression({\n\t\tchunkGraph,\n\t\truntimeCondition,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (runtimeCondition === undefined) return \"true\";\n\t\tif (typeof runtimeCondition === \"boolean\") return `${runtimeCondition}`;\n\t\t/** @type {Set<string>} */\n\t\tconst positiveRuntimeIds = new Set();\n\t\tforEachRuntime(runtimeCondition, runtime =>\n\t\t\tpositiveRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`)\n\t\t);\n\t\t/** @type {Set<string>} */\n\t\tconst negativeRuntimeIds = new Set();\n\t\tforEachRuntime(subtractRuntime(runtime, runtimeCondition), runtime =>\n\t\t\tnegativeRuntimeIds.add(`${chunkGraph.getRuntimeId(runtime)}`)\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.runtimeId);\n\t\treturn compileBooleanMatcher.fromLists(\n\t\t\tArray.from(positiveRuntimeIds),\n\t\t\tArray.from(negativeRuntimeIds)\n\t\t)(RuntimeGlobals.runtimeId);\n\t}\n\n\t/**\n\t *\n\t * @param {Object} options options object\n\t * @param {boolean=} options.update whether a new variable should be created or the existing one updated\n\t * @param {Module} options.module the module\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {string} options.request the request that should be printed as comment\n\t * @param {string} options.importVar name of the import variable\n\t * @param {Module} options.originModule module in which the statement is emitted\n\t * @param {boolean=} options.weak true, if this is a weak dependency\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {[string, string]} the import statement and the compat statement\n\t */\n\timportStatement({\n\t\tupdate,\n\t\tmodule,\n\t\tchunkGraph,\n\t\trequest,\n\t\timportVar,\n\t\toriginModule,\n\t\tweak,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn [\n\t\t\t\tthis.missingModuleStatement({\n\t\t\t\t\trequest\n\t\t\t\t}),\n\t\t\t\t\"\"\n\t\t\t];\n\t\t}\n\t\tif (chunkGraph.getModuleId(module) === null) {\n\t\t\tif (weak) {\n\t\t\t\t// only weak referenced modules don't get an id\n\t\t\t\t// we can always emit an error emitting code here\n\t\t\t\treturn [\n\t\t\t\t\tthis.weakError({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\ttype: \"statements\"\n\t\t\t\t\t}),\n\t\t\t\t\t\"\"\n\t\t\t\t];\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`RuntimeTemplate.importStatement(): ${noModuleIdErrorMessage(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t\tconst moduleId = this.moduleId({\n\t\t\tmodule,\n\t\t\tchunkGraph,\n\t\t\trequest,\n\t\t\tweak\n\t\t});\n\t\tconst optDeclaration = update ? \"\" : \"var \";\n\n\t\tconst exportsType = module.getExportsType(\n\t\t\tchunkGraph.moduleGraph,\n\t\t\toriginModule.buildMeta.strictHarmonyModule\n\t\t);\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\tconst importContent = `/* harmony import */ ${optDeclaration}${importVar} = ${RuntimeGlobals.require}(${moduleId});\\n`;\n\n\t\tif (exportsType === \"dynamic\") {\n\t\t\truntimeRequirements.add(RuntimeGlobals.compatGetDefaultExport);\n\t\t\treturn [\n\t\t\t\timportContent,\n\t\t\t\t`/* harmony import */ ${optDeclaration}${importVar}_default = /*#__PURE__*/${RuntimeGlobals.compatGetDefaultExport}(${importVar});\\n`\n\t\t\t];\n\t\t}\n\t\treturn [importContent, \"\"];\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {ModuleGraph} options.moduleGraph the module graph\n\t * @param {Module} options.module the module\n\t * @param {string} options.request the request\n\t * @param {string | string[]} options.exportName the export name\n\t * @param {Module} options.originModule the origin module\n\t * @param {boolean|undefined} options.asiSafe true, if location is safe for ASI, a bracket can be emitted\n\t * @param {boolean} options.isCall true, if expression will be called\n\t * @param {boolean} options.callContext when false, call context will not be preserved\n\t * @param {boolean} options.defaultInterop when true and accessing the default exports, interop code will be generated\n\t * @param {string} options.importVar the identifier name of the import variable\n\t * @param {InitFragment[]} options.initFragments init fragments will be added here\n\t * @param {RuntimeSpec} options.runtime runtime for which this code will be generated\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\texportFromImport({\n\t\tmoduleGraph,\n\t\tmodule,\n\t\trequest,\n\t\texportName,\n\t\toriginModule,\n\t\tasiSafe,\n\t\tisCall,\n\t\tcallContext,\n\t\tdefaultInterop,\n\t\timportVar,\n\t\tinitFragments,\n\t\truntime,\n\t\truntimeRequirements\n\t}) {\n\t\tif (!module) {\n\t\t\treturn this.missingModule({\n\t\t\t\trequest\n\t\t\t});\n\t\t}\n\t\tif (!Array.isArray(exportName)) {\n\t\t\texportName = exportName ? [exportName] : [];\n\t\t}\n\t\tconst exportsType = module.getExportsType(\n\t\t\tmoduleGraph,\n\t\t\toriginModule.buildMeta.strictHarmonyModule\n\t\t);\n\n\t\tif (defaultInterop) {\n\t\t\tif (exportName.length > 0 && exportName[0] === \"default\") {\n\t\t\t\tswitch (exportsType) {\n\t\t\t\t\tcase \"dynamic\":\n\t\t\t\t\t\tif (isCall) {\n\t\t\t\t\t\t\treturn `${importVar}_default()${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn asiSafe\n\t\t\t\t\t\t\t\t? `(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t\t\t\t? `;(${importVar}_default()${propertyAccess(exportName, 1)})`\n\t\t\t\t\t\t\t\t: `${importVar}_default.a${propertyAccess(exportName, 1)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"default-only\":\n\t\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\t\texportName = exportName.slice(1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (exportName.length > 0) {\n\t\t\t\tif (exportsType === \"default-only\") {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\"/* non-default import from non-esm module */undefined\" +\n\t\t\t\t\t\tpropertyAccess(exportName, 1)\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\texportsType !== \"namespace\" &&\n\t\t\t\t\texportName[0] === \"__esModule\"\n\t\t\t\t) {\n\t\t\t\t\treturn \"/* __esModule */true\";\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\texportsType === \"default-only\" ||\n\t\t\t\texportsType === \"default-with-named\"\n\t\t\t) {\n\t\t\t\truntimeRequirements.add(RuntimeGlobals.createFakeNamespaceObject);\n\t\t\t\tinitFragments.push(\n\t\t\t\t\tnew InitFragment(\n\t\t\t\t\t\t`var ${importVar}_namespace_cache;\\n`,\n\t\t\t\t\t\tInitFragment.STAGE_CONSTANTS,\n\t\t\t\t\t\t-1,\n\t\t\t\t\t\t`${importVar}_namespace_cache`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\treturn `/*#__PURE__*/ ${\n\t\t\t\t\tasiSafe ? \"\" : asiSafe === false ? \";\" : \"Object\"\n\t\t\t\t}(${importVar}_namespace_cache || (${importVar}_namespace_cache = ${\n\t\t\t\t\tRuntimeGlobals.createFakeNamespaceObject\n\t\t\t\t}(${importVar}${exportsType === \"default-only\" ? \"\" : \", 2\"})))`;\n\t\t\t}\n\t\t}\n\n\t\tif (exportName.length > 0) {\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t\tconst used = exportsInfo.getUsedName(exportName, runtime);\n\t\t\tif (!used) {\n\t\t\t\tconst comment = Template.toNormalComment(\n\t\t\t\t\t`unused export ${propertyAccess(exportName)}`\n\t\t\t\t);\n\t\t\t\treturn `${comment} undefined`;\n\t\t\t}\n\t\t\tconst comment = equals(used, exportName)\n\t\t\t\t? \"\"\n\t\t\t\t: Template.toNormalComment(propertyAccess(exportName)) + \" \";\n\t\t\tconst access = `${importVar}${comment}${propertyAccess(used)}`;\n\t\t\tif (isCall && callContext === false) {\n\t\t\t\treturn asiSafe\n\t\t\t\t\t? `(0,${access})`\n\t\t\t\t\t: asiSafe === false\n\t\t\t\t\t? `;(0,${access})`\n\t\t\t\t\t: `/*#__PURE__*/Object(${access})`;\n\t\t\t}\n\t\t\treturn access;\n\t\t} else {\n\t\t\treturn importVar;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {string} options.message the message\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} expression\n\t */\n\tblockPromise({ block, message, chunkGraph, runtimeRequirements }) {\n\t\tif (!block) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\tif (!chunkGroup || chunkGroup.chunks.length === 0) {\n\t\t\tconst comment = this.comment({\n\t\t\t\tmessage\n\t\t\t});\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t\tconst chunks = chunkGroup.chunks.filter(\n\t\t\tchunk => !chunk.hasRuntime() && chunk.id !== null\n\t\t);\n\t\tconst comment = this.comment({\n\t\t\tmessage,\n\t\t\tchunkName: block.chunkName\n\t\t});\n\t\tif (chunks.length === 1) {\n\t\t\tconst chunkId = JSON.stringify(chunks[0].id);\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\t\t\treturn `${RuntimeGlobals.ensureChunk}(${comment}${chunkId})`;\n\t\t} else if (chunks.length > 0) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.ensureChunk);\n\t\t\tconst requireChunkId = chunk =>\n\t\t\t\t`${RuntimeGlobals.ensureChunk}(${JSON.stringify(chunk.id)})`;\n\t\t\treturn `Promise.all(${comment.trim()}[${chunks\n\t\t\t\t.map(requireChunkId)\n\t\t\t\t.join(\", \")}])`;\n\t\t} else {\n\t\t\treturn `Promise.resolve(${comment.trim()})`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {AsyncDependenciesBlock} options.block the async block\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tasyncModuleFactory({ block, chunkGraph, runtimeRequirements, request }) {\n\t\tconst dep = block.dependencies[0];\n\t\tconst module = chunkGraph.moduleGraph.getModule(dep);\n\t\tconst ensureChunk = this.blockPromise({\n\t\t\tblock,\n\t\t\tmessage: \"\",\n\t\t\tchunkGraph,\n\t\t\truntimeRequirements\n\t\t});\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(\n\t\t\tensureChunk.startsWith(\"Promise.resolve(\")\n\t\t\t\t? `${factory}`\n\t\t\t\t: `${ensureChunk}.then(${this.returningFunction(factory)})`\n\t\t);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {Dependency} options.dependency the dependency\n\t * @param {ChunkGraph} options.chunkGraph the chunk graph\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @param {string=} options.request request string used originally\n\t * @returns {string} expression\n\t */\n\tsyncModuleFactory({ dependency, chunkGraph, runtimeRequirements, request }) {\n\t\tconst module = chunkGraph.moduleGraph.getModule(dependency);\n\t\tconst factory = this.returningFunction(\n\t\t\tthis.moduleRaw({\n\t\t\t\tmodule,\n\t\t\t\tchunkGraph,\n\t\t\t\trequest,\n\t\t\t\truntimeRequirements\n\t\t\t})\n\t\t);\n\t\treturn this.returningFunction(factory);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.exportsArgument the name of the exports object\n\t * @param {Set<string>} options.runtimeRequirements if set, will be filled with runtime requirements\n\t * @returns {string} statement\n\t */\n\tdefineEsModuleFlagStatement({ exportsArgument, runtimeRequirements }) {\n\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\treturn `${RuntimeGlobals.makeNamespaceObject}(${exportsArgument});\\n`;\n\t}\n\n\t/**\n\t * @param {Object} options options object\n\t * @param {Module} options.module the module\n\t * @param {string} options.publicPath the public path\n\t * @param {RuntimeSpec=} options.runtime runtime\n\t * @param {CodeGenerationResults} options.codeGenerationResults the code generation results\n\t * @returns {string} the url of the asset\n\t */\n\tassetUrl({ publicPath, runtime, module, codeGenerationResults }) {\n\t\tif (!module) {\n\t\t\treturn \"data:,\";\n\t\t}\n\t\tconst codeGen = codeGenerationResults.get(module, runtime);\n\t\tconst { data } = codeGen;\n\t\tconst url = data.get(\"url\");\n\t\tif (url) return url.toString();\n\t\tconst filename = data.get(\"filename\");\n\t\treturn publicPath + filename;\n\t}\n}\n\nmodule.exports = RuntimeTemplate;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
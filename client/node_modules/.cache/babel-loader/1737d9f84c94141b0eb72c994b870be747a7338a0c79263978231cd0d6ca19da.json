{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePattern = exports.metaSchemaRef = void 0;\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\nconst META_SCHEMA_ID = \"http://json-schema.org/schema\";\nfunction metaSchemaRef() {\n  let {\n    defaultMeta\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return defaultMeta === false ? {} : {\n    $ref: defaultMeta || META_SCHEMA_ID\n  };\n}\nexports.metaSchemaRef = metaSchemaRef;\nfunction usePattern(_ref, pattern) {\n  let {\n    gen,\n    it: {\n      opts\n    }\n  } = _ref;\n  let flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : opts.unicodeRegExp ? \"u\" : \"\";\n  const rx = new RegExp(pattern, flags);\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: (0, codegen_1._)`new RegExp(${pattern}, ${flags})`\n  });\n}\nexports.usePattern = usePattern;","map":{"version":3,"names":["codegen_1","require","META_SCHEMA_ID","metaSchemaRef","defaultMeta","arguments","length","undefined","$ref","exports","usePattern","_ref","pattern","gen","it","opts","flags","unicodeRegExp","rx","RegExp","scopeValue","key","toString","ref","code","_"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-dev-middleware/node_modules/ajv-keywords/src/definitions/_util.ts"],"sourcesContent":["import type {DefinitionOptions} from \"./_types\"\nimport type {SchemaObject, KeywordCxt, Name} from \"ajv\"\nimport {_} from \"ajv/dist/compile/codegen\"\n\nconst META_SCHEMA_ID = \"http://json-schema.org/schema\"\n\nexport function metaSchemaRef({defaultMeta}: DefinitionOptions = {}): SchemaObject {\n  return defaultMeta === false ? {} : {$ref: defaultMeta || META_SCHEMA_ID}\n}\n\nexport function usePattern(\n  {gen, it: {opts}}: KeywordCxt,\n  pattern: string,\n  flags = opts.unicodeRegExp ? \"u\" : \"\"\n): Name {\n  const rx = new RegExp(pattern, flags)\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`new RegExp(${pattern}, ${flags})`,\n  })\n}\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AAEA,MAAMC,cAAc,GAAG,+BAA+B;AAEtD,SAAgBC,aAAaA,CAAA,EAAsC;EAAA,IAArC;IAACC;EAAW,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB,EAAE;EACjE,OAAOD,WAAW,KAAK,KAAK,GAAG,EAAE,GAAG;IAACI,IAAI,EAAEJ,WAAW,IAAIF;EAAc,CAAC;AAC3E;AAFAO,OAAA,CAAAN,aAAA,GAAAA,aAAA;AAIA,SAAgBO,UAAUA,CAAAC,IAAA,EAExBC,OAAe,EACsB;EAAA,IAFrC;IAACC,GAAG;IAAEC,EAAE,EAAE;MAACC;IAAI;EAAC,CAAa,GAAAJ,IAAA;EAAA,IAE7BK,KAAK,GAAAX,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGU,IAAI,CAACE,aAAa,GAAG,GAAG,GAAG,EAAE;EAErC,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAACP,OAAO,EAAEI,KAAK,CAAC;EACrC,OAAOH,GAAG,CAACO,UAAU,CAAC,SAAS,EAAE;IAC/BC,GAAG,EAAEH,EAAE,CAACI,QAAQ,EAAE;IAClBC,GAAG,EAAEL,EAAE;IACPM,IAAI,EAAE,IAAAxB,SAAA,CAAAyB,CAAC,eAAcb,OAAO,KAAKI,KAAK;GACvC,CAAC;AACJ;AAXAP,OAAA,CAAAC,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar RingBuffer = require('./ring_buffer');\nvar Functor = function (session, method) {\n  this._session = session;\n  this._method = method;\n  this._queue = new RingBuffer(Functor.QUEUE_SIZE);\n  this._stopped = false;\n  this.pending = 0;\n};\nFunctor.QUEUE_SIZE = 8;\nFunctor.prototype.call = function (error, message, callback, context) {\n  if (this._stopped) return;\n  var record = {\n      error: error,\n      message: message,\n      callback: callback,\n      context: context,\n      done: false\n    },\n    called = false,\n    self = this;\n  this._queue.push(record);\n  if (record.error) {\n    record.done = true;\n    this._stop();\n    return this._flushQueue();\n  }\n  var handler = function (err, msg) {\n    if (!(called ^ (called = true))) return;\n    if (err) {\n      self._stop();\n      record.error = err;\n      record.message = null;\n    } else {\n      record.message = msg;\n    }\n    record.done = true;\n    self._flushQueue();\n  };\n  try {\n    this._session[this._method](message, handler);\n  } catch (err) {\n    handler(err);\n  }\n};\nFunctor.prototype._stop = function () {\n  this.pending = this._queue.length;\n  this._stopped = true;\n};\nFunctor.prototype._flushQueue = function () {\n  var queue = this._queue,\n    record;\n  while (queue.length > 0 && queue.peek().done) {\n    record = queue.shift();\n    if (record.error) {\n      this.pending = 0;\n      queue.clear();\n    } else {\n      this.pending -= 1;\n    }\n    record.callback.call(record.context, record.error, record.message);\n  }\n};\nmodule.exports = Functor;","map":{"version":3,"names":["RingBuffer","require","Functor","session","method","_session","_method","_queue","QUEUE_SIZE","_stopped","pending","prototype","call","error","message","callback","context","record","done","called","self","push","_stop","_flushQueue","handler","err","msg","length","queue","peek","shift","clear","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/websocket-extensions/lib/pipeline/functor.js"],"sourcesContent":["'use strict';\n\nvar RingBuffer = require('./ring_buffer');\n\nvar Functor = function(session, method) {\n  this._session = session;\n  this._method  = method;\n  this._queue   = new RingBuffer(Functor.QUEUE_SIZE);\n  this._stopped = false;\n  this.pending  = 0;\n};\n\nFunctor.QUEUE_SIZE = 8;\n\nFunctor.prototype.call = function(error, message, callback, context) {\n  if (this._stopped) return;\n\n  var record = { error: error, message: message, callback: callback, context: context, done: false },\n      called = false,\n      self   = this;\n\n  this._queue.push(record);\n\n  if (record.error) {\n    record.done = true;\n    this._stop();\n    return this._flushQueue();\n  }\n\n  var handler = function(err, msg) {\n    if (!(called ^ (called = true))) return;\n\n    if (err) {\n      self._stop();\n      record.error   = err;\n      record.message = null;\n    } else {\n      record.message = msg;\n    }\n\n    record.done = true;\n    self._flushQueue();\n  };\n\n  try {\n    this._session[this._method](message, handler);\n  } catch (err) {\n    handler(err);\n  }\n};\n\nFunctor.prototype._stop = function() {\n  this.pending  = this._queue.length;\n  this._stopped = true;\n};\n\nFunctor.prototype._flushQueue = function() {\n  var queue = this._queue, record;\n\n  while (queue.length > 0 && queue.peek().done) {\n    record = queue.shift();\n    if (record.error) {\n      this.pending = 0;\n      queue.clear();\n    } else {\n      this.pending -= 1;\n    }\n    record.callback.call(record.context, record.error, record.message);\n  }\n};\n\nmodule.exports = Functor;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n\nclass EntryPlugin {\n  /**\n   * An entry plugin which will handle\n   * creation of the EntryDependency\n   *\n   * @param {string} context context path\n   * @param {string} entry entry path\n   * @param {EntryOptions | string=} options entry options (passing a string is deprecated)\n   */\n  constructor(context, entry, options) {\n    this.context = context;\n    this.entry = entry;\n    this.options = options || \"\";\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"EntryPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(EntryDependency, normalModuleFactory);\n    });\n    const {\n      entry,\n      options,\n      context\n    } = this;\n    const dep = EntryPlugin.createDependency(entry, options);\n    compiler.hooks.make.tapAsync(\"EntryPlugin\", (compilation, callback) => {\n      compilation.addEntry(context, dep, options, err => {\n        callback(err);\n      });\n    });\n  }\n\n  /**\n   * @param {string} entry entry request\n   * @param {EntryOptions | string} options entry options (passing string is deprecated)\n   * @returns {EntryDependency} the dependency\n   */\n  static createDependency(entry, options) {\n    const dep = new EntryDependency(entry);\n    // TODO webpack 6 remove string option\n    dep.loc = {\n      name: typeof options === \"object\" ? options.name : options\n    };\n    return dep;\n  }\n}\nmodule.exports = EntryPlugin;","map":{"version":3,"names":["EntryDependency","require","EntryPlugin","constructor","context","entry","options","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","dependencyFactories","set","dep","createDependency","make","tapAsync","callback","addEntry","err","loc","name","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/EntryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst EntryDependency = require(\"./dependencies/EntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n\nclass EntryPlugin {\n\t/**\n\t * An entry plugin which will handle\n\t * creation of the EntryDependency\n\t *\n\t * @param {string} context context path\n\t * @param {string} entry entry path\n\t * @param {EntryOptions | string=} options entry options (passing a string is deprecated)\n\t */\n\tconstructor(context, entry, options) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t\tthis.options = options || \"\";\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tconst { entry, options, context } = this;\n\t\tconst dep = EntryPlugin.createDependency(entry, options);\n\n\t\tcompiler.hooks.make.tapAsync(\"EntryPlugin\", (compilation, callback) => {\n\t\t\tcompilation.addEntry(context, dep, options, err => {\n\t\t\t\tcallback(err);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} entry entry request\n\t * @param {EntryOptions | string} options entry options (passing string is deprecated)\n\t * @returns {EntryDependency} the dependency\n\t */\n\tstatic createDependency(entry, options) {\n\t\tconst dep = new EntryDependency(entry);\n\t\t// TODO webpack 6 remove string option\n\t\tdep.loc = { name: typeof options === \"object\" ? options.name : options };\n\t\treturn dep;\n\t}\n}\n\nmodule.exports = EntryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAgC,CAAC;;AAEjE;AACA;;AAEA,MAAMC,WAAW,CAAC;EACjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,WAAWA,CAACC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAE;IACpC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO,IAAI,EAAE;EAC7B;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,aAAa,EACb,CAACD,WAAW,EAAAE,IAAA,KAA8B;MAAA,IAA5B;QAAEC;MAAoB,CAAC,GAAAD,IAAA;MACpCF,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCf,eAAe,EACfa,mBACD,CAAC;IACF,CACD,CAAC;IAED,MAAM;MAAER,KAAK;MAAEC,OAAO;MAAEF;IAAQ,CAAC,GAAG,IAAI;IACxC,MAAMY,GAAG,GAAGd,WAAW,CAACe,gBAAgB,CAACZ,KAAK,EAAEC,OAAO,CAAC;IAExDE,QAAQ,CAACC,KAAK,CAACS,IAAI,CAACC,QAAQ,CAAC,aAAa,EAAE,CAACT,WAAW,EAAEU,QAAQ,KAAK;MACtEV,WAAW,CAACW,QAAQ,CAACjB,OAAO,EAAEY,GAAG,EAAEV,OAAO,EAAEgB,GAAG,IAAI;QAClDF,QAAQ,CAACE,GAAG,CAAC;MACd,CAAC,CAAC;IACH,CAAC,CAAC;EACH;;EAEA;AACD;AACA;AACA;AACA;EACC,OAAOL,gBAAgBA,CAACZ,KAAK,EAAEC,OAAO,EAAE;IACvC,MAAMU,GAAG,GAAG,IAAIhB,eAAe,CAACK,KAAK,CAAC;IACtC;IACAW,GAAG,CAACO,GAAG,GAAG;MAAEC,IAAI,EAAE,OAAOlB,OAAO,KAAK,QAAQ,GAAGA,OAAO,CAACkB,IAAI,GAAGlB;IAAQ,CAAC;IACxE,OAAOU,GAAG;EACX;AACD;AAEAS,MAAM,CAACC,OAAO,GAAGxB,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}
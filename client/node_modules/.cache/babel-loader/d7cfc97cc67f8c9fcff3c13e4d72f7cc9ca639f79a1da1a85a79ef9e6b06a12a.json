{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Jason Anderson @diurnalist\n*/\n\n\"use strict\";\n\nconst mime = require(\"mime-types\");\nconst {\n  basename,\n  extname\n} = require(\"path\");\nconst util = require(\"util\");\nconst Chunk = require(\"./Chunk\");\nconst Module = require(\"./Module\");\nconst {\n  parseResource\n} = require(\"./util/identifier\");\n\n/** @typedef {import(\"./Compilation\").AssetInfo} AssetInfo */\n/** @typedef {import(\"./Compilation\").PathData} PathData */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst REGEXP = /\\[\\\\*([\\w:]+)\\\\*\\]/gi;\nconst prepareId = id => {\n  if (typeof id !== \"string\") return id;\n  if (/^\"\\s\\+*.*\\+\\s*\"$/.test(id)) {\n    const match = /^\"\\s\\+*\\s*(.*)\\s*\\+\\s*\"$/.exec(id);\n    return `\" + (${match[1]} + \"\").replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\") + \"`;\n  }\n  return id.replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\");\n};\nconst hashLength = (replacer, handler, assetInfo, hashName) => {\n  const fn = (match, arg, input) => {\n    let result;\n    const length = arg && parseInt(arg, 10);\n    if (length && handler) {\n      result = handler(length);\n    } else {\n      const hash = replacer(match, arg, input);\n      result = length ? hash.slice(0, length) : hash;\n    }\n    if (assetInfo) {\n      assetInfo.immutable = true;\n      if (Array.isArray(assetInfo[hashName])) {\n        assetInfo[hashName] = [...assetInfo[hashName], result];\n      } else if (assetInfo[hashName]) {\n        assetInfo[hashName] = [assetInfo[hashName], result];\n      } else {\n        assetInfo[hashName] = result;\n      }\n    }\n    return result;\n  };\n  return fn;\n};\nconst replacer = (value, allowEmpty) => {\n  const fn = (match, arg, input) => {\n    if (typeof value === \"function\") {\n      value = value();\n    }\n    if (value === null || value === undefined) {\n      if (!allowEmpty) {\n        throw new Error(`Path variable ${match} not implemented in this context: ${input}`);\n      }\n      return \"\";\n    } else {\n      return `${value}`;\n    }\n  };\n  return fn;\n};\nconst deprecationCache = new Map();\nconst deprecatedFunction = (() => () => {})();\nconst deprecated = (fn, message, code) => {\n  let d = deprecationCache.get(message);\n  if (d === undefined) {\n    d = util.deprecate(deprecatedFunction, message, code);\n    deprecationCache.set(message, d);\n  }\n  return function () {\n    d();\n    return fn(...arguments);\n  };\n};\n\n/**\n * @param {string | function(PathData, AssetInfo=): string} path the raw path\n * @param {PathData} data context data\n * @param {AssetInfo} assetInfo extra info about the asset (will be written to)\n * @returns {string} the interpolated path\n */\nconst replacePathVariables = (path, data, assetInfo) => {\n  const chunkGraph = data.chunkGraph;\n\n  /** @type {Map<string, Function>} */\n  const replacements = new Map();\n\n  // Filename context\n  //\n  // Placeholders\n  //\n  // for /some/path/file.js?query#fragment:\n  // [file] - /some/path/file.js\n  // [query] - ?query\n  // [fragment] - #fragment\n  // [base] - file.js\n  // [path] - /some/path/\n  // [name] - file\n  // [ext] - .js\n  if (typeof data.filename === \"string\") {\n    // check that filename is data uri\n    let match = data.filename.match(/^data:([^;,]+)/);\n    if (match) {\n      const ext = mime.extension(match[1]);\n      const emptyReplacer = replacer(\"\", true);\n      replacements.set(\"file\", emptyReplacer);\n      replacements.set(\"query\", emptyReplacer);\n      replacements.set(\"fragment\", emptyReplacer);\n      replacements.set(\"path\", emptyReplacer);\n      replacements.set(\"base\", emptyReplacer);\n      replacements.set(\"name\", emptyReplacer);\n      replacements.set(\"ext\", replacer(ext ? `.${ext}` : \"\", true));\n      // Legacy\n      replacements.set(\"filebase\", deprecated(emptyReplacer, \"[filebase] is now [base]\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_FILENAME\"));\n    } else {\n      const {\n        path: file,\n        query,\n        fragment\n      } = parseResource(data.filename);\n      const ext = extname(file);\n      const base = basename(file);\n      const name = base.slice(0, base.length - ext.length);\n      const path = file.slice(0, file.length - base.length);\n      replacements.set(\"file\", replacer(file));\n      replacements.set(\"query\", replacer(query, true));\n      replacements.set(\"fragment\", replacer(fragment, true));\n      replacements.set(\"path\", replacer(path, true));\n      replacements.set(\"base\", replacer(base));\n      replacements.set(\"name\", replacer(name));\n      replacements.set(\"ext\", replacer(ext, true));\n      // Legacy\n      replacements.set(\"filebase\", deprecated(replacer(base), \"[filebase] is now [base]\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_FILENAME\"));\n    }\n  }\n\n  // Compilation context\n  //\n  // Placeholders\n  //\n  // [fullhash] - data.hash (3a4b5c6e7f)\n  //\n  // Legacy Placeholders\n  //\n  // [hash] - data.hash (3a4b5c6e7f)\n  if (data.hash) {\n    const hashReplacer = hashLength(replacer(data.hash), data.hashWithLength, assetInfo, \"fullhash\");\n    replacements.set(\"fullhash\", hashReplacer);\n\n    // Legacy\n    replacements.set(\"hash\", deprecated(hashReplacer, \"[hash] is now [fullhash] (also consider using [chunkhash] or [contenthash], see documentation for details)\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_HASH\"));\n  }\n\n  // Chunk Context\n  //\n  // Placeholders\n  //\n  // [id] - chunk.id (0.js)\n  // [name] - chunk.name (app.js)\n  // [chunkhash] - chunk.hash (7823t4t4.js)\n  // [contenthash] - chunk.contentHash[type] (3256u3zg.js)\n  if (data.chunk) {\n    const chunk = data.chunk;\n    const contentHashType = data.contentHashType;\n    const idReplacer = replacer(chunk.id);\n    const nameReplacer = replacer(chunk.name || chunk.id);\n    const chunkhashReplacer = hashLength(replacer(chunk instanceof Chunk ? chunk.renderedHash : chunk.hash), \"hashWithLength\" in chunk ? chunk.hashWithLength : undefined, assetInfo, \"chunkhash\");\n    const contenthashReplacer = hashLength(replacer(data.contentHash || contentHashType && chunk.contentHash && chunk.contentHash[contentHashType]), data.contentHashWithLength || (\"contentHashWithLength\" in chunk && chunk.contentHashWithLength ? chunk.contentHashWithLength[contentHashType] : undefined), assetInfo, \"contenthash\");\n    replacements.set(\"id\", idReplacer);\n    replacements.set(\"name\", nameReplacer);\n    replacements.set(\"chunkhash\", chunkhashReplacer);\n    replacements.set(\"contenthash\", contenthashReplacer);\n  }\n\n  // Module Context\n  //\n  // Placeholders\n  //\n  // [id] - module.id (2.png)\n  // [hash] - module.hash (6237543873.png)\n  //\n  // Legacy Placeholders\n  //\n  // [moduleid] - module.id (2.png)\n  // [modulehash] - module.hash (6237543873.png)\n  if (data.module) {\n    const module = data.module;\n    const idReplacer = replacer(() => prepareId(module instanceof Module ? chunkGraph.getModuleId(module) : module.id));\n    const moduleHashReplacer = hashLength(replacer(() => module instanceof Module ? chunkGraph.getRenderedModuleHash(module, data.runtime) : module.hash), \"hashWithLength\" in module ? module.hashWithLength : undefined, assetInfo, \"modulehash\");\n    const contentHashReplacer = hashLength(replacer(data.contentHash), undefined, assetInfo, \"contenthash\");\n    replacements.set(\"id\", idReplacer);\n    replacements.set(\"modulehash\", moduleHashReplacer);\n    replacements.set(\"contenthash\", contentHashReplacer);\n    replacements.set(\"hash\", data.contentHash ? contentHashReplacer : moduleHashReplacer);\n    // Legacy\n    replacements.set(\"moduleid\", deprecated(idReplacer, \"[moduleid] is now [id]\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_MODULE_ID\"));\n  }\n\n  // Other things\n  if (data.url) {\n    replacements.set(\"url\", replacer(data.url));\n  }\n  if (typeof data.runtime === \"string\") {\n    replacements.set(\"runtime\", replacer(() => prepareId(data.runtime)));\n  } else {\n    replacements.set(\"runtime\", replacer(\"_\"));\n  }\n  if (typeof path === \"function\") {\n    path = path(data, assetInfo);\n  }\n  path = path.replace(REGEXP, (match, content) => {\n    if (content.length + 2 === match.length) {\n      const contentMatch = /^(\\w+)(?::(\\w+))?$/.exec(content);\n      if (!contentMatch) return match;\n      const [, kind, arg] = contentMatch;\n      const replacer = replacements.get(kind);\n      if (replacer !== undefined) {\n        return replacer(match, arg, path);\n      }\n    } else if (match.startsWith(\"[\\\\\") && match.endsWith(\"\\\\]\")) {\n      return `[${match.slice(2, -2)}]`;\n    }\n    return match;\n  });\n  return path;\n};\nconst plugin = \"TemplatedPathPlugin\";\nclass TemplatedPathPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      compilation.hooks.assetPath.tap(plugin, replacePathVariables);\n    });\n  }\n}\nmodule.exports = TemplatedPathPlugin;","map":{"version":3,"names":["mime","require","basename","extname","util","Chunk","Module","parseResource","REGEXP","prepareId","id","test","match","exec","replace","hashLength","replacer","handler","assetInfo","hashName","fn","arg","input","result","length","parseInt","hash","slice","immutable","Array","isArray","value","allowEmpty","undefined","Error","deprecationCache","Map","deprecatedFunction","deprecated","message","code","d","get","deprecate","set","arguments","replacePathVariables","path","data","chunkGraph","replacements","filename","ext","extension","emptyReplacer","file","query","fragment","base","name","hashReplacer","hashWithLength","chunk","contentHashType","idReplacer","nameReplacer","chunkhashReplacer","renderedHash","contenthashReplacer","contentHash","contentHashWithLength","module","getModuleId","moduleHashReplacer","getRenderedModuleHash","runtime","contentHashReplacer","url","content","contentMatch","kind","startsWith","endsWith","plugin","TemplatedPathPlugin","apply","compiler","hooks","compilation","tap","assetPath","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/TemplatedPathPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Jason Anderson @diurnalist\n*/\n\n\"use strict\";\n\nconst mime = require(\"mime-types\");\nconst { basename, extname } = require(\"path\");\nconst util = require(\"util\");\nconst Chunk = require(\"./Chunk\");\nconst Module = require(\"./Module\");\nconst { parseResource } = require(\"./util/identifier\");\n\n/** @typedef {import(\"./Compilation\").AssetInfo} AssetInfo */\n/** @typedef {import(\"./Compilation\").PathData} PathData */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst REGEXP = /\\[\\\\*([\\w:]+)\\\\*\\]/gi;\n\nconst prepareId = id => {\n\tif (typeof id !== \"string\") return id;\n\n\tif (/^\"\\s\\+*.*\\+\\s*\"$/.test(id)) {\n\t\tconst match = /^\"\\s\\+*\\s*(.*)\\s*\\+\\s*\"$/.exec(id);\n\n\t\treturn `\" + (${match[1]} + \"\").replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\") + \"`;\n\t}\n\n\treturn id.replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\");\n};\n\nconst hashLength = (replacer, handler, assetInfo, hashName) => {\n\tconst fn = (match, arg, input) => {\n\t\tlet result;\n\t\tconst length = arg && parseInt(arg, 10);\n\n\t\tif (length && handler) {\n\t\t\tresult = handler(length);\n\t\t} else {\n\t\t\tconst hash = replacer(match, arg, input);\n\n\t\t\tresult = length ? hash.slice(0, length) : hash;\n\t\t}\n\t\tif (assetInfo) {\n\t\t\tassetInfo.immutable = true;\n\t\t\tif (Array.isArray(assetInfo[hashName])) {\n\t\t\t\tassetInfo[hashName] = [...assetInfo[hashName], result];\n\t\t\t} else if (assetInfo[hashName]) {\n\t\t\t\tassetInfo[hashName] = [assetInfo[hashName], result];\n\t\t\t} else {\n\t\t\t\tassetInfo[hashName] = result;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\treturn fn;\n};\n\nconst replacer = (value, allowEmpty) => {\n\tconst fn = (match, arg, input) => {\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue = value();\n\t\t}\n\t\tif (value === null || value === undefined) {\n\t\t\tif (!allowEmpty) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Path variable ${match} not implemented in this context: ${input}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn `${value}`;\n\t\t}\n\t};\n\n\treturn fn;\n};\n\nconst deprecationCache = new Map();\nconst deprecatedFunction = (() => () => {})();\nconst deprecated = (fn, message, code) => {\n\tlet d = deprecationCache.get(message);\n\tif (d === undefined) {\n\t\td = util.deprecate(deprecatedFunction, message, code);\n\t\tdeprecationCache.set(message, d);\n\t}\n\treturn (...args) => {\n\t\td();\n\t\treturn fn(...args);\n\t};\n};\n\n/**\n * @param {string | function(PathData, AssetInfo=): string} path the raw path\n * @param {PathData} data context data\n * @param {AssetInfo} assetInfo extra info about the asset (will be written to)\n * @returns {string} the interpolated path\n */\nconst replacePathVariables = (path, data, assetInfo) => {\n\tconst chunkGraph = data.chunkGraph;\n\n\t/** @type {Map<string, Function>} */\n\tconst replacements = new Map();\n\n\t// Filename context\n\t//\n\t// Placeholders\n\t//\n\t// for /some/path/file.js?query#fragment:\n\t// [file] - /some/path/file.js\n\t// [query] - ?query\n\t// [fragment] - #fragment\n\t// [base] - file.js\n\t// [path] - /some/path/\n\t// [name] - file\n\t// [ext] - .js\n\tif (typeof data.filename === \"string\") {\n\t\t// check that filename is data uri\n\t\tlet match = data.filename.match(/^data:([^;,]+)/);\n\t\tif (match) {\n\t\t\tconst ext = mime.extension(match[1]);\n\t\t\tconst emptyReplacer = replacer(\"\", true);\n\n\t\t\treplacements.set(\"file\", emptyReplacer);\n\t\t\treplacements.set(\"query\", emptyReplacer);\n\t\t\treplacements.set(\"fragment\", emptyReplacer);\n\t\t\treplacements.set(\"path\", emptyReplacer);\n\t\t\treplacements.set(\"base\", emptyReplacer);\n\t\t\treplacements.set(\"name\", emptyReplacer);\n\t\t\treplacements.set(\"ext\", replacer(ext ? `.${ext}` : \"\", true));\n\t\t\t// Legacy\n\t\t\treplacements.set(\n\t\t\t\t\"filebase\",\n\t\t\t\tdeprecated(\n\t\t\t\t\temptyReplacer,\n\t\t\t\t\t\"[filebase] is now [base]\",\n\t\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_FILENAME\"\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tconst { path: file, query, fragment } = parseResource(data.filename);\n\n\t\t\tconst ext = extname(file);\n\t\t\tconst base = basename(file);\n\t\t\tconst name = base.slice(0, base.length - ext.length);\n\t\t\tconst path = file.slice(0, file.length - base.length);\n\n\t\t\treplacements.set(\"file\", replacer(file));\n\t\t\treplacements.set(\"query\", replacer(query, true));\n\t\t\treplacements.set(\"fragment\", replacer(fragment, true));\n\t\t\treplacements.set(\"path\", replacer(path, true));\n\t\t\treplacements.set(\"base\", replacer(base));\n\t\t\treplacements.set(\"name\", replacer(name));\n\t\t\treplacements.set(\"ext\", replacer(ext, true));\n\t\t\t// Legacy\n\t\t\treplacements.set(\n\t\t\t\t\"filebase\",\n\t\t\t\tdeprecated(\n\t\t\t\t\treplacer(base),\n\t\t\t\t\t\"[filebase] is now [base]\",\n\t\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_FILENAME\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t// Compilation context\n\t//\n\t// Placeholders\n\t//\n\t// [fullhash] - data.hash (3a4b5c6e7f)\n\t//\n\t// Legacy Placeholders\n\t//\n\t// [hash] - data.hash (3a4b5c6e7f)\n\tif (data.hash) {\n\t\tconst hashReplacer = hashLength(\n\t\t\treplacer(data.hash),\n\t\t\tdata.hashWithLength,\n\t\t\tassetInfo,\n\t\t\t\"fullhash\"\n\t\t);\n\n\t\treplacements.set(\"fullhash\", hashReplacer);\n\n\t\t// Legacy\n\t\treplacements.set(\n\t\t\t\"hash\",\n\t\t\tdeprecated(\n\t\t\t\thashReplacer,\n\t\t\t\t\"[hash] is now [fullhash] (also consider using [chunkhash] or [contenthash], see documentation for details)\",\n\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_HASH\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// Chunk Context\n\t//\n\t// Placeholders\n\t//\n\t// [id] - chunk.id (0.js)\n\t// [name] - chunk.name (app.js)\n\t// [chunkhash] - chunk.hash (7823t4t4.js)\n\t// [contenthash] - chunk.contentHash[type] (3256u3zg.js)\n\tif (data.chunk) {\n\t\tconst chunk = data.chunk;\n\n\t\tconst contentHashType = data.contentHashType;\n\n\t\tconst idReplacer = replacer(chunk.id);\n\t\tconst nameReplacer = replacer(chunk.name || chunk.id);\n\t\tconst chunkhashReplacer = hashLength(\n\t\t\treplacer(chunk instanceof Chunk ? chunk.renderedHash : chunk.hash),\n\t\t\t\"hashWithLength\" in chunk ? chunk.hashWithLength : undefined,\n\t\t\tassetInfo,\n\t\t\t\"chunkhash\"\n\t\t);\n\t\tconst contenthashReplacer = hashLength(\n\t\t\treplacer(\n\t\t\t\tdata.contentHash ||\n\t\t\t\t\t(contentHashType &&\n\t\t\t\t\t\tchunk.contentHash &&\n\t\t\t\t\t\tchunk.contentHash[contentHashType])\n\t\t\t),\n\t\t\tdata.contentHashWithLength ||\n\t\t\t\t(\"contentHashWithLength\" in chunk && chunk.contentHashWithLength\n\t\t\t\t\t? chunk.contentHashWithLength[contentHashType]\n\t\t\t\t\t: undefined),\n\t\t\tassetInfo,\n\t\t\t\"contenthash\"\n\t\t);\n\n\t\treplacements.set(\"id\", idReplacer);\n\t\treplacements.set(\"name\", nameReplacer);\n\t\treplacements.set(\"chunkhash\", chunkhashReplacer);\n\t\treplacements.set(\"contenthash\", contenthashReplacer);\n\t}\n\n\t// Module Context\n\t//\n\t// Placeholders\n\t//\n\t// [id] - module.id (2.png)\n\t// [hash] - module.hash (6237543873.png)\n\t//\n\t// Legacy Placeholders\n\t//\n\t// [moduleid] - module.id (2.png)\n\t// [modulehash] - module.hash (6237543873.png)\n\tif (data.module) {\n\t\tconst module = data.module;\n\n\t\tconst idReplacer = replacer(() =>\n\t\t\tprepareId(\n\t\t\t\tmodule instanceof Module ? chunkGraph.getModuleId(module) : module.id\n\t\t\t)\n\t\t);\n\t\tconst moduleHashReplacer = hashLength(\n\t\t\treplacer(() =>\n\t\t\t\tmodule instanceof Module\n\t\t\t\t\t? chunkGraph.getRenderedModuleHash(module, data.runtime)\n\t\t\t\t\t: module.hash\n\t\t\t),\n\t\t\t\"hashWithLength\" in module ? module.hashWithLength : undefined,\n\t\t\tassetInfo,\n\t\t\t\"modulehash\"\n\t\t);\n\t\tconst contentHashReplacer = hashLength(\n\t\t\treplacer(data.contentHash),\n\t\t\tundefined,\n\t\t\tassetInfo,\n\t\t\t\"contenthash\"\n\t\t);\n\n\t\treplacements.set(\"id\", idReplacer);\n\t\treplacements.set(\"modulehash\", moduleHashReplacer);\n\t\treplacements.set(\"contenthash\", contentHashReplacer);\n\t\treplacements.set(\n\t\t\t\"hash\",\n\t\t\tdata.contentHash ? contentHashReplacer : moduleHashReplacer\n\t\t);\n\t\t// Legacy\n\t\treplacements.set(\n\t\t\t\"moduleid\",\n\t\t\tdeprecated(\n\t\t\t\tidReplacer,\n\t\t\t\t\"[moduleid] is now [id]\",\n\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_MODULE_ID\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// Other things\n\tif (data.url) {\n\t\treplacements.set(\"url\", replacer(data.url));\n\t}\n\tif (typeof data.runtime === \"string\") {\n\t\treplacements.set(\n\t\t\t\"runtime\",\n\t\t\treplacer(() => prepareId(data.runtime))\n\t\t);\n\t} else {\n\t\treplacements.set(\"runtime\", replacer(\"_\"));\n\t}\n\n\tif (typeof path === \"function\") {\n\t\tpath = path(data, assetInfo);\n\t}\n\n\tpath = path.replace(REGEXP, (match, content) => {\n\t\tif (content.length + 2 === match.length) {\n\t\t\tconst contentMatch = /^(\\w+)(?::(\\w+))?$/.exec(content);\n\t\t\tif (!contentMatch) return match;\n\t\t\tconst [, kind, arg] = contentMatch;\n\t\t\tconst replacer = replacements.get(kind);\n\t\t\tif (replacer !== undefined) {\n\t\t\t\treturn replacer(match, arg, path);\n\t\t\t}\n\t\t} else if (match.startsWith(\"[\\\\\") && match.endsWith(\"\\\\]\")) {\n\t\t\treturn `[${match.slice(2, -2)}]`;\n\t\t}\n\t\treturn match;\n\t});\n\n\treturn path;\n};\n\nconst plugin = \"TemplatedPathPlugin\";\n\nclass TemplatedPathPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(plugin, compilation => {\n\t\t\tcompilation.hooks.assetPath.tap(plugin, replacePathVariables);\n\t\t});\n\t}\n}\n\nmodule.exports = TemplatedPathPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAClC,MAAM;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC7C,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,KAAK,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAChC,MAAMK,MAAM,GAAGL,OAAO,CAAC,UAAU,CAAC;AAClC,MAAM;EAAEM;AAAc,CAAC,GAAGN,OAAO,CAAC,mBAAmB,CAAC;;AAEtD;AACA;AACA;;AAEA,MAAMO,MAAM,GAAG,sBAAsB;AAErC,MAAMC,SAAS,GAAGC,EAAE,IAAI;EACvB,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE,OAAOA,EAAE;EAErC,IAAI,kBAAkB,CAACC,IAAI,CAACD,EAAE,CAAC,EAAE;IAChC,MAAME,KAAK,GAAG,0BAA0B,CAACC,IAAI,CAACH,EAAE,CAAC;IAEjD,OAAQ,QAAOE,KAAK,CAAC,CAAC,CAAE,qDAAoD;EAC7E;EAEA,OAAOF,EAAE,CAACI,OAAO,CAAC,0BAA0B,EAAE,GAAG,CAAC;AACnD,CAAC;AAED,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAC9D,MAAMC,EAAE,GAAGA,CAACR,KAAK,EAAES,GAAG,EAAEC,KAAK,KAAK;IACjC,IAAIC,MAAM;IACV,MAAMC,MAAM,GAAGH,GAAG,IAAII,QAAQ,CAACJ,GAAG,EAAE,EAAE,CAAC;IAEvC,IAAIG,MAAM,IAAIP,OAAO,EAAE;MACtBM,MAAM,GAAGN,OAAO,CAACO,MAAM,CAAC;IACzB,CAAC,MAAM;MACN,MAAME,IAAI,GAAGV,QAAQ,CAACJ,KAAK,EAAES,GAAG,EAAEC,KAAK,CAAC;MAExCC,MAAM,GAAGC,MAAM,GAAGE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAEH,MAAM,CAAC,GAAGE,IAAI;IAC/C;IACA,IAAIR,SAAS,EAAE;MACdA,SAAS,CAACU,SAAS,GAAG,IAAI;MAC1B,IAAIC,KAAK,CAACC,OAAO,CAACZ,SAAS,CAACC,QAAQ,CAAC,CAAC,EAAE;QACvCD,SAAS,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGD,SAAS,CAACC,QAAQ,CAAC,EAAEI,MAAM,CAAC;MACvD,CAAC,MAAM,IAAIL,SAAS,CAACC,QAAQ,CAAC,EAAE;QAC/BD,SAAS,CAACC,QAAQ,CAAC,GAAG,CAACD,SAAS,CAACC,QAAQ,CAAC,EAAEI,MAAM,CAAC;MACpD,CAAC,MAAM;QACNL,SAAS,CAACC,QAAQ,CAAC,GAAGI,MAAM;MAC7B;IACD;IACA,OAAOA,MAAM;EACd,CAAC;EAED,OAAOH,EAAE;AACV,CAAC;AAED,MAAMJ,QAAQ,GAAGA,CAACe,KAAK,EAAEC,UAAU,KAAK;EACvC,MAAMZ,EAAE,GAAGA,CAACR,KAAK,EAAES,GAAG,EAAEC,KAAK,KAAK;IACjC,IAAI,OAAOS,KAAK,KAAK,UAAU,EAAE;MAChCA,KAAK,GAAGA,KAAK,CAAC,CAAC;IAChB;IACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,EAAE;MAC1C,IAAI,CAACD,UAAU,EAAE;QAChB,MAAM,IAAIE,KAAK,CACb,iBAAgBtB,KAAM,qCAAoCU,KAAM,EAClE,CAAC;MACF;MAEA,OAAO,EAAE;IACV,CAAC,MAAM;MACN,OAAQ,GAAES,KAAM,EAAC;IAClB;EACD,CAAC;EAED,OAAOX,EAAE;AACV,CAAC;AAED,MAAMe,gBAAgB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAClC,MAAMC,kBAAkB,GAAG,CAAC,MAAM,MAAM,CAAC,CAAC,EAAE,CAAC;AAC7C,MAAMC,UAAU,GAAGA,CAAClB,EAAE,EAAEmB,OAAO,EAAEC,IAAI,KAAK;EACzC,IAAIC,CAAC,GAAGN,gBAAgB,CAACO,GAAG,CAACH,OAAO,CAAC;EACrC,IAAIE,CAAC,KAAKR,SAAS,EAAE;IACpBQ,CAAC,GAAGrC,IAAI,CAACuC,SAAS,CAACN,kBAAkB,EAAEE,OAAO,EAAEC,IAAI,CAAC;IACrDL,gBAAgB,CAACS,GAAG,CAACL,OAAO,EAAEE,CAAC,CAAC;EACjC;EACA,OAAO,YAAa;IACnBA,CAAC,CAAC,CAAC;IACH,OAAOrB,EAAE,CAAC,GAAAyB,SAAO,CAAC;EACnB,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAE9B,SAAS,KAAK;EACvD,MAAM+B,UAAU,GAAGD,IAAI,CAACC,UAAU;;EAElC;EACA,MAAMC,YAAY,GAAG,IAAId,GAAG,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,OAAOY,IAAI,CAACG,QAAQ,KAAK,QAAQ,EAAE;IACtC;IACA,IAAIvC,KAAK,GAAGoC,IAAI,CAACG,QAAQ,CAACvC,KAAK,CAAC,gBAAgB,CAAC;IACjD,IAAIA,KAAK,EAAE;MACV,MAAMwC,GAAG,GAAGpD,IAAI,CAACqD,SAAS,CAACzC,KAAK,CAAC,CAAC,CAAC,CAAC;MACpC,MAAM0C,aAAa,GAAGtC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC;MAExCkC,YAAY,CAACN,GAAG,CAAC,MAAM,EAAEU,aAAa,CAAC;MACvCJ,YAAY,CAACN,GAAG,CAAC,OAAO,EAAEU,aAAa,CAAC;MACxCJ,YAAY,CAACN,GAAG,CAAC,UAAU,EAAEU,aAAa,CAAC;MAC3CJ,YAAY,CAACN,GAAG,CAAC,MAAM,EAAEU,aAAa,CAAC;MACvCJ,YAAY,CAACN,GAAG,CAAC,MAAM,EAAEU,aAAa,CAAC;MACvCJ,YAAY,CAACN,GAAG,CAAC,MAAM,EAAEU,aAAa,CAAC;MACvCJ,YAAY,CAACN,GAAG,CAAC,KAAK,EAAE5B,QAAQ,CAACoC,GAAG,GAAI,IAAGA,GAAI,EAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;MAC7D;MACAF,YAAY,CAACN,GAAG,CACf,UAAU,EACVN,UAAU,CACTgB,aAAa,EACb,0BAA0B,EAC1B,kEACD,CACD,CAAC;IACF,CAAC,MAAM;MACN,MAAM;QAAEP,IAAI,EAAEQ,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGlD,aAAa,CAACyC,IAAI,CAACG,QAAQ,CAAC;MAEpE,MAAMC,GAAG,GAAGjD,OAAO,CAACoD,IAAI,CAAC;MACzB,MAAMG,IAAI,GAAGxD,QAAQ,CAACqD,IAAI,CAAC;MAC3B,MAAMI,IAAI,GAAGD,IAAI,CAAC/B,KAAK,CAAC,CAAC,EAAE+B,IAAI,CAAClC,MAAM,GAAG4B,GAAG,CAAC5B,MAAM,CAAC;MACpD,MAAMuB,IAAI,GAAGQ,IAAI,CAAC5B,KAAK,CAAC,CAAC,EAAE4B,IAAI,CAAC/B,MAAM,GAAGkC,IAAI,CAAClC,MAAM,CAAC;MAErD0B,YAAY,CAACN,GAAG,CAAC,MAAM,EAAE5B,QAAQ,CAACuC,IAAI,CAAC,CAAC;MACxCL,YAAY,CAACN,GAAG,CAAC,OAAO,EAAE5B,QAAQ,CAACwC,KAAK,EAAE,IAAI,CAAC,CAAC;MAChDN,YAAY,CAACN,GAAG,CAAC,UAAU,EAAE5B,QAAQ,CAACyC,QAAQ,EAAE,IAAI,CAAC,CAAC;MACtDP,YAAY,CAACN,GAAG,CAAC,MAAM,EAAE5B,QAAQ,CAAC+B,IAAI,EAAE,IAAI,CAAC,CAAC;MAC9CG,YAAY,CAACN,GAAG,CAAC,MAAM,EAAE5B,QAAQ,CAAC0C,IAAI,CAAC,CAAC;MACxCR,YAAY,CAACN,GAAG,CAAC,MAAM,EAAE5B,QAAQ,CAAC2C,IAAI,CAAC,CAAC;MACxCT,YAAY,CAACN,GAAG,CAAC,KAAK,EAAE5B,QAAQ,CAACoC,GAAG,EAAE,IAAI,CAAC,CAAC;MAC5C;MACAF,YAAY,CAACN,GAAG,CACf,UAAU,EACVN,UAAU,CACTtB,QAAQ,CAAC0C,IAAI,CAAC,EACd,0BAA0B,EAC1B,kEACD,CACD,CAAC;IACF;EACD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIV,IAAI,CAACtB,IAAI,EAAE;IACd,MAAMkC,YAAY,GAAG7C,UAAU,CAC9BC,QAAQ,CAACgC,IAAI,CAACtB,IAAI,CAAC,EACnBsB,IAAI,CAACa,cAAc,EACnB3C,SAAS,EACT,UACD,CAAC;IAEDgC,YAAY,CAACN,GAAG,CAAC,UAAU,EAAEgB,YAAY,CAAC;;IAE1C;IACAV,YAAY,CAACN,GAAG,CACf,MAAM,EACNN,UAAU,CACTsB,YAAY,EACZ,4GAA4G,EAC5G,8DACD,CACD,CAAC;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIZ,IAAI,CAACc,KAAK,EAAE;IACf,MAAMA,KAAK,GAAGd,IAAI,CAACc,KAAK;IAExB,MAAMC,eAAe,GAAGf,IAAI,CAACe,eAAe;IAE5C,MAAMC,UAAU,GAAGhD,QAAQ,CAAC8C,KAAK,CAACpD,EAAE,CAAC;IACrC,MAAMuD,YAAY,GAAGjD,QAAQ,CAAC8C,KAAK,CAACH,IAAI,IAAIG,KAAK,CAACpD,EAAE,CAAC;IACrD,MAAMwD,iBAAiB,GAAGnD,UAAU,CACnCC,QAAQ,CAAC8C,KAAK,YAAYzD,KAAK,GAAGyD,KAAK,CAACK,YAAY,GAAGL,KAAK,CAACpC,IAAI,CAAC,EAClE,gBAAgB,IAAIoC,KAAK,GAAGA,KAAK,CAACD,cAAc,GAAG5B,SAAS,EAC5Df,SAAS,EACT,WACD,CAAC;IACD,MAAMkD,mBAAmB,GAAGrD,UAAU,CACrCC,QAAQ,CACPgC,IAAI,CAACqB,WAAW,IACdN,eAAe,IACfD,KAAK,CAACO,WAAW,IACjBP,KAAK,CAACO,WAAW,CAACN,eAAe,CACpC,CAAC,EACDf,IAAI,CAACsB,qBAAqB,KACxB,uBAAuB,IAAIR,KAAK,IAAIA,KAAK,CAACQ,qBAAqB,GAC7DR,KAAK,CAACQ,qBAAqB,CAACP,eAAe,CAAC,GAC5C9B,SAAS,CAAC,EACdf,SAAS,EACT,aACD,CAAC;IAEDgC,YAAY,CAACN,GAAG,CAAC,IAAI,EAAEoB,UAAU,CAAC;IAClCd,YAAY,CAACN,GAAG,CAAC,MAAM,EAAEqB,YAAY,CAAC;IACtCf,YAAY,CAACN,GAAG,CAAC,WAAW,EAAEsB,iBAAiB,CAAC;IAChDhB,YAAY,CAACN,GAAG,CAAC,aAAa,EAAEwB,mBAAmB,CAAC;EACrD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIpB,IAAI,CAACuB,MAAM,EAAE;IAChB,MAAMA,MAAM,GAAGvB,IAAI,CAACuB,MAAM;IAE1B,MAAMP,UAAU,GAAGhD,QAAQ,CAAC,MAC3BP,SAAS,CACR8D,MAAM,YAAYjE,MAAM,GAAG2C,UAAU,CAACuB,WAAW,CAACD,MAAM,CAAC,GAAGA,MAAM,CAAC7D,EACpE,CACD,CAAC;IACD,MAAM+D,kBAAkB,GAAG1D,UAAU,CACpCC,QAAQ,CAAC,MACRuD,MAAM,YAAYjE,MAAM,GACrB2C,UAAU,CAACyB,qBAAqB,CAACH,MAAM,EAAEvB,IAAI,CAAC2B,OAAO,CAAC,GACtDJ,MAAM,CAAC7C,IACX,CAAC,EACD,gBAAgB,IAAI6C,MAAM,GAAGA,MAAM,CAACV,cAAc,GAAG5B,SAAS,EAC9Df,SAAS,EACT,YACD,CAAC;IACD,MAAM0D,mBAAmB,GAAG7D,UAAU,CACrCC,QAAQ,CAACgC,IAAI,CAACqB,WAAW,CAAC,EAC1BpC,SAAS,EACTf,SAAS,EACT,aACD,CAAC;IAEDgC,YAAY,CAACN,GAAG,CAAC,IAAI,EAAEoB,UAAU,CAAC;IAClCd,YAAY,CAACN,GAAG,CAAC,YAAY,EAAE6B,kBAAkB,CAAC;IAClDvB,YAAY,CAACN,GAAG,CAAC,aAAa,EAAEgC,mBAAmB,CAAC;IACpD1B,YAAY,CAACN,GAAG,CACf,MAAM,EACNI,IAAI,CAACqB,WAAW,GAAGO,mBAAmB,GAAGH,kBAC1C,CAAC;IACD;IACAvB,YAAY,CAACN,GAAG,CACf,UAAU,EACVN,UAAU,CACT0B,UAAU,EACV,wBAAwB,EACxB,mEACD,CACD,CAAC;EACF;;EAEA;EACA,IAAIhB,IAAI,CAAC6B,GAAG,EAAE;IACb3B,YAAY,CAACN,GAAG,CAAC,KAAK,EAAE5B,QAAQ,CAACgC,IAAI,CAAC6B,GAAG,CAAC,CAAC;EAC5C;EACA,IAAI,OAAO7B,IAAI,CAAC2B,OAAO,KAAK,QAAQ,EAAE;IACrCzB,YAAY,CAACN,GAAG,CACf,SAAS,EACT5B,QAAQ,CAAC,MAAMP,SAAS,CAACuC,IAAI,CAAC2B,OAAO,CAAC,CACvC,CAAC;EACF,CAAC,MAAM;IACNzB,YAAY,CAACN,GAAG,CAAC,SAAS,EAAE5B,QAAQ,CAAC,GAAG,CAAC,CAAC;EAC3C;EAEA,IAAI,OAAO+B,IAAI,KAAK,UAAU,EAAE;IAC/BA,IAAI,GAAGA,IAAI,CAACC,IAAI,EAAE9B,SAAS,CAAC;EAC7B;EAEA6B,IAAI,GAAGA,IAAI,CAACjC,OAAO,CAACN,MAAM,EAAE,CAACI,KAAK,EAAEkE,OAAO,KAAK;IAC/C,IAAIA,OAAO,CAACtD,MAAM,GAAG,CAAC,KAAKZ,KAAK,CAACY,MAAM,EAAE;MACxC,MAAMuD,YAAY,GAAG,oBAAoB,CAAClE,IAAI,CAACiE,OAAO,CAAC;MACvD,IAAI,CAACC,YAAY,EAAE,OAAOnE,KAAK;MAC/B,MAAM,GAAGoE,IAAI,EAAE3D,GAAG,CAAC,GAAG0D,YAAY;MAClC,MAAM/D,QAAQ,GAAGkC,YAAY,CAACR,GAAG,CAACsC,IAAI,CAAC;MACvC,IAAIhE,QAAQ,KAAKiB,SAAS,EAAE;QAC3B,OAAOjB,QAAQ,CAACJ,KAAK,EAAES,GAAG,EAAE0B,IAAI,CAAC;MAClC;IACD,CAAC,MAAM,IAAInC,KAAK,CAACqE,UAAU,CAAC,KAAK,CAAC,IAAIrE,KAAK,CAACsE,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC5D,OAAQ,IAAGtE,KAAK,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,GAAE;IACjC;IACA,OAAOf,KAAK;EACb,CAAC,CAAC;EAEF,OAAOmC,IAAI;AACZ,CAAC;AAED,MAAMoC,MAAM,GAAG,qBAAqB;AAEpC,MAAMC,mBAAmB,CAAC;EACzB;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAACN,MAAM,EAAEK,WAAW,IAAI;MACrDA,WAAW,CAACD,KAAK,CAACG,SAAS,CAACD,GAAG,CAACN,MAAM,EAAErC,oBAAoB,CAAC;IAC9D,CAAC,CAAC;EACH;AACD;AAEAyB,MAAM,CAACoB,OAAO,GAAGP,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
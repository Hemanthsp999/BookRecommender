{"ast":null,"code":"'use strict';\n\nvar Cell = require('./cell'),\n  Pledge = require('./pledge');\nvar Pipeline = function (sessions) {\n  this._cells = sessions.map(function (session) {\n    return new Cell(session);\n  });\n  this._stopped = {\n    incoming: false,\n    outgoing: false\n  };\n};\nPipeline.prototype.processIncomingMessage = function (message, callback, context) {\n  if (this._stopped.incoming) return;\n  this._loop('incoming', this._cells.length - 1, -1, -1, message, callback, context);\n};\nPipeline.prototype.processOutgoingMessage = function (message, callback, context) {\n  if (this._stopped.outgoing) return;\n  this._loop('outgoing', 0, this._cells.length, 1, message, callback, context);\n};\nPipeline.prototype.close = function (callback, context) {\n  this._stopped = {\n    incoming: true,\n    outgoing: true\n  };\n  var closed = this._cells.map(function (a) {\n    return a.close();\n  });\n  if (callback) Pledge.all(closed).then(function () {\n    callback.call(context);\n  });\n};\nPipeline.prototype._loop = function (direction, start, end, step, message, callback, context) {\n  var cells = this._cells,\n    n = cells.length,\n    self = this;\n  while (n--) cells[n].pending(direction);\n  var pipe = function (index, error, msg) {\n    if (index === end) return callback.call(context, error, msg);\n    cells[index][direction](error, msg, function (err, m) {\n      if (err) self._stopped[direction] = true;\n      pipe(index + step, err, m);\n    });\n  };\n  pipe(start, null, message);\n};\nmodule.exports = Pipeline;","map":{"version":3,"names":["Cell","require","Pledge","Pipeline","sessions","_cells","map","session","_stopped","incoming","outgoing","prototype","processIncomingMessage","message","callback","context","_loop","length","processOutgoingMessage","close","closed","a","all","then","call","direction","start","end","step","cells","n","self","pending","pipe","index","error","msg","err","m","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/websocket-extensions/lib/pipeline/index.js"],"sourcesContent":["'use strict';\n\nvar Cell   = require('./cell'),\n    Pledge = require('./pledge');\n\nvar Pipeline = function(sessions) {\n  this._cells   = sessions.map(function(session) { return new Cell(session) });\n  this._stopped = { incoming: false, outgoing: false };\n};\n\nPipeline.prototype.processIncomingMessage = function(message, callback, context) {\n  if (this._stopped.incoming) return;\n  this._loop('incoming', this._cells.length - 1, -1, -1, message, callback, context);\n};\n\nPipeline.prototype.processOutgoingMessage = function(message, callback, context) {\n  if (this._stopped.outgoing) return;\n  this._loop('outgoing', 0, this._cells.length, 1, message, callback, context);\n};\n\nPipeline.prototype.close = function(callback, context) {\n  this._stopped = { incoming: true, outgoing: true };\n\n  var closed = this._cells.map(function(a) { return a.close() });\n  if (callback)\n    Pledge.all(closed).then(function() { callback.call(context) });\n};\n\nPipeline.prototype._loop = function(direction, start, end, step, message, callback, context) {\n  var cells = this._cells,\n      n     = cells.length,\n      self  = this;\n\n  while (n--) cells[n].pending(direction);\n\n  var pipe = function(index, error, msg) {\n    if (index === end) return callback.call(context, error, msg);\n\n    cells[index][direction](error, msg, function(err, m) {\n      if (err) self._stopped[direction] = true;\n      pipe(index + step, err, m);\n    });\n  };\n  pipe(start, null, message);\n};\n\nmodule.exports = Pipeline;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
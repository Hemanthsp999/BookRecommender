{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nmodule.exports = class FileExistsPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    const fs = resolver.fileSystem;\n    resolver.getHook(this.source).tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\n      const file = request.path;\n      if (!file) return callback();\n      fs.stat(file, (err, stat) => {\n        if (err || !stat) {\n          if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(file);\n          if (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n          return callback();\n        }\n        if (!stat.isFile()) {\n          if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(file);\n          if (resolveContext.log) resolveContext.log(file + \" is not a file\");\n          return callback();\n        }\n        if (resolveContext.fileDependencies) resolveContext.fileDependencies.add(file);\n        resolver.doResolve(target, request, \"existing file: \" + file, resolveContext, callback);\n      });\n    });\n  }\n};","map":{"version":3,"names":["module","exports","FileExistsPlugin","constructor","source","target","apply","resolver","ensureHook","fs","fileSystem","getHook","tapAsync","request","resolveContext","callback","file","path","stat","err","missingDependencies","add","log","isFile","fileDependencies","doResolve"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/FileExistsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class FileExistsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst fs = resolver.fileSystem;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst file = request.path;\n\t\t\t\tif (!file) return callback();\n\t\t\t\tfs.stat(file, (err, stat) => {\n\t\t\t\t\tif (err || !stat) {\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tif (!stat.isFile()) {\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" is not a file\");\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tif (resolveContext.fileDependencies)\n\t\t\t\t\t\tresolveContext.fileDependencies.add(file);\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\"existing file: \" + file,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,MAAMC,gBAAgB,CAAC;EACvC;AACD;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/C,MAAMI,EAAE,GAAGF,QAAQ,CAACG,UAAU;IAC9BH,QAAQ,CACNI,OAAO,CAAC,IAAI,CAACP,MAAM,CAAC,CACpBQ,QAAQ,CAAC,kBAAkB,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACpE,MAAMC,IAAI,GAAGH,OAAO,CAACI,IAAI;MACzB,IAAI,CAACD,IAAI,EAAE,OAAOD,QAAQ,CAAC,CAAC;MAC5BN,EAAE,CAACS,IAAI,CAACF,IAAI,EAAE,CAACG,GAAG,EAAED,IAAI,KAAK;QAC5B,IAAIC,GAAG,IAAI,CAACD,IAAI,EAAE;UACjB,IAAIJ,cAAc,CAACM,mBAAmB,EACrCN,cAAc,CAACM,mBAAmB,CAACC,GAAG,CAACL,IAAI,CAAC;UAC7C,IAAIF,cAAc,CAACQ,GAAG,EAAER,cAAc,CAACQ,GAAG,CAACN,IAAI,GAAG,gBAAgB,CAAC;UACnE,OAAOD,QAAQ,CAAC,CAAC;QAClB;QACA,IAAI,CAACG,IAAI,CAACK,MAAM,CAAC,CAAC,EAAE;UACnB,IAAIT,cAAc,CAACM,mBAAmB,EACrCN,cAAc,CAACM,mBAAmB,CAACC,GAAG,CAACL,IAAI,CAAC;UAC7C,IAAIF,cAAc,CAACQ,GAAG,EAAER,cAAc,CAACQ,GAAG,CAACN,IAAI,GAAG,gBAAgB,CAAC;UACnE,OAAOD,QAAQ,CAAC,CAAC;QAClB;QACA,IAAID,cAAc,CAACU,gBAAgB,EAClCV,cAAc,CAACU,gBAAgB,CAACH,GAAG,CAACL,IAAI,CAAC;QAC1CT,QAAQ,CAACkB,SAAS,CACjBpB,MAAM,EACNQ,OAAO,EACP,iBAAiB,GAAGG,IAAI,EACxBF,cAAc,EACdC,QACD,CAAC;MACF,CAAC,CAAC;IACH,CAAC,CAAC;EACJ;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
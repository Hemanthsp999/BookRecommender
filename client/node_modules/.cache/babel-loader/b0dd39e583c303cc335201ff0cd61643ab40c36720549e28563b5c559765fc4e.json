{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\n * @typedef {Object} IStats\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {number | bigint} dev\n * @property {number | bigint} ino\n * @property {number | bigint} mode\n * @property {number | bigint} nlink\n * @property {number | bigint} uid\n * @property {number | bigint} gid\n * @property {number | bigint} rdev\n * @property {number | bigint} size\n * @property {number | bigint} blksize\n * @property {number | bigint} blocks\n * @property {number | bigint} atimeMs\n * @property {number | bigint} mtimeMs\n * @property {number | bigint} ctimeMs\n * @property {number | bigint} birthtimeMs\n * @property {Date} atime\n * @property {Date} mtime\n * @property {Date} ctime\n * @property {Date} birthtime\n */\n\n/**\n * @typedef {Object} IDirent\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {string | Buffer} name\n */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=): void} Callback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer=): void} BufferCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer|string=): void} BufferOrStringCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, (string | Buffer)[] | IDirent[]=): void} DirentArrayCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, string=): void} StringCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, number=): void} NumberCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, IStats=): void} StatsCallback */\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, any=): void} ReadJsonCallback */\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, IStats|string=): void} LstatReadlinkAbsoluteCallback */\n\n/**\n * @typedef {Object} WatcherInfo\n * @property {Set<string>} changes get current aggregated changes that have not yet send to callback\n * @property {Set<string>} removals get current aggregated removals that have not yet send to callback\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} fileTimeInfoEntries get info about files\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} contextTimeInfoEntries get info about directories\n */\n\n// TODO webpack 6 deprecate missing getInfo\n/**\n * @typedef {Object} Watcher\n * @property {function(): void} close closes the watcher and all underlying file watchers\n * @property {function(): void} pause closes the watcher, but keeps underlying file watchers alive until the next watch call\n * @property {function(): Set<string>=} getAggregatedChanges get current aggregated changes that have not yet send to callback\n * @property {function(): Set<string>=} getAggregatedRemovals get current aggregated removals that have not yet send to callback\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getFileTimeInfoEntries get info about files\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getContextTimeInfoEntries get info about directories\n * @property {function(): WatcherInfo=} getInfo get info about timestamps and changes\n */\n\n/**\n * @callback WatchMethod\n * @param {Iterable<string>} files watched files\n * @param {Iterable<string>} directories watched directories\n * @param {Iterable<string>} missing watched exitance entries\n * @param {number} startTime timestamp of start time\n * @param {WatchOptions} options options object\n * @param {function(Error=, Map<string, FileSystemInfoEntry | \"ignore\">, Map<string, FileSystemInfoEntry | \"ignore\">, Set<string>, Set<string>): void} callback aggregated callback\n * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n * @returns {Watcher} a watcher\n */\n\n// TODO webpack 6 make optional methods required\n\n/**\n * @typedef {Object} OutputFileSystem\n * @property {function(string, Buffer|string, Callback): void} writeFile\n * @property {function(string, Callback): void} mkdir\n * @property {function(string, DirentArrayCallback): void=} readdir\n * @property {function(string, Callback): void=} rmdir\n * @property {function(string, Callback): void=} unlink\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} InputFileSystem\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, ReadJsonCallback): void)=} readJson\n * @property {function(string, BufferOrStringCallback): void} readlink\n * @property {function(string, DirentArrayCallback): void} readdir\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {(function(string, BufferOrStringCallback): void)=} realpath\n * @property {(function(string=): void)=} purge\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} WatchFileSystem\n * @property {WatchMethod} watch\n */\n\n/**\n * @typedef {Object} IntermediateFileSystemExtras\n * @property {function(string): void} mkdirSync\n * @property {function(string): NodeJS.WritableStream} createWriteStream\n * @property {function(string, string, NumberCallback): void} open\n * @property {function(number, Buffer, number, number, number, NumberCallback): void} read\n * @property {function(number, Callback): void} close\n * @property {function(string, string, Callback): void} rename\n */\n\n/** @typedef {InputFileSystem & OutputFileSystem & IntermediateFileSystemExtras} IntermediateFileSystem */\n\n/**\n *\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath the root path\n * @param {string} targetPath the target path\n * @returns {string} location of targetPath relative to rootPath\n */\nconst relative = (fs, rootPath, targetPath) => {\n  if (fs && fs.relative) {\n    return fs.relative(rootPath, targetPath);\n  } else if (path.posix.isAbsolute(rootPath)) {\n    return path.posix.relative(rootPath, targetPath);\n  } else if (path.win32.isAbsolute(rootPath)) {\n    return path.win32.relative(rootPath, targetPath);\n  } else {\n    throw new Error(`${rootPath} is neither a posix nor a windows path, and there is no 'relative' method defined in the file system`);\n  }\n};\nexports.relative = relative;\n\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath a path\n * @param {string} filename a filename\n * @returns {string} the joined path\n */\nconst join = (fs, rootPath, filename) => {\n  if (fs && fs.join) {\n    return fs.join(rootPath, filename);\n  } else if (path.posix.isAbsolute(rootPath)) {\n    return path.posix.join(rootPath, filename);\n  } else if (path.win32.isAbsolute(rootPath)) {\n    return path.win32.join(rootPath, filename);\n  } else {\n    throw new Error(`${rootPath} is neither a posix nor a windows path, and there is no 'join' method defined in the file system`);\n  }\n};\nexports.join = join;\n\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} absPath an absolute path\n * @returns {string} the parent directory of the absolute path\n */\nconst dirname = (fs, absPath) => {\n  if (fs && fs.dirname) {\n    return fs.dirname(absPath);\n  } else if (path.posix.isAbsolute(absPath)) {\n    return path.posix.dirname(absPath);\n  } else if (path.win32.isAbsolute(absPath)) {\n    return path.win32.dirname(absPath);\n  } else {\n    throw new Error(`${absPath} is neither a posix nor a windows path, and there is no 'dirname' method defined in the file system`);\n  }\n};\nexports.dirname = dirname;\n\n/**\n * @param {OutputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {function(Error=): void} callback callback function for the error\n * @returns {void}\n */\nconst mkdirp = (fs, p, callback) => {\n  fs.mkdir(p, err => {\n    if (err) {\n      if (err.code === \"ENOENT\") {\n        const dir = dirname(fs, p);\n        if (dir === p) {\n          callback(err);\n          return;\n        }\n        mkdirp(fs, dir, err => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          fs.mkdir(p, err => {\n            if (err) {\n              if (err.code === \"EEXIST\") {\n                callback();\n                return;\n              }\n              callback(err);\n              return;\n            }\n            callback();\n          });\n        });\n        return;\n      } else if (err.code === \"EEXIST\") {\n        callback();\n        return;\n      }\n      callback(err);\n      return;\n    }\n    callback();\n  });\n};\nexports.mkdirp = mkdirp;\n\n/**\n * @param {IntermediateFileSystem} fs a file system\n * @param {string} p an absolute path\n * @returns {void}\n */\nconst mkdirpSync = (fs, p) => {\n  try {\n    fs.mkdirSync(p);\n  } catch (err) {\n    if (err) {\n      if (err.code === \"ENOENT\") {\n        const dir = dirname(fs, p);\n        if (dir === p) {\n          throw err;\n        }\n        mkdirpSync(fs, dir);\n        fs.mkdirSync(p);\n        return;\n      } else if (err.code === \"EEXIST\") {\n        return;\n      }\n      throw err;\n    }\n  }\n};\nexports.mkdirpSync = mkdirpSync;\n\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\nconst readJson = (fs, p, callback) => {\n  if (\"readJson\" in fs) return fs.readJson(p, callback);\n  fs.readFile(p, (err, buf) => {\n    if (err) return callback(err);\n    let data;\n    try {\n      data = JSON.parse(buf.toString(\"utf-8\"));\n    } catch (e) {\n      return callback(e);\n    }\n    return callback(null, data);\n  });\n};\nexports.readJson = readJson;\n\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\nconst lstatReadlinkAbsolute = (fs, p, callback) => {\n  let i = 3;\n  const doReadLink = () => {\n    fs.readlink(p, (err, target) => {\n      if (err && --i > 0) {\n        // It might was just changed from symlink to file\n        // we retry 2 times to catch this case before throwing the error\n        return doStat();\n      }\n      if (err || !target) return doStat();\n      const value = target.toString();\n      callback(null, join(fs, dirname(fs, p), value));\n    });\n  };\n  const doStat = () => {\n    if (\"lstat\" in fs) {\n      return fs.lstat(p, (err, stats) => {\n        if (err) return callback(err);\n        if (stats.isSymbolicLink()) {\n          return doReadLink();\n        }\n        callback(null, stats);\n      });\n    } else {\n      return fs.stat(p, callback);\n    }\n  };\n  if (\"lstat\" in fs) return doStat();\n  doReadLink();\n};\nexports.lstatReadlinkAbsolute = lstatReadlinkAbsolute;","map":{"version":3,"names":["path","require","relative","fs","rootPath","targetPath","posix","isAbsolute","win32","Error","exports","join","filename","dirname","absPath","mkdirp","p","callback","mkdir","err","code","dir","mkdirpSync","mkdirSync","readJson","readFile","buf","data","JSON","parse","toString","e","lstatReadlinkAbsolute","i","doReadLink","readlink","target","doStat","value","lstat","stats","isSymbolicLink","stat"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/util/fs.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n\n/**\n * @typedef {Object} IStats\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {number | bigint} dev\n * @property {number | bigint} ino\n * @property {number | bigint} mode\n * @property {number | bigint} nlink\n * @property {number | bigint} uid\n * @property {number | bigint} gid\n * @property {number | bigint} rdev\n * @property {number | bigint} size\n * @property {number | bigint} blksize\n * @property {number | bigint} blocks\n * @property {number | bigint} atimeMs\n * @property {number | bigint} mtimeMs\n * @property {number | bigint} ctimeMs\n * @property {number | bigint} birthtimeMs\n * @property {Date} atime\n * @property {Date} mtime\n * @property {Date} ctime\n * @property {Date} birthtime\n */\n\n/**\n * @typedef {Object} IDirent\n * @property {() => boolean} isFile\n * @property {() => boolean} isDirectory\n * @property {() => boolean} isBlockDevice\n * @property {() => boolean} isCharacterDevice\n * @property {() => boolean} isSymbolicLink\n * @property {() => boolean} isFIFO\n * @property {() => boolean} isSocket\n * @property {string | Buffer} name\n */\n\n/** @typedef {function((NodeJS.ErrnoException | null)=): void} Callback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer=): void} BufferCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, Buffer|string=): void} BufferOrStringCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, (string | Buffer)[] | IDirent[]=): void} DirentArrayCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, string=): void} StringCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, number=): void} NumberCallback */\n/** @typedef {function((NodeJS.ErrnoException | null)=, IStats=): void} StatsCallback */\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, any=): void} ReadJsonCallback */\n/** @typedef {function((NodeJS.ErrnoException | Error | null)=, IStats|string=): void} LstatReadlinkAbsoluteCallback */\n\n/**\n * @typedef {Object} WatcherInfo\n * @property {Set<string>} changes get current aggregated changes that have not yet send to callback\n * @property {Set<string>} removals get current aggregated removals that have not yet send to callback\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} fileTimeInfoEntries get info about files\n * @property {Map<string, FileSystemInfoEntry | \"ignore\">} contextTimeInfoEntries get info about directories\n */\n\n// TODO webpack 6 deprecate missing getInfo\n/**\n * @typedef {Object} Watcher\n * @property {function(): void} close closes the watcher and all underlying file watchers\n * @property {function(): void} pause closes the watcher, but keeps underlying file watchers alive until the next watch call\n * @property {function(): Set<string>=} getAggregatedChanges get current aggregated changes that have not yet send to callback\n * @property {function(): Set<string>=} getAggregatedRemovals get current aggregated removals that have not yet send to callback\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getFileTimeInfoEntries get info about files\n * @property {function(): Map<string, FileSystemInfoEntry | \"ignore\">} getContextTimeInfoEntries get info about directories\n * @property {function(): WatcherInfo=} getInfo get info about timestamps and changes\n */\n\n/**\n * @callback WatchMethod\n * @param {Iterable<string>} files watched files\n * @param {Iterable<string>} directories watched directories\n * @param {Iterable<string>} missing watched exitance entries\n * @param {number} startTime timestamp of start time\n * @param {WatchOptions} options options object\n * @param {function(Error=, Map<string, FileSystemInfoEntry | \"ignore\">, Map<string, FileSystemInfoEntry | \"ignore\">, Set<string>, Set<string>): void} callback aggregated callback\n * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n * @returns {Watcher} a watcher\n */\n\n// TODO webpack 6 make optional methods required\n\n/**\n * @typedef {Object} OutputFileSystem\n * @property {function(string, Buffer|string, Callback): void} writeFile\n * @property {function(string, Callback): void} mkdir\n * @property {function(string, DirentArrayCallback): void=} readdir\n * @property {function(string, Callback): void=} rmdir\n * @property {function(string, Callback): void=} unlink\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} InputFileSystem\n * @property {function(string, BufferOrStringCallback): void} readFile\n * @property {(function(string, ReadJsonCallback): void)=} readJson\n * @property {function(string, BufferOrStringCallback): void} readlink\n * @property {function(string, DirentArrayCallback): void} readdir\n * @property {function(string, StatsCallback): void} stat\n * @property {function(string, StatsCallback): void=} lstat\n * @property {(function(string, BufferOrStringCallback): void)=} realpath\n * @property {(function(string=): void)=} purge\n * @property {(function(string, string): string)=} join\n * @property {(function(string, string): string)=} relative\n * @property {(function(string): string)=} dirname\n */\n\n/**\n * @typedef {Object} WatchFileSystem\n * @property {WatchMethod} watch\n */\n\n/**\n * @typedef {Object} IntermediateFileSystemExtras\n * @property {function(string): void} mkdirSync\n * @property {function(string): NodeJS.WritableStream} createWriteStream\n * @property {function(string, string, NumberCallback): void} open\n * @property {function(number, Buffer, number, number, number, NumberCallback): void} read\n * @property {function(number, Callback): void} close\n * @property {function(string, string, Callback): void} rename\n */\n\n/** @typedef {InputFileSystem & OutputFileSystem & IntermediateFileSystemExtras} IntermediateFileSystem */\n\n/**\n *\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath the root path\n * @param {string} targetPath the target path\n * @returns {string} location of targetPath relative to rootPath\n */\nconst relative = (fs, rootPath, targetPath) => {\n\tif (fs && fs.relative) {\n\t\treturn fs.relative(rootPath, targetPath);\n\t} else if (path.posix.isAbsolute(rootPath)) {\n\t\treturn path.posix.relative(rootPath, targetPath);\n\t} else if (path.win32.isAbsolute(rootPath)) {\n\t\treturn path.win32.relative(rootPath, targetPath);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`${rootPath} is neither a posix nor a windows path, and there is no 'relative' method defined in the file system`\n\t\t);\n\t}\n};\nexports.relative = relative;\n\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} rootPath a path\n * @param {string} filename a filename\n * @returns {string} the joined path\n */\nconst join = (fs, rootPath, filename) => {\n\tif (fs && fs.join) {\n\t\treturn fs.join(rootPath, filename);\n\t} else if (path.posix.isAbsolute(rootPath)) {\n\t\treturn path.posix.join(rootPath, filename);\n\t} else if (path.win32.isAbsolute(rootPath)) {\n\t\treturn path.win32.join(rootPath, filename);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`${rootPath} is neither a posix nor a windows path, and there is no 'join' method defined in the file system`\n\t\t);\n\t}\n};\nexports.join = join;\n\n/**\n * @param {InputFileSystem|OutputFileSystem|undefined} fs a file system\n * @param {string} absPath an absolute path\n * @returns {string} the parent directory of the absolute path\n */\nconst dirname = (fs, absPath) => {\n\tif (fs && fs.dirname) {\n\t\treturn fs.dirname(absPath);\n\t} else if (path.posix.isAbsolute(absPath)) {\n\t\treturn path.posix.dirname(absPath);\n\t} else if (path.win32.isAbsolute(absPath)) {\n\t\treturn path.win32.dirname(absPath);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`${absPath} is neither a posix nor a windows path, and there is no 'dirname' method defined in the file system`\n\t\t);\n\t}\n};\nexports.dirname = dirname;\n\n/**\n * @param {OutputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {function(Error=): void} callback callback function for the error\n * @returns {void}\n */\nconst mkdirp = (fs, p, callback) => {\n\tfs.mkdir(p, err => {\n\t\tif (err) {\n\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\tconst dir = dirname(fs, p);\n\t\t\t\tif (dir === p) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmkdirp(fs, dir, err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tfs.mkdir(p, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tif (err.code === \"EEXIST\") {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else if (err.code === \"EEXIST\") {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(err);\n\t\t\treturn;\n\t\t}\n\t\tcallback();\n\t});\n};\nexports.mkdirp = mkdirp;\n\n/**\n * @param {IntermediateFileSystem} fs a file system\n * @param {string} p an absolute path\n * @returns {void}\n */\nconst mkdirpSync = (fs, p) => {\n\ttry {\n\t\tfs.mkdirSync(p);\n\t} catch (err) {\n\t\tif (err) {\n\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\tconst dir = dirname(fs, p);\n\t\t\t\tif (dir === p) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\tmkdirpSync(fs, dir);\n\t\t\t\tfs.mkdirSync(p);\n\t\t\t\treturn;\n\t\t\t} else if (err.code === \"EEXIST\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t}\n};\nexports.mkdirpSync = mkdirpSync;\n\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\nconst readJson = (fs, p, callback) => {\n\tif (\"readJson\" in fs) return fs.readJson(p, callback);\n\tfs.readFile(p, (err, buf) => {\n\t\tif (err) return callback(err);\n\t\tlet data;\n\t\ttry {\n\t\t\tdata = JSON.parse(buf.toString(\"utf-8\"));\n\t\t} catch (e) {\n\t\t\treturn callback(e);\n\t\t}\n\t\treturn callback(null, data);\n\t});\n};\nexports.readJson = readJson;\n\n/**\n * @param {InputFileSystem} fs a file system\n * @param {string} p an absolute path\n * @param {ReadJsonCallback} callback callback\n * @returns {void}\n */\nconst lstatReadlinkAbsolute = (fs, p, callback) => {\n\tlet i = 3;\n\tconst doReadLink = () => {\n\t\tfs.readlink(p, (err, target) => {\n\t\t\tif (err && --i > 0) {\n\t\t\t\t// It might was just changed from symlink to file\n\t\t\t\t// we retry 2 times to catch this case before throwing the error\n\t\t\t\treturn doStat();\n\t\t\t}\n\t\t\tif (err || !target) return doStat();\n\t\t\tconst value = target.toString();\n\t\t\tcallback(null, join(fs, dirname(fs, p), value));\n\t\t});\n\t};\n\tconst doStat = () => {\n\t\tif (\"lstat\" in fs) {\n\t\t\treturn fs.lstat(p, (err, stats) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (stats.isSymbolicLink()) {\n\t\t\t\t\treturn doReadLink();\n\t\t\t\t}\n\t\t\t\tcallback(null, stats);\n\t\t\t});\n\t\t} else {\n\t\t\treturn fs.stat(p, callback);\n\t\t}\n\t};\n\tif (\"lstat\" in fs) return doStat();\n\tdoReadLink();\n};\nexports.lstatReadlinkAbsolute = lstatReadlinkAbsolute;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGA,CAACC,EAAE,EAAEC,QAAQ,EAAEC,UAAU,KAAK;EAC9C,IAAIF,EAAE,IAAIA,EAAE,CAACD,QAAQ,EAAE;IACtB,OAAOC,EAAE,CAACD,QAAQ,CAACE,QAAQ,EAAEC,UAAU,CAAC;EACzC,CAAC,MAAM,IAAIL,IAAI,CAACM,KAAK,CAACC,UAAU,CAACH,QAAQ,CAAC,EAAE;IAC3C,OAAOJ,IAAI,CAACM,KAAK,CAACJ,QAAQ,CAACE,QAAQ,EAAEC,UAAU,CAAC;EACjD,CAAC,MAAM,IAAIL,IAAI,CAACQ,KAAK,CAACD,UAAU,CAACH,QAAQ,CAAC,EAAE;IAC3C,OAAOJ,IAAI,CAACQ,KAAK,CAACN,QAAQ,CAACE,QAAQ,EAAEC,UAAU,CAAC;EACjD,CAAC,MAAM;IACN,MAAM,IAAII,KAA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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
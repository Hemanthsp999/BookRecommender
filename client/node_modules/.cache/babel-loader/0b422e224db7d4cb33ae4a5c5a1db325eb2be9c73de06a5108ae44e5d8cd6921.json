{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nmodule.exports = class UseFilePlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string} filename filename\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, filename, target) {\n    this.source = source;\n    this.filename = filename;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"UseFilePlugin\", (request, resolveContext, callback) => {\n      const filePath = resolver.join( /** @type {string} */request.path, this.filename);\n\n      /** @type {ResolveRequest} */\n      const obj = {\n        ...request,\n        path: filePath,\n        relativePath: request.relativePath && resolver.join(request.relativePath, this.filename)\n      };\n      resolver.doResolve(target, obj, \"using path: \" + filePath, resolveContext, callback);\n    });\n  }\n};","map":{"version":3,"names":["module","exports","UseFilePlugin","constructor","source","filename","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","filePath","join","path","obj","relativePath","doResolve"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/UseFilePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class UseFilePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} filename filename\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filename, target) {\n\t\tthis.source = source;\n\t\tthis.filename = filename;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UseFilePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst filePath = resolver.join(\n\t\t\t\t\t/** @type {string} */ (request.path),\n\t\t\t\t\tthis.filename\n\t\t\t\t);\n\n\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: filePath,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, this.filename)\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"using path: \" + filePath,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,MAAMC,aAAa,CAAC;EACpC;AACD;AACA;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IACrC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CAAC,eAAe,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACjE,MAAMC,QAAQ,GAAGP,QAAQ,CAACQ,IAAI,EAC7B,qBAAuBJ,OAAO,CAACK,IAAI,EACnC,IAAI,CAACZ,QACN,CAAC;;MAED;MACA,MAAMa,GAAG,GAAG;QACX,GAAGN,OAAO;QACVK,IAAI,EAAEF,QAAQ;QACdI,YAAY,EACXP,OAAO,CAACO,YAAY,IACpBX,QAAQ,CAACQ,IAAI,CAACJ,OAAO,CAACO,YAAY,EAAE,IAAI,CAACd,QAAQ;MACnD,CAAC;MACDG,QAAQ,CAACY,SAAS,CACjBd,MAAM,EACNY,GAAG,EACH,cAAc,GAAGH,QAAQ,EACzBF,cAAc,EACdC,QACD,CAAC;IACF,CAAC,CAAC;EACJ;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\n\n/** @typedef {import(\"estree\").Expression} ExpressionNode */\n/** @typedef {import(\"estree\").Node} Node */\n/** @typedef {import(\"./JavascriptParser\")} JavascriptParser */\n\n/**\n * @param {JavascriptParser} parser the parser\n * @param {string} value the const value\n * @param {string[]=} runtimeRequirements runtime requirements\n * @returns {function(ExpressionNode): true} plugin function\n */\nexports.toConstantDependency = (parser, value, runtimeRequirements) => {\n  return function constDependency(expr) {\n    const dep = new ConstDependency(value, expr.range, runtimeRequirements);\n    dep.loc = expr.loc;\n    parser.state.module.addPresentationalDependency(dep);\n    return true;\n  };\n};\n\n/**\n * @param {string} value the string value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToString = value => {\n  return function stringExpression(expr) {\n    return new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n  };\n};\n\n/**\n * @param {number} value the number value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToNumber = value => {\n  return function stringExpression(expr) {\n    return new BasicEvaluatedExpression().setNumber(value).setRange(expr.range);\n  };\n};\n\n/**\n * @param {boolean} value the boolean value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToBoolean = value => {\n  return function booleanExpression(expr) {\n    return new BasicEvaluatedExpression().setBoolean(value).setRange(expr.range);\n  };\n};\n\n/**\n * @param {string} identifier identifier\n * @param {string} rootInfo rootInfo\n * @param {function(): string[]} getMembers getMembers\n * @param {boolean|null=} truthy is truthy, null if nullish\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} callback\n */\nexports.evaluateToIdentifier = (identifier, rootInfo, getMembers, truthy) => {\n  return function identifierExpression(expr) {\n    let evaluatedExpression = new BasicEvaluatedExpression().setIdentifier(identifier, rootInfo, getMembers).setSideEffects(false).setRange(expr.range);\n    switch (truthy) {\n      case true:\n        evaluatedExpression.setTruthy();\n        break;\n      case null:\n        evaluatedExpression.setNullish(true);\n        break;\n      case false:\n        evaluatedExpression.setFalsy();\n        break;\n    }\n    return evaluatedExpression;\n  };\n};\nexports.expressionIsUnsupported = (parser, message) => {\n  return function unsupportedExpression(expr) {\n    const dep = new ConstDependency(\"(void 0)\", expr.range, null);\n    dep.loc = expr.loc;\n    parser.state.module.addPresentationalDependency(dep);\n    if (!parser.state.module) return;\n    parser.state.module.addWarning(new UnsupportedFeatureWarning(message, expr.loc));\n    return true;\n  };\n};\nexports.skipTraversal = () => true;\nexports.approve = () => true;","map":{"version":3,"names":["UnsupportedFeatureWarning","require","ConstDependency","BasicEvaluatedExpression","exports","toConstantDependency","parser","value","runtimeRequirements","constDependency","expr","dep","range","loc","state","module","addPresentationalDependency","evaluateToString","stringExpression","setString","setRange","evaluateToNumber","setNumber","evaluateToBoolean","booleanExpression","setBoolean","evaluateToIdentifier","identifier","rootInfo","getMembers","truthy","identifierExpression","evaluatedExpression","setIdentifier","setSideEffects","setTruthy","setNullish","setFalsy","expressionIsUnsupported","message","unsupportedExpression","addWarning","skipTraversal","approve"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/javascript/JavascriptParserHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\n\n/** @typedef {import(\"estree\").Expression} ExpressionNode */\n/** @typedef {import(\"estree\").Node} Node */\n/** @typedef {import(\"./JavascriptParser\")} JavascriptParser */\n\n/**\n * @param {JavascriptParser} parser the parser\n * @param {string} value the const value\n * @param {string[]=} runtimeRequirements runtime requirements\n * @returns {function(ExpressionNode): true} plugin function\n */\nexports.toConstantDependency = (parser, value, runtimeRequirements) => {\n\treturn function constDependency(expr) {\n\t\tconst dep = new ConstDependency(value, expr.range, runtimeRequirements);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.module.addPresentationalDependency(dep);\n\t\treturn true;\n\t};\n};\n\n/**\n * @param {string} value the string value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToString = value => {\n\treturn function stringExpression(expr) {\n\t\treturn new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n\t};\n};\n\n/**\n * @param {number} value the number value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToNumber = value => {\n\treturn function stringExpression(expr) {\n\t\treturn new BasicEvaluatedExpression().setNumber(value).setRange(expr.range);\n\t};\n};\n\n/**\n * @param {boolean} value the boolean value\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} plugin function\n */\nexports.evaluateToBoolean = value => {\n\treturn function booleanExpression(expr) {\n\t\treturn new BasicEvaluatedExpression()\n\t\t\t.setBoolean(value)\n\t\t\t.setRange(expr.range);\n\t};\n};\n\n/**\n * @param {string} identifier identifier\n * @param {string} rootInfo rootInfo\n * @param {function(): string[]} getMembers getMembers\n * @param {boolean|null=} truthy is truthy, null if nullish\n * @returns {function(ExpressionNode): BasicEvaluatedExpression} callback\n */\nexports.evaluateToIdentifier = (identifier, rootInfo, getMembers, truthy) => {\n\treturn function identifierExpression(expr) {\n\t\tlet evaluatedExpression = new BasicEvaluatedExpression()\n\t\t\t.setIdentifier(identifier, rootInfo, getMembers)\n\t\t\t.setSideEffects(false)\n\t\t\t.setRange(expr.range);\n\t\tswitch (truthy) {\n\t\t\tcase true:\n\t\t\t\tevaluatedExpression.setTruthy();\n\t\t\t\tbreak;\n\t\t\tcase null:\n\t\t\t\tevaluatedExpression.setNullish(true);\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\tevaluatedExpression.setFalsy();\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn evaluatedExpression;\n\t};\n};\n\nexports.expressionIsUnsupported = (parser, message) => {\n\treturn function unsupportedExpression(expr) {\n\t\tconst dep = new ConstDependency(\"(void 0)\", expr.range, null);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.module.addPresentationalDependency(dep);\n\t\tif (!parser.state.module) return;\n\t\tparser.state.module.addWarning(\n\t\t\tnew UnsupportedFeatureWarning(message, expr.loc)\n\t\t);\n\t\treturn true;\n\t};\n};\n\nexports.skipTraversal = () => true;\n\nexports.approve = () => true;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
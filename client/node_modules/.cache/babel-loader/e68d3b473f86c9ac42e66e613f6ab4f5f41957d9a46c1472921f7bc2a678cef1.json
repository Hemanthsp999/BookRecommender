{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst {\n  HookMap,\n  SyncHook,\n  SyncBailHook,\n  SyncWaterfallHook,\n  AsyncSeriesHook,\n  AsyncSeriesBailHook,\n  AsyncParallelHook\n} = require(\"tapable\");\nconst util = require(\"util\");\nconst {\n  CachedSource\n} = require(\"webpack-sources\");\nconst {\n  MultiItemCache\n} = require(\"./CacheFacade\");\nconst Chunk = require(\"./Chunk\");\nconst ChunkGraph = require(\"./ChunkGraph\");\nconst ChunkGroup = require(\"./ChunkGroup\");\nconst ChunkRenderError = require(\"./ChunkRenderError\");\nconst ChunkTemplate = require(\"./ChunkTemplate\");\nconst CodeGenerationError = require(\"./CodeGenerationError\");\nconst CodeGenerationResults = require(\"./CodeGenerationResults\");\nconst Dependency = require(\"./Dependency\");\nconst DependencyTemplates = require(\"./DependencyTemplates\");\nconst Entrypoint = require(\"./Entrypoint\");\nconst ErrorHelpers = require(\"./ErrorHelpers\");\nconst FileSystemInfo = require(\"./FileSystemInfo\");\nconst {\n  connectChunkGroupAndChunk,\n  connectChunkGroupParentAndChild\n} = require(\"./GraphHelpers\");\nconst {\n  makeWebpackError,\n  tryRunOrWebpackError\n} = require(\"./HookWebpackError\");\nconst MainTemplate = require(\"./MainTemplate\");\nconst Module = require(\"./Module\");\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\nconst ModuleGraph = require(\"./ModuleGraph\");\nconst ModuleHashingError = require(\"./ModuleHashingError\");\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\nconst ModuleProfile = require(\"./ModuleProfile\");\nconst ModuleRestoreError = require(\"./ModuleRestoreError\");\nconst ModuleStoreError = require(\"./ModuleStoreError\");\nconst ModuleTemplate = require(\"./ModuleTemplate\");\nconst {\n  WEBPACK_MODULE_TYPE_RUNTIME\n} = require(\"./ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst RuntimeTemplate = require(\"./RuntimeTemplate\");\nconst Stats = require(\"./Stats\");\nconst WebpackError = require(\"./WebpackError\");\nconst buildChunkGraph = require(\"./buildChunkGraph\");\nconst BuildCycleError = require(\"./errors/BuildCycleError\");\nconst {\n  Logger,\n  LogType\n} = require(\"./logging/Logger\");\nconst StatsFactory = require(\"./stats/StatsFactory\");\nconst StatsPrinter = require(\"./stats/StatsPrinter\");\nconst {\n  equals: arrayEquals\n} = require(\"./util/ArrayHelpers\");\nconst AsyncQueue = require(\"./util/AsyncQueue\");\nconst LazySet = require(\"./util/LazySet\");\nconst {\n  getOrInsert\n} = require(\"./util/MapHelpers\");\nconst WeakTupleMap = require(\"./util/WeakTupleMap\");\nconst {\n  cachedCleverMerge\n} = require(\"./util/cleverMerge\");\nconst {\n  compareLocations,\n  concatComparators,\n  compareSelect,\n  compareIds,\n  compareStringsNumeric,\n  compareModulesByIdentifier\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst {\n  arrayToSetDeprecation,\n  soonFrozenObjectDeprecation,\n  createFakeHook\n} = require(\"./util/deprecation\");\nconst processAsyncTree = require(\"./util/processAsyncTree\");\nconst {\n  getRuntimeKey\n} = require(\"./util/runtime\");\nconst {\n  isSourceEqual\n} = require(\"./util/source\");\n\n/** @template T @typedef {import(\"tapable\").AsArray<T>} AsArray<T> */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDescriptionNormalized} EntryDescription */\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginInstance} WebpackPluginInstance */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Cache\")} Cache */\n/** @typedef {import(\"./CacheFacade\")} CacheFacade */\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Compiler\").CompilationParams} CompilationParams */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./ModuleFactory\")} ModuleFactory */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryCreateDataContextInfo} ModuleFactoryCreateDataContextInfo */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./RuntimeModule\")} RuntimeModule */\n/** @typedef {import(\"./Template\").RenderManifestEntry} RenderManifestEntry */\n/** @typedef {import(\"./Template\").RenderManifestOptions} RenderManifestOptions */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsAsset} StatsAsset */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsError} StatsError */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsModule} StatsModule */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @template T @typedef {import(\"./util/deprecation\").FakeHook<T>} FakeHook<T> */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @callback Callback\n * @param {(WebpackError | null)=} err\n * @returns {void}\n */\n\n/**\n * @callback ModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {Module=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleOrFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {Module | ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ExecuteModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {ExecuteModuleResult=} result\n * @returns {void}\n */\n\n/**\n * @callback DepBlockVarDependenciesCallback\n * @param {Dependency} dependency\n * @returns {any}\n */\n\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n/** @typedef {Record<string, Source>} CompilationAssets */\n\n/**\n * @typedef {Object} AvailableModulesChunkGroupMapping\n * @property {ChunkGroup} chunkGroup\n * @property {Set<Module>} availableModules\n * @property {boolean} needCopy\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n */\n\n/**\n * @typedef {Object} ChunkPathData\n * @property {string|number} id\n * @property {string=} name\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Record<string, string>)=} contentHash\n * @property {(Record<string, (length: number) => string>)=} contentHashWithLength\n */\n\n/**\n * @typedef {Object} ChunkHashContext\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {ModuleGraph} moduleGraph the module graph\n * @property {ChunkGraph} chunkGraph the chunk graph\n */\n\n/**\n * @typedef {Object} RuntimeRequirementsContext\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults the code generation results\n */\n\n/**\n * @typedef {Object} ExecuteModuleOptions\n * @property {EntryOptions=} entryOptions\n */\n\n/**\n * @typedef {Object} ExecuteModuleResult\n * @property {any} exports\n * @property {boolean} cacheable\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {LazySet<string>} fileDependencies\n * @property {LazySet<string>} contextDependencies\n * @property {LazySet<string>} missingDependencies\n * @property {LazySet<string>} buildDependencies\n */\n\n/**\n * @typedef {Object} ExecuteModuleArgument\n * @property {Module} module\n * @property {{ id: string, exports: any, loaded: boolean }=} moduleObject\n * @property {any} preparedInfo\n * @property {CodeGenerationResult} codeGenerationResult\n */\n\n/**\n * @typedef {Object} ExecuteModuleContext\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {Chunk} chunk\n * @property {ChunkGraph} chunkGraph\n * @property {function(string): any=} __webpack_require__\n */\n\n/**\n * @typedef {Object} EntryData\n * @property {Dependency[]} dependencies dependencies of the entrypoint that should be evaluated at startup\n * @property {Dependency[]} includeDependencies dependencies of the entrypoint that should be included but not evaluated\n * @property {EntryOptions} options options of the entrypoint\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @typedef {Object} KnownAssetInfo\n * @property {boolean=} immutable true, if the asset can be long term cached forever (contains a hash)\n * @property {boolean=} minimized whether the asset is minimized\n * @property {string | string[]=} fullhash the value(s) of the full hash used for this asset\n * @property {string | string[]=} chunkhash the value(s) of the chunk hash used for this asset\n * @property {string | string[]=} modulehash the value(s) of the module hash used for this asset\n * @property {string | string[]=} contenthash the value(s) of the content hash used for this asset\n * @property {string=} sourceFilename when asset was created from a source file (potentially transformed), the original filename relative to compilation context\n * @property {number=} size size in bytes, only set after asset has been emitted\n * @property {boolean=} development true, when asset is only used for development and doesn't count towards user-facing assets\n * @property {boolean=} hotModuleReplacement true, when asset ships data for updating an existing application (HMR)\n * @property {boolean=} javascriptModule true, when asset is javascript and an ESM\n * @property {Record<string, string | string[]>=} related object of pointers to other assets, keyed by type of relation (only points from parent to child)\n */\n\n/** @typedef {KnownAssetInfo & Record<string, any>} AssetInfo */\n\n/**\n * @typedef {Object} Asset\n * @property {string} name the filename of the asset\n * @property {Source} source source of the asset\n * @property {AssetInfo} info info about the asset\n */\n\n/**\n * @typedef {Object} ModulePathData\n * @property {string|number} id\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n */\n\n/**\n * @typedef {Object} PathData\n * @property {ChunkGraph=} chunkGraph\n * @property {string=} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Chunk|ChunkPathData)=} chunk\n * @property {(Module|ModulePathData)=} module\n * @property {RuntimeSpec=} runtime\n * @property {string=} filename\n * @property {string=} basename\n * @property {string=} query\n * @property {string=} contentHashType\n * @property {string=} contentHash\n * @property {function(number): string=} contentHashWithLength\n * @property {boolean=} noChunkHash\n * @property {string=} url\n */\n\n/**\n * @typedef {Object} KnownNormalizedStatsOptions\n * @property {string} context\n * @property {RequestShortener} requestShortener\n * @property {string} chunksSort\n * @property {string} modulesSort\n * @property {string} chunkModulesSort\n * @property {string} nestedModulesSort\n * @property {string} assetsSort\n * @property {boolean} ids\n * @property {boolean} cachedAssets\n * @property {boolean} groupAssetsByEmitStatus\n * @property {boolean} groupAssetsByPath\n * @property {boolean} groupAssetsByExtension\n * @property {number} assetsSpace\n * @property {((value: string, asset: StatsAsset) => boolean)[]} excludeAssets\n * @property {((name: string, module: StatsModule, type: \"module\" | \"chunk\" | \"root-of-chunk\" | \"nested\") => boolean)[]} excludeModules\n * @property {((warning: StatsError, textValue: string) => boolean)[]} warningsFilter\n * @property {boolean} cachedModules\n * @property {boolean} orphanModules\n * @property {boolean} dependentModules\n * @property {boolean} runtimeModules\n * @property {boolean} groupModulesByCacheStatus\n * @property {boolean} groupModulesByLayer\n * @property {boolean} groupModulesByAttributes\n * @property {boolean} groupModulesByPath\n * @property {boolean} groupModulesByExtension\n * @property {boolean} groupModulesByType\n * @property {boolean | \"auto\"} entrypoints\n * @property {boolean} chunkGroups\n * @property {boolean} chunkGroupAuxiliary\n * @property {boolean} chunkGroupChildren\n * @property {number} chunkGroupMaxAssets\n * @property {number} modulesSpace\n * @property {number} chunkModulesSpace\n * @property {number} nestedModulesSpace\n * @property {false|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} logging\n * @property {((value: string) => boolean)[]} loggingDebug\n * @property {boolean} loggingTrace\n * @property {any} _env\n */\n\n/** @typedef {KnownNormalizedStatsOptions & Omit<StatsOptions, keyof KnownNormalizedStatsOptions> & Record<string, any>} NormalizedStatsOptions */\n\n/**\n * @typedef {Object} KnownCreateStatsOptionsContext\n * @property {boolean=} forToString\n */\n\n/** @typedef {KnownCreateStatsOptionsContext & Record<string, any>} CreateStatsOptionsContext */\n\n/** @type {AssetInfo} */\nconst EMPTY_ASSET_INFO = Object.freeze({});\nconst esmDependencyCategory = \"esm\";\n// TODO webpack 6: remove\nconst deprecatedNormalModuleLoaderHook = util.deprecate(compilation => {\n  return require(\"./NormalModule\").getCompilationHooks(compilation).loader;\n}, \"Compilation.hooks.normalModuleLoader was moved to NormalModule.getCompilationHooks(compilation).loader\", \"DEP_WEBPACK_COMPILATION_NORMAL_MODULE_LOADER_HOOK\");\n\n// TODO webpack 6: remove\nconst defineRemovedModuleTemplates = moduleTemplates => {\n  Object.defineProperties(moduleTemplates, {\n    asset: {\n      enumerable: false,\n      configurable: false,\n      get: () => {\n        throw new WebpackError(\"Compilation.moduleTemplates.asset has been removed\");\n      }\n    },\n    webassembly: {\n      enumerable: false,\n      configurable: false,\n      get: () => {\n        throw new WebpackError(\"Compilation.moduleTemplates.webassembly has been removed\");\n      }\n    }\n  });\n  moduleTemplates = undefined;\n};\nconst byId = compareSelect(\n/**\n * @param {Chunk} c chunk\n * @returns {number | string} id\n */\nc => c.id, compareIds);\nconst byNameOrHash = concatComparators(compareSelect(\n/**\n * @param {Compilation} c compilation\n * @returns {string} name\n */\nc => c.name, compareIds), compareSelect(\n/**\n * @param {Compilation} c compilation\n * @returns {string} hash\n */\nc => c.fullHash, compareIds));\nconst byMessage = compareSelect(err => `${err.message}`, compareStringsNumeric);\nconst byModule = compareSelect(err => err.module && err.module.identifier() || \"\", compareStringsNumeric);\nconst byLocation = compareSelect(err => err.loc, compareLocations);\nconst compareErrors = concatComparators(byModule, byLocation, byMessage);\n\n/** @type {WeakMap<Dependency, Module & { restoreFromUnsafeCache: Function } | null>} */\nconst unsafeCacheDependencies = new WeakMap();\n\n/** @type {WeakMap<Module & { restoreFromUnsafeCache: Function }, object>} */\nconst unsafeCacheData = new WeakMap();\nclass Compilation {\n  /**\n   * Creates an instance of Compilation.\n   * @param {Compiler} compiler the compiler which created the compilation\n   * @param {CompilationParams} params the compilation parameters\n   */\n  constructor(compiler, params) {\n    this._backCompat = compiler._backCompat;\n    const getNormalModuleLoader = () => deprecatedNormalModuleLoaderHook(this);\n    /** @typedef {{ additionalAssets?: true | Function }} ProcessAssetsAdditionalOptions */\n    /** @type {AsyncSeriesHook<[CompilationAssets], ProcessAssetsAdditionalOptions>} */\n    const processAssetsHook = new AsyncSeriesHook([\"assets\"]);\n    let savedAssets = new Set();\n    const popNewAssets = assets => {\n      let newAssets = undefined;\n      for (const file of Object.keys(assets)) {\n        if (savedAssets.has(file)) continue;\n        if (newAssets === undefined) {\n          newAssets = Object.create(null);\n        }\n        newAssets[file] = assets[file];\n        savedAssets.add(file);\n      }\n      return newAssets;\n    };\n    processAssetsHook.intercept({\n      name: \"Compilation\",\n      call: () => {\n        savedAssets = new Set(Object.keys(this.assets));\n      },\n      register: tap => {\n        const {\n          type,\n          name\n        } = tap;\n        const {\n          fn,\n          additionalAssets,\n          ...remainingTap\n        } = tap;\n        const additionalAssetsFn = additionalAssets === true ? fn : additionalAssets;\n        const processedAssets = additionalAssetsFn ? new WeakSet() : undefined;\n        switch (type) {\n          case \"sync\":\n            if (additionalAssetsFn) {\n              this.hooks.processAdditionalAssets.tap(name, assets => {\n                if (processedAssets.has(this.assets)) additionalAssetsFn(assets);\n              });\n            }\n            return {\n              ...remainingTap,\n              type: \"async\",\n              fn: (assets, callback) => {\n                try {\n                  fn(assets);\n                } catch (e) {\n                  return callback(e);\n                }\n                if (processedAssets !== undefined) processedAssets.add(this.assets);\n                const newAssets = popNewAssets(assets);\n                if (newAssets !== undefined) {\n                  this.hooks.processAdditionalAssets.callAsync(newAssets, callback);\n                  return;\n                }\n                callback();\n              }\n            };\n          case \"async\":\n            if (additionalAssetsFn) {\n              this.hooks.processAdditionalAssets.tapAsync(name, (assets, callback) => {\n                if (processedAssets.has(this.assets)) return additionalAssetsFn(assets, callback);\n                callback();\n              });\n            }\n            return {\n              ...remainingTap,\n              fn: (assets, callback) => {\n                fn(assets, err => {\n                  if (err) return callback(err);\n                  if (processedAssets !== undefined) processedAssets.add(this.assets);\n                  const newAssets = popNewAssets(assets);\n                  if (newAssets !== undefined) {\n                    this.hooks.processAdditionalAssets.callAsync(newAssets, callback);\n                    return;\n                  }\n                  callback();\n                });\n              }\n            };\n          case \"promise\":\n            if (additionalAssetsFn) {\n              this.hooks.processAdditionalAssets.tapPromise(name, assets => {\n                if (processedAssets.has(this.assets)) return additionalAssetsFn(assets);\n                return Promise.resolve();\n              });\n            }\n            return {\n              ...remainingTap,\n              fn: assets => {\n                const p = fn(assets);\n                if (!p || !p.then) return p;\n                return p.then(() => {\n                  if (processedAssets !== undefined) processedAssets.add(this.assets);\n                  const newAssets = popNewAssets(assets);\n                  if (newAssets !== undefined) {\n                    return this.hooks.processAdditionalAssets.promise(newAssets);\n                  }\n                });\n              }\n            };\n        }\n      }\n    });\n\n    /** @type {SyncHook<[CompilationAssets]>} */\n    const afterProcessAssetsHook = new SyncHook([\"assets\"]);\n\n    /**\n     * @template T\n     * @param {string} name name of the hook\n     * @param {number} stage new stage\n     * @param {function(): AsArray<T>} getArgs get old hook function args\n     * @param {string=} code deprecation code (not deprecated when unset)\n     * @returns {FakeHook<Pick<AsyncSeriesHook<T>, \"tap\" | \"tapAsync\" | \"tapPromise\" | \"name\">>} fake hook which redirects\n     */\n    const createProcessAssetsHook = (name, stage, getArgs, code) => {\n      if (!this._backCompat && code) return undefined;\n      const errorMessage = reason => `Can't automatically convert plugin using Compilation.hooks.${name} to Compilation.hooks.processAssets because ${reason}.\nBREAKING CHANGE: Asset processing hooks in Compilation has been merged into a single Compilation.hooks.processAssets hook.`;\n      const getOptions = options => {\n        if (typeof options === \"string\") options = {\n          name: options\n        };\n        if (options.stage) {\n          throw new Error(errorMessage(\"it's using the 'stage' option\"));\n        }\n        return {\n          ...options,\n          stage: stage\n        };\n      };\n      return createFakeHook({\n        name,\n        /** @type {AsyncSeriesHook<T>[\"intercept\"]} */\n        intercept(interceptor) {\n          throw new Error(errorMessage(\"it's using 'intercept'\"));\n        },\n        /** @type {AsyncSeriesHook<T>[\"tap\"]} */\n        tap: (options, fn) => {\n          processAssetsHook.tap(getOptions(options), () => fn(...getArgs()));\n        },\n        /** @type {AsyncSeriesHook<T>[\"tapAsync\"]} */\n        tapAsync: (options, fn) => {\n          processAssetsHook.tapAsync(getOptions(options), (assets, callback) => /** @type {any} */fn(...getArgs(), callback));\n        },\n        /** @type {AsyncSeriesHook<T>[\"tapPromise\"]} */\n        tapPromise: (options, fn) => {\n          processAssetsHook.tapPromise(getOptions(options), () => fn(...getArgs()));\n        }\n      }, `${name} is deprecated (use Compilation.hooks.processAssets instead and use one of Compilation.PROCESS_ASSETS_STAGE_* as stage option)`, code);\n    };\n    this.hooks = Object.freeze({\n      /** @type {SyncHook<[Module]>} */\n      buildModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<[Module]>} */\n      rebuildModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<[Module, WebpackError]>} */\n      failedModule: new SyncHook([\"module\", \"error\"]),\n      /** @type {SyncHook<[Module]>} */\n      succeedModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<[Module]>} */\n      stillValidModule: new SyncHook([\"module\"]),\n      /** @type {SyncHook<[Dependency, EntryOptions]>} */\n      addEntry: new SyncHook([\"entry\", \"options\"]),\n      /** @type {SyncHook<[Dependency, EntryOptions, Error]>} */\n      failedEntry: new SyncHook([\"entry\", \"options\", \"error\"]),\n      /** @type {SyncHook<[Dependency, EntryOptions, Module]>} */\n      succeedEntry: new SyncHook([\"entry\", \"options\", \"module\"]),\n      /** @type {SyncWaterfallHook<[(string[] | ReferencedExport)[], Dependency, RuntimeSpec]>} */\n      dependencyReferencedExports: new SyncWaterfallHook([\"referencedExports\", \"dependency\", \"runtime\"]),\n      /** @type {SyncHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n      executeModule: new SyncHook([\"options\", \"context\"]),\n      /** @type {AsyncParallelHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n      prepareModuleExecution: new AsyncParallelHook([\"options\", \"context\"]),\n      /** @type {AsyncSeriesHook<[Iterable<Module>]>} */\n      finishModules: new AsyncSeriesHook([\"modules\"]),\n      /** @type {AsyncSeriesHook<[Module]>} */\n      finishRebuildingModule: new AsyncSeriesHook([\"module\"]),\n      /** @type {SyncHook<[]>} */\n      unseal: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      seal: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      beforeChunks: new SyncHook([]),\n      /**\n       * The `afterChunks` hook is called directly after the chunks and module graph have\n       * been created and before the chunks and modules have been optimized. This hook is useful to\n       * inspect, analyze, and/or modify the chunk graph.\n       * @type {SyncHook<[Iterable<Chunk>]>}\n       */\n      afterChunks: new SyncHook([\"chunks\"]),\n      /** @type {SyncBailHook<[Iterable<Module>]>} */\n      optimizeDependencies: new SyncBailHook([\"modules\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      afterOptimizeDependencies: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<[]>} */\n      optimize: new SyncHook([]),\n      /** @type {SyncBailHook<[Iterable<Module>]>} */\n      optimizeModules: new SyncBailHook([\"modules\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      afterOptimizeModules: new SyncHook([\"modules\"]),\n      /** @type {SyncBailHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n      optimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n      /** @type {SyncHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n      afterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n      /** @type {AsyncSeriesHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      optimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n      /** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      afterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n      /** @type {AsyncSeriesBailHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      optimizeChunkModules: new AsyncSeriesBailHook([\"chunks\", \"modules\"]),\n      /** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n      afterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n      /** @type {SyncBailHook<[], boolean>} */\n      shouldRecord: new SyncBailHook([]),\n      /** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n      additionalChunkRuntimeRequirements: new SyncHook([\"chunk\", \"runtimeRequirements\", \"context\"]),\n      /** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n      runtimeRequirementInChunk: new HookMap(() => new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"])),\n      /** @type {SyncHook<[Module, Set<string>, RuntimeRequirementsContext]>} */\n      additionalModuleRuntimeRequirements: new SyncHook([\"module\", \"runtimeRequirements\", \"context\"]),\n      /** @type {HookMap<SyncBailHook<[Module, Set<string>, RuntimeRequirementsContext]>>} */\n      runtimeRequirementInModule: new HookMap(() => new SyncBailHook([\"module\", \"runtimeRequirements\", \"context\"])),\n      /** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n      additionalTreeRuntimeRequirements: new SyncHook([\"chunk\", \"runtimeRequirements\", \"context\"]),\n      /** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n      runtimeRequirementInTree: new HookMap(() => new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"])),\n      /** @type {SyncHook<[RuntimeModule, Chunk]>} */\n      runtimeModule: new SyncHook([\"module\", \"chunk\"]),\n      /** @type {SyncHook<[Iterable<Module>, any]>} */\n      reviveModules: new SyncHook([\"modules\", \"records\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      beforeModuleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      moduleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      optimizeModuleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      afterOptimizeModuleIds: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<[Iterable<Chunk>, any]>} */\n      reviveChunks: new SyncHook([\"chunks\", \"records\"]),\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      beforeChunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      chunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      optimizeChunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<[Iterable<Chunk>]>} */\n      afterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n      /** @type {SyncHook<[Iterable<Module>, any]>} */\n      recordModules: new SyncHook([\"modules\", \"records\"]),\n      /** @type {SyncHook<[Iterable<Chunk>, any]>} */\n      recordChunks: new SyncHook([\"chunks\", \"records\"]),\n      /** @type {SyncHook<[Iterable<Module>]>} */\n      optimizeCodeGeneration: new SyncHook([\"modules\"]),\n      /** @type {SyncHook<[]>} */\n      beforeModuleHash: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      afterModuleHash: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      beforeCodeGeneration: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      afterCodeGeneration: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      beforeRuntimeRequirements: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      afterRuntimeRequirements: new SyncHook([]),\n      /** @type {SyncHook<[]>} */\n      beforeHash: new SyncHook([]),\n      /** @type {SyncHook<[Chunk]>} */\n      contentHash: new SyncHook([\"chunk\"]),\n      /** @type {SyncHook<[]>} */\n      afterHash: new SyncHook([]),\n      /** @type {SyncHook<[any]>} */\n      recordHash: new SyncHook([\"records\"]),\n      /** @type {SyncHook<[Compilation, any]>} */\n      record: new SyncHook([\"compilation\", \"records\"]),\n      /** @type {SyncHook<[]>} */\n      beforeModuleAssets: new SyncHook([]),\n      /** @type {SyncBailHook<[], boolean>} */\n      shouldGenerateChunkAssets: new SyncBailHook([]),\n      /** @type {SyncHook<[]>} */\n      beforeChunkAssets: new SyncHook([]),\n      // TODO webpack 6 remove\n      /** @deprecated */\n      additionalChunkAssets: createProcessAssetsHook(\"additionalChunkAssets\", Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL, () => [this.chunks], \"DEP_WEBPACK_COMPILATION_ADDITIONAL_CHUNK_ASSETS\"),\n      // TODO webpack 6 deprecate\n      /** @deprecated */\n      additionalAssets: createProcessAssetsHook(\"additionalAssets\", Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL, () => []),\n      // TODO webpack 6 remove\n      /** @deprecated */\n      optimizeChunkAssets: createProcessAssetsHook(\"optimizeChunkAssets\", Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE, () => [this.chunks], \"DEP_WEBPACK_COMPILATION_OPTIMIZE_CHUNK_ASSETS\"),\n      // TODO webpack 6 remove\n      /** @deprecated */\n      afterOptimizeChunkAssets: createProcessAssetsHook(\"afterOptimizeChunkAssets\", Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE + 1, () => [this.chunks], \"DEP_WEBPACK_COMPILATION_AFTER_OPTIMIZE_CHUNK_ASSETS\"),\n      // TODO webpack 6 deprecate\n      /** @deprecated */\n      optimizeAssets: processAssetsHook,\n      // TODO webpack 6 deprecate\n      /** @deprecated */\n      afterOptimizeAssets: afterProcessAssetsHook,\n      processAssets: processAssetsHook,\n      afterProcessAssets: afterProcessAssetsHook,\n      /** @type {AsyncSeriesHook<[CompilationAssets]>} */\n      processAdditionalAssets: new AsyncSeriesHook([\"assets\"]),\n      /** @type {SyncBailHook<[], boolean>} */\n      needAdditionalSeal: new SyncBailHook([]),\n      /** @type {AsyncSeriesHook<[]>} */\n      afterSeal: new AsyncSeriesHook([]),\n      /** @type {SyncWaterfallHook<[RenderManifestEntry[], RenderManifestOptions]>} */\n      renderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n      /** @type {SyncHook<[Hash]>} */\n      fullHash: new SyncHook([\"hash\"]),\n      /** @type {SyncHook<[Chunk, Hash, ChunkHashContext]>} */\n      chunkHash: new SyncHook([\"chunk\", \"chunkHash\", \"ChunkHashContext\"]),\n      /** @type {SyncHook<[Module, string]>} */\n      moduleAsset: new SyncHook([\"module\", \"filename\"]),\n      /** @type {SyncHook<[Chunk, string]>} */\n      chunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n      /** @type {SyncWaterfallHook<[string, object, AssetInfo]>} */\n      assetPath: new SyncWaterfallHook([\"path\", \"options\", \"assetInfo\"]),\n      /** @type {SyncBailHook<[], boolean>} */\n      needAdditionalPass: new SyncBailHook([]),\n      /** @type {SyncHook<[Compiler, string, number]>} */\n      childCompiler: new SyncHook([\"childCompiler\", \"compilerName\", \"compilerIndex\"]),\n      /** @type {SyncBailHook<[string, LogEntry], true>} */\n      log: new SyncBailHook([\"origin\", \"logEntry\"]),\n      /** @type {SyncWaterfallHook<[WebpackError[]]>} */\n      processWarnings: new SyncWaterfallHook([\"warnings\"]),\n      /** @type {SyncWaterfallHook<[WebpackError[]]>} */\n      processErrors: new SyncWaterfallHook([\"errors\"]),\n      /** @type {HookMap<SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>>} */\n      statsPreset: new HookMap(() => new SyncHook([\"options\", \"context\"])),\n      /** @type {SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>} */\n      statsNormalize: new SyncHook([\"options\", \"context\"]),\n      /** @type {SyncHook<[StatsFactory, NormalizedStatsOptions]>} */\n      statsFactory: new SyncHook([\"statsFactory\", \"options\"]),\n      /** @type {SyncHook<[StatsPrinter, NormalizedStatsOptions]>} */\n      statsPrinter: new SyncHook([\"statsPrinter\", \"options\"]),\n      get normalModuleLoader() {\n        return getNormalModuleLoader();\n      }\n    });\n    /** @type {string=} */\n    this.name = undefined;\n    this.startTime = undefined;\n    this.endTime = undefined;\n    /** @type {Compiler} */\n    this.compiler = compiler;\n    this.resolverFactory = compiler.resolverFactory;\n    this.inputFileSystem = compiler.inputFileSystem;\n    this.fileSystemInfo = new FileSystemInfo(this.inputFileSystem, {\n      managedPaths: compiler.managedPaths,\n      immutablePaths: compiler.immutablePaths,\n      logger: this.getLogger(\"webpack.FileSystemInfo\"),\n      hashFunction: compiler.options.output.hashFunction\n    });\n    if (compiler.fileTimestamps) {\n      this.fileSystemInfo.addFileTimestamps(compiler.fileTimestamps, true);\n    }\n    if (compiler.contextTimestamps) {\n      this.fileSystemInfo.addContextTimestamps(compiler.contextTimestamps, true);\n    }\n    /** @type {Map<string, string | Set<string>>} */\n    this.valueCacheVersions = new Map();\n    this.requestShortener = compiler.requestShortener;\n    this.compilerPath = compiler.compilerPath;\n    this.logger = this.getLogger(\"webpack.Compilation\");\n    const options = compiler.options;\n    this.options = options;\n    this.outputOptions = options && options.output;\n    /** @type {boolean} */\n    this.bail = options && options.bail || false;\n    /** @type {boolean} */\n    this.profile = options && options.profile || false;\n    this.params = params;\n    this.mainTemplate = new MainTemplate(this.outputOptions, this);\n    this.chunkTemplate = new ChunkTemplate(this.outputOptions, this);\n    this.runtimeTemplate = new RuntimeTemplate(this, this.outputOptions, this.requestShortener);\n    /** @type {{javascript: ModuleTemplate}} */\n    this.moduleTemplates = {\n      javascript: new ModuleTemplate(this.runtimeTemplate, this)\n    };\n    defineRemovedModuleTemplates(this.moduleTemplates);\n\n    /** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n    this.moduleMemCaches = undefined;\n    /** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n    this.moduleMemCaches2 = undefined;\n    this.moduleGraph = new ModuleGraph();\n    /** @type {ChunkGraph} */\n    this.chunkGraph = undefined;\n    /** @type {CodeGenerationResults} */\n    this.codeGenerationResults = undefined;\n\n    /** @type {AsyncQueue<Module, Module, Module>} */\n    this.processDependenciesQueue = new AsyncQueue({\n      name: \"processDependencies\",\n      parallelism: options.parallelism || 100,\n      processor: this._processModuleDependencies.bind(this)\n    });\n    /** @type {AsyncQueue<Module, string, Module>} */\n    this.addModuleQueue = new AsyncQueue({\n      name: \"addModule\",\n      parent: this.processDependenciesQueue,\n      getKey: module => module.identifier(),\n      processor: this._addModule.bind(this)\n    });\n    /** @type {AsyncQueue<FactorizeModuleOptions, string, Module | ModuleFactoryResult>} */\n    this.factorizeQueue = new AsyncQueue({\n      name: \"factorize\",\n      parent: this.addModuleQueue,\n      processor: this._factorizeModule.bind(this)\n    });\n    /** @type {AsyncQueue<Module, Module, Module>} */\n    this.buildQueue = new AsyncQueue({\n      name: \"build\",\n      parent: this.factorizeQueue,\n      processor: this._buildModule.bind(this)\n    });\n    /** @type {AsyncQueue<Module, Module, Module>} */\n    this.rebuildQueue = new AsyncQueue({\n      name: \"rebuild\",\n      parallelism: options.parallelism || 100,\n      processor: this._rebuildModule.bind(this)\n    });\n\n    /**\n     * Modules in value are building during the build of Module in key.\n     * Means value blocking key from finishing.\n     * Needed to detect build cycles.\n     * @type {WeakMap<Module, Set<Module>>}\n     */\n    this.creatingModuleDuringBuild = new WeakMap();\n\n    /** @type {Map<string, EntryData>} */\n    this.entries = new Map();\n    /** @type {EntryData} */\n    this.globalEntry = {\n      dependencies: [],\n      includeDependencies: [],\n      options: {\n        name: undefined\n      }\n    };\n    /** @type {Map<string, Entrypoint>} */\n    this.entrypoints = new Map();\n    /** @type {Entrypoint[]} */\n    this.asyncEntrypoints = [];\n    /** @type {Set<Chunk>} */\n    this.chunks = new Set();\n    /** @type {ChunkGroup[]} */\n    this.chunkGroups = [];\n    /** @type {Map<string, ChunkGroup>} */\n    this.namedChunkGroups = new Map();\n    /** @type {Map<string, Chunk>} */\n    this.namedChunks = new Map();\n    /** @type {Set<Module>} */\n    this.modules = new Set();\n    if (this._backCompat) {\n      arrayToSetDeprecation(this.chunks, \"Compilation.chunks\");\n      arrayToSetDeprecation(this.modules, \"Compilation.modules\");\n    }\n    /** @private @type {Map<string, Module>} */\n    this._modules = new Map();\n    this.records = null;\n    /** @type {string[]} */\n    this.additionalChunkAssets = [];\n    /** @type {CompilationAssets} */\n    this.assets = {};\n    /** @type {Map<string, AssetInfo>} */\n    this.assetsInfo = new Map();\n    /** @type {Map<string, Map<string, Set<string>>>} */\n    this._assetsRelatedIn = new Map();\n    /** @type {WebpackError[]} */\n    this.errors = [];\n    /** @type {WebpackError[]} */\n    this.warnings = [];\n    /** @type {Compilation[]} */\n    this.children = [];\n    /** @type {Map<string, LogEntry[]>} */\n    this.logging = new Map();\n    /** @type {Map<DepConstructor, ModuleFactory>} */\n    this.dependencyFactories = new Map();\n    /** @type {DependencyTemplates} */\n    this.dependencyTemplates = new DependencyTemplates(this.outputOptions.hashFunction);\n    this.childrenCounters = {};\n    /** @type {Set<number|string>} */\n    this.usedChunkIds = null;\n    /** @type {Set<number>} */\n    this.usedModuleIds = null;\n    /** @type {boolean} */\n    this.needAdditionalPass = false;\n    /** @type {Set<Module & { restoreFromUnsafeCache: Function }>} */\n    this._restoredUnsafeCacheModuleEntries = new Set();\n    /** @type {Map<string, Module & { restoreFromUnsafeCache: Function }>} */\n    this._restoredUnsafeCacheEntries = new Map();\n    /** @type {WeakSet<Module>} */\n    this.builtModules = new WeakSet();\n    /** @type {WeakSet<Module>} */\n    this.codeGeneratedModules = new WeakSet();\n    /** @type {WeakSet<Module>} */\n    this.buildTimeExecutedModules = new WeakSet();\n    /** @private @type {Map<Module, Callback[]>} */\n    this._rebuildingModules = new Map();\n    /** @type {Set<string>} */\n    this.emittedAssets = new Set();\n    /** @type {Set<string>} */\n    this.comparedForEmitAssets = new Set();\n    /** @type {LazySet<string>} */\n    this.fileDependencies = new LazySet();\n    /** @type {LazySet<string>} */\n    this.contextDependencies = new LazySet();\n    /** @type {LazySet<string>} */\n    this.missingDependencies = new LazySet();\n    /** @type {LazySet<string>} */\n    this.buildDependencies = new LazySet();\n    // TODO webpack 6 remove\n    this.compilationDependencies = {\n      add: util.deprecate(item => this.fileDependencies.add(item), \"Compilation.compilationDependencies is deprecated (used Compilation.fileDependencies instead)\", \"DEP_WEBPACK_COMPILATION_COMPILATION_DEPENDENCIES\")\n    };\n    this._modulesCache = this.getCache(\"Compilation/modules\");\n    this._assetsCache = this.getCache(\"Compilation/assets\");\n    this._codeGenerationCache = this.getCache(\"Compilation/codeGeneration\");\n    const unsafeCache = options.module.unsafeCache;\n    this._unsafeCache = !!unsafeCache;\n    this._unsafeCachePredicate = typeof unsafeCache === \"function\" ? unsafeCache : () => true;\n  }\n  getStats() {\n    return new Stats(this);\n  }\n\n  /**\n   * @param {StatsOptions | string} optionsOrPreset stats option value\n   * @param {CreateStatsOptionsContext} context context\n   * @returns {NormalizedStatsOptions} normalized options\n   */\n  createStatsOptions(optionsOrPreset) {\n    let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof optionsOrPreset === \"boolean\" || typeof optionsOrPreset === \"string\") {\n      optionsOrPreset = {\n        preset: optionsOrPreset\n      };\n    }\n    if (typeof optionsOrPreset === \"object\" && optionsOrPreset !== null) {\n      // We use this method of shallow cloning this object to include\n      // properties in the prototype chain\n      /** @type {Partial<NormalizedStatsOptions>} */\n      const options = {};\n      for (const key in optionsOrPreset) {\n        options[key] = optionsOrPreset[key];\n      }\n      if (options.preset !== undefined) {\n        this.hooks.statsPreset.for(options.preset).call(options, context);\n      }\n      this.hooks.statsNormalize.call(options, context);\n      return (/** @type {NormalizedStatsOptions} */options\n      );\n    } else {\n      /** @type {Partial<NormalizedStatsOptions>} */\n      const options = {};\n      this.hooks.statsNormalize.call(options, context);\n      return (/** @type {NormalizedStatsOptions} */options\n      );\n    }\n  }\n  createStatsFactory(options) {\n    const statsFactory = new StatsFactory();\n    this.hooks.statsFactory.call(statsFactory, options);\n    return statsFactory;\n  }\n  createStatsPrinter(options) {\n    const statsPrinter = new StatsPrinter();\n    this.hooks.statsPrinter.call(statsPrinter, options);\n    return statsPrinter;\n  }\n\n  /**\n   * @param {string} name cache name\n   * @returns {CacheFacade} the cache facade instance\n   */\n  getCache(name) {\n    return this.compiler.getCache(name);\n  }\n\n  /**\n   * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n   * @returns {Logger} a logger with that name\n   */\n  getLogger(name) {\n    if (!name) {\n      throw new TypeError(\"Compilation.getLogger(name) called without a name\");\n    }\n    /** @type {LogEntry[] | undefined} */\n    let logEntries;\n    return new Logger((type, args) => {\n      if (typeof name === \"function\") {\n        name = name();\n        if (!name) {\n          throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n        }\n      }\n      let trace;\n      switch (type) {\n        case LogType.warn:\n        case LogType.error:\n        case LogType.trace:\n          trace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack).split(\"\\n\").slice(3);\n          break;\n      }\n      /** @type {LogEntry} */\n      const logEntry = {\n        time: Date.now(),\n        type,\n        args,\n        trace\n      };\n      if (this.hooks.log.call(name, logEntry) === undefined) {\n        if (logEntry.type === LogType.profileEnd) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.profileEnd === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.profileEnd(`[${name}] ${logEntry.args[0]}`);\n          }\n        }\n        if (logEntries === undefined) {\n          logEntries = this.logging.get(name);\n          if (logEntries === undefined) {\n            logEntries = [];\n            this.logging.set(name, logEntries);\n          }\n        }\n        logEntries.push(logEntry);\n        if (logEntry.type === LogType.profile) {\n          // eslint-disable-next-line node/no-unsupported-features/node-builtins\n          if (typeof console.profile === \"function\") {\n            // eslint-disable-next-line node/no-unsupported-features/node-builtins\n            console.profile(`[${name}] ${logEntry.args[0]}`);\n          }\n        }\n      }\n    }, childName => {\n      if (typeof name === \"function\") {\n        if (typeof childName === \"function\") {\n          return this.getLogger(() => {\n            if (typeof name === \"function\") {\n              name = name();\n              if (!name) {\n                throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n              }\n            }\n            if (typeof childName === \"function\") {\n              childName = childName();\n              if (!childName) {\n                throw new TypeError(\"Logger.getChildLogger(name) called with a function not returning a name\");\n              }\n            }\n            return `${name}/${childName}`;\n          });\n        } else {\n          return this.getLogger(() => {\n            if (typeof name === \"function\") {\n              name = name();\n              if (!name) {\n                throw new TypeError(\"Compilation.getLogger(name) called with a function not returning a name\");\n              }\n            }\n            return `${name}/${childName}`;\n          });\n        }\n      } else {\n        if (typeof childName === \"function\") {\n          return this.getLogger(() => {\n            if (typeof childName === \"function\") {\n              childName = childName();\n              if (!childName) {\n                throw new TypeError(\"Logger.getChildLogger(name) called with a function not returning a name\");\n              }\n            }\n            return `${name}/${childName}`;\n          });\n        } else {\n          return this.getLogger(`${name}/${childName}`);\n        }\n      }\n    });\n  }\n\n  /**\n   * @param {Module} module module to be added that was created\n   * @param {ModuleCallback} callback returns the module in the compilation,\n   * it could be the passed one (if new), or an already existing in the compilation\n   * @returns {void}\n   */\n  addModule(module, callback) {\n    this.addModuleQueue.add(module, callback);\n  }\n\n  /**\n   * @param {Module} module module to be added that was created\n   * @param {ModuleCallback} callback returns the module in the compilation,\n   * it could be the passed one (if new), or an already existing in the compilation\n   * @returns {void}\n   */\n  _addModule(module, callback) {\n    const identifier = module.identifier();\n    const alreadyAddedModule = this._modules.get(identifier);\n    if (alreadyAddedModule) {\n      return callback(null, alreadyAddedModule);\n    }\n    const currentProfile = this.profile ? this.moduleGraph.getProfile(module) : undefined;\n    if (currentProfile !== undefined) {\n      currentProfile.markRestoringStart();\n    }\n    this._modulesCache.get(identifier, null, (err, cacheModule) => {\n      if (err) return callback(new ModuleRestoreError(module, err));\n      if (currentProfile !== undefined) {\n        currentProfile.markRestoringEnd();\n        currentProfile.markIntegrationStart();\n      }\n      if (cacheModule) {\n        cacheModule.updateCacheModule(module);\n        module = cacheModule;\n      }\n      this._modules.set(identifier, module);\n      this.modules.add(module);\n      if (this._backCompat) ModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n      if (currentProfile !== undefined) {\n        currentProfile.markIntegrationEnd();\n      }\n      callback(null, module);\n    });\n  }\n\n  /**\n   * Fetches a module from a compilation by its identifier\n   * @param {Module} module the module provided\n   * @returns {Module} the module requested\n   */\n  getModule(module) {\n    const identifier = module.identifier();\n    return this._modules.get(identifier);\n  }\n\n  /**\n   * Attempts to search for a module by its identifier\n   * @param {string} identifier identifier (usually path) for module\n   * @returns {Module|undefined} attempt to search for module and return it, else undefined\n   */\n  findModule(identifier) {\n    return this._modules.get(identifier);\n  }\n\n  /**\n   * Schedules a build of the module object\n   *\n   * @param {Module} module module to be built\n   * @param {ModuleCallback} callback the callback\n   * @returns {void}\n   */\n  buildModule(module, callback) {\n    this.buildQueue.add(module, callback);\n  }\n\n  /**\n   * Builds the module object\n   *\n   * @param {Module} module module to be built\n   * @param {ModuleCallback} callback the callback\n   * @returns {void}\n   */\n  _buildModule(module, callback) {\n    const currentProfile = this.profile ? this.moduleGraph.getProfile(module) : undefined;\n    if (currentProfile !== undefined) {\n      currentProfile.markBuildingStart();\n    }\n    module.needBuild({\n      compilation: this,\n      fileSystemInfo: this.fileSystemInfo,\n      valueCacheVersions: this.valueCacheVersions\n    }, (err, needBuild) => {\n      if (err) return callback(err);\n      if (!needBuild) {\n        if (currentProfile !== undefined) {\n          currentProfile.markBuildingEnd();\n        }\n        this.hooks.stillValidModule.call(module);\n        return callback();\n      }\n      this.hooks.buildModule.call(module);\n      this.builtModules.add(module);\n      module.build(this.options, this, this.resolverFactory.get(\"normal\", module.resolveOptions), this.inputFileSystem, err => {\n        if (currentProfile !== undefined) {\n          currentProfile.markBuildingEnd();\n        }\n        if (err) {\n          this.hooks.failedModule.call(module, err);\n          return callback(err);\n        }\n        if (currentProfile !== undefined) {\n          currentProfile.markStoringStart();\n        }\n        this._modulesCache.store(module.identifier(), null, module, err => {\n          if (currentProfile !== undefined) {\n            currentProfile.markStoringEnd();\n          }\n          if (err) {\n            this.hooks.failedModule.call(module, err);\n            return callback(new ModuleStoreError(module, err));\n          }\n          this.hooks.succeedModule.call(module);\n          return callback();\n        });\n      });\n    });\n  }\n\n  /**\n   * @param {Module} module to be processed for deps\n   * @param {ModuleCallback} callback callback to be triggered\n   * @returns {void}\n   */\n  processModuleDependencies(module, callback) {\n    this.processDependenciesQueue.add(module, callback);\n  }\n\n  /**\n   * @param {Module} module to be processed for deps\n   * @returns {void}\n   */\n  processModuleDependenciesNonRecursive(module) {\n    const processDependenciesBlock = block => {\n      if (block.dependencies) {\n        let i = 0;\n        for (const dep of block.dependencies) {\n          this.moduleGraph.setParents(dep, block, module, i++);\n        }\n      }\n      if (block.blocks) {\n        for (const b of block.blocks) processDependenciesBlock(b);\n      }\n    };\n    processDependenciesBlock(module);\n  }\n\n  /**\n   * @param {Module} module to be processed for deps\n   * @param {ModuleCallback} callback callback to be triggered\n   * @returns {void}\n   */\n  _processModuleDependencies(module, callback) {\n    /** @type {Array<{factory: ModuleFactory, dependencies: Dependency[], context: string|undefined, originModule: Module|null}>} */\n    const sortedDependencies = [];\n\n    /** @type {DependenciesBlock} */\n    let currentBlock;\n\n    /** @type {Map<ModuleFactory, Map<string, Dependency[]>>} */\n    let dependencies;\n    /** @type {DepConstructor} */\n    let factoryCacheKey;\n    /** @type {ModuleFactory} */\n    let factoryCacheKey2;\n    /** @type {Map<string, Dependency[]>} */\n    let factoryCacheValue;\n    /** @type {string} */\n    let listCacheKey1;\n    /** @type {string} */\n    let listCacheKey2;\n    /** @type {Dependency[]} */\n    let listCacheValue;\n    let inProgressSorting = 1;\n    let inProgressTransitive = 1;\n    const onDependenciesSorted = err => {\n      if (err) return callback(err);\n\n      // early exit without changing parallelism back and forth\n      if (sortedDependencies.length === 0 && inProgressTransitive === 1) {\n        return callback();\n      }\n\n      // This is nested so we need to allow one additional task\n      this.processDependenciesQueue.increaseParallelism();\n      for (const item of sortedDependencies) {\n        inProgressTransitive++;\n        this.handleModuleCreation(item, err => {\n          // In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n          // errors are created inside closures that keep a reference to the Compilation, so errors are\n          // leaking the Compilation object.\n          if (err && this.bail) {\n            if (inProgressTransitive <= 0) return;\n            inProgressTransitive = -1;\n            // eslint-disable-next-line no-self-assign\n            err.stack = err.stack;\n            onTransitiveTasksFinished(err);\n            return;\n          }\n          if (--inProgressTransitive === 0) onTransitiveTasksFinished();\n        });\n      }\n      if (--inProgressTransitive === 0) onTransitiveTasksFinished();\n    };\n    const onTransitiveTasksFinished = err => {\n      if (err) return callback(err);\n      this.processDependenciesQueue.decreaseParallelism();\n      return callback();\n    };\n\n    /**\n     * @param {Dependency} dep dependency\n     * @param {number} index index in block\n     * @returns {void}\n     */\n    const processDependency = (dep, index) => {\n      this.moduleGraph.setParents(dep, currentBlock, module, index);\n      if (this._unsafeCache) {\n        try {\n          const unsafeCachedModule = unsafeCacheDependencies.get(dep);\n          if (unsafeCachedModule === null) return;\n          if (unsafeCachedModule !== undefined) {\n            if (this._restoredUnsafeCacheModuleEntries.has(unsafeCachedModule)) {\n              this._handleExistingModuleFromUnsafeCache(module, dep, unsafeCachedModule);\n              return;\n            }\n            const identifier = unsafeCachedModule.identifier();\n            const cachedModule = this._restoredUnsafeCacheEntries.get(identifier);\n            if (cachedModule !== undefined) {\n              // update unsafe cache to new module\n              unsafeCacheDependencies.set(dep, cachedModule);\n              this._handleExistingModuleFromUnsafeCache(module, dep, cachedModule);\n              return;\n            }\n            inProgressSorting++;\n            this._modulesCache.get(identifier, null, (err, cachedModule) => {\n              if (err) {\n                if (inProgressSorting <= 0) return;\n                inProgressSorting = -1;\n                onDependenciesSorted(err);\n                return;\n              }\n              try {\n                if (!this._restoredUnsafeCacheEntries.has(identifier)) {\n                  const data = unsafeCacheData.get(cachedModule);\n                  if (data === undefined) {\n                    processDependencyForResolving(dep);\n                    if (--inProgressSorting === 0) onDependenciesSorted();\n                    return;\n                  }\n                  if (cachedModule !== unsafeCachedModule) {\n                    unsafeCacheDependencies.set(dep, cachedModule);\n                  }\n                  cachedModule.restoreFromUnsafeCache(data, this.params.normalModuleFactory, this.params);\n                  this._restoredUnsafeCacheEntries.set(identifier, cachedModule);\n                  this._restoredUnsafeCacheModuleEntries.add(cachedModule);\n                  if (!this.modules.has(cachedModule)) {\n                    inProgressTransitive++;\n                    this._handleNewModuleFromUnsafeCache(module, dep, cachedModule, err => {\n                      if (err) {\n                        if (inProgressTransitive <= 0) return;\n                        inProgressTransitive = -1;\n                        onTransitiveTasksFinished(err);\n                      }\n                      if (--inProgressTransitive === 0) return onTransitiveTasksFinished();\n                    });\n                    if (--inProgressSorting === 0) onDependenciesSorted();\n                    return;\n                  }\n                }\n                if (unsafeCachedModule !== cachedModule) {\n                  unsafeCacheDependencies.set(dep, cachedModule);\n                }\n                this._handleExistingModuleFromUnsafeCache(module, dep, cachedModule); // a3\n              } catch (err) {\n                if (inProgressSorting <= 0) return;\n                inProgressSorting = -1;\n                onDependenciesSorted(err);\n                return;\n              }\n              if (--inProgressSorting === 0) onDependenciesSorted();\n            });\n            return;\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n      processDependencyForResolving(dep);\n    };\n\n    /**\n     * @param {Dependency} dep dependency\n     * @returns {void}\n     */\n    const processDependencyForResolving = dep => {\n      const resourceIdent = dep.getResourceIdentifier();\n      if (resourceIdent !== undefined && resourceIdent !== null) {\n        const category = dep.category;\n        const constructor = /** @type {DepConstructor} */dep.constructor;\n        if (factoryCacheKey === constructor) {\n          // Fast path 1: same constructor as prev item\n          if (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n            // Super fast path 1: also same resource\n            listCacheValue.push(dep);\n            return;\n          }\n        } else {\n          const factory = this.dependencyFactories.get(constructor);\n          if (factory === undefined) {\n            throw new Error(`No module factory available for dependency type: ${constructor.name}`);\n          }\n          if (factoryCacheKey2 === factory) {\n            // Fast path 2: same factory as prev item\n            factoryCacheKey = constructor;\n            if (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n              // Super fast path 2: also same resource\n              listCacheValue.push(dep);\n              return;\n            }\n          } else {\n            // Slow path\n            if (factoryCacheKey2 !== undefined) {\n              // Archive last cache entry\n              if (dependencies === undefined) dependencies = new Map();\n              dependencies.set(factoryCacheKey2, factoryCacheValue);\n              factoryCacheValue = dependencies.get(factory);\n              if (factoryCacheValue === undefined) {\n                factoryCacheValue = new Map();\n              }\n            } else {\n              factoryCacheValue = new Map();\n            }\n            factoryCacheKey = constructor;\n            factoryCacheKey2 = factory;\n          }\n        }\n        // Here webpack is using heuristic that assumes\n        // mostly esm dependencies would be used\n        // so we don't allocate extra string for them\n        const cacheKey = category === esmDependencyCategory ? resourceIdent : `${category}${resourceIdent}`;\n        let list = factoryCacheValue.get(cacheKey);\n        if (list === undefined) {\n          factoryCacheValue.set(cacheKey, list = []);\n          sortedDependencies.push({\n            factory: factoryCacheKey2,\n            dependencies: list,\n            context: dep.getContext(),\n            originModule: module\n          });\n        }\n        list.push(dep);\n        listCacheKey1 = category;\n        listCacheKey2 = resourceIdent;\n        listCacheValue = list;\n      }\n    };\n    try {\n      /** @type {DependenciesBlock[]} */\n      const queue = [module];\n      do {\n        const block = queue.pop();\n        if (block.dependencies) {\n          currentBlock = block;\n          let i = 0;\n          for (const dep of block.dependencies) processDependency(dep, i++);\n        }\n        if (block.blocks) {\n          for (const b of block.blocks) queue.push(b);\n        }\n      } while (queue.length !== 0);\n    } catch (e) {\n      return callback(e);\n    }\n    if (--inProgressSorting === 0) onDependenciesSorted();\n  }\n  _handleNewModuleFromUnsafeCache(originModule, dependency, module, callback) {\n    const moduleGraph = this.moduleGraph;\n    moduleGraph.setResolvedModule(originModule, dependency, module);\n    moduleGraph.setIssuerIfUnset(module, originModule !== undefined ? originModule : null);\n    this._modules.set(module.identifier(), module);\n    this.modules.add(module);\n    if (this._backCompat) ModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n    this._handleModuleBuildAndDependencies(originModule, module, true, callback);\n  }\n  _handleExistingModuleFromUnsafeCache(originModule, dependency, module) {\n    const moduleGraph = this.moduleGraph;\n    moduleGraph.setResolvedModule(originModule, dependency, module);\n  }\n\n  /**\n   * @typedef {Object} HandleModuleCreationOptions\n   * @property {ModuleFactory} factory\n   * @property {Dependency[]} dependencies\n   * @property {Module | null} originModule\n   * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n   * @property {string=} context\n   * @property {boolean=} recursive recurse into dependencies of the created module\n   * @property {boolean=} connectOrigin connect the resolved module with the origin module\n   */\n\n  /**\n   * @param {HandleModuleCreationOptions} options options object\n   * @param {ModuleCallback} callback callback\n   * @returns {void}\n   */\n  handleModuleCreation(_ref, callback) {\n    let {\n      factory,\n      dependencies,\n      originModule,\n      contextInfo,\n      context,\n      recursive = true,\n      connectOrigin = recursive\n    } = _ref;\n    const moduleGraph = this.moduleGraph;\n    const currentProfile = this.profile ? new ModuleProfile() : undefined;\n    this.factorizeModule({\n      currentProfile,\n      factory,\n      dependencies,\n      factoryResult: true,\n      originModule,\n      contextInfo,\n      context\n    }, (err, factoryResult) => {\n      const applyFactoryResultDependencies = () => {\n        const {\n          fileDependencies,\n          contextDependencies,\n          missingDependencies\n        } = factoryResult;\n        if (fileDependencies) {\n          this.fileDependencies.addAll(fileDependencies);\n        }\n        if (contextDependencies) {\n          this.contextDependencies.addAll(contextDependencies);\n        }\n        if (missingDependencies) {\n          this.missingDependencies.addAll(missingDependencies);\n        }\n      };\n      if (err) {\n        if (factoryResult) applyFactoryResultDependencies();\n        if (dependencies.every(d => d.optional)) {\n          this.warnings.push(err);\n          return callback();\n        } else {\n          this.errors.push(err);\n          return callback(err);\n        }\n      }\n      const newModule = factoryResult.module;\n      if (!newModule) {\n        applyFactoryResultDependencies();\n        return callback();\n      }\n      if (currentProfile !== undefined) {\n        moduleGraph.setProfile(newModule, currentProfile);\n      }\n      this.addModule(newModule, (err, module) => {\n        if (err) {\n          applyFactoryResultDependencies();\n          if (!err.module) {\n            err.module = module;\n          }\n          this.errors.push(err);\n          return callback(err);\n        }\n        if (this._unsafeCache && factoryResult.cacheable !== false && /** @type {any} */module.restoreFromUnsafeCache && this._unsafeCachePredicate(module)) {\n          const unsafeCacheableModule = /** @type {Module & { restoreFromUnsafeCache: Function }} */\n          module;\n          for (let i = 0; i < dependencies.length; i++) {\n            const dependency = dependencies[i];\n            moduleGraph.setResolvedModule(connectOrigin ? originModule : null, dependency, unsafeCacheableModule);\n            unsafeCacheDependencies.set(dependency, unsafeCacheableModule);\n          }\n          if (!unsafeCacheData.has(unsafeCacheableModule)) {\n            unsafeCacheData.set(unsafeCacheableModule, unsafeCacheableModule.getUnsafeCacheData());\n          }\n        } else {\n          applyFactoryResultDependencies();\n          for (let i = 0; i < dependencies.length; i++) {\n            const dependency = dependencies[i];\n            moduleGraph.setResolvedModule(connectOrigin ? originModule : null, dependency, module);\n          }\n        }\n        moduleGraph.setIssuerIfUnset(module, originModule !== undefined ? originModule : null);\n        if (module !== newModule) {\n          if (currentProfile !== undefined) {\n            const otherProfile = moduleGraph.getProfile(module);\n            if (otherProfile !== undefined) {\n              currentProfile.mergeInto(otherProfile);\n            } else {\n              moduleGraph.setProfile(module, currentProfile);\n            }\n          }\n        }\n        this._handleModuleBuildAndDependencies(originModule, module, recursive, callback);\n      });\n    });\n  }\n  _handleModuleBuildAndDependencies(originModule, module, recursive, callback) {\n    // Check for cycles when build is trigger inside another build\n    let creatingModuleDuringBuildSet = undefined;\n    if (!recursive && this.buildQueue.isProcessing(originModule)) {\n      // Track build dependency\n      creatingModuleDuringBuildSet = this.creatingModuleDuringBuild.get(originModule);\n      if (creatingModuleDuringBuildSet === undefined) {\n        creatingModuleDuringBuildSet = new Set();\n        this.creatingModuleDuringBuild.set(originModule, creatingModuleDuringBuildSet);\n      }\n      creatingModuleDuringBuildSet.add(module);\n\n      // When building is blocked by another module\n      // search for a cycle, cancel the cycle by throwing\n      // an error (otherwise this would deadlock)\n      const blockReasons = this.creatingModuleDuringBuild.get(module);\n      if (blockReasons !== undefined) {\n        const set = new Set(blockReasons);\n        for (const item of set) {\n          const blockReasons = this.creatingModuleDuringBuild.get(item);\n          if (blockReasons !== undefined) {\n            for (const m of blockReasons) {\n              if (m === module) {\n                return callback(new BuildCycleError(module));\n              }\n              set.add(m);\n            }\n          }\n        }\n      }\n    }\n    this.buildModule(module, err => {\n      if (creatingModuleDuringBuildSet !== undefined) {\n        creatingModuleDuringBuildSet.delete(module);\n      }\n      if (err) {\n        if (!err.module) {\n          err.module = module;\n        }\n        this.errors.push(err);\n        return callback(err);\n      }\n      if (!recursive) {\n        this.processModuleDependenciesNonRecursive(module);\n        callback(null, module);\n        return;\n      }\n\n      // This avoids deadlocks for circular dependencies\n      if (this.processDependenciesQueue.isProcessing(module)) {\n        return callback(null, module);\n      }\n      this.processModuleDependencies(module, err => {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, module);\n      });\n    });\n  }\n\n  /**\n   * @param {FactorizeModuleOptions} options options object\n   * @param {ModuleOrFactoryResultCallback} callback callback\n   * @returns {void}\n   */\n  _factorizeModule(_ref2, callback) {\n    let {\n      currentProfile,\n      factory,\n      dependencies,\n      originModule,\n      factoryResult,\n      contextInfo,\n      context\n    } = _ref2;\n    if (currentProfile !== undefined) {\n      currentProfile.markFactoryStart();\n    }\n    factory.create({\n      contextInfo: {\n        issuer: originModule ? originModule.nameForCondition() : \"\",\n        issuerLayer: originModule ? originModule.layer : null,\n        compiler: this.compiler.name,\n        ...contextInfo\n      },\n      resolveOptions: originModule ? originModule.resolveOptions : undefined,\n      context: context ? context : originModule ? originModule.context : this.compiler.context,\n      dependencies: dependencies\n    }, (err, result) => {\n      if (result) {\n        // TODO webpack 6: remove\n        // For backward-compat\n        if (result.module === undefined && result instanceof Module) {\n          result = {\n            module: result\n          };\n        }\n        if (!factoryResult) {\n          const {\n            fileDependencies,\n            contextDependencies,\n            missingDependencies\n          } = result;\n          if (fileDependencies) {\n            this.fileDependencies.addAll(fileDependencies);\n          }\n          if (contextDependencies) {\n            this.contextDependencies.addAll(contextDependencies);\n          }\n          if (missingDependencies) {\n            this.missingDependencies.addAll(missingDependencies);\n          }\n        }\n      }\n      if (err) {\n        const notFoundError = new ModuleNotFoundError(originModule, err, dependencies.map(d => d.loc).filter(Boolean)[0]);\n        return callback(notFoundError, factoryResult ? result : undefined);\n      }\n      if (!result) {\n        return callback();\n      }\n      if (currentProfile !== undefined) {\n        currentProfile.markFactoryEnd();\n      }\n      callback(null, factoryResult ? result : result.module);\n    });\n  }\n\n  /**\n   * @param {string} context context string path\n   * @param {Dependency} dependency dependency used to create Module chain\n   * @param {ModuleCallback} callback callback for when module chain is complete\n   * @returns {void} will throw if dependency instance is not a valid Dependency\n   */\n  addModuleChain(context, dependency, callback) {\n    return this.addModuleTree({\n      context,\n      dependency\n    }, callback);\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {string} options.context context string path\n   * @param {Dependency} options.dependency dependency used to create Module chain\n   * @param {Partial<ModuleFactoryCreateDataContextInfo>=} options.contextInfo additional context info for the root module\n   * @param {ModuleCallback} callback callback for when module chain is complete\n   * @returns {void} will throw if dependency instance is not a valid Dependency\n   */\n  addModuleTree(_ref3, callback) {\n    let {\n      context,\n      dependency,\n      contextInfo\n    } = _ref3;\n    if (typeof dependency !== \"object\" || dependency === null || !dependency.constructor) {\n      return callback(new WebpackError(\"Parameter 'dependency' must be a Dependency\"));\n    }\n    const Dep = /** @type {DepConstructor} */dependency.constructor;\n    const moduleFactory = this.dependencyFactories.get(Dep);\n    if (!moduleFactory) {\n      return callback(new WebpackError(`No dependency factory available for this dependency type: ${dependency.constructor.name}`));\n    }\n    this.handleModuleCreation({\n      factory: moduleFactory,\n      dependencies: [dependency],\n      originModule: null,\n      contextInfo,\n      context\n    }, (err, result) => {\n      if (err && this.bail) {\n        callback(err);\n        this.buildQueue.stop();\n        this.rebuildQueue.stop();\n        this.processDependenciesQueue.stop();\n        this.factorizeQueue.stop();\n      } else if (!err && result) {\n        callback(null, result);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * @param {string} context context path for entry\n   * @param {Dependency} entry entry dependency that should be followed\n   * @param {string | EntryOptions} optionsOrName options or deprecated name of entry\n   * @param {ModuleCallback} callback callback function\n   * @returns {void} returns\n   */\n  addEntry(context, entry, optionsOrName, callback) {\n    // TODO webpack 6 remove\n    const options = typeof optionsOrName === \"object\" ? optionsOrName : {\n      name: optionsOrName\n    };\n    this._addEntryItem(context, entry, \"dependencies\", options, callback);\n  }\n\n  /**\n   * @param {string} context context path for entry\n   * @param {Dependency} dependency dependency that should be followed\n   * @param {EntryOptions} options options\n   * @param {ModuleCallback} callback callback function\n   * @returns {void} returns\n   */\n  addInclude(context, dependency, options, callback) {\n    this._addEntryItem(context, dependency, \"includeDependencies\", options, callback);\n  }\n\n  /**\n   * @param {string} context context path for entry\n   * @param {Dependency} entry entry dependency that should be followed\n   * @param {\"dependencies\" | \"includeDependencies\"} target type of entry\n   * @param {EntryOptions} options options\n   * @param {ModuleCallback} callback callback function\n   * @returns {void} returns\n   */\n  _addEntryItem(context, entry, target, options, callback) {\n    const {\n      name\n    } = options;\n    let entryData = name !== undefined ? this.entries.get(name) : this.globalEntry;\n    if (entryData === undefined) {\n      entryData = {\n        dependencies: [],\n        includeDependencies: [],\n        options: {\n          name: undefined,\n          ...options\n        }\n      };\n      entryData[target].push(entry);\n      this.entries.set(name, entryData);\n    } else {\n      entryData[target].push(entry);\n      for (const key of Object.keys(options)) {\n        if (options[key] === undefined) continue;\n        if (entryData.options[key] === options[key]) continue;\n        if (Array.isArray(entryData.options[key]) && Array.isArray(options[key]) && arrayEquals(entryData.options[key], options[key])) {\n          continue;\n        }\n        if (entryData.options[key] === undefined) {\n          entryData.options[key] = options[key];\n        } else {\n          return callback(new WebpackError(`Conflicting entry option ${key} = ${entryData.options[key]} vs ${options[key]}`));\n        }\n      }\n    }\n    this.hooks.addEntry.call(entry, options);\n    this.addModuleTree({\n      context,\n      dependency: entry,\n      contextInfo: entryData.options.layer ? {\n        issuerLayer: entryData.options.layer\n      } : undefined\n    }, (err, module) => {\n      if (err) {\n        this.hooks.failedEntry.call(entry, options, err);\n        return callback(err);\n      }\n      this.hooks.succeedEntry.call(entry, options, module);\n      return callback(null, module);\n    });\n  }\n\n  /**\n   * @param {Module} module module to be rebuilt\n   * @param {ModuleCallback} callback callback when module finishes rebuilding\n   * @returns {void}\n   */\n  rebuildModule(module, callback) {\n    this.rebuildQueue.add(module, callback);\n  }\n\n  /**\n   * @param {Module} module module to be rebuilt\n   * @param {ModuleCallback} callback callback when module finishes rebuilding\n   * @returns {void}\n   */\n  _rebuildModule(module, callback) {\n    this.hooks.rebuildModule.call(module);\n    const oldDependencies = module.dependencies.slice();\n    const oldBlocks = module.blocks.slice();\n    module.invalidateBuild();\n    this.buildQueue.invalidate(module);\n    this.buildModule(module, err => {\n      if (err) {\n        return this.hooks.finishRebuildingModule.callAsync(module, err2 => {\n          if (err2) {\n            callback(makeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\"));\n            return;\n          }\n          callback(err);\n        });\n      }\n      this.processDependenciesQueue.invalidate(module);\n      this.moduleGraph.unfreeze();\n      this.processModuleDependencies(module, err => {\n        if (err) return callback(err);\n        this.removeReasonsOfDependencyBlock(module, {\n          dependencies: oldDependencies,\n          blocks: oldBlocks\n        });\n        this.hooks.finishRebuildingModule.callAsync(module, err2 => {\n          if (err2) {\n            callback(makeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\"));\n            return;\n          }\n          callback(null, module);\n        });\n      });\n    });\n  }\n  _computeAffectedModules(modules) {\n    const moduleMemCacheCache = this.compiler.moduleMemCaches;\n    if (!moduleMemCacheCache) return;\n    if (!this.moduleMemCaches) {\n      this.moduleMemCaches = new Map();\n      this.moduleGraph.setModuleMemCaches(this.moduleMemCaches);\n    }\n    const {\n      moduleGraph,\n      moduleMemCaches\n    } = this;\n    const affectedModules = new Set();\n    const infectedModules = new Set();\n    let statNew = 0;\n    let statChanged = 0;\n    let statUnchanged = 0;\n    let statReferencesChanged = 0;\n    let statWithoutBuild = 0;\n    const computeReferences = module => {\n      /** @type {WeakMap<Dependency, Module>} */\n      let references = undefined;\n      for (const connection of moduleGraph.getOutgoingConnections(module)) {\n        const d = connection.dependency;\n        const m = connection.module;\n        if (!d || !m || unsafeCacheDependencies.has(d)) continue;\n        if (references === undefined) references = new WeakMap();\n        references.set(d, m);\n      }\n      return references;\n    };\n\n    /**\n     * @param {Module} module the module\n     * @param {WeakMap<Dependency, Module>} references references\n     * @returns {boolean} true, when the references differ\n     */\n    const compareReferences = (module, references) => {\n      if (references === undefined) return true;\n      for (const connection of moduleGraph.getOutgoingConnections(module)) {\n        const d = connection.dependency;\n        if (!d) continue;\n        const entry = references.get(d);\n        if (entry === undefined) continue;\n        if (entry !== connection.module) return false;\n      }\n      return true;\n    };\n    const modulesWithoutCache = new Set(modules);\n    for (const [module, cachedMemCache] of moduleMemCacheCache) {\n      if (modulesWithoutCache.has(module)) {\n        const buildInfo = module.buildInfo;\n        if (buildInfo) {\n          if (cachedMemCache.buildInfo !== buildInfo) {\n            // use a new one\n            const memCache = new WeakTupleMap();\n            moduleMemCaches.set(module, memCache);\n            affectedModules.add(module);\n            cachedMemCache.buildInfo = buildInfo;\n            cachedMemCache.references = computeReferences(module);\n            cachedMemCache.memCache = memCache;\n            statChanged++;\n          } else if (!compareReferences(module, cachedMemCache.references)) {\n            // use a new one\n            const memCache = new WeakTupleMap();\n            moduleMemCaches.set(module, memCache);\n            affectedModules.add(module);\n            cachedMemCache.references = computeReferences(module);\n            cachedMemCache.memCache = memCache;\n            statReferencesChanged++;\n          } else {\n            // keep the old mem cache\n            moduleMemCaches.set(module, cachedMemCache.memCache);\n            statUnchanged++;\n          }\n        } else {\n          infectedModules.add(module);\n          moduleMemCacheCache.delete(module);\n          statWithoutBuild++;\n        }\n        modulesWithoutCache.delete(module);\n      } else {\n        moduleMemCacheCache.delete(module);\n      }\n    }\n    for (const module of modulesWithoutCache) {\n      const buildInfo = module.buildInfo;\n      if (buildInfo) {\n        // create a new entry\n        const memCache = new WeakTupleMap();\n        moduleMemCacheCache.set(module, {\n          buildInfo,\n          references: computeReferences(module),\n          memCache\n        });\n        moduleMemCaches.set(module, memCache);\n        affectedModules.add(module);\n        statNew++;\n      } else {\n        infectedModules.add(module);\n        statWithoutBuild++;\n      }\n    }\n    const reduceAffectType = connections => {\n      let affected = false;\n      for (const {\n        dependency\n      } of connections) {\n        if (!dependency) continue;\n        const type = dependency.couldAffectReferencingModule();\n        if (type === Dependency.TRANSITIVE) return Dependency.TRANSITIVE;\n        if (type === false) continue;\n        affected = true;\n      }\n      return affected;\n    };\n    const directOnlyInfectedModules = new Set();\n    for (const module of infectedModules) {\n      for (const [referencingModule, connections] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {\n        if (!referencingModule) continue;\n        if (infectedModules.has(referencingModule)) continue;\n        const type = reduceAffectType(connections);\n        if (!type) continue;\n        if (type === true) {\n          directOnlyInfectedModules.add(referencingModule);\n        } else {\n          infectedModules.add(referencingModule);\n        }\n      }\n    }\n    for (const module of directOnlyInfectedModules) infectedModules.add(module);\n    const directOnlyAffectModules = new Set();\n    for (const module of affectedModules) {\n      for (const [referencingModule, connections] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {\n        if (!referencingModule) continue;\n        if (infectedModules.has(referencingModule)) continue;\n        if (affectedModules.has(referencingModule)) continue;\n        const type = reduceAffectType(connections);\n        if (!type) continue;\n        if (type === true) {\n          directOnlyAffectModules.add(referencingModule);\n        } else {\n          affectedModules.add(referencingModule);\n        }\n        const memCache = new WeakTupleMap();\n        const cache = moduleMemCacheCache.get(referencingModule);\n        cache.memCache = memCache;\n        moduleMemCaches.set(referencingModule, memCache);\n      }\n    }\n    for (const module of directOnlyAffectModules) affectedModules.add(module);\n    this.logger.log(`${Math.round(100 * (affectedModules.size + infectedModules.size) / this.modules.size)}% (${affectedModules.size} affected + ${infectedModules.size} infected of ${this.modules.size}) modules flagged as affected (${statNew} new modules, ${statChanged} changed, ${statReferencesChanged} references changed, ${statUnchanged} unchanged, ${statWithoutBuild} were not built)`);\n  }\n  _computeAffectedModulesWithChunkGraph() {\n    const {\n      moduleMemCaches\n    } = this;\n    if (!moduleMemCaches) return;\n    const moduleMemCaches2 = this.moduleMemCaches2 = new Map();\n    const {\n      moduleGraph,\n      chunkGraph\n    } = this;\n    const key = \"memCache2\";\n    let statUnchanged = 0;\n    let statChanged = 0;\n    let statNew = 0;\n    /**\n     * @param {Module} module module\n     * @returns {{ id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[] }} references\n     */\n    const computeReferences = module => {\n      const id = chunkGraph.getModuleId(module);\n      /** @type {Map<Module, string | number | undefined>} */\n      let modules = undefined;\n      /** @type {(string | number)[] | undefined} */\n      let blocks = undefined;\n      const outgoing = moduleGraph.getOutgoingConnectionsByModule(module);\n      if (outgoing !== undefined) {\n        for (const m of outgoing.keys()) {\n          if (!m) continue;\n          if (modules === undefined) modules = new Map();\n          modules.set(m, chunkGraph.getModuleId(m));\n        }\n      }\n      if (module.blocks.length > 0) {\n        blocks = [];\n        const queue = Array.from(module.blocks);\n        for (const block of queue) {\n          const chunkGroup = chunkGraph.getBlockChunkGroup(block);\n          if (chunkGroup) {\n            for (const chunk of chunkGroup.chunks) {\n              blocks.push(chunk.id);\n            }\n          } else {\n            blocks.push(null);\n          }\n          queue.push.apply(queue, block.blocks);\n        }\n      }\n      return {\n        id,\n        modules,\n        blocks\n      };\n    };\n    /**\n     * @param {Module} module module\n     * @param {Object} references references\n     * @param {string | number} references.id id\n     * @param {Map<Module, string | number>=} references.modules modules\n     * @param {(string | number)[]=} references.blocks blocks\n     * @returns {boolean} ok?\n     */\n    const compareReferences = (module, _ref4) => {\n      let {\n        id,\n        modules,\n        blocks\n      } = _ref4;\n      if (id !== chunkGraph.getModuleId(module)) return false;\n      if (modules !== undefined) {\n        for (const [module, id] of modules) {\n          if (chunkGraph.getModuleId(module) !== id) return false;\n        }\n      }\n      if (blocks !== undefined) {\n        const queue = Array.from(module.blocks);\n        let i = 0;\n        for (const block of queue) {\n          const chunkGroup = chunkGraph.getBlockChunkGroup(block);\n          if (chunkGroup) {\n            for (const chunk of chunkGroup.chunks) {\n              if (i >= blocks.length || blocks[i++] !== chunk.id) return false;\n            }\n          } else {\n            if (i >= blocks.length || blocks[i++] !== null) return false;\n          }\n          queue.push.apply(queue, block.blocks);\n        }\n        if (i !== blocks.length) return false;\n      }\n      return true;\n    };\n    for (const [module, memCache] of moduleMemCaches) {\n      /** @type {{ references: { id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[]}, memCache: WeakTupleMap<any[], any> }} */\n      const cache = memCache.get(key);\n      if (cache === undefined) {\n        const memCache2 = new WeakTupleMap();\n        memCache.set(key, {\n          references: computeReferences(module),\n          memCache: memCache2\n        });\n        moduleMemCaches2.set(module, memCache2);\n        statNew++;\n      } else if (!compareReferences(module, cache.references)) {\n        const memCache = new WeakTupleMap();\n        cache.references = computeReferences(module);\n        cache.memCache = memCache;\n        moduleMemCaches2.set(module, memCache);\n        statChanged++;\n      } else {\n        moduleMemCaches2.set(module, cache.memCache);\n        statUnchanged++;\n      }\n    }\n    this.logger.log(`${Math.round(100 * statChanged / (statNew + statChanged + statUnchanged))}% modules flagged as affected by chunk graph (${statNew} new modules, ${statChanged} changed, ${statUnchanged} unchanged)`);\n  }\n  finish(callback) {\n    this.factorizeQueue.clear();\n    if (this.profile) {\n      this.logger.time(\"finish module profiles\");\n      const ParallelismFactorCalculator = require(\"./util/ParallelismFactorCalculator\");\n      const p = new ParallelismFactorCalculator();\n      const moduleGraph = this.moduleGraph;\n      const modulesWithProfiles = new Map();\n      for (const module of this.modules) {\n        const profile = moduleGraph.getProfile(module);\n        if (!profile) continue;\n        modulesWithProfiles.set(module, profile);\n        p.range(profile.buildingStartTime, profile.buildingEndTime, f => profile.buildingParallelismFactor = f);\n        p.range(profile.factoryStartTime, profile.factoryEndTime, f => profile.factoryParallelismFactor = f);\n        p.range(profile.integrationStartTime, profile.integrationEndTime, f => profile.integrationParallelismFactor = f);\n        p.range(profile.storingStartTime, profile.storingEndTime, f => profile.storingParallelismFactor = f);\n        p.range(profile.restoringStartTime, profile.restoringEndTime, f => profile.restoringParallelismFactor = f);\n        if (profile.additionalFactoryTimes) {\n          for (const {\n            start,\n            end\n          } of profile.additionalFactoryTimes) {\n            const influence = (end - start) / profile.additionalFactories;\n            p.range(start, end, f => profile.additionalFactoriesParallelismFactor += f * influence);\n          }\n        }\n      }\n      p.calculate();\n      const logger = this.getLogger(\"webpack.Compilation.ModuleProfile\");\n      // Avoid coverage problems due indirect changes\n      /* istanbul ignore next */\n      const logByValue = (value, msg) => {\n        if (value > 1000) {\n          logger.error(msg);\n        } else if (value > 500) {\n          logger.warn(msg);\n        } else if (value > 200) {\n          logger.info(msg);\n        } else if (value > 30) {\n          logger.log(msg);\n        } else {\n          logger.debug(msg);\n        }\n      };\n      const logNormalSummary = (category, getDuration, getParallelism) => {\n        let sum = 0;\n        let max = 0;\n        for (const [module, profile] of modulesWithProfiles) {\n          const p = getParallelism(profile);\n          const d = getDuration(profile);\n          if (d === 0 || p === 0) continue;\n          const t = d / p;\n          sum += t;\n          if (t <= 10) continue;\n          logByValue(t, ` | ${Math.round(t)} ms${p >= 1.1 ? ` (parallelism ${Math.round(p * 10) / 10})` : \"\"} ${category} > ${module.readableIdentifier(this.requestShortener)}`);\n          max = Math.max(max, t);\n        }\n        if (sum <= 10) return;\n        logByValue(Math.max(sum / 10, max), `${Math.round(sum)} ms ${category}`);\n      };\n      const logByLoadersSummary = (category, getDuration, getParallelism) => {\n        const map = new Map();\n        for (const [module, profile] of modulesWithProfiles) {\n          const list = getOrInsert(map, module.type + \"!\" + module.identifier().replace(/(!|^)[^!]*$/, \"\"), () => []);\n          list.push({\n            module,\n            profile\n          });\n        }\n        let sum = 0;\n        let max = 0;\n        for (const [key, modules] of map) {\n          let innerSum = 0;\n          let innerMax = 0;\n          for (const {\n            module,\n            profile\n          } of modules) {\n            const p = getParallelism(profile);\n            const d = getDuration(profile);\n            if (d === 0 || p === 0) continue;\n            const t = d / p;\n            innerSum += t;\n            if (t <= 10) continue;\n            logByValue(t, ` |  | ${Math.round(t)} ms${p >= 1.1 ? ` (parallelism ${Math.round(p * 10) / 10})` : \"\"} ${category} > ${module.readableIdentifier(this.requestShortener)}`);\n            innerMax = Math.max(innerMax, t);\n          }\n          sum += innerSum;\n          if (innerSum <= 10) continue;\n          const idx = key.indexOf(\"!\");\n          const loaders = key.slice(idx + 1);\n          const moduleType = key.slice(0, idx);\n          const t = Math.max(innerSum / 10, innerMax);\n          logByValue(t, ` | ${Math.round(innerSum)} ms ${category} > ${loaders ? `${modules.length} x ${moduleType} with ${this.requestShortener.shorten(loaders)}` : `${modules.length} x ${moduleType}`}`);\n          max = Math.max(max, t);\n        }\n        if (sum <= 10) return;\n        logByValue(Math.max(sum / 10, max), `${Math.round(sum)} ms ${category}`);\n      };\n      logNormalSummary(\"resolve to new modules\", p => p.factory, p => p.factoryParallelismFactor);\n      logNormalSummary(\"resolve to existing modules\", p => p.additionalFactories, p => p.additionalFactoriesParallelismFactor);\n      logNormalSummary(\"integrate modules\", p => p.restoring, p => p.restoringParallelismFactor);\n      logByLoadersSummary(\"build modules\", p => p.building, p => p.buildingParallelismFactor);\n      logNormalSummary(\"store modules\", p => p.storing, p => p.storingParallelismFactor);\n      logNormalSummary(\"restore modules\", p => p.restoring, p => p.restoringParallelismFactor);\n      this.logger.timeEnd(\"finish module profiles\");\n    }\n    this.logger.time(\"compute affected modules\");\n    this._computeAffectedModules(this.modules);\n    this.logger.timeEnd(\"compute affected modules\");\n    this.logger.time(\"finish modules\");\n    const {\n      modules,\n      moduleMemCaches\n    } = this;\n    this.hooks.finishModules.callAsync(modules, err => {\n      this.logger.timeEnd(\"finish modules\");\n      if (err) return callback(err);\n\n      // extract warnings and errors from modules\n      this.moduleGraph.freeze(\"dependency errors\");\n      // TODO keep a cacheToken (= {}) for each module in the graph\n      // create a new one per compilation and flag all updated files\n      // and parents with it\n      this.logger.time(\"report dependency errors and warnings\");\n      for (const module of modules) {\n        // TODO only run for modules with changed cacheToken\n        // global WeakMap<CacheToken, WeakSet<Module>> to keep modules without errors/warnings\n        const memCache = moduleMemCaches && moduleMemCaches.get(module);\n        if (memCache && memCache.get(\"noWarningsOrErrors\")) continue;\n        let hasProblems = this.reportDependencyErrorsAndWarnings(module, [module]);\n        const errors = module.getErrors();\n        if (errors !== undefined) {\n          for (const error of errors) {\n            if (!error.module) {\n              error.module = module;\n            }\n            this.errors.push(error);\n            hasProblems = true;\n          }\n        }\n        const warnings = module.getWarnings();\n        if (warnings !== undefined) {\n          for (const warning of warnings) {\n            if (!warning.module) {\n              warning.module = module;\n            }\n            this.warnings.push(warning);\n            hasProblems = true;\n          }\n        }\n        if (!hasProblems && memCache) memCache.set(\"noWarningsOrErrors\", true);\n      }\n      this.moduleGraph.unfreeze();\n      this.logger.timeEnd(\"report dependency errors and warnings\");\n      callback();\n    });\n  }\n  unseal() {\n    this.hooks.unseal.call();\n    this.chunks.clear();\n    this.chunkGroups.length = 0;\n    this.namedChunks.clear();\n    this.namedChunkGroups.clear();\n    this.entrypoints.clear();\n    this.additionalChunkAssets.length = 0;\n    this.assets = {};\n    this.assetsInfo.clear();\n    this.moduleGraph.removeAllModuleAttributes();\n    this.moduleGraph.unfreeze();\n    this.moduleMemCaches2 = undefined;\n  }\n\n  /**\n   * @param {Callback} callback signals when the call finishes\n   * @returns {void}\n   */\n  seal(callback) {\n    const finalCallback = err => {\n      this.factorizeQueue.clear();\n      this.buildQueue.clear();\n      this.rebuildQueue.clear();\n      this.processDependenciesQueue.clear();\n      this.addModuleQueue.clear();\n      return callback(err);\n    };\n    const chunkGraph = new ChunkGraph(this.moduleGraph, this.outputOptions.hashFunction);\n    this.chunkGraph = chunkGraph;\n    if (this._backCompat) {\n      for (const module of this.modules) {\n        ChunkGraph.setChunkGraphForModule(module, chunkGraph);\n      }\n    }\n    this.hooks.seal.call();\n    this.logger.time(\"optimize dependencies\");\n    while (this.hooks.optimizeDependencies.call(this.modules)) {\n      /* empty */\n    }\n    this.hooks.afterOptimizeDependencies.call(this.modules);\n    this.logger.timeEnd(\"optimize dependencies\");\n    this.logger.time(\"create chunks\");\n    this.hooks.beforeChunks.call();\n    this.moduleGraph.freeze(\"seal\");\n    /** @type {Map<Entrypoint, Module[]>} */\n    const chunkGraphInit = new Map();\n    for (const [name, {\n      dependencies,\n      includeDependencies,\n      options\n    }] of this.entries) {\n      const chunk = this.addChunk(name);\n      if (options.filename) {\n        chunk.filenameTemplate = options.filename;\n      }\n      const entrypoint = new Entrypoint(options);\n      if (!options.dependOn && !options.runtime) {\n        entrypoint.setRuntimeChunk(chunk);\n      }\n      entrypoint.setEntrypointChunk(chunk);\n      this.namedChunkGroups.set(name, entrypoint);\n      this.entrypoints.set(name, entrypoint);\n      this.chunkGroups.push(entrypoint);\n      connectChunkGroupAndChunk(entrypoint, chunk);\n      const entryModules = new Set();\n      for (const dep of [...this.globalEntry.dependencies, ...dependencies]) {\n        entrypoint.addOrigin(null, {\n          name\n        }, /** @type {any} */dep.request);\n        const module = this.moduleGraph.getModule(dep);\n        if (module) {\n          chunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n          entryModules.add(module);\n          const modulesList = chunkGraphInit.get(entrypoint);\n          if (modulesList === undefined) {\n            chunkGraphInit.set(entrypoint, [module]);\n          } else {\n            modulesList.push(module);\n          }\n        }\n      }\n      this.assignDepths(entryModules);\n      const mapAndSort = deps => deps.map(dep => this.moduleGraph.getModule(dep)).filter(Boolean).sort(compareModulesByIdentifier);\n      const includedModules = [...mapAndSort(this.globalEntry.includeDependencies), ...mapAndSort(includeDependencies)];\n      let modulesList = chunkGraphInit.get(entrypoint);\n      if (modulesList === undefined) {\n        chunkGraphInit.set(entrypoint, modulesList = []);\n      }\n      for (const module of includedModules) {\n        this.assignDepth(module);\n        modulesList.push(module);\n      }\n    }\n    const runtimeChunks = new Set();\n    outer: for (const [name, {\n      options: {\n        dependOn,\n        runtime\n      }\n    }] of this.entries) {\n      if (dependOn && runtime) {\n        const err = new WebpackError(`Entrypoint '${name}' has 'dependOn' and 'runtime' specified. This is not valid.\nEntrypoints that depend on other entrypoints do not have their own runtime.\nThey will use the runtime(s) from referenced entrypoints instead.\nRemove the 'runtime' option from the entrypoint.`);\n        const entry = this.entrypoints.get(name);\n        err.chunk = entry.getEntrypointChunk();\n        this.errors.push(err);\n      }\n      if (dependOn) {\n        const entry = this.entrypoints.get(name);\n        const referencedChunks = entry.getEntrypointChunk().getAllReferencedChunks();\n        const dependOnEntries = [];\n        for (const dep of dependOn) {\n          const dependency = this.entrypoints.get(dep);\n          if (!dependency) {\n            throw new Error(`Entry ${name} depends on ${dep}, but this entry was not found`);\n          }\n          if (referencedChunks.has(dependency.getEntrypointChunk())) {\n            const err = new WebpackError(`Entrypoints '${name}' and '${dep}' use 'dependOn' to depend on each other in a circular way.`);\n            const entryChunk = entry.getEntrypointChunk();\n            err.chunk = entryChunk;\n            this.errors.push(err);\n            entry.setRuntimeChunk(entryChunk);\n            continue outer;\n          }\n          dependOnEntries.push(dependency);\n        }\n        for (const dependency of dependOnEntries) {\n          connectChunkGroupParentAndChild(dependency, entry);\n        }\n      } else if (runtime) {\n        const entry = this.entrypoints.get(name);\n        let chunk = this.namedChunks.get(runtime);\n        if (chunk) {\n          if (!runtimeChunks.has(chunk)) {\n            const err = new WebpackError(`Entrypoint '${name}' has a 'runtime' option which points to another entrypoint named '${runtime}'.\nIt's not valid to use other entrypoints as runtime chunk.\nDid you mean to use 'dependOn: ${JSON.stringify(runtime)}' instead to allow using entrypoint '${name}' within the runtime of entrypoint '${runtime}'? For this '${runtime}' must always be loaded when '${name}' is used.\nOr do you want to use the entrypoints '${name}' and '${runtime}' independently on the same page with a shared runtime? In this case give them both the same value for the 'runtime' option. It must be a name not already used by an entrypoint.`);\n            const entryChunk = entry.getEntrypointChunk();\n            err.chunk = entryChunk;\n            this.errors.push(err);\n            entry.setRuntimeChunk(entryChunk);\n            continue;\n          }\n        } else {\n          chunk = this.addChunk(runtime);\n          chunk.preventIntegration = true;\n          runtimeChunks.add(chunk);\n        }\n        entry.unshiftChunk(chunk);\n        chunk.addGroup(entry);\n        entry.setRuntimeChunk(chunk);\n      }\n    }\n    buildChunkGraph(this, chunkGraphInit);\n    this.hooks.afterChunks.call(this.chunks);\n    this.logger.timeEnd(\"create chunks\");\n    this.logger.time(\"optimize\");\n    this.hooks.optimize.call();\n    while (this.hooks.optimizeModules.call(this.modules)) {\n      /* empty */\n    }\n    this.hooks.afterOptimizeModules.call(this.modules);\n    while (this.hooks.optimizeChunks.call(this.chunks, this.chunkGroups)) {\n      /* empty */\n    }\n    this.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n    this.hooks.optimizeTree.callAsync(this.chunks, this.modules, err => {\n      if (err) {\n        return finalCallback(makeWebpackError(err, \"Compilation.hooks.optimizeTree\"));\n      }\n      this.hooks.afterOptimizeTree.call(this.chunks, this.modules);\n      this.hooks.optimizeChunkModules.callAsync(this.chunks, this.modules, err => {\n        if (err) {\n          return finalCallback(makeWebpackError(err, \"Compilation.hooks.optimizeChunkModules\"));\n        }\n        this.hooks.afterOptimizeChunkModules.call(this.chunks, this.modules);\n        const shouldRecord = this.hooks.shouldRecord.call() !== false;\n        this.hooks.reviveModules.call(this.modules, this.records);\n        this.hooks.beforeModuleIds.call(this.modules);\n        this.hooks.moduleIds.call(this.modules);\n        this.hooks.optimizeModuleIds.call(this.modules);\n        this.hooks.afterOptimizeModuleIds.call(this.modules);\n        this.hooks.reviveChunks.call(this.chunks, this.records);\n        this.hooks.beforeChunkIds.call(this.chunks);\n        this.hooks.chunkIds.call(this.chunks);\n        this.hooks.optimizeChunkIds.call(this.chunks);\n        this.hooks.afterOptimizeChunkIds.call(this.chunks);\n        this.assignRuntimeIds();\n        this.logger.time(\"compute affected modules with chunk graph\");\n        this._computeAffectedModulesWithChunkGraph();\n        this.logger.timeEnd(\"compute affected modules with chunk graph\");\n        this.sortItemsWithChunkIds();\n        if (shouldRecord) {\n          this.hooks.recordModules.call(this.modules, this.records);\n          this.hooks.recordChunks.call(this.chunks, this.records);\n        }\n        this.hooks.optimizeCodeGeneration.call(this.modules);\n        this.logger.timeEnd(\"optimize\");\n        this.logger.time(\"module hashing\");\n        this.hooks.beforeModuleHash.call();\n        this.createModuleHashes();\n        this.hooks.afterModuleHash.call();\n        this.logger.timeEnd(\"module hashing\");\n        this.logger.time(\"code generation\");\n        this.hooks.beforeCodeGeneration.call();\n        this.codeGeneration(err => {\n          if (err) {\n            return finalCallback(err);\n          }\n          this.hooks.afterCodeGeneration.call();\n          this.logger.timeEnd(\"code generation\");\n          this.logger.time(\"runtime requirements\");\n          this.hooks.beforeRuntimeRequirements.call();\n          this.processRuntimeRequirements();\n          this.hooks.afterRuntimeRequirements.call();\n          this.logger.timeEnd(\"runtime requirements\");\n          this.logger.time(\"hashing\");\n          this.hooks.beforeHash.call();\n          const codeGenerationJobs = this.createHash();\n          this.hooks.afterHash.call();\n          this.logger.timeEnd(\"hashing\");\n          this._runCodeGenerationJobs(codeGenerationJobs, err => {\n            if (err) {\n              return finalCallback(err);\n            }\n            if (shouldRecord) {\n              this.logger.time(\"record hash\");\n              this.hooks.recordHash.call(this.records);\n              this.logger.timeEnd(\"record hash\");\n            }\n            this.logger.time(\"module assets\");\n            this.clearAssets();\n            this.hooks.beforeModuleAssets.call();\n            this.createModuleAssets();\n            this.logger.timeEnd(\"module assets\");\n            const cont = () => {\n              this.logger.time(\"process assets\");\n              this.hooks.processAssets.callAsync(this.assets, err => {\n                if (err) {\n                  return finalCallback(makeWebpackError(err, \"Compilation.hooks.processAssets\"));\n                }\n                this.hooks.afterProcessAssets.call(this.assets);\n                this.logger.timeEnd(\"process assets\");\n                this.assets = this._backCompat ? soonFrozenObjectDeprecation(this.assets, \"Compilation.assets\", \"DEP_WEBPACK_COMPILATION_ASSETS\", `BREAKING CHANGE: No more changes should happen to Compilation.assets after sealing the Compilation.\n\tDo changes to assets earlier, e. g. in Compilation.hooks.processAssets.\n\tMake sure to select an appropriate stage from Compilation.PROCESS_ASSETS_STAGE_*.`) : Object.freeze(this.assets);\n                this.summarizeDependencies();\n                if (shouldRecord) {\n                  this.hooks.record.call(this, this.records);\n                }\n                if (this.hooks.needAdditionalSeal.call()) {\n                  this.unseal();\n                  return this.seal(callback);\n                }\n                return this.hooks.afterSeal.callAsync(err => {\n                  if (err) {\n                    return finalCallback(makeWebpackError(err, \"Compilation.hooks.afterSeal\"));\n                  }\n                  this.fileSystemInfo.logStatistics();\n                  finalCallback();\n                });\n              });\n            };\n            this.logger.time(\"create chunk assets\");\n            if (this.hooks.shouldGenerateChunkAssets.call() !== false) {\n              this.hooks.beforeChunkAssets.call();\n              this.createChunkAssets(err => {\n                this.logger.timeEnd(\"create chunk assets\");\n                if (err) {\n                  return finalCallback(err);\n                }\n                cont();\n              });\n            } else {\n              this.logger.timeEnd(\"create chunk assets\");\n              cont();\n            }\n          });\n        });\n      });\n    });\n  }\n\n  /**\n   * @param {Module} module module to report from\n   * @param {DependenciesBlock[]} blocks blocks to report from\n   * @returns {boolean} true, when it has warnings or errors\n   */\n  reportDependencyErrorsAndWarnings(module, blocks) {\n    let hasProblems = false;\n    for (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n      const block = blocks[indexBlock];\n      const dependencies = block.dependencies;\n      for (let indexDep = 0; indexDep < dependencies.length; indexDep++) {\n        const d = dependencies[indexDep];\n        const warnings = d.getWarnings(this.moduleGraph);\n        if (warnings) {\n          for (let indexWar = 0; indexWar < warnings.length; indexWar++) {\n            const w = warnings[indexWar];\n            const warning = new ModuleDependencyWarning(module, w, d.loc);\n            this.warnings.push(warning);\n            hasProblems = true;\n          }\n        }\n        const errors = d.getErrors(this.moduleGraph);\n        if (errors) {\n          for (let indexErr = 0; indexErr < errors.length; indexErr++) {\n            const e = errors[indexErr];\n            const error = new ModuleDependencyError(module, e, d.loc);\n            this.errors.push(error);\n            hasProblems = true;\n          }\n        }\n      }\n      if (this.reportDependencyErrorsAndWarnings(module, block.blocks)) hasProblems = true;\n    }\n    return hasProblems;\n  }\n  codeGeneration(callback) {\n    const {\n      chunkGraph\n    } = this;\n    this.codeGenerationResults = new CodeGenerationResults(this.outputOptions.hashFunction);\n    /** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n    const jobs = [];\n    for (const module of this.modules) {\n      const runtimes = chunkGraph.getModuleRuntimes(module);\n      if (runtimes.size === 1) {\n        for (const runtime of runtimes) {\n          const hash = chunkGraph.getModuleHash(module, runtime);\n          jobs.push({\n            module,\n            hash,\n            runtime,\n            runtimes: [runtime]\n          });\n        }\n      } else if (runtimes.size > 1) {\n        /** @type {Map<string, { runtimes: RuntimeSpec[] }>} */\n        const map = new Map();\n        for (const runtime of runtimes) {\n          const hash = chunkGraph.getModuleHash(module, runtime);\n          const job = map.get(hash);\n          if (job === undefined) {\n            const newJob = {\n              module,\n              hash,\n              runtime,\n              runtimes: [runtime]\n            };\n            jobs.push(newJob);\n            map.set(hash, newJob);\n          } else {\n            job.runtimes.push(runtime);\n          }\n        }\n      }\n    }\n    this._runCodeGenerationJobs(jobs, callback);\n  }\n  _runCodeGenerationJobs(jobs, callback) {\n    if (jobs.length === 0) {\n      return callback();\n    }\n    let statModulesFromCache = 0;\n    let statModulesGenerated = 0;\n    const {\n      chunkGraph,\n      moduleGraph,\n      dependencyTemplates,\n      runtimeTemplate\n    } = this;\n    const results = this.codeGenerationResults;\n    const errors = [];\n    /** @type {Set<Module> | undefined} */\n    let notCodeGeneratedModules = undefined;\n    const runIteration = () => {\n      let delayedJobs = [];\n      let delayedModules = new Set();\n      asyncLib.eachLimit(jobs, this.options.parallelism, (job, callback) => {\n        const {\n          module\n        } = job;\n        const {\n          codeGenerationDependencies\n        } = module;\n        if (codeGenerationDependencies !== undefined) {\n          if (notCodeGeneratedModules === undefined || codeGenerationDependencies.some(dep => {\n            const referencedModule = moduleGraph.getModule(dep);\n            return notCodeGeneratedModules.has(referencedModule);\n          })) {\n            delayedJobs.push(job);\n            delayedModules.add(module);\n            return callback();\n          }\n        }\n        const {\n          hash,\n          runtime,\n          runtimes\n        } = job;\n        this._codeGenerationModule(module, runtime, runtimes, hash, dependencyTemplates, chunkGraph, moduleGraph, runtimeTemplate, errors, results, (err, codeGenerated) => {\n          if (codeGenerated) statModulesGenerated++;else statModulesFromCache++;\n          callback(err);\n        });\n      }, err => {\n        if (err) return callback(err);\n        if (delayedJobs.length > 0) {\n          if (delayedJobs.length === jobs.length) {\n            return callback(new Error(`Unable to make progress during code generation because of circular code generation dependency: ${Array.from(delayedModules, m => m.identifier()).join(\", \")}`));\n          }\n          jobs = delayedJobs;\n          delayedJobs = [];\n          notCodeGeneratedModules = delayedModules;\n          delayedModules = new Set();\n          return runIteration();\n        }\n        if (errors.length > 0) {\n          errors.sort(compareSelect(err => err.module, compareModulesByIdentifier));\n          for (const error of errors) {\n            this.errors.push(error);\n          }\n        }\n        this.logger.log(`${Math.round(100 * statModulesGenerated / (statModulesGenerated + statModulesFromCache))}% code generated (${statModulesGenerated} generated, ${statModulesFromCache} from cache)`);\n        callback();\n      });\n    };\n    runIteration();\n  }\n\n  /**\n   * @param {Module} module module\n   * @param {RuntimeSpec} runtime runtime\n   * @param {RuntimeSpec[]} runtimes runtimes\n   * @param {string} hash hash\n   * @param {DependencyTemplates} dependencyTemplates dependencyTemplates\n   * @param {ChunkGraph} chunkGraph chunkGraph\n   * @param {ModuleGraph} moduleGraph moduleGraph\n   * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\n   * @param {WebpackError[]} errors errors\n   * @param {CodeGenerationResults} results results\n   * @param {function(WebpackError=, boolean=): void} callback callback\n   */\n  _codeGenerationModule(module, runtime, runtimes, hash, dependencyTemplates, chunkGraph, moduleGraph, runtimeTemplate, errors, results, callback) {\n    let codeGenerated = false;\n    const cache = new MultiItemCache(runtimes.map(runtime => this._codeGenerationCache.getItemCache(`${module.identifier()}|${getRuntimeKey(runtime)}`, `${hash}|${dependencyTemplates.getHash()}`)));\n    cache.get((err, cachedResult) => {\n      if (err) return callback(err);\n      let result;\n      if (!cachedResult) {\n        try {\n          codeGenerated = true;\n          this.codeGeneratedModules.add(module);\n          result = module.codeGeneration({\n            chunkGraph,\n            moduleGraph,\n            dependencyTemplates,\n            runtimeTemplate,\n            runtime,\n            codeGenerationResults: results,\n            compilation: this\n          });\n        } catch (err) {\n          errors.push(new CodeGenerationError(module, err));\n          result = cachedResult = {\n            sources: new Map(),\n            runtimeRequirements: null\n          };\n        }\n      } else {\n        result = cachedResult;\n      }\n      for (const runtime of runtimes) {\n        results.add(module, runtime, result);\n      }\n      if (!cachedResult) {\n        cache.store(result, err => callback(err, codeGenerated));\n      } else {\n        callback(null, codeGenerated);\n      }\n    });\n  }\n  _getChunkGraphEntries() {\n    /** @type {Set<Chunk>} */\n    const treeEntries = new Set();\n    for (const ep of this.entrypoints.values()) {\n      const chunk = ep.getRuntimeChunk();\n      if (chunk) treeEntries.add(chunk);\n    }\n    for (const ep of this.asyncEntrypoints) {\n      const chunk = ep.getRuntimeChunk();\n      if (chunk) treeEntries.add(chunk);\n    }\n    return treeEntries;\n  }\n\n  /**\n   * @param {Object} options options\n   * @param {ChunkGraph=} options.chunkGraph the chunk graph\n   * @param {Iterable<Module>=} options.modules modules\n   * @param {Iterable<Chunk>=} options.chunks chunks\n   * @param {CodeGenerationResults=} options.codeGenerationResults codeGenerationResults\n   * @param {Iterable<Chunk>=} options.chunkGraphEntries chunkGraphEntries\n   * @returns {void}\n   */\n  processRuntimeRequirements() {\n    let {\n      chunkGraph = this.chunkGraph,\n      modules = this.modules,\n      chunks = this.chunks,\n      codeGenerationResults = this.codeGenerationResults,\n      chunkGraphEntries = this._getChunkGraphEntries()\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const context = {\n      chunkGraph,\n      codeGenerationResults\n    };\n    const {\n      moduleMemCaches2\n    } = this;\n    this.logger.time(\"runtime requirements.modules\");\n    const additionalModuleRuntimeRequirements = this.hooks.additionalModuleRuntimeRequirements;\n    const runtimeRequirementInModule = this.hooks.runtimeRequirementInModule;\n    for (const module of modules) {\n      if (chunkGraph.getNumberOfModuleChunks(module) > 0) {\n        const memCache = moduleMemCaches2 && moduleMemCaches2.get(module);\n        for (const runtime of chunkGraph.getModuleRuntimes(module)) {\n          if (memCache) {\n            const cached = memCache.get(`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`);\n            if (cached !== undefined) {\n              if (cached !== null) {\n                chunkGraph.addModuleRuntimeRequirements(module, runtime, cached, false);\n              }\n              continue;\n            }\n          }\n          let set;\n          const runtimeRequirements = codeGenerationResults.getRuntimeRequirements(module, runtime);\n          if (runtimeRequirements && runtimeRequirements.size > 0) {\n            set = new Set(runtimeRequirements);\n          } else if (additionalModuleRuntimeRequirements.isUsed()) {\n            set = new Set();\n          } else {\n            if (memCache) {\n              memCache.set(`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`, null);\n            }\n            continue;\n          }\n          additionalModuleRuntimeRequirements.call(module, set, context);\n          for (const r of set) {\n            const hook = runtimeRequirementInModule.get(r);\n            if (hook !== undefined) hook.call(module, set, context);\n          }\n          if (set.size === 0) {\n            if (memCache) {\n              memCache.set(`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`, null);\n            }\n          } else {\n            if (memCache) {\n              memCache.set(`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`, set);\n              chunkGraph.addModuleRuntimeRequirements(module, runtime, set, false);\n            } else {\n              chunkGraph.addModuleRuntimeRequirements(module, runtime, set);\n            }\n          }\n        }\n      }\n    }\n    this.logger.timeEnd(\"runtime requirements.modules\");\n    this.logger.time(\"runtime requirements.chunks\");\n    for (const chunk of chunks) {\n      const set = new Set();\n      for (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n        const runtimeRequirements = chunkGraph.getModuleRuntimeRequirements(module, chunk.runtime);\n        for (const r of runtimeRequirements) set.add(r);\n      }\n      this.hooks.additionalChunkRuntimeRequirements.call(chunk, set, context);\n      for (const r of set) {\n        this.hooks.runtimeRequirementInChunk.for(r).call(chunk, set, context);\n      }\n      chunkGraph.addChunkRuntimeRequirements(chunk, set);\n    }\n    this.logger.timeEnd(\"runtime requirements.chunks\");\n    this.logger.time(\"runtime requirements.entries\");\n    for (const treeEntry of chunkGraphEntries) {\n      const set = new Set();\n      for (const chunk of treeEntry.getAllReferencedChunks()) {\n        const runtimeRequirements = chunkGraph.getChunkRuntimeRequirements(chunk);\n        for (const r of runtimeRequirements) set.add(r);\n      }\n      this.hooks.additionalTreeRuntimeRequirements.call(treeEntry, set, context);\n      for (const r of set) {\n        this.hooks.runtimeRequirementInTree.for(r).call(treeEntry, set, context);\n      }\n      chunkGraph.addTreeRuntimeRequirements(treeEntry, set);\n    }\n    this.logger.timeEnd(\"runtime requirements.entries\");\n  }\n\n  // TODO webpack 6 make chunkGraph argument non-optional\n  /**\n   * @param {Chunk} chunk target chunk\n   * @param {RuntimeModule} module runtime module\n   * @param {ChunkGraph} chunkGraph the chunk graph\n   * @returns {void}\n   */\n  addRuntimeModule(chunk, module) {\n    let chunkGraph = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.chunkGraph;\n    // Deprecated ModuleGraph association\n    if (this._backCompat) ModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\n    // add it to the list\n    this.modules.add(module);\n    this._modules.set(module.identifier(), module);\n\n    // connect to the chunk graph\n    chunkGraph.connectChunkAndModule(chunk, module);\n    chunkGraph.connectChunkAndRuntimeModule(chunk, module);\n    if (module.fullHash) {\n      chunkGraph.addFullHashModuleToChunk(chunk, module);\n    } else if (module.dependentHash) {\n      chunkGraph.addDependentHashModuleToChunk(chunk, module);\n    }\n\n    // attach runtime module\n    module.attach(this, chunk, chunkGraph);\n\n    // Setup internals\n    const exportsInfo = this.moduleGraph.getExportsInfo(module);\n    exportsInfo.setHasProvideInfo();\n    if (typeof chunk.runtime === \"string\") {\n      exportsInfo.setUsedForSideEffectsOnly(chunk.runtime);\n    } else if (chunk.runtime === undefined) {\n      exportsInfo.setUsedForSideEffectsOnly(undefined);\n    } else {\n      for (const runtime of chunk.runtime) {\n        exportsInfo.setUsedForSideEffectsOnly(runtime);\n      }\n    }\n    chunkGraph.addModuleRuntimeRequirements(module, chunk.runtime, new Set([RuntimeGlobals.requireScope]));\n\n    // runtime modules don't need ids\n    chunkGraph.setModuleId(module, \"\");\n\n    // Call hook\n    this.hooks.runtimeModule.call(module, chunk);\n  }\n\n  /**\n   * If `module` is passed, `loc` and `request` must also be passed.\n   * @param {string | ChunkGroupOptions} groupOptions options for the chunk group\n   * @param {Module=} module the module the references the chunk group\n   * @param {DependencyLocation=} loc the location from with the chunk group is referenced (inside of module)\n   * @param {string=} request the request from which the the chunk group is referenced\n   * @returns {ChunkGroup} the new or existing chunk group\n   */\n  addChunkInGroup(groupOptions, module, loc, request) {\n    if (typeof groupOptions === \"string\") {\n      groupOptions = {\n        name: groupOptions\n      };\n    }\n    const name = groupOptions.name;\n    if (name) {\n      const chunkGroup = this.namedChunkGroups.get(name);\n      if (chunkGroup !== undefined) {\n        chunkGroup.addOptions(groupOptions);\n        if (module) {\n          chunkGroup.addOrigin(module, loc, request);\n        }\n        return chunkGroup;\n      }\n    }\n    const chunkGroup = new ChunkGroup(groupOptions);\n    if (module) chunkGroup.addOrigin(module, loc, request);\n    const chunk = this.addChunk(name);\n    connectChunkGroupAndChunk(chunkGroup, chunk);\n    this.chunkGroups.push(chunkGroup);\n    if (name) {\n      this.namedChunkGroups.set(name, chunkGroup);\n    }\n    return chunkGroup;\n  }\n\n  /**\n   * @param {EntryOptions} options options for the entrypoint\n   * @param {Module} module the module the references the chunk group\n   * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n   * @param {string} request the request from which the the chunk group is referenced\n   * @returns {Entrypoint} the new or existing entrypoint\n   */\n  addAsyncEntrypoint(options, module, loc, request) {\n    const name = options.name;\n    if (name) {\n      const entrypoint = this.namedChunkGroups.get(name);\n      if (entrypoint instanceof Entrypoint) {\n        if (entrypoint !== undefined) {\n          if (module) {\n            entrypoint.addOrigin(module, loc, request);\n          }\n          return entrypoint;\n        }\n      } else if (entrypoint) {\n        throw new Error(`Cannot add an async entrypoint with the name '${name}', because there is already an chunk group with this name`);\n      }\n    }\n    const chunk = this.addChunk(name);\n    if (options.filename) {\n      chunk.filenameTemplate = options.filename;\n    }\n    const entrypoint = new Entrypoint(options, false);\n    entrypoint.setRuntimeChunk(chunk);\n    entrypoint.setEntrypointChunk(chunk);\n    if (name) {\n      this.namedChunkGroups.set(name, entrypoint);\n    }\n    this.chunkGroups.push(entrypoint);\n    this.asyncEntrypoints.push(entrypoint);\n    connectChunkGroupAndChunk(entrypoint, chunk);\n    if (module) {\n      entrypoint.addOrigin(module, loc, request);\n    }\n    return entrypoint;\n  }\n\n  /**\n   * This method first looks to see if a name is provided for a new chunk,\n   * and first looks to see if any named chunks already exist and reuse that chunk instead.\n   *\n   * @param {string=} name optional chunk name to be provided\n   * @returns {Chunk} create a chunk (invoked during seal event)\n   */\n  addChunk(name) {\n    if (name) {\n      const chunk = this.namedChunks.get(name);\n      if (chunk !== undefined) {\n        return chunk;\n      }\n    }\n    const chunk = new Chunk(name, this._backCompat);\n    this.chunks.add(chunk);\n    if (this._backCompat) ChunkGraph.setChunkGraphForChunk(chunk, this.chunkGraph);\n    if (name) {\n      this.namedChunks.set(name, chunk);\n    }\n    return chunk;\n  }\n\n  /**\n   * @deprecated\n   * @param {Module} module module to assign depth\n   * @returns {void}\n   */\n  assignDepth(module) {\n    const moduleGraph = this.moduleGraph;\n    const queue = new Set([module]);\n    let depth;\n    moduleGraph.setDepth(module, 0);\n\n    /**\n     * @param {Module} module module for processing\n     * @returns {void}\n     */\n    const processModule = module => {\n      if (!moduleGraph.setDepthIfLower(module, depth)) return;\n      queue.add(module);\n    };\n    for (module of queue) {\n      queue.delete(module);\n      depth = moduleGraph.getDepth(module) + 1;\n      for (const connection of moduleGraph.getOutgoingConnections(module)) {\n        const refModule = connection.module;\n        if (refModule) {\n          processModule(refModule);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Set<Module>} modules module to assign depth\n   * @returns {void}\n   */\n  assignDepths(modules) {\n    const moduleGraph = this.moduleGraph;\n\n    /** @type {Set<Module | number>} */\n    const queue = new Set(modules);\n    queue.add(1);\n    let depth = 0;\n    let i = 0;\n    for (const module of queue) {\n      i++;\n      if (typeof module === \"number\") {\n        depth = module;\n        if (queue.size === i) return;\n        queue.add(depth + 1);\n      } else {\n        moduleGraph.setDepth(module, depth);\n        for (const {\n          module: refModule\n        } of moduleGraph.getOutgoingConnections(module)) {\n          if (refModule) {\n            queue.add(refModule);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Dependency} dependency the dependency\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n  getDependencyReferencedExports(dependency, runtime) {\n    const referencedExports = dependency.getReferencedExports(this.moduleGraph, runtime);\n    return this.hooks.dependencyReferencedExports.call(referencedExports, dependency, runtime);\n  }\n\n  /**\n   *\n   * @param {Module} module module relationship for removal\n   * @param {DependenciesBlockLike} block //TODO: good description\n   * @returns {void}\n   */\n  removeReasonsOfDependencyBlock(module, block) {\n    if (block.blocks) {\n      for (const b of block.blocks) {\n        this.removeReasonsOfDependencyBlock(module, b);\n      }\n    }\n    if (block.dependencies) {\n      for (const dep of block.dependencies) {\n        const originalModule = this.moduleGraph.getModule(dep);\n        if (originalModule) {\n          this.moduleGraph.removeConnection(dep);\n          if (this.chunkGraph) {\n            for (const chunk of this.chunkGraph.getModuleChunks(originalModule)) {\n              this.patchChunksAfterReasonRemoval(originalModule, chunk);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Module} module module to patch tie\n   * @param {Chunk} chunk chunk to patch tie\n   * @returns {void}\n   */\n  patchChunksAfterReasonRemoval(module, chunk) {\n    if (!module.hasReasons(this.moduleGraph, chunk.runtime)) {\n      this.removeReasonsOfDependencyBlock(module, module);\n    }\n    if (!module.hasReasonForChunk(chunk, this.moduleGraph, this.chunkGraph)) {\n      if (this.chunkGraph.isModuleInChunk(module, chunk)) {\n        this.chunkGraph.disconnectChunkAndModule(chunk, module);\n        this.removeChunkFromDependencies(module, chunk);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {DependenciesBlock} block block tie for Chunk\n   * @param {Chunk} chunk chunk to remove from dep\n   * @returns {void}\n   */\n  removeChunkFromDependencies(block, chunk) {\n    /**\n     * @param {Dependency} d dependency to (maybe) patch up\n     */\n    const iteratorDependency = d => {\n      const depModule = this.moduleGraph.getModule(d);\n      if (!depModule) {\n        return;\n      }\n      this.patchChunksAfterReasonRemoval(depModule, chunk);\n    };\n    const blocks = block.blocks;\n    for (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n      const asyncBlock = blocks[indexBlock];\n      const chunkGroup = this.chunkGraph.getBlockChunkGroup(asyncBlock);\n      // Grab all chunks from the first Block's AsyncDepBlock\n      const chunks = chunkGroup.chunks;\n      // For each chunk in chunkGroup\n      for (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n        const iteratedChunk = chunks[indexChunk];\n        chunkGroup.removeChunk(iteratedChunk);\n        // Recurse\n        this.removeChunkFromDependencies(block, iteratedChunk);\n      }\n    }\n    if (block.dependencies) {\n      for (const dep of block.dependencies) iteratorDependency(dep);\n    }\n  }\n  assignRuntimeIds() {\n    const {\n      chunkGraph\n    } = this;\n    const processEntrypoint = ep => {\n      const runtime = ep.options.runtime || ep.name;\n      const chunk = ep.getRuntimeChunk();\n      chunkGraph.setRuntimeId(runtime, chunk.id);\n    };\n    for (const ep of this.entrypoints.values()) {\n      processEntrypoint(ep);\n    }\n    for (const ep of this.asyncEntrypoints) {\n      processEntrypoint(ep);\n    }\n  }\n  sortItemsWithChunkIds() {\n    for (const chunkGroup of this.chunkGroups) {\n      chunkGroup.sortItems();\n    }\n    this.errors.sort(compareErrors);\n    this.warnings.sort(compareErrors);\n    this.children.sort(byNameOrHash);\n  }\n  summarizeDependencies() {\n    for (let indexChildren = 0; indexChildren < this.children.length; indexChildren++) {\n      const child = this.children[indexChildren];\n      this.fileDependencies.addAll(child.fileDependencies);\n      this.contextDependencies.addAll(child.contextDependencies);\n      this.missingDependencies.addAll(child.missingDependencies);\n      this.buildDependencies.addAll(child.buildDependencies);\n    }\n    for (const module of this.modules) {\n      module.addCacheDependencies(this.fileDependencies, this.contextDependencies, this.missingDependencies, this.buildDependencies);\n    }\n  }\n  createModuleHashes() {\n    let statModulesHashed = 0;\n    let statModulesFromCache = 0;\n    const {\n      chunkGraph,\n      runtimeTemplate,\n      moduleMemCaches2\n    } = this;\n    const {\n      hashFunction,\n      hashDigest,\n      hashDigestLength\n    } = this.outputOptions;\n    const errors = [];\n    for (const module of this.modules) {\n      const memCache = moduleMemCaches2 && moduleMemCaches2.get(module);\n      for (const runtime of chunkGraph.getModuleRuntimes(module)) {\n        if (memCache) {\n          const digest = memCache.get(`moduleHash-${getRuntimeKey(runtime)}`);\n          if (digest !== undefined) {\n            chunkGraph.setModuleHashes(module, runtime, digest, digest.slice(0, hashDigestLength));\n            statModulesFromCache++;\n            continue;\n          }\n        }\n        statModulesHashed++;\n        const digest = this._createModuleHash(module, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength, errors);\n        if (memCache) {\n          memCache.set(`moduleHash-${getRuntimeKey(runtime)}`, digest);\n        }\n      }\n    }\n    if (errors.length > 0) {\n      errors.sort(compareSelect(err => err.module, compareModulesByIdentifier));\n      for (const error of errors) {\n        this.errors.push(error);\n      }\n    }\n    this.logger.log(`${statModulesHashed} modules hashed, ${statModulesFromCache} from cache (${Math.round(100 * (statModulesHashed + statModulesFromCache) / this.modules.size) / 100} variants per module in average)`);\n  }\n  _createModuleHash(module, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength, errors) {\n    let moduleHashDigest;\n    try {\n      const moduleHash = createHash(hashFunction);\n      module.updateHash(moduleHash, {\n        chunkGraph,\n        runtime,\n        runtimeTemplate\n      });\n      moduleHashDigest = /** @type {string} */moduleHash.digest(hashDigest);\n    } catch (err) {\n      errors.push(new ModuleHashingError(module, err));\n      moduleHashDigest = \"XXXXXX\";\n    }\n    chunkGraph.setModuleHashes(module, runtime, moduleHashDigest, moduleHashDigest.slice(0, hashDigestLength));\n    return moduleHashDigest;\n  }\n  createHash() {\n    this.logger.time(\"hashing: initialize hash\");\n    const chunkGraph = this.chunkGraph;\n    const runtimeTemplate = this.runtimeTemplate;\n    const outputOptions = this.outputOptions;\n    const hashFunction = outputOptions.hashFunction;\n    const hashDigest = outputOptions.hashDigest;\n    const hashDigestLength = outputOptions.hashDigestLength;\n    const hash = createHash(hashFunction);\n    if (outputOptions.hashSalt) {\n      hash.update(outputOptions.hashSalt);\n    }\n    this.logger.timeEnd(\"hashing: initialize hash\");\n    if (this.children.length > 0) {\n      this.logger.time(\"hashing: hash child compilations\");\n      for (const child of this.children) {\n        hash.update(child.hash);\n      }\n      this.logger.timeEnd(\"hashing: hash child compilations\");\n    }\n    if (this.warnings.length > 0) {\n      this.logger.time(\"hashing: hash warnings\");\n      for (const warning of this.warnings) {\n        hash.update(`${warning.message}`);\n      }\n      this.logger.timeEnd(\"hashing: hash warnings\");\n    }\n    if (this.errors.length > 0) {\n      this.logger.time(\"hashing: hash errors\");\n      for (const error of this.errors) {\n        hash.update(`${error.message}`);\n      }\n      this.logger.timeEnd(\"hashing: hash errors\");\n    }\n    this.logger.time(\"hashing: sort chunks\");\n    /*\n     * all non-runtime chunks need to be hashes first,\n     * since runtime chunk might use their hashes.\n     * runtime chunks need to be hashed in the correct order\n     * since they may depend on each other (for async entrypoints).\n     * So we put all non-runtime chunks first and hash them in any order.\n     * And order runtime chunks according to referenced between each other.\n     * Chunks need to be in deterministic order since we add hashes to full chunk\n     * during these hashing.\n     */\n    /** @type {Chunk[]} */\n    const unorderedRuntimeChunks = [];\n    /** @type {Chunk[]} */\n    const otherChunks = [];\n    for (const c of this.chunks) {\n      if (c.hasRuntime()) {\n        unorderedRuntimeChunks.push(c);\n      } else {\n        otherChunks.push(c);\n      }\n    }\n    unorderedRuntimeChunks.sort(byId);\n    otherChunks.sort(byId);\n\n    /** @typedef {{ chunk: Chunk, referencedBy: RuntimeChunkInfo[], remaining: number }} RuntimeChunkInfo */\n    /** @type {Map<Chunk, RuntimeChunkInfo>} */\n    const runtimeChunksMap = new Map();\n    for (const chunk of unorderedRuntimeChunks) {\n      runtimeChunksMap.set(chunk, {\n        chunk,\n        referencedBy: [],\n        remaining: 0\n      });\n    }\n    let remaining = 0;\n    for (const info of runtimeChunksMap.values()) {\n      for (const other of new Set(Array.from(info.chunk.getAllReferencedAsyncEntrypoints()).map(e => e.chunks[e.chunks.length - 1]))) {\n        const otherInfo = runtimeChunksMap.get(other);\n        otherInfo.referencedBy.push(info);\n        info.remaining++;\n        remaining++;\n      }\n    }\n    /** @type {Chunk[]} */\n    const runtimeChunks = [];\n    for (const info of runtimeChunksMap.values()) {\n      if (info.remaining === 0) {\n        runtimeChunks.push(info.chunk);\n      }\n    }\n    // If there are any references between chunks\n    // make sure to follow these chains\n    if (remaining > 0) {\n      const readyChunks = [];\n      for (const chunk of runtimeChunks) {\n        const hasFullHashModules = chunkGraph.getNumberOfChunkFullHashModules(chunk) !== 0;\n        const info = runtimeChunksMap.get(chunk);\n        for (const otherInfo of info.referencedBy) {\n          if (hasFullHashModules) {\n            chunkGraph.upgradeDependentToFullHashModules(otherInfo.chunk);\n          }\n          remaining--;\n          if (--otherInfo.remaining === 0) {\n            readyChunks.push(otherInfo.chunk);\n          }\n        }\n        if (readyChunks.length > 0) {\n          // This ensures deterministic ordering, since referencedBy is non-deterministic\n          readyChunks.sort(byId);\n          for (const c of readyChunks) runtimeChunks.push(c);\n          readyChunks.length = 0;\n        }\n      }\n    }\n    // If there are still remaining references we have cycles and want to create a warning\n    if (remaining > 0) {\n      let circularRuntimeChunkInfo = [];\n      for (const info of runtimeChunksMap.values()) {\n        if (info.remaining !== 0) {\n          circularRuntimeChunkInfo.push(info);\n        }\n      }\n      circularRuntimeChunkInfo.sort(compareSelect(i => i.chunk, byId));\n      const err = new WebpackError(`Circular dependency between chunks with runtime (${Array.from(circularRuntimeChunkInfo, c => c.chunk.name || c.chunk.id).join(\", \")})\nThis prevents using hashes of each other and should be avoided.`);\n      err.chunk = circularRuntimeChunkInfo[0].chunk;\n      this.warnings.push(err);\n      for (const i of circularRuntimeChunkInfo) runtimeChunks.push(i.chunk);\n    }\n    this.logger.timeEnd(\"hashing: sort chunks\");\n    const fullHashChunks = new Set();\n    /** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n    const codeGenerationJobs = [];\n    /** @type {Map<string, Map<Module, {module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}>>} */\n    const codeGenerationJobsMap = new Map();\n    const errors = [];\n    const processChunk = chunk => {\n      // Last minute module hash generation for modules that depend on chunk hashes\n      this.logger.time(\"hashing: hash runtime modules\");\n      const runtime = chunk.runtime;\n      for (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n        if (!chunkGraph.hasModuleHashes(module, runtime)) {\n          const hash = this._createModuleHash(module, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength, errors);\n          let hashMap = codeGenerationJobsMap.get(hash);\n          if (hashMap) {\n            const moduleJob = hashMap.get(module);\n            if (moduleJob) {\n              moduleJob.runtimes.push(runtime);\n              continue;\n            }\n          } else {\n            hashMap = new Map();\n            codeGenerationJobsMap.set(hash, hashMap);\n          }\n          const job = {\n            module,\n            hash,\n            runtime,\n            runtimes: [runtime]\n          };\n          hashMap.set(module, job);\n          codeGenerationJobs.push(job);\n        }\n      }\n      this.logger.timeAggregate(\"hashing: hash runtime modules\");\n      try {\n        this.logger.time(\"hashing: hash chunks\");\n        const chunkHash = createHash(hashFunction);\n        if (outputOptions.hashSalt) {\n          chunkHash.update(outputOptions.hashSalt);\n        }\n        chunk.updateHash(chunkHash, chunkGraph);\n        this.hooks.chunkHash.call(chunk, chunkHash, {\n          chunkGraph,\n          codeGenerationResults: this.codeGenerationResults,\n          moduleGraph: this.moduleGraph,\n          runtimeTemplate: this.runtimeTemplate\n        });\n        const chunkHashDigest = /** @type {string} */\n        chunkHash.digest(hashDigest);\n        hash.update(chunkHashDigest);\n        chunk.hash = chunkHashDigest;\n        chunk.renderedHash = chunk.hash.slice(0, hashDigestLength);\n        const fullHashModules = chunkGraph.getChunkFullHashModulesIterable(chunk);\n        if (fullHashModules) {\n          fullHashChunks.add(chunk);\n        } else {\n          this.hooks.contentHash.call(chunk);\n        }\n      } catch (err) {\n        this.errors.push(new ChunkRenderError(chunk, \"\", err));\n      }\n      this.logger.timeAggregate(\"hashing: hash chunks\");\n    };\n    otherChunks.forEach(processChunk);\n    for (const chunk of runtimeChunks) processChunk(chunk);\n    if (errors.length > 0) {\n      errors.sort(compareSelect(err => err.module, compareModulesByIdentifier));\n      for (const error of errors) {\n        this.errors.push(error);\n      }\n    }\n    this.logger.timeAggregateEnd(\"hashing: hash runtime modules\");\n    this.logger.timeAggregateEnd(\"hashing: hash chunks\");\n    this.logger.time(\"hashing: hash digest\");\n    this.hooks.fullHash.call(hash);\n    this.fullHash = /** @type {string} */hash.digest(hashDigest);\n    this.hash = this.fullHash.slice(0, hashDigestLength);\n    this.logger.timeEnd(\"hashing: hash digest\");\n    this.logger.time(\"hashing: process full hash modules\");\n    for (const chunk of fullHashChunks) {\n      for (const module of chunkGraph.getChunkFullHashModulesIterable(chunk)) {\n        const moduleHash = createHash(hashFunction);\n        module.updateHash(moduleHash, {\n          chunkGraph,\n          runtime: chunk.runtime,\n          runtimeTemplate\n        });\n        const moduleHashDigest = /** @type {string} */\n        moduleHash.digest(hashDigest);\n        const oldHash = chunkGraph.getModuleHash(module, chunk.runtime);\n        chunkGraph.setModuleHashes(module, chunk.runtime, moduleHashDigest, moduleHashDigest.slice(0, hashDigestLength));\n        codeGenerationJobsMap.get(oldHash).get(module).hash = moduleHashDigest;\n      }\n      const chunkHash = createHash(hashFunction);\n      chunkHash.update(chunk.hash);\n      chunkHash.update(this.hash);\n      const chunkHashDigest = /** @type {string} */\n      chunkHash.digest(hashDigest);\n      chunk.hash = chunkHashDigest;\n      chunk.renderedHash = chunk.hash.slice(0, hashDigestLength);\n      this.hooks.contentHash.call(chunk);\n    }\n    this.logger.timeEnd(\"hashing: process full hash modules\");\n    return codeGenerationJobs;\n  }\n\n  /**\n   * @param {string} file file name\n   * @param {Source} source asset source\n   * @param {AssetInfo} assetInfo extra asset information\n   * @returns {void}\n   */\n  emitAsset(file, source) {\n    let assetInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (this.assets[file]) {\n      if (!isSourceEqual(this.assets[file], source)) {\n        this.errors.push(new WebpackError(`Conflict: Multiple assets emit different content to the same filename ${file}${assetInfo.sourceFilename ? `. Original source ${assetInfo.sourceFilename}` : \"\"}`));\n        this.assets[file] = source;\n        this._setAssetInfo(file, assetInfo);\n        return;\n      }\n      const oldInfo = this.assetsInfo.get(file);\n      const newInfo = Object.assign({}, oldInfo, assetInfo);\n      this._setAssetInfo(file, newInfo, oldInfo);\n      return;\n    }\n    this.assets[file] = source;\n    this._setAssetInfo(file, assetInfo, undefined);\n  }\n  _setAssetInfo(file, newInfo) {\n    let oldInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.assetsInfo.get(file);\n    if (newInfo === undefined) {\n      this.assetsInfo.delete(file);\n    } else {\n      this.assetsInfo.set(file, newInfo);\n    }\n    const oldRelated = oldInfo && oldInfo.related;\n    const newRelated = newInfo && newInfo.related;\n    if (oldRelated) {\n      for (const key of Object.keys(oldRelated)) {\n        const remove = name => {\n          const relatedIn = this._assetsRelatedIn.get(name);\n          if (relatedIn === undefined) return;\n          const entry = relatedIn.get(key);\n          if (entry === undefined) return;\n          entry.delete(file);\n          if (entry.size !== 0) return;\n          relatedIn.delete(key);\n          if (relatedIn.size === 0) this._assetsRelatedIn.delete(name);\n        };\n        const entry = oldRelated[key];\n        if (Array.isArray(entry)) {\n          entry.forEach(remove);\n        } else if (entry) {\n          remove(entry);\n        }\n      }\n    }\n    if (newRelated) {\n      for (const key of Object.keys(newRelated)) {\n        const add = name => {\n          let relatedIn = this._assetsRelatedIn.get(name);\n          if (relatedIn === undefined) {\n            this._assetsRelatedIn.set(name, relatedIn = new Map());\n          }\n          let entry = relatedIn.get(key);\n          if (entry === undefined) {\n            relatedIn.set(key, entry = new Set());\n          }\n          entry.add(file);\n        };\n        const entry = newRelated[key];\n        if (Array.isArray(entry)) {\n          entry.forEach(add);\n        } else if (entry) {\n          add(entry);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} file file name\n   * @param {Source | function(Source): Source} newSourceOrFunction new asset source or function converting old to new\n   * @param {AssetInfo | function(AssetInfo | undefined): AssetInfo} assetInfoUpdateOrFunction new asset info or function converting old to new\n   */\n  updateAsset(file, newSourceOrFunction) {\n    let assetInfoUpdateOrFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    if (!this.assets[file]) {\n      throw new Error(`Called Compilation.updateAsset for not existing filename ${file}`);\n    }\n    if (typeof newSourceOrFunction === \"function\") {\n      this.assets[file] = newSourceOrFunction(this.assets[file]);\n    } else {\n      this.assets[file] = newSourceOrFunction;\n    }\n    if (assetInfoUpdateOrFunction !== undefined) {\n      const oldInfo = this.assetsInfo.get(file) || EMPTY_ASSET_INFO;\n      if (typeof assetInfoUpdateOrFunction === \"function\") {\n        this._setAssetInfo(file, assetInfoUpdateOrFunction(oldInfo), oldInfo);\n      } else {\n        this._setAssetInfo(file, cachedCleverMerge(oldInfo, assetInfoUpdateOrFunction), oldInfo);\n      }\n    }\n  }\n  renameAsset(file, newFile) {\n    const source = this.assets[file];\n    if (!source) {\n      throw new Error(`Called Compilation.renameAsset for not existing filename ${file}`);\n    }\n    if (this.assets[newFile]) {\n      if (!isSourceEqual(this.assets[file], source)) {\n        this.errors.push(new WebpackError(`Conflict: Called Compilation.renameAsset for already existing filename ${newFile} with different content`));\n      }\n    }\n    const assetInfo = this.assetsInfo.get(file);\n    // Update related in all other assets\n    const relatedInInfo = this._assetsRelatedIn.get(file);\n    if (relatedInInfo) {\n      for (const [key, assets] of relatedInInfo) {\n        for (const name of assets) {\n          const info = this.assetsInfo.get(name);\n          if (!info) continue;\n          const related = info.related;\n          if (!related) continue;\n          const entry = related[key];\n          let newEntry;\n          if (Array.isArray(entry)) {\n            newEntry = entry.map(x => x === file ? newFile : x);\n          } else if (entry === file) {\n            newEntry = newFile;\n          } else continue;\n          this.assetsInfo.set(name, {\n            ...info,\n            related: {\n              ...related,\n              [key]: newEntry\n            }\n          });\n        }\n      }\n    }\n    this._setAssetInfo(file, undefined, assetInfo);\n    this._setAssetInfo(newFile, assetInfo);\n    delete this.assets[file];\n    this.assets[newFile] = source;\n    for (const chunk of this.chunks) {\n      {\n        const size = chunk.files.size;\n        chunk.files.delete(file);\n        if (size !== chunk.files.size) {\n          chunk.files.add(newFile);\n        }\n      }\n      {\n        const size = chunk.auxiliaryFiles.size;\n        chunk.auxiliaryFiles.delete(file);\n        if (size !== chunk.auxiliaryFiles.size) {\n          chunk.auxiliaryFiles.add(newFile);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} file file name\n   */\n  deleteAsset(file) {\n    if (!this.assets[file]) {\n      return;\n    }\n    delete this.assets[file];\n    const assetInfo = this.assetsInfo.get(file);\n    this._setAssetInfo(file, undefined, assetInfo);\n    const related = assetInfo && assetInfo.related;\n    if (related) {\n      for (const key of Object.keys(related)) {\n        const checkUsedAndDelete = file => {\n          if (!this._assetsRelatedIn.has(file)) {\n            this.deleteAsset(file);\n          }\n        };\n        const items = related[key];\n        if (Array.isArray(items)) {\n          items.forEach(checkUsedAndDelete);\n        } else if (items) {\n          checkUsedAndDelete(items);\n        }\n      }\n    }\n    // TODO If this becomes a performance problem\n    // store a reverse mapping from asset to chunk\n    for (const chunk of this.chunks) {\n      chunk.files.delete(file);\n      chunk.auxiliaryFiles.delete(file);\n    }\n  }\n  getAssets() {\n    /** @type {Readonly<Asset>[]} */\n    const array = [];\n    for (const assetName of Object.keys(this.assets)) {\n      if (Object.prototype.hasOwnProperty.call(this.assets, assetName)) {\n        array.push({\n          name: assetName,\n          source: this.assets[assetName],\n          info: this.assetsInfo.get(assetName) || EMPTY_ASSET_INFO\n        });\n      }\n    }\n    return array;\n  }\n\n  /**\n   * @param {string} name the name of the asset\n   * @returns {Readonly<Asset> | undefined} the asset or undefined when not found\n   */\n  getAsset(name) {\n    if (!Object.prototype.hasOwnProperty.call(this.assets, name)) return undefined;\n    return {\n      name,\n      source: this.assets[name],\n      info: this.assetsInfo.get(name) || EMPTY_ASSET_INFO\n    };\n  }\n  clearAssets() {\n    for (const chunk of this.chunks) {\n      chunk.files.clear();\n      chunk.auxiliaryFiles.clear();\n    }\n  }\n  createModuleAssets() {\n    const {\n      chunkGraph\n    } = this;\n    for (const module of this.modules) {\n      if (module.buildInfo.assets) {\n        const assetsInfo = module.buildInfo.assetsInfo;\n        for (const assetName of Object.keys(module.buildInfo.assets)) {\n          const fileName = this.getPath(assetName, {\n            chunkGraph: this.chunkGraph,\n            module\n          });\n          for (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n            chunk.auxiliaryFiles.add(fileName);\n          }\n          this.emitAsset(fileName, module.buildInfo.assets[assetName], assetsInfo ? assetsInfo.get(assetName) : undefined);\n          this.hooks.moduleAsset.call(module, fileName);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {RenderManifestOptions} options options object\n   * @returns {RenderManifestEntry[]} manifest entries\n   */\n  getRenderManifest(options) {\n    return this.hooks.renderManifest.call([], options);\n  }\n\n  /**\n   * @param {Callback} callback signals when the call finishes\n   * @returns {void}\n   */\n  createChunkAssets(callback) {\n    const outputOptions = this.outputOptions;\n    const cachedSourceMap = new WeakMap();\n    /** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n    const alreadyWrittenFiles = new Map();\n    asyncLib.forEachLimit(this.chunks, 15, (chunk, callback) => {\n      /** @type {RenderManifestEntry[]} */\n      let manifest;\n      try {\n        manifest = this.getRenderManifest({\n          chunk,\n          hash: this.hash,\n          fullHash: this.fullHash,\n          outputOptions,\n          codeGenerationResults: this.codeGenerationResults,\n          moduleTemplates: this.moduleTemplates,\n          dependencyTemplates: this.dependencyTemplates,\n          chunkGraph: this.chunkGraph,\n          moduleGraph: this.moduleGraph,\n          runtimeTemplate: this.runtimeTemplate\n        });\n      } catch (err) {\n        this.errors.push(new ChunkRenderError(chunk, \"\", err));\n        return callback();\n      }\n      asyncLib.forEach(manifest, (fileManifest, callback) => {\n        const ident = fileManifest.identifier;\n        const usedHash = fileManifest.hash;\n        const assetCacheItem = this._assetsCache.getItemCache(ident, usedHash);\n        assetCacheItem.get((err, sourceFromCache) => {\n          /** @type {string | function(PathData, AssetInfo=): string} */\n          let filenameTemplate;\n          /** @type {string} */\n          let file;\n          /** @type {AssetInfo} */\n          let assetInfo;\n          let inTry = true;\n          const errorAndCallback = err => {\n            const filename = file || (typeof file === \"string\" ? file : typeof filenameTemplate === \"string\" ? filenameTemplate : \"\");\n            this.errors.push(new ChunkRenderError(chunk, filename, err));\n            inTry = false;\n            return callback();\n          };\n          try {\n            if (\"filename\" in fileManifest) {\n              file = fileManifest.filename;\n              assetInfo = fileManifest.info;\n            } else {\n              filenameTemplate = fileManifest.filenameTemplate;\n              const pathAndInfo = this.getPathWithInfo(filenameTemplate, fileManifest.pathOptions);\n              file = pathAndInfo.path;\n              assetInfo = fileManifest.info ? {\n                ...pathAndInfo.info,\n                ...fileManifest.info\n              } : pathAndInfo.info;\n            }\n            if (err) {\n              return errorAndCallback(err);\n            }\n            let source = sourceFromCache;\n\n            // check if the same filename was already written by another chunk\n            const alreadyWritten = alreadyWrittenFiles.get(file);\n            if (alreadyWritten !== undefined) {\n              if (alreadyWritten.hash !== usedHash) {\n                inTry = false;\n                return callback(new WebpackError(`Conflict: Multiple chunks emit assets to the same filename ${file}` + ` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`));\n              } else {\n                source = alreadyWritten.source;\n              }\n            } else if (!source) {\n              // render the asset\n              source = fileManifest.render();\n\n              // Ensure that source is a cached source to avoid additional cost because of repeated access\n              if (!(source instanceof CachedSource)) {\n                const cacheEntry = cachedSourceMap.get(source);\n                if (cacheEntry) {\n                  source = cacheEntry;\n                } else {\n                  const cachedSource = new CachedSource(source);\n                  cachedSourceMap.set(source, cachedSource);\n                  source = cachedSource;\n                }\n              }\n            }\n            this.emitAsset(file, source, assetInfo);\n            if (fileManifest.auxiliary) {\n              chunk.auxiliaryFiles.add(file);\n            } else {\n              chunk.files.add(file);\n            }\n            this.hooks.chunkAsset.call(chunk, file);\n            alreadyWrittenFiles.set(file, {\n              hash: usedHash,\n              source,\n              chunk\n            });\n            if (source !== sourceFromCache) {\n              assetCacheItem.store(source, err => {\n                if (err) return errorAndCallback(err);\n                inTry = false;\n                return callback();\n              });\n            } else {\n              inTry = false;\n              callback();\n            }\n          } catch (err) {\n            if (!inTry) throw err;\n            errorAndCallback(err);\n          }\n        });\n      }, callback);\n    }, callback);\n  }\n\n  /**\n   * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n   * @param {PathData} data context data\n   * @returns {string} interpolated path\n   */\n  getPath(filename) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!data.hash) {\n      data = {\n        hash: this.hash,\n        ...data\n      };\n    }\n    return this.getAssetPath(filename, data);\n  }\n\n  /**\n   * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n   * @param {PathData} data context data\n   * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n   */\n  getPathWithInfo(filename) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!data.hash) {\n      data = {\n        hash: this.hash,\n        ...data\n      };\n    }\n    return this.getAssetPathWithInfo(filename, data);\n  }\n\n  /**\n   * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n   * @param {PathData} data context data\n   * @returns {string} interpolated path\n   */\n  getAssetPath(filename, data) {\n    return this.hooks.assetPath.call(typeof filename === \"function\" ? filename(data) : filename, data, undefined);\n  }\n\n  /**\n   * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n   * @param {PathData} data context data\n   * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n   */\n  getAssetPathWithInfo(filename, data) {\n    const assetInfo = {};\n    // TODO webpack 5: refactor assetPath hook to receive { path, info } object\n    const newPath = this.hooks.assetPath.call(typeof filename === \"function\" ? filename(data, assetInfo) : filename, data, assetInfo);\n    return {\n      path: newPath,\n      info: assetInfo\n    };\n  }\n  getWarnings() {\n    return this.hooks.processWarnings.call(this.warnings);\n  }\n  getErrors() {\n    return this.hooks.processErrors.call(this.errors);\n  }\n\n  /**\n   * This function allows you to run another instance of webpack inside of webpack however as\n   * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n   * from parent (or top level compiler) and creates a child Compilation\n   *\n   * @param {string} name name of the child compiler\n   * @param {OutputOptions=} outputOptions // Need to convert config schema to types for this\n   * @param {Array<WebpackPluginInstance | WebpackPluginFunction>=} plugins webpack plugins that will be applied\n   * @returns {Compiler} creates a child Compiler instance\n   */\n  createChildCompiler(name, outputOptions, plugins) {\n    const idx = this.childrenCounters[name] || 0;\n    this.childrenCounters[name] = idx + 1;\n    return this.compiler.createChildCompiler(this, name, idx, outputOptions, plugins);\n  }\n\n  /**\n   * @param {Module} module the module\n   * @param {ExecuteModuleOptions} options options\n   * @param {ExecuteModuleCallback} callback callback\n   */\n  executeModule(module, options, callback) {\n    // Aggregate all referenced modules and ensure they are ready\n    const modules = new Set([module]);\n    processAsyncTree(modules, 10,\n    /**\n     * @param {Module} module the module\n     * @param {function(Module): void} push push more jobs\n     * @param {Callback} callback callback\n     * @returns {void}\n     */\n    (module, push, callback) => {\n      this.buildQueue.waitFor(module, err => {\n        if (err) return callback(err);\n        this.processDependenciesQueue.waitFor(module, err => {\n          if (err) return callback(err);\n          for (const {\n            module: m\n          } of this.moduleGraph.getOutgoingConnections(module)) {\n            const size = modules.size;\n            modules.add(m);\n            if (modules.size !== size) push(m);\n          }\n          callback();\n        });\n      });\n    }, err => {\n      if (err) return callback(err);\n\n      // Create new chunk graph, chunk and entrypoint for the build time execution\n      const chunkGraph = new ChunkGraph(this.moduleGraph, this.outputOptions.hashFunction);\n      const runtime = \"build time\";\n      const {\n        hashFunction,\n        hashDigest,\n        hashDigestLength\n      } = this.outputOptions;\n      const runtimeTemplate = this.runtimeTemplate;\n      const chunk = new Chunk(\"build time chunk\", this._backCompat);\n      chunk.id = chunk.name;\n      chunk.ids = [chunk.id];\n      chunk.runtime = runtime;\n      const entrypoint = new Entrypoint({\n        runtime,\n        chunkLoading: false,\n        ...options.entryOptions\n      });\n      chunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n      connectChunkGroupAndChunk(entrypoint, chunk);\n      entrypoint.setRuntimeChunk(chunk);\n      entrypoint.setEntrypointChunk(chunk);\n      const chunks = new Set([chunk]);\n\n      // Assign ids to modules and modules to the chunk\n      for (const module of modules) {\n        const id = module.identifier();\n        chunkGraph.setModuleId(module, id);\n        chunkGraph.connectChunkAndModule(chunk, module);\n      }\n\n      /** @type {WebpackError[]} */\n      const errors = [];\n\n      // Hash modules\n      for (const module of modules) {\n        this._createModuleHash(module, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength, errors);\n      }\n      const codeGenerationResults = new CodeGenerationResults(this.outputOptions.hashFunction);\n      /**\n       * @param {Module} module the module\n       * @param {Callback} callback callback\n       * @returns {void}\n       */\n      const codeGen = (module, callback) => {\n        this._codeGenerationModule(module, runtime, [runtime], chunkGraph.getModuleHash(module, runtime), this.dependencyTemplates, chunkGraph, this.moduleGraph, runtimeTemplate, errors, codeGenerationResults, (err, codeGenerated) => {\n          callback(err);\n        });\n      };\n      const reportErrors = () => {\n        if (errors.length > 0) {\n          errors.sort(compareSelect(err => err.module, compareModulesByIdentifier));\n          for (const error of errors) {\n            this.errors.push(error);\n          }\n          errors.length = 0;\n        }\n      };\n\n      // Generate code for all aggregated modules\n      asyncLib.eachLimit(modules, 10, codeGen, err => {\n        if (err) return callback(err);\n        reportErrors();\n\n        // for backward-compat temporary set the chunk graph\n        // TODO webpack 6\n        const old = this.chunkGraph;\n        this.chunkGraph = chunkGraph;\n        this.processRuntimeRequirements({\n          chunkGraph,\n          modules,\n          chunks,\n          codeGenerationResults,\n          chunkGraphEntries: chunks\n        });\n        this.chunkGraph = old;\n        const runtimeModules = chunkGraph.getChunkRuntimeModulesIterable(chunk);\n\n        // Hash runtime modules\n        for (const module of runtimeModules) {\n          modules.add(module);\n          this._createModuleHash(module, chunkGraph, runtime, hashFunction, runtimeTemplate, hashDigest, hashDigestLength);\n        }\n\n        // Generate code for all runtime modules\n        asyncLib.eachLimit(runtimeModules, 10, codeGen, err => {\n          if (err) return callback(err);\n          reportErrors();\n\n          /** @type {Map<Module, ExecuteModuleArgument>} */\n          const moduleArgumentsMap = new Map();\n          /** @type {Map<string, ExecuteModuleArgument>} */\n          const moduleArgumentsById = new Map();\n\n          /** @type {ExecuteModuleResult[\"fileDependencies\"]} */\n          const fileDependencies = new LazySet();\n          /** @type {ExecuteModuleResult[\"contextDependencies\"]} */\n          const contextDependencies = new LazySet();\n          /** @type {ExecuteModuleResult[\"missingDependencies\"]} */\n          const missingDependencies = new LazySet();\n          /** @type {ExecuteModuleResult[\"buildDependencies\"]} */\n          const buildDependencies = new LazySet();\n\n          /** @type {ExecuteModuleResult[\"assets\"]} */\n          const assets = new Map();\n          let cacheable = true;\n\n          /** @type {ExecuteModuleContext} */\n          const context = {\n            assets,\n            __webpack_require__: undefined,\n            chunk,\n            chunkGraph\n          };\n\n          // Prepare execution\n          asyncLib.eachLimit(modules, 10, (module, callback) => {\n            const codeGenerationResult = codeGenerationResults.get(module, runtime);\n            /** @type {ExecuteModuleArgument} */\n            const moduleArgument = {\n              module,\n              codeGenerationResult,\n              preparedInfo: undefined,\n              moduleObject: undefined\n            };\n            moduleArgumentsMap.set(module, moduleArgument);\n            moduleArgumentsById.set(module.identifier(), moduleArgument);\n            module.addCacheDependencies(fileDependencies, contextDependencies, missingDependencies, buildDependencies);\n            if (module.buildInfo.cacheable === false) {\n              cacheable = false;\n            }\n            if (module.buildInfo && module.buildInfo.assets) {\n              const {\n                assets: moduleAssets,\n                assetsInfo\n              } = module.buildInfo;\n              for (const assetName of Object.keys(moduleAssets)) {\n                assets.set(assetName, {\n                  source: moduleAssets[assetName],\n                  info: assetsInfo ? assetsInfo.get(assetName) : undefined\n                });\n              }\n            }\n            this.hooks.prepareModuleExecution.callAsync(moduleArgument, context, callback);\n          }, err => {\n            if (err) return callback(err);\n            let exports;\n            try {\n              const {\n                strictModuleErrorHandling,\n                strictModuleExceptionHandling\n              } = this.outputOptions;\n              const __webpack_require__ = id => {\n                const cached = moduleCache[id];\n                if (cached !== undefined) {\n                  if (cached.error) throw cached.error;\n                  return cached.exports;\n                }\n                const moduleArgument = moduleArgumentsById.get(id);\n                return __webpack_require_module__(moduleArgument, id);\n              };\n              const interceptModuleExecution = __webpack_require__[RuntimeGlobals.interceptModuleExecution.replace(`${RuntimeGlobals.require}.`, \"\")] = [];\n              const moduleCache = __webpack_require__[RuntimeGlobals.moduleCache.replace(`${RuntimeGlobals.require}.`, \"\")] = {};\n              context.__webpack_require__ = __webpack_require__;\n\n              /**\n               * @param {ExecuteModuleArgument} moduleArgument the module argument\n               * @param {string=} id id\n               * @returns {any} exports\n               */\n              const __webpack_require_module__ = (moduleArgument, id) => {\n                var execOptions = {\n                  id,\n                  module: {\n                    id,\n                    exports: {},\n                    loaded: false,\n                    error: undefined\n                  },\n                  require: __webpack_require__\n                };\n                interceptModuleExecution.forEach(handler => handler(execOptions));\n                const module = moduleArgument.module;\n                this.buildTimeExecutedModules.add(module);\n                const moduleObject = execOptions.module;\n                moduleArgument.moduleObject = moduleObject;\n                try {\n                  if (id) moduleCache[id] = moduleObject;\n                  tryRunOrWebpackError(() => this.hooks.executeModule.call(moduleArgument, context), \"Compilation.hooks.executeModule\");\n                  moduleObject.loaded = true;\n                  return moduleObject.exports;\n                } catch (e) {\n                  if (strictModuleExceptionHandling) {\n                    if (id) delete moduleCache[id];\n                  } else if (strictModuleErrorHandling) {\n                    moduleObject.error = e;\n                  }\n                  if (!e.module) e.module = module;\n                  throw e;\n                }\n              };\n              for (const runtimeModule of chunkGraph.getChunkRuntimeModulesInOrder(chunk)) {\n                __webpack_require_module__(moduleArgumentsMap.get(runtimeModule));\n              }\n              exports = __webpack_require__(module.identifier());\n            } catch (e) {\n              const err = new WebpackError(`Execution of module code from module graph (${module.readableIdentifier(this.requestShortener)}) failed: ${e.message}`);\n              err.stack = e.stack;\n              err.module = e.module;\n              return callback(err);\n            }\n            callback(null, {\n              exports,\n              assets,\n              cacheable,\n              fileDependencies,\n              contextDependencies,\n              missingDependencies,\n              buildDependencies\n            });\n          });\n        });\n      });\n    });\n  }\n  checkConstraints() {\n    const chunkGraph = this.chunkGraph;\n\n    /** @type {Set<number|string>} */\n    const usedIds = new Set();\n    for (const module of this.modules) {\n      if (module.type === WEBPACK_MODULE_TYPE_RUNTIME) continue;\n      const moduleId = chunkGraph.getModuleId(module);\n      if (moduleId === null) continue;\n      if (usedIds.has(moduleId)) {\n        throw new Error(`checkConstraints: duplicate module id ${moduleId}`);\n      }\n      usedIds.add(moduleId);\n    }\n    for (const chunk of this.chunks) {\n      for (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n        if (!this.modules.has(module)) {\n          throw new Error(\"checkConstraints: module in chunk but not in compilation \" + ` ${chunk.debugId} ${module.debugId}`);\n        }\n      }\n      for (const module of chunkGraph.getChunkEntryModulesIterable(chunk)) {\n        if (!this.modules.has(module)) {\n          throw new Error(\"checkConstraints: entry module in chunk but not in compilation \" + ` ${chunk.debugId} ${module.debugId}`);\n        }\n      }\n    }\n    for (const chunkGroup of this.chunkGroups) {\n      chunkGroup.checkConstraints();\n    }\n  }\n}\n\n/**\n * @typedef {Object} FactorizeModuleOptions\n * @property {ModuleProfile} currentProfile\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n * @property {boolean=} factoryResult return full ModuleFactoryResult instead of only module\n * @property {Module | null} originModule\n * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n * @property {string=} context\n */\n\n/**\n * @param {FactorizeModuleOptions} options options object\n * @param {ModuleCallback | ModuleFactoryResultCallback} callback callback\n * @returns {void}\n */\n\n// Workaround for typescript as it doesn't support function overloading in jsdoc within a class\nCompilation.prototype.factorizeModule =\n/** @type {{\n(options: FactorizeModuleOptions & { factoryResult?: false }, callback: ModuleCallback): void;\n(options: FactorizeModuleOptions & { factoryResult: true }, callback: ModuleFactoryResultCallback): void;\n}} */\nfunction (options, callback) {\n  this.factorizeQueue.add(options, callback);\n};\n\n// Hide from typescript\nconst compilationPrototype = Compilation.prototype;\n\n// TODO webpack 6 remove\nObject.defineProperty(compilationPrototype, \"modifyHash\", {\n  writable: false,\n  enumerable: false,\n  configurable: false,\n  value: () => {\n    throw new Error(\"Compilation.modifyHash was removed in favor of Compilation.hooks.fullHash\");\n  }\n});\n\n// TODO webpack 6 remove\nObject.defineProperty(compilationPrototype, \"cache\", {\n  enumerable: false,\n  configurable: false,\n  get: util.deprecate(\n  /**\n   * @this {Compilation} the compilation\n   * @returns {Cache} the cache\n   */\n  function () {\n    return this.compiler.cache;\n  }, \"Compilation.cache was removed in favor of Compilation.getCache()\", \"DEP_WEBPACK_COMPILATION_CACHE\"),\n  set: util.deprecate(v => {}, \"Compilation.cache was removed in favor of Compilation.getCache()\", \"DEP_WEBPACK_COMPILATION_CACHE\")\n});\n\n/**\n * Add additional assets to the compilation.\n */\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL = -2000;\n\n/**\n * Basic preprocessing of assets.\n */\nCompilation.PROCESS_ASSETS_STAGE_PRE_PROCESS = -1000;\n\n/**\n * Derive new assets from existing assets.\n * Existing assets should not be treated as complete.\n */\nCompilation.PROCESS_ASSETS_STAGE_DERIVED = -200;\n\n/**\n * Add additional sections to existing assets, like a banner or initialization code.\n */\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONS = -100;\n\n/**\n * Optimize existing assets in a general way.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE = 100;\n\n/**\n * Optimize the count of existing assets, e. g. by merging them.\n * Only assets of the same type should be merged.\n * For assets of different types see PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT = 200;\n\n/**\n * Optimize the compatibility of existing assets, e. g. add polyfills or vendor-prefixes.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY = 300;\n\n/**\n * Optimize the size of existing assets, e. g. by minimizing or omitting whitespace.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE = 400;\n\n/**\n * Add development tooling to assets, e. g. by extracting a SourceMap.\n */\nCompilation.PROCESS_ASSETS_STAGE_DEV_TOOLING = 500;\n\n/**\n * Optimize the count of existing assets, e. g. by inlining assets of into other assets.\n * Only assets of different types should be inlined.\n * For assets of the same type see PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE = 700;\n\n/**\n * Summarize the list of existing assets\n * e. g. creating an assets manifest of Service Workers.\n */\nCompilation.PROCESS_ASSETS_STAGE_SUMMARIZE = 1000;\n\n/**\n * Optimize the hashes of the assets, e. g. by generating real hashes of the asset content.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_HASH = 2500;\n\n/**\n * Optimize the transfer of existing assets, e. g. by preparing a compressed (gzip) file as separate asset.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER = 3000;\n\n/**\n * Analyse existing assets.\n */\nCompilation.PROCESS_ASSETS_STAGE_ANALYSE = 4000;\n\n/**\n * Creating assets for reporting purposes.\n */\nCompilation.PROCESS_ASSETS_STAGE_REPORT = 5000;\nmodule.exports = Compilation;","map":{"version":3,"names":["asyncLib","require","HookMap","SyncHook","SyncBailHook","SyncWaterfallHook","AsyncSeriesHook","AsyncSeriesBailHook","AsyncParallelHook","util","CachedSource","MultiItemCache","Chunk","ChunkGraph","ChunkGroup","ChunkRenderError","ChunkTemplate","CodeGenerationError","CodeGenerationResults","Dependency","DependencyTemplates","Entrypoint","ErrorHelpers","FileSystemInfo","connectChunkGroupAndChunk","connectChunkGroupParentAndChild","makeWebpackError","tryRunOrWebpackError","MainTemplate","Module","ModuleDependencyError","ModuleDependencyWarning","ModuleGraph","ModuleHashingError","ModuleNotFoundError","ModuleProfile","ModuleRestoreError","ModuleStoreError","ModuleTemplate","WEBPACK_MODULE_TYPE_RUNTIME","RuntimeGlobals","RuntimeTemplate","Stats","WebpackError","buildChunkGraph","BuildCycleError","Logger","LogType","StatsFactory","StatsPrinter","equals","arrayEquals","AsyncQueue","LazySet","getOrInsert","WeakTupleMap","cachedCleverMerge","compareLocations","concatComparators","compareSelect","compareIds","compareStringsNumeric","compareModulesByIdentifier","createHash","arrayToSetDeprecation","soonFrozenObjectDeprecation","createFakeHook","processAsyncTree","getRuntimeKey","isSourceEqual","EMPTY_ASSET_INFO","Object","freeze","esmDependencyCategory","deprecatedNormalModuleLoaderHook","deprecate","compilation","getCompilationHooks","loader","defineRemovedModuleTemplates","moduleTemplates","defineProperties","asset","enumerable","configurable","get","webassembly","undefined","byId","c","id","byNameOrHash","name","fullHash","byMessage","err","message","byModule","module","identifier","byLocation","loc","compareErrors","unsafeCacheDependencies","WeakMap","unsafeCacheData","Compilation","constructor","compiler","params","_backCompat","getNormalModuleLoader","processAssetsHook","savedAssets","Set","popNewAssets","assets","newAssets","file","keys","has","create","add","intercept","call","register","tap","type","fn","additionalAssets","remainingTap","additionalAssetsFn","processedAssets","WeakSet","hooks","processAdditionalAssets","callback","e","callAsync","tapAsync","tapPromise","Promise","resolve","p","then","promise","afterProcessAssetsHook","createProcessAssetsHook","stage","getArgs","code","errorMessage","reason","getOptions","options","Error","interceptor","buildModule","rebuildModule","failedModule","succeedModule","stillValidModule","addEntry","failedEntry","succeedEntry","dependencyReferencedExports","executeModule","prepareModuleExecution","finishModules","finishRebuildingModule","unseal","seal","beforeChunks","afterChunks","optimizeDependencies","afterOptimizeDependencies","optimize","optimizeModules","afterOptimizeModules","optimizeChunks","afterOptimizeChunks","optimizeTree","afterOptimizeTree","optimizeChunkModules","afterOptimizeChunkModules","shouldRecord","additionalChunkRuntimeRequirements","runtimeRequirementInChunk","additionalModuleRuntimeRequirements","runtimeRequirementInModule","additionalTreeRuntimeRequirements","runtimeRequirementInTree","runtimeModule","reviveModules","beforeModuleIds","moduleIds","optimizeModuleIds","afterOptimizeModuleIds","reviveChunks","beforeChunkIds","chunkIds","optimizeChunkIds","afterOptimizeChunkIds","recordModules","recordChunks","optimizeCodeGeneration","beforeModuleHash","afterModuleHash","beforeCodeGeneration","afterCodeGeneration","beforeRuntimeRequirements","afterRuntimeRequirements","beforeHash","contentHash","afterHash","recordHash","record","beforeModuleAssets","shouldGenerateChunkAssets","beforeChunkAssets","additionalChunkAssets","PROCESS_ASSETS_STAGE_ADDITIONAL","chunks","optimizeChunkAssets","PROCESS_ASSETS_STAGE_OPTIMIZE","afterOptimizeChunkAssets","optimizeAssets","afterOptimizeAssets","processAssets","afterProcessAssets","needAdditionalSeal","afterSeal","renderManifest","chunkHash","moduleAsset","chunkAsset","assetPath","needAdditionalPass","childCompiler","log","processWarnings","processErrors","statsPreset","statsNormalize","statsFactory","statsPrinter","normalModuleLoader","startTime","endTime","resolverFactory","inputFileSystem","fileSystemInfo","managedPaths","immutablePaths","logger","getLogger","hashFunction","output","fileTimestamps","addFileTimestamps","contextTimestamps","addContextTimestamps","valueCacheVersions","Map","requestShortener","compilerPath","outputOptions","bail","profile","mainTemplate","chunkTemplate","runtimeTemplate","javascript","moduleMemCaches","moduleMemCaches2","moduleGraph","chunkGraph","codeGenerationResults","processDependenciesQueue","parallelism","processor","_processModuleDependencies","bind","addModuleQueue","parent","getKey","_addModule","factorizeQueue","_factorizeModule","buildQueue","_buildModule","rebuildQueue","_rebuildModule","creatingModuleDuringBuild","entries","globalEntry","dependencies","includeDependencies","entrypoints","asyncEntrypoints","chunkGroups","namedChunkGroups","namedChunks","modules","_modules","records","assetsInfo","_assetsRelatedIn","errors","warnings","children","logging","dependencyFactories","dependencyTemplates","childrenCounters","usedChunkIds","usedModuleIds","_restoredUnsafeCacheModuleEntries","_restoredUnsafeCacheEntries","builtModules","codeGeneratedModules","buildTimeExecutedModules","_rebuildingModules","emittedAssets","comparedForEmitAssets","fileDependencies","contextDependencies","missingDependencies","buildDependencies","compilationDependencies","item","_modulesCache","getCache","_assetsCache","_codeGenerationCache","unsafeCache","_unsafeCache","_unsafeCachePredicate","getStats","createStatsOptions","optionsOrPreset","context","arguments","length","preset","key","for","createStatsFactory","createStatsPrinter","TypeError","logEntries","args","trace","warn","error","cutOffLoaderExecution","stack","split","slice","logEntry","time","Date","now","profileEnd","console","set","push","childName","addModule","alreadyAddedModule","currentProfile","getProfile","markRestoringStart","cacheModule","markRestoringEnd","markIntegrationStart","updateCacheModule","setModuleGraphForModule","markIntegrationEnd","getModule","findModule","markBuildingStart","needBuild","markBuildingEnd","build","resolveOptions","markStoringStart","store","markStoringEnd","processModuleDependencies","processModuleDependenciesNonRecursive","processDependenciesBlock","block","i","dep","setParents","blocks","b","sortedDependencies","currentBlock","factoryCacheKey","factoryCacheKey2","factoryCacheValue","listCacheKey1","listCacheKey2","listCacheValue","inProgressSorting","inProgressTransitive","onDependenciesSorted","increaseParallelism","handleModuleCreation","onTransitiveTasksFinished","decreaseParallelism","processDependency","index","unsafeCachedModule","_handleExistingModuleFromUnsafeCache","cachedModule","data","processDependencyForResolving","restoreFromUnsafeCache","normalModuleFactory","_handleNewModuleFromUnsafeCache","resourceIdent","getResourceIdentifier","category","factory","cacheKey","list","getContext","originModule","queue","pop","dependency","setResolvedModule","setIssuerIfUnset","_handleModuleBuildAndDependencies","_ref","contextInfo","recursive","connectOrigin","factorizeModule","factoryResult","applyFactoryResultDependencies","addAll","every","d","optional","newModule","setProfile","cacheable","unsafeCacheableModule","getUnsafeCacheData","otherProfile","mergeInto","creatingModuleDuringBuildSet","isProcessing","blockReasons","m","delete","_ref2","markFactoryStart","issuer","nameForCondition","issuerLayer","layer","result","notFoundError","map","filter","Boolean","markFactoryEnd","addModuleChain","addModuleTree","_ref3","Dep","moduleFactory","stop","entry","optionsOrName","_addEntryItem","addInclude","target","entryData","Array","isArray","oldDependencies","oldBlocks","invalidateBuild","invalidate","err2","unfreeze","removeReasonsOfDependencyBlock","_computeAffectedModules","moduleMemCacheCache","setModuleMemCaches","affectedModules","infectedModules","statNew","statChanged","statUnchanged","statReferencesChanged","statWithoutBuild","computeReferences","references","connection","getOutgoingConnections","compareReferences","modulesWithoutCache","cachedMemCache","buildInfo","memCache","reduceAffectType","connections","affected","couldAffectReferencingModule","TRANSITIVE","directOnlyInfectedModules","referencingModule","getIncomingConnectionsByOriginModule","directOnlyAffectModules","cache","Math","round","size","_computeAffectedModulesWithChunkGraph","getModuleId","outgoing","getOutgoingConnectionsByModule","from","chunkGroup","getBlockChunkGroup","chunk","apply","_ref4","memCache2","finish","clear","ParallelismFactorCalculator","modulesWithProfiles","range","buildingStartTime","buildingEndTime","f","buildingParallelismFactor","factoryStartTime","factoryEndTime","factoryParallelismFactor","integrationStartTime","integrationEndTime","integrationParallelismFactor","storingStartTime","storingEndTime","storingParallelismFactor","restoringStartTime","restoringEndTime","restoringParallelismFactor","additionalFactoryTimes","start","end","influence","additionalFactories","additionalFactoriesParallelismFactor","calculate","logByValue","value","msg","info","debug","logNormalSummary","getDuration","getParallelism","sum","max","t","readableIdentifier","logByLoadersSummary","replace","innerSum","innerMax","idx","indexOf","loaders","moduleType","shorten","restoring","building","storing","timeEnd","hasProblems","reportDependencyErrorsAndWarnings","getErrors","getWarnings","warning","removeAllModuleAttributes","finalCallback","setChunkGraphForModule","chunkGraphInit","addChunk","filename","filenameTemplate","entrypoint","dependOn","runtime","setRuntimeChunk","setEntrypointChunk","entryModules","addOrigin","request","connectChunkAndEntryModule","modulesList","assignDepths","mapAndSort","deps","sort","includedModules","assignDepth","runtimeChunks","outer","getEntrypointChunk","referencedChunks","getAllReferencedChunks","dependOnEntries","entryChunk","JSON","stringify","preventIntegration","unshiftChunk","addGroup","assignRuntimeIds","sortItemsWithChunkIds","createModuleHashes","codeGeneration","processRuntimeRequirements","codeGenerationJobs","_runCodeGenerationJobs","clearAssets","createModuleAssets","cont","summarizeDependencies","logStatistics","createChunkAssets","indexBlock","indexDep","indexWar","w","indexErr","jobs","runtimes","getModuleRuntimes","hash","getModuleHash","job","newJob","statModulesFromCache","statModulesGenerated","results","notCodeGeneratedModules","runIteration","delayedJobs","delayedModules","eachLimit","codeGenerationDependencies","some","referencedModule","_codeGenerationModule","codeGenerated","join","getItemCache","getHash","cachedResult","sources","runtimeRequirements","_getChunkGraphEntries","treeEntries","ep","values","getRuntimeChunk","chunkGraphEntries","getNumberOfModuleChunks","cached","addModuleRuntimeRequirements","getRuntimeRequirements","isUsed","r","hook","getChunkModulesIterable","getModuleRuntimeRequirements","addChunkRuntimeRequirements","treeEntry","getChunkRuntimeRequirements","addTreeRuntimeRequirements","addRuntimeModule","connectChunkAndModule","connectChunkAndRuntimeModule","addFullHashModuleToChunk","dependentHash","addDependentHashModuleToChunk","attach","exportsInfo","getExportsInfo","setHasProvideInfo","setUsedForSideEffectsOnly","requireScope","setModuleId","addChunkInGroup","groupOptions","addOptions","addAsyncEntrypoint","setChunkGraphForChunk","depth","setDepth","processModule","setDepthIfLower","getDepth","refModule","getDependencyReferencedExports","referencedExports","getReferencedExports","originalModule","removeConnection","getModuleChunks","patchChunksAfterReasonRemoval","hasReasons","hasReasonForChunk","isModuleInChunk","disconnectChunkAndModule","removeChunkFromDependencies","iteratorDependency","depModule","asyncBlock","indexChunk","iteratedChunk","removeChunk","processEntrypoint","setRuntimeId","sortItems","indexChildren","child","addCacheDependencies","statModulesHashed","hashDigest","hashDigestLength","digest","setModuleHashes","_createModuleHash","moduleHashDigest","moduleHash","updateHash","hashSalt","update","unorderedRuntimeChunks","otherChunks","hasRuntime","runtimeChunksMap","referencedBy","remaining","other","getAllReferencedAsyncEntrypoints","otherInfo","readyChunks","hasFullHashModules","getNumberOfChunkFullHashModules","upgradeDependentToFullHashModules","circularRuntimeChunkInfo","fullHashChunks","codeGenerationJobsMap","processChunk","hasModuleHashes","hashMap","moduleJob","timeAggregate","chunkHashDigest","renderedHash","fullHashModules","getChunkFullHashModulesIterable","forEach","timeAggregateEnd","oldHash","emitAsset","source","assetInfo","sourceFilename","_setAssetInfo","oldInfo","newInfo","assign","oldRelated","related","newRelated","remove","relatedIn","updateAsset","newSourceOrFunction","assetInfoUpdateOrFunction","renameAsset","newFile","relatedInInfo","newEntry","x","files","auxiliaryFiles","deleteAsset","checkUsedAndDelete","items","getAssets","array","assetName","prototype","hasOwnProperty","getAsset","fileName","getPath","getModuleChunksIterable","getRenderManifest","cachedSourceMap","alreadyWrittenFiles","forEachLimit","manifest","fileManifest","ident","usedHash","assetCacheItem","sourceFromCache","inTry","errorAndCallback","pathAndInfo","getPathWithInfo","pathOptions","path","alreadyWritten","render","cacheEntry","cachedSource","auxiliary","getAssetPath","getAssetPathWithInfo","newPath","createChildCompiler","plugins","waitFor","ids","chunkLoading","entryOptions","codeGen","reportErrors","old","runtimeModules","getChunkRuntimeModulesIterable","moduleArgumentsMap","moduleArgumentsById","__webpack_require__","codeGenerationResult","moduleArgument","preparedInfo","moduleObject","moduleAssets","exports","strictModuleErrorHandling","strictModuleExceptionHandling","moduleCache","__webpack_require_module__","interceptModuleExecution","execOptions","loaded","handler","getChunkRuntimeModulesInOrder","checkConstraints","usedIds","moduleId","debugId","getChunkEntryModulesIterable","compilationPrototype","defineProperty","writable","v","PROCESS_ASSETS_STAGE_PRE_PROCESS","PROCESS_ASSETS_STAGE_DERIVED","PROCESS_ASSETS_STAGE_ADDITIONS","PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT","PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","PROCESS_ASSETS_STAGE_DEV_TOOLING","PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE","PROCESS_ASSETS_STAGE_SUMMARIZE","PROCESS_ASSETS_STAGE_OPTIMIZE_HASH","PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER","PROCESS_ASSETS_STAGE_ANALYSE","PROCESS_ASSETS_STAGE_REPORT"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/Compilation.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst {\n\tHookMap,\n\tSyncHook,\n\tSyncBailHook,\n\tSyncWaterfallHook,\n\tAsyncSeriesHook,\n\tAsyncSeriesBailHook,\n\tAsyncParallelHook\n} = require(\"tapable\");\nconst util = require(\"util\");\nconst { CachedSource } = require(\"webpack-sources\");\nconst { MultiItemCache } = require(\"./CacheFacade\");\nconst Chunk = require(\"./Chunk\");\nconst ChunkGraph = require(\"./ChunkGraph\");\nconst ChunkGroup = require(\"./ChunkGroup\");\nconst ChunkRenderError = require(\"./ChunkRenderError\");\nconst ChunkTemplate = require(\"./ChunkTemplate\");\nconst CodeGenerationError = require(\"./CodeGenerationError\");\nconst CodeGenerationResults = require(\"./CodeGenerationResults\");\nconst Dependency = require(\"./Dependency\");\nconst DependencyTemplates = require(\"./DependencyTemplates\");\nconst Entrypoint = require(\"./Entrypoint\");\nconst ErrorHelpers = require(\"./ErrorHelpers\");\nconst FileSystemInfo = require(\"./FileSystemInfo\");\nconst {\n\tconnectChunkGroupAndChunk,\n\tconnectChunkGroupParentAndChild\n} = require(\"./GraphHelpers\");\nconst {\n\tmakeWebpackError,\n\ttryRunOrWebpackError\n} = require(\"./HookWebpackError\");\nconst MainTemplate = require(\"./MainTemplate\");\nconst Module = require(\"./Module\");\nconst ModuleDependencyError = require(\"./ModuleDependencyError\");\nconst ModuleDependencyWarning = require(\"./ModuleDependencyWarning\");\nconst ModuleGraph = require(\"./ModuleGraph\");\nconst ModuleHashingError = require(\"./ModuleHashingError\");\nconst ModuleNotFoundError = require(\"./ModuleNotFoundError\");\nconst ModuleProfile = require(\"./ModuleProfile\");\nconst ModuleRestoreError = require(\"./ModuleRestoreError\");\nconst ModuleStoreError = require(\"./ModuleStoreError\");\nconst ModuleTemplate = require(\"./ModuleTemplate\");\nconst { WEBPACK_MODULE_TYPE_RUNTIME } = require(\"./ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst RuntimeTemplate = require(\"./RuntimeTemplate\");\nconst Stats = require(\"./Stats\");\nconst WebpackError = require(\"./WebpackError\");\nconst buildChunkGraph = require(\"./buildChunkGraph\");\nconst BuildCycleError = require(\"./errors/BuildCycleError\");\nconst { Logger, LogType } = require(\"./logging/Logger\");\nconst StatsFactory = require(\"./stats/StatsFactory\");\nconst StatsPrinter = require(\"./stats/StatsPrinter\");\nconst { equals: arrayEquals } = require(\"./util/ArrayHelpers\");\nconst AsyncQueue = require(\"./util/AsyncQueue\");\nconst LazySet = require(\"./util/LazySet\");\nconst { getOrInsert } = require(\"./util/MapHelpers\");\nconst WeakTupleMap = require(\"./util/WeakTupleMap\");\nconst { cachedCleverMerge } = require(\"./util/cleverMerge\");\nconst {\n\tcompareLocations,\n\tconcatComparators,\n\tcompareSelect,\n\tcompareIds,\n\tcompareStringsNumeric,\n\tcompareModulesByIdentifier\n} = require(\"./util/comparators\");\nconst createHash = require(\"./util/createHash\");\nconst {\n\tarrayToSetDeprecation,\n\tsoonFrozenObjectDeprecation,\n\tcreateFakeHook\n} = require(\"./util/deprecation\");\nconst processAsyncTree = require(\"./util/processAsyncTree\");\nconst { getRuntimeKey } = require(\"./util/runtime\");\nconst { isSourceEqual } = require(\"./util/source\");\n\n/** @template T @typedef {import(\"tapable\").AsArray<T>} AsArray<T> */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryDescriptionNormalized} EntryDescription */\n/** @typedef {import(\"../declarations/WebpackOptions\").OutputNormalized} OutputOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginInstance} WebpackPluginInstance */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Cache\")} Cache */\n/** @typedef {import(\"./CacheFacade\")} CacheFacade */\n/** @typedef {import(\"./ChunkGroup\").ChunkGroupOptions} ChunkGroupOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Compiler\").CompilationParams} CompilationParams */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {import(\"./Entrypoint\").EntryOptions} EntryOptions */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./ModuleFactory\")} ModuleFactory */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryCreateDataContextInfo} ModuleFactoryCreateDataContextInfo */\n/** @typedef {import(\"./ModuleFactory\").ModuleFactoryResult} ModuleFactoryResult */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./RuntimeModule\")} RuntimeModule */\n/** @typedef {import(\"./Template\").RenderManifestEntry} RenderManifestEntry */\n/** @typedef {import(\"./Template\").RenderManifestOptions} RenderManifestOptions */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsAsset} StatsAsset */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsError} StatsError */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsModule} StatsModule */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @template T @typedef {import(\"./util/deprecation\").FakeHook<T>} FakeHook<T> */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @callback Callback\n * @param {(WebpackError | null)=} err\n * @returns {void}\n */\n\n/**\n * @callback ModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {Module=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ModuleOrFactoryResultCallback\n * @param {(WebpackError | null)=} err\n * @param {Module | ModuleFactoryResult=} result\n * @returns {void}\n */\n\n/**\n * @callback ExecuteModuleCallback\n * @param {(WebpackError | null)=} err\n * @param {ExecuteModuleResult=} result\n * @returns {void}\n */\n\n/**\n * @callback DepBlockVarDependenciesCallback\n * @param {Dependency} dependency\n * @returns {any}\n */\n\n/** @typedef {new (...args: any[]) => Dependency} DepConstructor */\n/** @typedef {Record<string, Source>} CompilationAssets */\n\n/**\n * @typedef {Object} AvailableModulesChunkGroupMapping\n * @property {ChunkGroup} chunkGroup\n * @property {Set<Module>} availableModules\n * @property {boolean} needCopy\n */\n\n/**\n * @typedef {Object} DependenciesBlockLike\n * @property {Dependency[]} dependencies\n * @property {AsyncDependenciesBlock[]} blocks\n */\n\n/**\n * @typedef {Object} ChunkPathData\n * @property {string|number} id\n * @property {string=} name\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Record<string, string>)=} contentHash\n * @property {(Record<string, (length: number) => string>)=} contentHashWithLength\n */\n\n/**\n * @typedef {Object} ChunkHashContext\n * @property {CodeGenerationResults} codeGenerationResults results of code generation\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {ModuleGraph} moduleGraph the module graph\n * @property {ChunkGraph} chunkGraph the chunk graph\n */\n\n/**\n * @typedef {Object} RuntimeRequirementsContext\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {CodeGenerationResults} codeGenerationResults the code generation results\n */\n\n/**\n * @typedef {Object} ExecuteModuleOptions\n * @property {EntryOptions=} entryOptions\n */\n\n/**\n * @typedef {Object} ExecuteModuleResult\n * @property {any} exports\n * @property {boolean} cacheable\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {LazySet<string>} fileDependencies\n * @property {LazySet<string>} contextDependencies\n * @property {LazySet<string>} missingDependencies\n * @property {LazySet<string>} buildDependencies\n */\n\n/**\n * @typedef {Object} ExecuteModuleArgument\n * @property {Module} module\n * @property {{ id: string, exports: any, loaded: boolean }=} moduleObject\n * @property {any} preparedInfo\n * @property {CodeGenerationResult} codeGenerationResult\n */\n\n/**\n * @typedef {Object} ExecuteModuleContext\n * @property {Map<string, { source: Source, info: AssetInfo }>} assets\n * @property {Chunk} chunk\n * @property {ChunkGraph} chunkGraph\n * @property {function(string): any=} __webpack_require__\n */\n\n/**\n * @typedef {Object} EntryData\n * @property {Dependency[]} dependencies dependencies of the entrypoint that should be evaluated at startup\n * @property {Dependency[]} includeDependencies dependencies of the entrypoint that should be included but not evaluated\n * @property {EntryOptions} options options of the entrypoint\n */\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} type\n * @property {any[]} args\n * @property {number} time\n * @property {string[]=} trace\n */\n\n/**\n * @typedef {Object} KnownAssetInfo\n * @property {boolean=} immutable true, if the asset can be long term cached forever (contains a hash)\n * @property {boolean=} minimized whether the asset is minimized\n * @property {string | string[]=} fullhash the value(s) of the full hash used for this asset\n * @property {string | string[]=} chunkhash the value(s) of the chunk hash used for this asset\n * @property {string | string[]=} modulehash the value(s) of the module hash used for this asset\n * @property {string | string[]=} contenthash the value(s) of the content hash used for this asset\n * @property {string=} sourceFilename when asset was created from a source file (potentially transformed), the original filename relative to compilation context\n * @property {number=} size size in bytes, only set after asset has been emitted\n * @property {boolean=} development true, when asset is only used for development and doesn't count towards user-facing assets\n * @property {boolean=} hotModuleReplacement true, when asset ships data for updating an existing application (HMR)\n * @property {boolean=} javascriptModule true, when asset is javascript and an ESM\n * @property {Record<string, string | string[]>=} related object of pointers to other assets, keyed by type of relation (only points from parent to child)\n */\n\n/** @typedef {KnownAssetInfo & Record<string, any>} AssetInfo */\n\n/**\n * @typedef {Object} Asset\n * @property {string} name the filename of the asset\n * @property {Source} source source of the asset\n * @property {AssetInfo} info info about the asset\n */\n\n/**\n * @typedef {Object} ModulePathData\n * @property {string|number} id\n * @property {string} hash\n * @property {function(number): string=} hashWithLength\n */\n\n/**\n * @typedef {Object} PathData\n * @property {ChunkGraph=} chunkGraph\n * @property {string=} hash\n * @property {function(number): string=} hashWithLength\n * @property {(Chunk|ChunkPathData)=} chunk\n * @property {(Module|ModulePathData)=} module\n * @property {RuntimeSpec=} runtime\n * @property {string=} filename\n * @property {string=} basename\n * @property {string=} query\n * @property {string=} contentHashType\n * @property {string=} contentHash\n * @property {function(number): string=} contentHashWithLength\n * @property {boolean=} noChunkHash\n * @property {string=} url\n */\n\n/**\n * @typedef {Object} KnownNormalizedStatsOptions\n * @property {string} context\n * @property {RequestShortener} requestShortener\n * @property {string} chunksSort\n * @property {string} modulesSort\n * @property {string} chunkModulesSort\n * @property {string} nestedModulesSort\n * @property {string} assetsSort\n * @property {boolean} ids\n * @property {boolean} cachedAssets\n * @property {boolean} groupAssetsByEmitStatus\n * @property {boolean} groupAssetsByPath\n * @property {boolean} groupAssetsByExtension\n * @property {number} assetsSpace\n * @property {((value: string, asset: StatsAsset) => boolean)[]} excludeAssets\n * @property {((name: string, module: StatsModule, type: \"module\" | \"chunk\" | \"root-of-chunk\" | \"nested\") => boolean)[]} excludeModules\n * @property {((warning: StatsError, textValue: string) => boolean)[]} warningsFilter\n * @property {boolean} cachedModules\n * @property {boolean} orphanModules\n * @property {boolean} dependentModules\n * @property {boolean} runtimeModules\n * @property {boolean} groupModulesByCacheStatus\n * @property {boolean} groupModulesByLayer\n * @property {boolean} groupModulesByAttributes\n * @property {boolean} groupModulesByPath\n * @property {boolean} groupModulesByExtension\n * @property {boolean} groupModulesByType\n * @property {boolean | \"auto\"} entrypoints\n * @property {boolean} chunkGroups\n * @property {boolean} chunkGroupAuxiliary\n * @property {boolean} chunkGroupChildren\n * @property {number} chunkGroupMaxAssets\n * @property {number} modulesSpace\n * @property {number} chunkModulesSpace\n * @property {number} nestedModulesSpace\n * @property {false|\"none\"|\"error\"|\"warn\"|\"info\"|\"log\"|\"verbose\"} logging\n * @property {((value: string) => boolean)[]} loggingDebug\n * @property {boolean} loggingTrace\n * @property {any} _env\n */\n\n/** @typedef {KnownNormalizedStatsOptions & Omit<StatsOptions, keyof KnownNormalizedStatsOptions> & Record<string, any>} NormalizedStatsOptions */\n\n/**\n * @typedef {Object} KnownCreateStatsOptionsContext\n * @property {boolean=} forToString\n */\n\n/** @typedef {KnownCreateStatsOptionsContext & Record<string, any>} CreateStatsOptionsContext */\n\n/** @type {AssetInfo} */\nconst EMPTY_ASSET_INFO = Object.freeze({});\n\nconst esmDependencyCategory = \"esm\";\n// TODO webpack 6: remove\nconst deprecatedNormalModuleLoaderHook = util.deprecate(\n\tcompilation => {\n\t\treturn require(\"./NormalModule\").getCompilationHooks(compilation).loader;\n\t},\n\t\"Compilation.hooks.normalModuleLoader was moved to NormalModule.getCompilationHooks(compilation).loader\",\n\t\"DEP_WEBPACK_COMPILATION_NORMAL_MODULE_LOADER_HOOK\"\n);\n\n// TODO webpack 6: remove\nconst defineRemovedModuleTemplates = moduleTemplates => {\n\tObject.defineProperties(moduleTemplates, {\n\t\tasset: {\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tthrow new WebpackError(\n\t\t\t\t\t\"Compilation.moduleTemplates.asset has been removed\"\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\twebassembly: {\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tthrow new WebpackError(\n\t\t\t\t\t\"Compilation.moduleTemplates.webassembly has been removed\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n\tmoduleTemplates = undefined;\n};\n\nconst byId = compareSelect(\n\t/**\n\t * @param {Chunk} c chunk\n\t * @returns {number | string} id\n\t */ c => c.id,\n\tcompareIds\n);\n\nconst byNameOrHash = concatComparators(\n\tcompareSelect(\n\t\t/**\n\t\t * @param {Compilation} c compilation\n\t\t * @returns {string} name\n\t\t */\n\t\tc => c.name,\n\t\tcompareIds\n\t),\n\tcompareSelect(\n\t\t/**\n\t\t * @param {Compilation} c compilation\n\t\t * @returns {string} hash\n\t\t */ c => c.fullHash,\n\t\tcompareIds\n\t)\n);\n\nconst byMessage = compareSelect(err => `${err.message}`, compareStringsNumeric);\n\nconst byModule = compareSelect(\n\terr => (err.module && err.module.identifier()) || \"\",\n\tcompareStringsNumeric\n);\n\nconst byLocation = compareSelect(err => err.loc, compareLocations);\n\nconst compareErrors = concatComparators(byModule, byLocation, byMessage);\n\n/** @type {WeakMap<Dependency, Module & { restoreFromUnsafeCache: Function } | null>} */\nconst unsafeCacheDependencies = new WeakMap();\n\n/** @type {WeakMap<Module & { restoreFromUnsafeCache: Function }, object>} */\nconst unsafeCacheData = new WeakMap();\n\nclass Compilation {\n\t/**\n\t * Creates an instance of Compilation.\n\t * @param {Compiler} compiler the compiler which created the compilation\n\t * @param {CompilationParams} params the compilation parameters\n\t */\n\tconstructor(compiler, params) {\n\t\tthis._backCompat = compiler._backCompat;\n\n\t\tconst getNormalModuleLoader = () => deprecatedNormalModuleLoaderHook(this);\n\t\t/** @typedef {{ additionalAssets?: true | Function }} ProcessAssetsAdditionalOptions */\n\t\t/** @type {AsyncSeriesHook<[CompilationAssets], ProcessAssetsAdditionalOptions>} */\n\t\tconst processAssetsHook = new AsyncSeriesHook([\"assets\"]);\n\n\t\tlet savedAssets = new Set();\n\t\tconst popNewAssets = assets => {\n\t\t\tlet newAssets = undefined;\n\t\t\tfor (const file of Object.keys(assets)) {\n\t\t\t\tif (savedAssets.has(file)) continue;\n\t\t\t\tif (newAssets === undefined) {\n\t\t\t\t\tnewAssets = Object.create(null);\n\t\t\t\t}\n\t\t\t\tnewAssets[file] = assets[file];\n\t\t\t\tsavedAssets.add(file);\n\t\t\t}\n\t\t\treturn newAssets;\n\t\t};\n\t\tprocessAssetsHook.intercept({\n\t\t\tname: \"Compilation\",\n\t\t\tcall: () => {\n\t\t\t\tsavedAssets = new Set(Object.keys(this.assets));\n\t\t\t},\n\t\t\tregister: tap => {\n\t\t\t\tconst { type, name } = tap;\n\t\t\t\tconst { fn, additionalAssets, ...remainingTap } = tap;\n\t\t\t\tconst additionalAssetsFn =\n\t\t\t\t\tadditionalAssets === true ? fn : additionalAssets;\n\t\t\t\tconst processedAssets = additionalAssetsFn ? new WeakSet() : undefined;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase \"sync\":\n\t\t\t\t\t\tif (additionalAssetsFn) {\n\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.tap(name, assets => {\n\t\t\t\t\t\t\t\tif (processedAssets.has(this.assets))\n\t\t\t\t\t\t\t\t\tadditionalAssetsFn(assets);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...remainingTap,\n\t\t\t\t\t\t\ttype: \"async\",\n\t\t\t\t\t\t\tfn: (assets, callback) => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tfn(assets);\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\treturn callback(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (processedAssets !== undefined)\n\t\t\t\t\t\t\t\t\tprocessedAssets.add(this.assets);\n\t\t\t\t\t\t\t\tconst newAssets = popNewAssets(assets);\n\t\t\t\t\t\t\t\tif (newAssets !== undefined) {\n\t\t\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.callAsync(\n\t\t\t\t\t\t\t\t\t\tnewAssets,\n\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"async\":\n\t\t\t\t\t\tif (additionalAssetsFn) {\n\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.tapAsync(\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t(assets, callback) => {\n\t\t\t\t\t\t\t\t\tif (processedAssets.has(this.assets))\n\t\t\t\t\t\t\t\t\t\treturn additionalAssetsFn(assets, callback);\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...remainingTap,\n\t\t\t\t\t\t\tfn: (assets, callback) => {\n\t\t\t\t\t\t\t\tfn(assets, err => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\tif (processedAssets !== undefined)\n\t\t\t\t\t\t\t\t\t\tprocessedAssets.add(this.assets);\n\t\t\t\t\t\t\t\t\tconst newAssets = popNewAssets(assets);\n\t\t\t\t\t\t\t\t\tif (newAssets !== undefined) {\n\t\t\t\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.callAsync(\n\t\t\t\t\t\t\t\t\t\t\tnewAssets,\n\t\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"promise\":\n\t\t\t\t\t\tif (additionalAssetsFn) {\n\t\t\t\t\t\t\tthis.hooks.processAdditionalAssets.tapPromise(name, assets => {\n\t\t\t\t\t\t\t\tif (processedAssets.has(this.assets))\n\t\t\t\t\t\t\t\t\treturn additionalAssetsFn(assets);\n\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...remainingTap,\n\t\t\t\t\t\t\tfn: assets => {\n\t\t\t\t\t\t\t\tconst p = fn(assets);\n\t\t\t\t\t\t\t\tif (!p || !p.then) return p;\n\t\t\t\t\t\t\t\treturn p.then(() => {\n\t\t\t\t\t\t\t\t\tif (processedAssets !== undefined)\n\t\t\t\t\t\t\t\t\t\tprocessedAssets.add(this.assets);\n\t\t\t\t\t\t\t\t\tconst newAssets = popNewAssets(assets);\n\t\t\t\t\t\t\t\t\tif (newAssets !== undefined) {\n\t\t\t\t\t\t\t\t\t\treturn this.hooks.processAdditionalAssets.promise(\n\t\t\t\t\t\t\t\t\t\t\tnewAssets\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/** @type {SyncHook<[CompilationAssets]>} */\n\t\tconst afterProcessAssetsHook = new SyncHook([\"assets\"]);\n\n\t\t/**\n\t\t * @template T\n\t\t * @param {string} name name of the hook\n\t\t * @param {number} stage new stage\n\t\t * @param {function(): AsArray<T>} getArgs get old hook function args\n\t\t * @param {string=} code deprecation code (not deprecated when unset)\n\t\t * @returns {FakeHook<Pick<AsyncSeriesHook<T>, \"tap\" | \"tapAsync\" | \"tapPromise\" | \"name\">>} fake hook which redirects\n\t\t */\n\t\tconst createProcessAssetsHook = (name, stage, getArgs, code) => {\n\t\t\tif (!this._backCompat && code) return undefined;\n\t\t\tconst errorMessage =\n\t\t\t\treason => `Can't automatically convert plugin using Compilation.hooks.${name} to Compilation.hooks.processAssets because ${reason}.\nBREAKING CHANGE: Asset processing hooks in Compilation has been merged into a single Compilation.hooks.processAssets hook.`;\n\t\t\tconst getOptions = options => {\n\t\t\t\tif (typeof options === \"string\") options = { name: options };\n\t\t\t\tif (options.stage) {\n\t\t\t\t\tthrow new Error(errorMessage(\"it's using the 'stage' option\"));\n\t\t\t\t}\n\t\t\t\treturn { ...options, stage: stage };\n\t\t\t};\n\t\t\treturn createFakeHook(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"intercept\"]} */\n\t\t\t\t\tintercept(interceptor) {\n\t\t\t\t\t\tthrow new Error(errorMessage(\"it's using 'intercept'\"));\n\t\t\t\t\t},\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"tap\"]} */\n\t\t\t\t\ttap: (options, fn) => {\n\t\t\t\t\t\tprocessAssetsHook.tap(getOptions(options), () => fn(...getArgs()));\n\t\t\t\t\t},\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"tapAsync\"]} */\n\t\t\t\t\ttapAsync: (options, fn) => {\n\t\t\t\t\t\tprocessAssetsHook.tapAsync(\n\t\t\t\t\t\t\tgetOptions(options),\n\t\t\t\t\t\t\t(assets, callback) =>\n\t\t\t\t\t\t\t\t/** @type {any} */ (fn)(...getArgs(), callback)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\t/** @type {AsyncSeriesHook<T>[\"tapPromise\"]} */\n\t\t\t\t\ttapPromise: (options, fn) => {\n\t\t\t\t\t\tprocessAssetsHook.tapPromise(getOptions(options), () =>\n\t\t\t\t\t\t\tfn(...getArgs())\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t`${name} is deprecated (use Compilation.hooks.processAssets instead and use one of Compilation.PROCESS_ASSETS_STAGE_* as stage option)`,\n\t\t\t\tcode\n\t\t\t);\n\t\t};\n\t\tthis.hooks = Object.freeze({\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\tbuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\trebuildModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[Module, WebpackError]>} */\n\t\t\tfailedModule: new SyncHook([\"module\", \"error\"]),\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\tsucceedModule: new SyncHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[Module]>} */\n\t\t\tstillValidModule: new SyncHook([\"module\"]),\n\n\t\t\t/** @type {SyncHook<[Dependency, EntryOptions]>} */\n\t\t\taddEntry: new SyncHook([\"entry\", \"options\"]),\n\t\t\t/** @type {SyncHook<[Dependency, EntryOptions, Error]>} */\n\t\t\tfailedEntry: new SyncHook([\"entry\", \"options\", \"error\"]),\n\t\t\t/** @type {SyncHook<[Dependency, EntryOptions, Module]>} */\n\t\t\tsucceedEntry: new SyncHook([\"entry\", \"options\", \"module\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<[(string[] | ReferencedExport)[], Dependency, RuntimeSpec]>} */\n\t\t\tdependencyReferencedExports: new SyncWaterfallHook([\n\t\t\t\t\"referencedExports\",\n\t\t\t\t\"dependency\",\n\t\t\t\t\"runtime\"\n\t\t\t]),\n\n\t\t\t/** @type {SyncHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n\t\t\texecuteModule: new SyncHook([\"options\", \"context\"]),\n\t\t\t/** @type {AsyncParallelHook<[ExecuteModuleArgument, ExecuteModuleContext]>} */\n\t\t\tprepareModuleExecution: new AsyncParallelHook([\"options\", \"context\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<[Iterable<Module>]>} */\n\t\t\tfinishModules: new AsyncSeriesHook([\"modules\"]),\n\t\t\t/** @type {AsyncSeriesHook<[Module]>} */\n\t\t\tfinishRebuildingModule: new AsyncSeriesHook([\"module\"]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tunseal: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tseal: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeChunks: new SyncHook([]),\n\t\t\t/**\n\t\t\t * The `afterChunks` hook is called directly after the chunks and module graph have\n\t\t\t * been created and before the chunks and modules have been optimized. This hook is useful to\n\t\t\t * inspect, analyze, and/or modify the chunk graph.\n\t\t\t * @type {SyncHook<[Iterable<Chunk>]>}\n\t\t\t */\n\t\t\tafterChunks: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncBailHook<[Iterable<Module>]>} */\n\t\t\toptimizeDependencies: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tafterOptimizeDependencies: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\toptimize: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook<[Iterable<Module>]>} */\n\t\t\toptimizeModules: new SyncBailHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tafterOptimizeModules: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncBailHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n\t\t\toptimizeChunks: new SyncBailHook([\"chunks\", \"chunkGroups\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, ChunkGroup[]]>} */\n\t\t\tafterOptimizeChunks: new SyncHook([\"chunks\", \"chunkGroups\"]),\n\n\t\t\t/** @type {AsyncSeriesHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\toptimizeTree: new AsyncSeriesHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\tafterOptimizeTree: new SyncHook([\"chunks\", \"modules\"]),\n\n\t\t\t/** @type {AsyncSeriesBailHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\toptimizeChunkModules: new AsyncSeriesBailHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, Iterable<Module>]>} */\n\t\t\tafterOptimizeChunkModules: new SyncHook([\"chunks\", \"modules\"]),\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tshouldRecord: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n\t\t\tadditionalChunkRuntimeRequirements: new SyncHook([\n\t\t\t\t\"chunk\",\n\t\t\t\t\"runtimeRequirements\",\n\t\t\t\t\"context\"\n\t\t\t]),\n\t\t\t/** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n\t\t\truntimeRequirementInChunk: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {SyncHook<[Module, Set<string>, RuntimeRequirementsContext]>} */\n\t\t\tadditionalModuleRuntimeRequirements: new SyncHook([\n\t\t\t\t\"module\",\n\t\t\t\t\"runtimeRequirements\",\n\t\t\t\t\"context\"\n\t\t\t]),\n\t\t\t/** @type {HookMap<SyncBailHook<[Module, Set<string>, RuntimeRequirementsContext]>>} */\n\t\t\truntimeRequirementInModule: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"module\", \"runtimeRequirements\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {SyncHook<[Chunk, Set<string>, RuntimeRequirementsContext]>} */\n\t\t\tadditionalTreeRuntimeRequirements: new SyncHook([\n\t\t\t\t\"chunk\",\n\t\t\t\t\"runtimeRequirements\",\n\t\t\t\t\"context\"\n\t\t\t]),\n\t\t\t/** @type {HookMap<SyncBailHook<[Chunk, Set<string>, RuntimeRequirementsContext]>>} */\n\t\t\truntimeRequirementInTree: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"chunk\", \"runtimeRequirements\", \"context\"])\n\t\t\t),\n\n\t\t\t/** @type {SyncHook<[RuntimeModule, Chunk]>} */\n\t\t\truntimeModule: new SyncHook([\"module\", \"chunk\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Module>, any]>} */\n\t\t\treviveModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tbeforeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tmoduleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\toptimizeModuleIds: new SyncHook([\"modules\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\tafterOptimizeModuleIds: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, any]>} */\n\t\t\treviveChunks: new SyncHook([\"chunks\", \"records\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tbeforeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tchunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\toptimizeChunkIds: new SyncHook([\"chunks\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>]>} */\n\t\t\tafterOptimizeChunkIds: new SyncHook([\"chunks\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Module>, any]>} */\n\t\t\trecordModules: new SyncHook([\"modules\", \"records\"]),\n\t\t\t/** @type {SyncHook<[Iterable<Chunk>, any]>} */\n\t\t\trecordChunks: new SyncHook([\"chunks\", \"records\"]),\n\n\t\t\t/** @type {SyncHook<[Iterable<Module>]>} */\n\t\t\toptimizeCodeGeneration: new SyncHook([\"modules\"]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeModuleHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterModuleHash: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeCodeGeneration: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterCodeGeneration: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeRuntimeRequirements: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterRuntimeRequirements: new SyncHook([]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[Chunk]>} */\n\t\t\tcontentHash: new SyncHook([\"chunk\"]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tafterHash: new SyncHook([]),\n\t\t\t/** @type {SyncHook<[any]>} */\n\t\t\trecordHash: new SyncHook([\"records\"]),\n\t\t\t/** @type {SyncHook<[Compilation, any]>} */\n\t\t\trecord: new SyncHook([\"compilation\", \"records\"]),\n\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeModuleAssets: new SyncHook([]),\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tshouldGenerateChunkAssets: new SyncBailHook([]),\n\t\t\t/** @type {SyncHook<[]>} */\n\t\t\tbeforeChunkAssets: new SyncHook([]),\n\t\t\t// TODO webpack 6 remove\n\t\t\t/** @deprecated */\n\t\t\tadditionalChunkAssets: createProcessAssetsHook(\n\t\t\t\t\"additionalChunkAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL,\n\t\t\t\t() => [this.chunks],\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_ADDITIONAL_CHUNK_ASSETS\"\n\t\t\t),\n\n\t\t\t// TODO webpack 6 deprecate\n\t\t\t/** @deprecated */\n\t\t\tadditionalAssets: createProcessAssetsHook(\n\t\t\t\t\"additionalAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL,\n\t\t\t\t() => []\n\t\t\t),\n\t\t\t// TODO webpack 6 remove\n\t\t\t/** @deprecated */\n\t\t\toptimizeChunkAssets: createProcessAssetsHook(\n\t\t\t\t\"optimizeChunkAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE,\n\t\t\t\t() => [this.chunks],\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_OPTIMIZE_CHUNK_ASSETS\"\n\t\t\t),\n\t\t\t// TODO webpack 6 remove\n\t\t\t/** @deprecated */\n\t\t\tafterOptimizeChunkAssets: createProcessAssetsHook(\n\t\t\t\t\"afterOptimizeChunkAssets\",\n\t\t\t\tCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE + 1,\n\t\t\t\t() => [this.chunks],\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_AFTER_OPTIMIZE_CHUNK_ASSETS\"\n\t\t\t),\n\t\t\t// TODO webpack 6 deprecate\n\t\t\t/** @deprecated */\n\t\t\toptimizeAssets: processAssetsHook,\n\t\t\t// TODO webpack 6 deprecate\n\t\t\t/** @deprecated */\n\t\t\tafterOptimizeAssets: afterProcessAssetsHook,\n\n\t\t\tprocessAssets: processAssetsHook,\n\t\t\tafterProcessAssets: afterProcessAssetsHook,\n\t\t\t/** @type {AsyncSeriesHook<[CompilationAssets]>} */\n\t\t\tprocessAdditionalAssets: new AsyncSeriesHook([\"assets\"]),\n\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tneedAdditionalSeal: new SyncBailHook([]),\n\t\t\t/** @type {AsyncSeriesHook<[]>} */\n\t\t\tafterSeal: new AsyncSeriesHook([]),\n\n\t\t\t/** @type {SyncWaterfallHook<[RenderManifestEntry[], RenderManifestOptions]>} */\n\t\t\trenderManifest: new SyncWaterfallHook([\"result\", \"options\"]),\n\n\t\t\t/** @type {SyncHook<[Hash]>} */\n\t\t\tfullHash: new SyncHook([\"hash\"]),\n\t\t\t/** @type {SyncHook<[Chunk, Hash, ChunkHashContext]>} */\n\t\t\tchunkHash: new SyncHook([\"chunk\", \"chunkHash\", \"ChunkHashContext\"]),\n\n\t\t\t/** @type {SyncHook<[Module, string]>} */\n\t\t\tmoduleAsset: new SyncHook([\"module\", \"filename\"]),\n\t\t\t/** @type {SyncHook<[Chunk, string]>} */\n\t\t\tchunkAsset: new SyncHook([\"chunk\", \"filename\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<[string, object, AssetInfo]>} */\n\t\t\tassetPath: new SyncWaterfallHook([\"path\", \"options\", \"assetInfo\"]),\n\n\t\t\t/** @type {SyncBailHook<[], boolean>} */\n\t\t\tneedAdditionalPass: new SyncBailHook([]),\n\n\t\t\t/** @type {SyncHook<[Compiler, string, number]>} */\n\t\t\tchildCompiler: new SyncHook([\n\t\t\t\t\"childCompiler\",\n\t\t\t\t\"compilerName\",\n\t\t\t\t\"compilerIndex\"\n\t\t\t]),\n\n\t\t\t/** @type {SyncBailHook<[string, LogEntry], true>} */\n\t\t\tlog: new SyncBailHook([\"origin\", \"logEntry\"]),\n\n\t\t\t/** @type {SyncWaterfallHook<[WebpackError[]]>} */\n\t\t\tprocessWarnings: new SyncWaterfallHook([\"warnings\"]),\n\t\t\t/** @type {SyncWaterfallHook<[WebpackError[]]>} */\n\t\t\tprocessErrors: new SyncWaterfallHook([\"errors\"]),\n\n\t\t\t/** @type {HookMap<SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>>} */\n\t\t\tstatsPreset: new HookMap(() => new SyncHook([\"options\", \"context\"])),\n\t\t\t/** @type {SyncHook<[Partial<NormalizedStatsOptions>, CreateStatsOptionsContext]>} */\n\t\t\tstatsNormalize: new SyncHook([\"options\", \"context\"]),\n\t\t\t/** @type {SyncHook<[StatsFactory, NormalizedStatsOptions]>} */\n\t\t\tstatsFactory: new SyncHook([\"statsFactory\", \"options\"]),\n\t\t\t/** @type {SyncHook<[StatsPrinter, NormalizedStatsOptions]>} */\n\t\t\tstatsPrinter: new SyncHook([\"statsPrinter\", \"options\"]),\n\n\t\t\tget normalModuleLoader() {\n\t\t\t\treturn getNormalModuleLoader();\n\t\t\t}\n\t\t});\n\t\t/** @type {string=} */\n\t\tthis.name = undefined;\n\t\tthis.startTime = undefined;\n\t\tthis.endTime = undefined;\n\t\t/** @type {Compiler} */\n\t\tthis.compiler = compiler;\n\t\tthis.resolverFactory = compiler.resolverFactory;\n\t\tthis.inputFileSystem = compiler.inputFileSystem;\n\t\tthis.fileSystemInfo = new FileSystemInfo(this.inputFileSystem, {\n\t\t\tmanagedPaths: compiler.managedPaths,\n\t\t\timmutablePaths: compiler.immutablePaths,\n\t\t\tlogger: this.getLogger(\"webpack.FileSystemInfo\"),\n\t\t\thashFunction: compiler.options.output.hashFunction\n\t\t});\n\t\tif (compiler.fileTimestamps) {\n\t\t\tthis.fileSystemInfo.addFileTimestamps(compiler.fileTimestamps, true);\n\t\t}\n\t\tif (compiler.contextTimestamps) {\n\t\t\tthis.fileSystemInfo.addContextTimestamps(\n\t\t\t\tcompiler.contextTimestamps,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t\t/** @type {Map<string, string | Set<string>>} */\n\t\tthis.valueCacheVersions = new Map();\n\t\tthis.requestShortener = compiler.requestShortener;\n\t\tthis.compilerPath = compiler.compilerPath;\n\n\t\tthis.logger = this.getLogger(\"webpack.Compilation\");\n\n\t\tconst options = compiler.options;\n\t\tthis.options = options;\n\t\tthis.outputOptions = options && options.output;\n\t\t/** @type {boolean} */\n\t\tthis.bail = (options && options.bail) || false;\n\t\t/** @type {boolean} */\n\t\tthis.profile = (options && options.profile) || false;\n\n\t\tthis.params = params;\n\t\tthis.mainTemplate = new MainTemplate(this.outputOptions, this);\n\t\tthis.chunkTemplate = new ChunkTemplate(this.outputOptions, this);\n\t\tthis.runtimeTemplate = new RuntimeTemplate(\n\t\t\tthis,\n\t\t\tthis.outputOptions,\n\t\t\tthis.requestShortener\n\t\t);\n\t\t/** @type {{javascript: ModuleTemplate}} */\n\t\tthis.moduleTemplates = {\n\t\t\tjavascript: new ModuleTemplate(this.runtimeTemplate, this)\n\t\t};\n\t\tdefineRemovedModuleTemplates(this.moduleTemplates);\n\n\t\t/** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n\t\tthis.moduleMemCaches = undefined;\n\t\t/** @type {Map<Module, WeakTupleMap<any, any>> | undefined} */\n\t\tthis.moduleMemCaches2 = undefined;\n\t\tthis.moduleGraph = new ModuleGraph();\n\t\t/** @type {ChunkGraph} */\n\t\tthis.chunkGraph = undefined;\n\t\t/** @type {CodeGenerationResults} */\n\t\tthis.codeGenerationResults = undefined;\n\n\t\t/** @type {AsyncQueue<Module, Module, Module>} */\n\t\tthis.processDependenciesQueue = new AsyncQueue({\n\t\t\tname: \"processDependencies\",\n\t\t\tparallelism: options.parallelism || 100,\n\t\t\tprocessor: this._processModuleDependencies.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<Module, string, Module>} */\n\t\tthis.addModuleQueue = new AsyncQueue({\n\t\t\tname: \"addModule\",\n\t\t\tparent: this.processDependenciesQueue,\n\t\t\tgetKey: module => module.identifier(),\n\t\t\tprocessor: this._addModule.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<FactorizeModuleOptions, string, Module | ModuleFactoryResult>} */\n\t\tthis.factorizeQueue = new AsyncQueue({\n\t\t\tname: \"factorize\",\n\t\t\tparent: this.addModuleQueue,\n\t\t\tprocessor: this._factorizeModule.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<Module, Module, Module>} */\n\t\tthis.buildQueue = new AsyncQueue({\n\t\t\tname: \"build\",\n\t\t\tparent: this.factorizeQueue,\n\t\t\tprocessor: this._buildModule.bind(this)\n\t\t});\n\t\t/** @type {AsyncQueue<Module, Module, Module>} */\n\t\tthis.rebuildQueue = new AsyncQueue({\n\t\t\tname: \"rebuild\",\n\t\t\tparallelism: options.parallelism || 100,\n\t\t\tprocessor: this._rebuildModule.bind(this)\n\t\t});\n\n\t\t/**\n\t\t * Modules in value are building during the build of Module in key.\n\t\t * Means value blocking key from finishing.\n\t\t * Needed to detect build cycles.\n\t\t * @type {WeakMap<Module, Set<Module>>}\n\t\t */\n\t\tthis.creatingModuleDuringBuild = new WeakMap();\n\n\t\t/** @type {Map<string, EntryData>} */\n\t\tthis.entries = new Map();\n\t\t/** @type {EntryData} */\n\t\tthis.globalEntry = {\n\t\t\tdependencies: [],\n\t\t\tincludeDependencies: [],\n\t\t\toptions: {\n\t\t\t\tname: undefined\n\t\t\t}\n\t\t};\n\t\t/** @type {Map<string, Entrypoint>} */\n\t\tthis.entrypoints = new Map();\n\t\t/** @type {Entrypoint[]} */\n\t\tthis.asyncEntrypoints = [];\n\t\t/** @type {Set<Chunk>} */\n\t\tthis.chunks = new Set();\n\t\t/** @type {ChunkGroup[]} */\n\t\tthis.chunkGroups = [];\n\t\t/** @type {Map<string, ChunkGroup>} */\n\t\tthis.namedChunkGroups = new Map();\n\t\t/** @type {Map<string, Chunk>} */\n\t\tthis.namedChunks = new Map();\n\t\t/** @type {Set<Module>} */\n\t\tthis.modules = new Set();\n\t\tif (this._backCompat) {\n\t\t\tarrayToSetDeprecation(this.chunks, \"Compilation.chunks\");\n\t\t\tarrayToSetDeprecation(this.modules, \"Compilation.modules\");\n\t\t}\n\t\t/** @private @type {Map<string, Module>} */\n\t\tthis._modules = new Map();\n\t\tthis.records = null;\n\t\t/** @type {string[]} */\n\t\tthis.additionalChunkAssets = [];\n\t\t/** @type {CompilationAssets} */\n\t\tthis.assets = {};\n\t\t/** @type {Map<string, AssetInfo>} */\n\t\tthis.assetsInfo = new Map();\n\t\t/** @type {Map<string, Map<string, Set<string>>>} */\n\t\tthis._assetsRelatedIn = new Map();\n\t\t/** @type {WebpackError[]} */\n\t\tthis.errors = [];\n\t\t/** @type {WebpackError[]} */\n\t\tthis.warnings = [];\n\t\t/** @type {Compilation[]} */\n\t\tthis.children = [];\n\t\t/** @type {Map<string, LogEntry[]>} */\n\t\tthis.logging = new Map();\n\t\t/** @type {Map<DepConstructor, ModuleFactory>} */\n\t\tthis.dependencyFactories = new Map();\n\t\t/** @type {DependencyTemplates} */\n\t\tthis.dependencyTemplates = new DependencyTemplates(\n\t\t\tthis.outputOptions.hashFunction\n\t\t);\n\t\tthis.childrenCounters = {};\n\t\t/** @type {Set<number|string>} */\n\t\tthis.usedChunkIds = null;\n\t\t/** @type {Set<number>} */\n\t\tthis.usedModuleIds = null;\n\t\t/** @type {boolean} */\n\t\tthis.needAdditionalPass = false;\n\t\t/** @type {Set<Module & { restoreFromUnsafeCache: Function }>} */\n\t\tthis._restoredUnsafeCacheModuleEntries = new Set();\n\t\t/** @type {Map<string, Module & { restoreFromUnsafeCache: Function }>} */\n\t\tthis._restoredUnsafeCacheEntries = new Map();\n\t\t/** @type {WeakSet<Module>} */\n\t\tthis.builtModules = new WeakSet();\n\t\t/** @type {WeakSet<Module>} */\n\t\tthis.codeGeneratedModules = new WeakSet();\n\t\t/** @type {WeakSet<Module>} */\n\t\tthis.buildTimeExecutedModules = new WeakSet();\n\t\t/** @private @type {Map<Module, Callback[]>} */\n\t\tthis._rebuildingModules = new Map();\n\t\t/** @type {Set<string>} */\n\t\tthis.emittedAssets = new Set();\n\t\t/** @type {Set<string>} */\n\t\tthis.comparedForEmitAssets = new Set();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.fileDependencies = new LazySet();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.contextDependencies = new LazySet();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.missingDependencies = new LazySet();\n\t\t/** @type {LazySet<string>} */\n\t\tthis.buildDependencies = new LazySet();\n\t\t// TODO webpack 6 remove\n\t\tthis.compilationDependencies = {\n\t\t\tadd: util.deprecate(\n\t\t\t\titem => this.fileDependencies.add(item),\n\t\t\t\t\"Compilation.compilationDependencies is deprecated (used Compilation.fileDependencies instead)\",\n\t\t\t\t\"DEP_WEBPACK_COMPILATION_COMPILATION_DEPENDENCIES\"\n\t\t\t)\n\t\t};\n\n\t\tthis._modulesCache = this.getCache(\"Compilation/modules\");\n\t\tthis._assetsCache = this.getCache(\"Compilation/assets\");\n\t\tthis._codeGenerationCache = this.getCache(\"Compilation/codeGeneration\");\n\n\t\tconst unsafeCache = options.module.unsafeCache;\n\t\tthis._unsafeCache = !!unsafeCache;\n\t\tthis._unsafeCachePredicate =\n\t\t\ttypeof unsafeCache === \"function\" ? unsafeCache : () => true;\n\t}\n\n\tgetStats() {\n\t\treturn new Stats(this);\n\t}\n\n\t/**\n\t * @param {StatsOptions | string} optionsOrPreset stats option value\n\t * @param {CreateStatsOptionsContext} context context\n\t * @returns {NormalizedStatsOptions} normalized options\n\t */\n\tcreateStatsOptions(optionsOrPreset, context = {}) {\n\t\tif (\n\t\t\ttypeof optionsOrPreset === \"boolean\" ||\n\t\t\ttypeof optionsOrPreset === \"string\"\n\t\t) {\n\t\t\toptionsOrPreset = { preset: optionsOrPreset };\n\t\t}\n\t\tif (typeof optionsOrPreset === \"object\" && optionsOrPreset !== null) {\n\t\t\t// We use this method of shallow cloning this object to include\n\t\t\t// properties in the prototype chain\n\t\t\t/** @type {Partial<NormalizedStatsOptions>} */\n\t\t\tconst options = {};\n\t\t\tfor (const key in optionsOrPreset) {\n\t\t\t\toptions[key] = optionsOrPreset[key];\n\t\t\t}\n\t\t\tif (options.preset !== undefined) {\n\t\t\t\tthis.hooks.statsPreset.for(options.preset).call(options, context);\n\t\t\t}\n\t\t\tthis.hooks.statsNormalize.call(options, context);\n\t\t\treturn /** @type {NormalizedStatsOptions} */ (options);\n\t\t} else {\n\t\t\t/** @type {Partial<NormalizedStatsOptions>} */\n\t\t\tconst options = {};\n\t\t\tthis.hooks.statsNormalize.call(options, context);\n\t\t\treturn /** @type {NormalizedStatsOptions} */ (options);\n\t\t}\n\t}\n\n\tcreateStatsFactory(options) {\n\t\tconst statsFactory = new StatsFactory();\n\t\tthis.hooks.statsFactory.call(statsFactory, options);\n\t\treturn statsFactory;\n\t}\n\n\tcreateStatsPrinter(options) {\n\t\tconst statsPrinter = new StatsPrinter();\n\t\tthis.hooks.statsPrinter.call(statsPrinter, options);\n\t\treturn statsPrinter;\n\t}\n\n\t/**\n\t * @param {string} name cache name\n\t * @returns {CacheFacade} the cache facade instance\n\t */\n\tgetCache(name) {\n\t\treturn this.compiler.getCache(name);\n\t}\n\n\t/**\n\t * @param {string | (function(): string)} name name of the logger, or function called once to get the logger name\n\t * @returns {Logger} a logger with that name\n\t */\n\tgetLogger(name) {\n\t\tif (!name) {\n\t\t\tthrow new TypeError(\"Compilation.getLogger(name) called without a name\");\n\t\t}\n\t\t/** @type {LogEntry[] | undefined} */\n\t\tlet logEntries;\n\t\treturn new Logger(\n\t\t\t(type, args) => {\n\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\tname = name();\n\t\t\t\t\tif (!name) {\n\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet trace;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase LogType.warn:\n\t\t\t\t\tcase LogType.error:\n\t\t\t\t\tcase LogType.trace:\n\t\t\t\t\t\ttrace = ErrorHelpers.cutOffLoaderExecution(new Error(\"Trace\").stack)\n\t\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t\t.slice(3);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/** @type {LogEntry} */\n\t\t\t\tconst logEntry = {\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\ttype,\n\t\t\t\t\targs,\n\t\t\t\t\ttrace\n\t\t\t\t};\n\t\t\t\tif (this.hooks.log.call(name, logEntry) === undefined) {\n\t\t\t\t\tif (logEntry.type === LogType.profileEnd) {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tif (typeof console.profileEnd === \"function\") {\n\t\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\t\tconsole.profileEnd(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\t\tlogEntries = this.logging.get(name);\n\t\t\t\t\t\tif (logEntries === undefined) {\n\t\t\t\t\t\t\tlogEntries = [];\n\t\t\t\t\t\t\tthis.logging.set(name, logEntries);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlogEntries.push(logEntry);\n\t\t\t\t\tif (logEntry.type === LogType.profile) {\n\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\tif (typeof console.profile === \"function\") {\n\t\t\t\t\t\t\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\t\t\t\t\t\t\tconsole.profile(`[${name}] ${logEntry.args[0]}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildName => {\n\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\treturn this.getLogger(() => {\n\t\t\t\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\t\t\t\tname = name();\n\t\t\t\t\t\t\t\tif (!name) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\t\t\tchildName = childName();\n\t\t\t\t\t\t\t\tif (!childName) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Logger.getChildLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `${name}/${childName}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getLogger(() => {\n\t\t\t\t\t\t\tif (typeof name === \"function\") {\n\t\t\t\t\t\t\t\tname = name();\n\t\t\t\t\t\t\t\tif (!name) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Compilation.getLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `${name}/${childName}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\treturn this.getLogger(() => {\n\t\t\t\t\t\t\tif (typeof childName === \"function\") {\n\t\t\t\t\t\t\t\tchildName = childName();\n\t\t\t\t\t\t\t\tif (!childName) {\n\t\t\t\t\t\t\t\t\tthrow new TypeError(\n\t\t\t\t\t\t\t\t\t\t\"Logger.getChildLogger(name) called with a function not returning a name\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `${name}/${childName}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.getLogger(`${name}/${childName}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to be added that was created\n\t * @param {ModuleCallback} callback returns the module in the compilation,\n\t * it could be the passed one (if new), or an already existing in the compilation\n\t * @returns {void}\n\t */\n\taddModule(module, callback) {\n\t\tthis.addModuleQueue.add(module, callback);\n\t}\n\n\t/**\n\t * @param {Module} module module to be added that was created\n\t * @param {ModuleCallback} callback returns the module in the compilation,\n\t * it could be the passed one (if new), or an already existing in the compilation\n\t * @returns {void}\n\t */\n\t_addModule(module, callback) {\n\t\tconst identifier = module.identifier();\n\t\tconst alreadyAddedModule = this._modules.get(identifier);\n\t\tif (alreadyAddedModule) {\n\t\t\treturn callback(null, alreadyAddedModule);\n\t\t}\n\n\t\tconst currentProfile = this.profile\n\t\t\t? this.moduleGraph.getProfile(module)\n\t\t\t: undefined;\n\t\tif (currentProfile !== undefined) {\n\t\t\tcurrentProfile.markRestoringStart();\n\t\t}\n\n\t\tthis._modulesCache.get(identifier, null, (err, cacheModule) => {\n\t\t\tif (err) return callback(new ModuleRestoreError(module, err));\n\n\t\t\tif (currentProfile !== undefined) {\n\t\t\t\tcurrentProfile.markRestoringEnd();\n\t\t\t\tcurrentProfile.markIntegrationStart();\n\t\t\t}\n\n\t\t\tif (cacheModule) {\n\t\t\t\tcacheModule.updateCacheModule(module);\n\n\t\t\t\tmodule = cacheModule;\n\t\t\t}\n\t\t\tthis._modules.set(identifier, module);\n\t\t\tthis.modules.add(module);\n\t\t\tif (this._backCompat)\n\t\t\t\tModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\t\t\tif (currentProfile !== undefined) {\n\t\t\t\tcurrentProfile.markIntegrationEnd();\n\t\t\t}\n\t\t\tcallback(null, module);\n\t\t});\n\t}\n\n\t/**\n\t * Fetches a module from a compilation by its identifier\n\t * @param {Module} module the module provided\n\t * @returns {Module} the module requested\n\t */\n\tgetModule(module) {\n\t\tconst identifier = module.identifier();\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * Attempts to search for a module by its identifier\n\t * @param {string} identifier identifier (usually path) for module\n\t * @returns {Module|undefined} attempt to search for module and return it, else undefined\n\t */\n\tfindModule(identifier) {\n\t\treturn this._modules.get(identifier);\n\t}\n\n\t/**\n\t * Schedules a build of the module object\n\t *\n\t * @param {Module} module module to be built\n\t * @param {ModuleCallback} callback the callback\n\t * @returns {void}\n\t */\n\tbuildModule(module, callback) {\n\t\tthis.buildQueue.add(module, callback);\n\t}\n\n\t/**\n\t * Builds the module object\n\t *\n\t * @param {Module} module module to be built\n\t * @param {ModuleCallback} callback the callback\n\t * @returns {void}\n\t */\n\t_buildModule(module, callback) {\n\t\tconst currentProfile = this.profile\n\t\t\t? this.moduleGraph.getProfile(module)\n\t\t\t: undefined;\n\t\tif (currentProfile !== undefined) {\n\t\t\tcurrentProfile.markBuildingStart();\n\t\t}\n\n\t\tmodule.needBuild(\n\t\t\t{\n\t\t\t\tcompilation: this,\n\t\t\t\tfileSystemInfo: this.fileSystemInfo,\n\t\t\t\tvalueCacheVersions: this.valueCacheVersions\n\t\t\t},\n\t\t\t(err, needBuild) => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\tif (!needBuild) {\n\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\tcurrentProfile.markBuildingEnd();\n\t\t\t\t\t}\n\t\t\t\t\tthis.hooks.stillValidModule.call(module);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tthis.hooks.buildModule.call(module);\n\t\t\t\tthis.builtModules.add(module);\n\t\t\t\tmodule.build(\n\t\t\t\t\tthis.options,\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.resolverFactory.get(\"normal\", module.resolveOptions),\n\t\t\t\t\tthis.inputFileSystem,\n\t\t\t\t\terr => {\n\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\tcurrentProfile.markBuildingEnd();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthis.hooks.failedModule.call(module, err);\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\tcurrentProfile.markStoringStart();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._modulesCache.store(module.identifier(), null, module, err => {\n\t\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\t\tcurrentProfile.markStoringEnd();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tthis.hooks.failedModule.call(module, err);\n\t\t\t\t\t\t\t\treturn callback(new ModuleStoreError(module, err));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.hooks.succeedModule.call(module);\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @param {ModuleCallback} callback callback to be triggered\n\t * @returns {void}\n\t */\n\tprocessModuleDependencies(module, callback) {\n\t\tthis.processDependenciesQueue.add(module, callback);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @returns {void}\n\t */\n\tprocessModuleDependenciesNonRecursive(module) {\n\t\tconst processDependenciesBlock = block => {\n\t\t\tif (block.dependencies) {\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const dep of block.dependencies) {\n\t\t\t\t\tthis.moduleGraph.setParents(dep, block, module, i++);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (block.blocks) {\n\t\t\t\tfor (const b of block.blocks) processDependenciesBlock(b);\n\t\t\t}\n\t\t};\n\n\t\tprocessDependenciesBlock(module);\n\t}\n\n\t/**\n\t * @param {Module} module to be processed for deps\n\t * @param {ModuleCallback} callback callback to be triggered\n\t * @returns {void}\n\t */\n\t_processModuleDependencies(module, callback) {\n\t\t/** @type {Array<{factory: ModuleFactory, dependencies: Dependency[], context: string|undefined, originModule: Module|null}>} */\n\t\tconst sortedDependencies = [];\n\n\t\t/** @type {DependenciesBlock} */\n\t\tlet currentBlock;\n\n\t\t/** @type {Map<ModuleFactory, Map<string, Dependency[]>>} */\n\t\tlet dependencies;\n\t\t/** @type {DepConstructor} */\n\t\tlet factoryCacheKey;\n\t\t/** @type {ModuleFactory} */\n\t\tlet factoryCacheKey2;\n\t\t/** @type {Map<string, Dependency[]>} */\n\t\tlet factoryCacheValue;\n\t\t/** @type {string} */\n\t\tlet listCacheKey1;\n\t\t/** @type {string} */\n\t\tlet listCacheKey2;\n\t\t/** @type {Dependency[]} */\n\t\tlet listCacheValue;\n\n\t\tlet inProgressSorting = 1;\n\t\tlet inProgressTransitive = 1;\n\n\t\tconst onDependenciesSorted = err => {\n\t\t\tif (err) return callback(err);\n\n\t\t\t// early exit without changing parallelism back and forth\n\t\t\tif (sortedDependencies.length === 0 && inProgressTransitive === 1) {\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\t// This is nested so we need to allow one additional task\n\t\t\tthis.processDependenciesQueue.increaseParallelism();\n\n\t\t\tfor (const item of sortedDependencies) {\n\t\t\t\tinProgressTransitive++;\n\t\t\t\tthis.handleModuleCreation(item, err => {\n\t\t\t\t\t// In V8, the Error objects keep a reference to the functions on the stack. These warnings &\n\t\t\t\t\t// errors are created inside closures that keep a reference to the Compilation, so errors are\n\t\t\t\t\t// leaking the Compilation object.\n\t\t\t\t\tif (err && this.bail) {\n\t\t\t\t\t\tif (inProgressTransitive <= 0) return;\n\t\t\t\t\t\tinProgressTransitive = -1;\n\t\t\t\t\t\t// eslint-disable-next-line no-self-assign\n\t\t\t\t\t\terr.stack = err.stack;\n\t\t\t\t\t\tonTransitiveTasksFinished(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (--inProgressTransitive === 0) onTransitiveTasksFinished();\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (--inProgressTransitive === 0) onTransitiveTasksFinished();\n\t\t};\n\n\t\tconst onTransitiveTasksFinished = err => {\n\t\t\tif (err) return callback(err);\n\t\t\tthis.processDependenciesQueue.decreaseParallelism();\n\n\t\t\treturn callback();\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dep dependency\n\t\t * @param {number} index index in block\n\t\t * @returns {void}\n\t\t */\n\t\tconst processDependency = (dep, index) => {\n\t\t\tthis.moduleGraph.setParents(dep, currentBlock, module, index);\n\t\t\tif (this._unsafeCache) {\n\t\t\t\ttry {\n\t\t\t\t\tconst unsafeCachedModule = unsafeCacheDependencies.get(dep);\n\t\t\t\t\tif (unsafeCachedModule === null) return;\n\t\t\t\t\tif (unsafeCachedModule !== undefined) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._restoredUnsafeCacheModuleEntries.has(unsafeCachedModule)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._handleExistingModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\tunsafeCachedModule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifier = unsafeCachedModule.identifier();\n\t\t\t\t\t\tconst cachedModule =\n\t\t\t\t\t\t\tthis._restoredUnsafeCacheEntries.get(identifier);\n\t\t\t\t\t\tif (cachedModule !== undefined) {\n\t\t\t\t\t\t\t// update unsafe cache to new module\n\t\t\t\t\t\t\tunsafeCacheDependencies.set(dep, cachedModule);\n\t\t\t\t\t\t\tthis._handleExistingModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\tcachedModule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinProgressSorting++;\n\t\t\t\t\t\tthis._modulesCache.get(identifier, null, (err, cachedModule) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tif (inProgressSorting <= 0) return;\n\t\t\t\t\t\t\t\tinProgressSorting = -1;\n\t\t\t\t\t\t\t\tonDependenciesSorted(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!this._restoredUnsafeCacheEntries.has(identifier)) {\n\t\t\t\t\t\t\t\t\tconst data = unsafeCacheData.get(cachedModule);\n\t\t\t\t\t\t\t\t\tif (data === undefined) {\n\t\t\t\t\t\t\t\t\t\tprocessDependencyForResolving(dep);\n\t\t\t\t\t\t\t\t\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (cachedModule !== unsafeCachedModule) {\n\t\t\t\t\t\t\t\t\t\tunsafeCacheDependencies.set(dep, cachedModule);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcachedModule.restoreFromUnsafeCache(\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t\tthis.params.normalModuleFactory,\n\t\t\t\t\t\t\t\t\t\tthis.params\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis._restoredUnsafeCacheEntries.set(\n\t\t\t\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t\t\t\t\tcachedModule\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis._restoredUnsafeCacheModuleEntries.add(cachedModule);\n\t\t\t\t\t\t\t\t\tif (!this.modules.has(cachedModule)) {\n\t\t\t\t\t\t\t\t\t\tinProgressTransitive++;\n\t\t\t\t\t\t\t\t\t\tthis._handleNewModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\t\t\tcachedModule,\n\t\t\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (inProgressTransitive <= 0) return;\n\t\t\t\t\t\t\t\t\t\t\t\t\tinProgressTransitive = -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tonTransitiveTasksFinished(err);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (--inProgressTransitive === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn onTransitiveTasksFinished();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (unsafeCachedModule !== cachedModule) {\n\t\t\t\t\t\t\t\t\tunsafeCacheDependencies.set(dep, cachedModule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._handleExistingModuleFromUnsafeCache(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tdep,\n\t\t\t\t\t\t\t\t\tcachedModule\n\t\t\t\t\t\t\t\t); // a3\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (inProgressSorting <= 0) return;\n\t\t\t\t\t\t\t\tinProgressSorting = -1;\n\t\t\t\t\t\t\t\tonDependenciesSorted(err);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessDependencyForResolving(dep);\n\t\t};\n\n\t\t/**\n\t\t * @param {Dependency} dep dependency\n\t\t * @returns {void}\n\t\t */\n\t\tconst processDependencyForResolving = dep => {\n\t\t\tconst resourceIdent = dep.getResourceIdentifier();\n\t\t\tif (resourceIdent !== undefined && resourceIdent !== null) {\n\t\t\t\tconst category = dep.category;\n\t\t\t\tconst constructor = /** @type {DepConstructor} */ (dep.constructor);\n\t\t\t\tif (factoryCacheKey === constructor) {\n\t\t\t\t\t// Fast path 1: same constructor as prev item\n\t\t\t\t\tif (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n\t\t\t\t\t\t// Super fast path 1: also same resource\n\t\t\t\t\t\tlistCacheValue.push(dep);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst factory = this.dependencyFactories.get(constructor);\n\t\t\t\t\tif (factory === undefined) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`No module factory available for dependency type: ${constructor.name}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (factoryCacheKey2 === factory) {\n\t\t\t\t\t\t// Fast path 2: same factory as prev item\n\t\t\t\t\t\tfactoryCacheKey = constructor;\n\t\t\t\t\t\tif (listCacheKey1 === category && listCacheKey2 === resourceIdent) {\n\t\t\t\t\t\t\t// Super fast path 2: also same resource\n\t\t\t\t\t\t\tlistCacheValue.push(dep);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Slow path\n\t\t\t\t\t\tif (factoryCacheKey2 !== undefined) {\n\t\t\t\t\t\t\t// Archive last cache entry\n\t\t\t\t\t\t\tif (dependencies === undefined) dependencies = new Map();\n\t\t\t\t\t\t\tdependencies.set(factoryCacheKey2, factoryCacheValue);\n\t\t\t\t\t\t\tfactoryCacheValue = dependencies.get(factory);\n\t\t\t\t\t\t\tif (factoryCacheValue === undefined) {\n\t\t\t\t\t\t\t\tfactoryCacheValue = new Map();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfactoryCacheValue = new Map();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfactoryCacheKey = constructor;\n\t\t\t\t\t\tfactoryCacheKey2 = factory;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Here webpack is using heuristic that assumes\n\t\t\t\t// mostly esm dependencies would be used\n\t\t\t\t// so we don't allocate extra string for them\n\t\t\t\tconst cacheKey =\n\t\t\t\t\tcategory === esmDependencyCategory\n\t\t\t\t\t\t? resourceIdent\n\t\t\t\t\t\t: `${category}${resourceIdent}`;\n\t\t\t\tlet list = factoryCacheValue.get(cacheKey);\n\t\t\t\tif (list === undefined) {\n\t\t\t\t\tfactoryCacheValue.set(cacheKey, (list = []));\n\t\t\t\t\tsortedDependencies.push({\n\t\t\t\t\t\tfactory: factoryCacheKey2,\n\t\t\t\t\t\tdependencies: list,\n\t\t\t\t\t\tcontext: dep.getContext(),\n\t\t\t\t\t\toriginModule: module\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tlist.push(dep);\n\t\t\t\tlistCacheKey1 = category;\n\t\t\t\tlistCacheKey2 = resourceIdent;\n\t\t\t\tlistCacheValue = list;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\t/** @type {DependenciesBlock[]} */\n\t\t\tconst queue = [module];\n\t\t\tdo {\n\t\t\t\tconst block = queue.pop();\n\t\t\t\tif (block.dependencies) {\n\t\t\t\t\tcurrentBlock = block;\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (const dep of block.dependencies) processDependency(dep, i++);\n\t\t\t\t}\n\t\t\t\tif (block.blocks) {\n\t\t\t\t\tfor (const b of block.blocks) queue.push(b);\n\t\t\t\t}\n\t\t\t} while (queue.length !== 0);\n\t\t} catch (e) {\n\t\t\treturn callback(e);\n\t\t}\n\n\t\tif (--inProgressSorting === 0) onDependenciesSorted();\n\t}\n\n\t_handleNewModuleFromUnsafeCache(originModule, dependency, module, callback) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tmoduleGraph.setResolvedModule(originModule, dependency, module);\n\n\t\tmoduleGraph.setIssuerIfUnset(\n\t\t\tmodule,\n\t\t\toriginModule !== undefined ? originModule : null\n\t\t);\n\n\t\tthis._modules.set(module.identifier(), module);\n\t\tthis.modules.add(module);\n\t\tif (this._backCompat)\n\t\t\tModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\n\t\tthis._handleModuleBuildAndDependencies(\n\t\t\toriginModule,\n\t\t\tmodule,\n\t\t\ttrue,\n\t\t\tcallback\n\t\t);\n\t}\n\n\t_handleExistingModuleFromUnsafeCache(originModule, dependency, module) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tmoduleGraph.setResolvedModule(originModule, dependency, module);\n\t}\n\n\t/**\n\t * @typedef {Object} HandleModuleCreationOptions\n\t * @property {ModuleFactory} factory\n\t * @property {Dependency[]} dependencies\n\t * @property {Module | null} originModule\n\t * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n\t * @property {string=} context\n\t * @property {boolean=} recursive recurse into dependencies of the created module\n\t * @property {boolean=} connectOrigin connect the resolved module with the origin module\n\t */\n\n\t/**\n\t * @param {HandleModuleCreationOptions} options options object\n\t * @param {ModuleCallback} callback callback\n\t * @returns {void}\n\t */\n\thandleModuleCreation(\n\t\t{\n\t\t\tfactory,\n\t\t\tdependencies,\n\t\t\toriginModule,\n\t\t\tcontextInfo,\n\t\t\tcontext,\n\t\t\trecursive = true,\n\t\t\tconnectOrigin = recursive\n\t\t},\n\t\tcallback\n\t) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tconst currentProfile = this.profile ? new ModuleProfile() : undefined;\n\n\t\tthis.factorizeModule(\n\t\t\t{\n\t\t\t\tcurrentProfile,\n\t\t\t\tfactory,\n\t\t\t\tdependencies,\n\t\t\t\tfactoryResult: true,\n\t\t\t\toriginModule,\n\t\t\t\tcontextInfo,\n\t\t\t\tcontext\n\t\t\t},\n\t\t\t(err, factoryResult) => {\n\t\t\t\tconst applyFactoryResultDependencies = () => {\n\t\t\t\t\tconst { fileDependencies, contextDependencies, missingDependencies } =\n\t\t\t\t\t\tfactoryResult;\n\t\t\t\t\tif (fileDependencies) {\n\t\t\t\t\t\tthis.fileDependencies.addAll(fileDependencies);\n\t\t\t\t\t}\n\t\t\t\t\tif (contextDependencies) {\n\t\t\t\t\t\tthis.contextDependencies.addAll(contextDependencies);\n\t\t\t\t\t}\n\t\t\t\t\tif (missingDependencies) {\n\t\t\t\t\t\tthis.missingDependencies.addAll(missingDependencies);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (err) {\n\t\t\t\t\tif (factoryResult) applyFactoryResultDependencies();\n\t\t\t\t\tif (dependencies.every(d => d.optional)) {\n\t\t\t\t\t\tthis.warnings.push(err);\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst newModule = factoryResult.module;\n\n\t\t\t\tif (!newModule) {\n\t\t\t\t\tapplyFactoryResultDependencies();\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\tmoduleGraph.setProfile(newModule, currentProfile);\n\t\t\t\t}\n\n\t\t\t\tthis.addModule(newModule, (err, module) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tapplyFactoryResultDependencies();\n\t\t\t\t\t\tif (!err.module) {\n\t\t\t\t\t\t\terr.module = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.errors.push(err);\n\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._unsafeCache &&\n\t\t\t\t\t\tfactoryResult.cacheable !== false &&\n\t\t\t\t\t\t/** @type {any} */ (module).restoreFromUnsafeCache &&\n\t\t\t\t\t\tthis._unsafeCachePredicate(module)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst unsafeCacheableModule =\n\t\t\t\t\t\t\t/** @type {Module & { restoreFromUnsafeCache: Function }} */ (\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\t\t\tmoduleGraph.setResolvedModule(\n\t\t\t\t\t\t\t\tconnectOrigin ? originModule : null,\n\t\t\t\t\t\t\t\tdependency,\n\t\t\t\t\t\t\t\tunsafeCacheableModule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tunsafeCacheDependencies.set(dependency, unsafeCacheableModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!unsafeCacheData.has(unsafeCacheableModule)) {\n\t\t\t\t\t\t\tunsafeCacheData.set(\n\t\t\t\t\t\t\t\tunsafeCacheableModule,\n\t\t\t\t\t\t\t\tunsafeCacheableModule.getUnsafeCacheData()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapplyFactoryResultDependencies();\n\t\t\t\t\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\t\t\tmoduleGraph.setResolvedModule(\n\t\t\t\t\t\t\t\tconnectOrigin ? originModule : null,\n\t\t\t\t\t\t\t\tdependency,\n\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmoduleGraph.setIssuerIfUnset(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\toriginModule !== undefined ? originModule : null\n\t\t\t\t\t);\n\t\t\t\t\tif (module !== newModule) {\n\t\t\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\t\t\tconst otherProfile = moduleGraph.getProfile(module);\n\t\t\t\t\t\t\tif (otherProfile !== undefined) {\n\t\t\t\t\t\t\t\tcurrentProfile.mergeInto(otherProfile);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmoduleGraph.setProfile(module, currentProfile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._handleModuleBuildAndDependencies(\n\t\t\t\t\t\toriginModule,\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\trecursive,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t_handleModuleBuildAndDependencies(originModule, module, recursive, callback) {\n\t\t// Check for cycles when build is trigger inside another build\n\t\tlet creatingModuleDuringBuildSet = undefined;\n\t\tif (!recursive && this.buildQueue.isProcessing(originModule)) {\n\t\t\t// Track build dependency\n\t\t\tcreatingModuleDuringBuildSet =\n\t\t\t\tthis.creatingModuleDuringBuild.get(originModule);\n\t\t\tif (creatingModuleDuringBuildSet === undefined) {\n\t\t\t\tcreatingModuleDuringBuildSet = new Set();\n\t\t\t\tthis.creatingModuleDuringBuild.set(\n\t\t\t\t\toriginModule,\n\t\t\t\t\tcreatingModuleDuringBuildSet\n\t\t\t\t);\n\t\t\t}\n\t\t\tcreatingModuleDuringBuildSet.add(module);\n\n\t\t\t// When building is blocked by another module\n\t\t\t// search for a cycle, cancel the cycle by throwing\n\t\t\t// an error (otherwise this would deadlock)\n\t\t\tconst blockReasons = this.creatingModuleDuringBuild.get(module);\n\t\t\tif (blockReasons !== undefined) {\n\t\t\t\tconst set = new Set(blockReasons);\n\t\t\t\tfor (const item of set) {\n\t\t\t\t\tconst blockReasons = this.creatingModuleDuringBuild.get(item);\n\t\t\t\t\tif (blockReasons !== undefined) {\n\t\t\t\t\t\tfor (const m of blockReasons) {\n\t\t\t\t\t\t\tif (m === module) {\n\t\t\t\t\t\t\t\treturn callback(new BuildCycleError(module));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tset.add(m);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.buildModule(module, err => {\n\t\t\tif (creatingModuleDuringBuildSet !== undefined) {\n\t\t\t\tcreatingModuleDuringBuildSet.delete(module);\n\t\t\t}\n\t\t\tif (err) {\n\t\t\t\tif (!err.module) {\n\t\t\t\t\terr.module = module;\n\t\t\t\t}\n\t\t\t\tthis.errors.push(err);\n\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\tif (!recursive) {\n\t\t\t\tthis.processModuleDependenciesNonRecursive(module);\n\t\t\t\tcallback(null, module);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This avoids deadlocks for circular dependencies\n\t\t\tif (this.processDependenciesQueue.isProcessing(module)) {\n\t\t\t\treturn callback(null, module);\n\t\t\t}\n\n\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tcallback(null, module);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {FactorizeModuleOptions} options options object\n\t * @param {ModuleOrFactoryResultCallback} callback callback\n\t * @returns {void}\n\t */\n\t_factorizeModule(\n\t\t{\n\t\t\tcurrentProfile,\n\t\t\tfactory,\n\t\t\tdependencies,\n\t\t\toriginModule,\n\t\t\tfactoryResult,\n\t\t\tcontextInfo,\n\t\t\tcontext\n\t\t},\n\t\tcallback\n\t) {\n\t\tif (currentProfile !== undefined) {\n\t\t\tcurrentProfile.markFactoryStart();\n\t\t}\n\t\tfactory.create(\n\t\t\t{\n\t\t\t\tcontextInfo: {\n\t\t\t\t\tissuer: originModule ? originModule.nameForCondition() : \"\",\n\t\t\t\t\tissuerLayer: originModule ? originModule.layer : null,\n\t\t\t\t\tcompiler: this.compiler.name,\n\t\t\t\t\t...contextInfo\n\t\t\t\t},\n\t\t\t\tresolveOptions: originModule ? originModule.resolveOptions : undefined,\n\t\t\t\tcontext: context\n\t\t\t\t\t? context\n\t\t\t\t\t: originModule\n\t\t\t\t\t? originModule.context\n\t\t\t\t\t: this.compiler.context,\n\t\t\t\tdependencies: dependencies\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\t// TODO webpack 6: remove\n\t\t\t\t\t// For backward-compat\n\t\t\t\t\tif (result.module === undefined && result instanceof Module) {\n\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\tmodule: result\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (!factoryResult) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\tmissingDependencies\n\t\t\t\t\t\t} = result;\n\t\t\t\t\t\tif (fileDependencies) {\n\t\t\t\t\t\t\tthis.fileDependencies.addAll(fileDependencies);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (contextDependencies) {\n\t\t\t\t\t\t\tthis.contextDependencies.addAll(contextDependencies);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (missingDependencies) {\n\t\t\t\t\t\t\tthis.missingDependencies.addAll(missingDependencies);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (err) {\n\t\t\t\t\tconst notFoundError = new ModuleNotFoundError(\n\t\t\t\t\t\toriginModule,\n\t\t\t\t\t\terr,\n\t\t\t\t\t\tdependencies.map(d => d.loc).filter(Boolean)[0]\n\t\t\t\t\t);\n\t\t\t\t\treturn callback(notFoundError, factoryResult ? result : undefined);\n\t\t\t\t}\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tif (currentProfile !== undefined) {\n\t\t\t\t\tcurrentProfile.markFactoryEnd();\n\t\t\t\t}\n\n\t\t\t\tcallback(null, factoryResult ? result : result.module);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context string path\n\t * @param {Dependency} dependency dependency used to create Module chain\n\t * @param {ModuleCallback} callback callback for when module chain is complete\n\t * @returns {void} will throw if dependency instance is not a valid Dependency\n\t */\n\taddModuleChain(context, dependency, callback) {\n\t\treturn this.addModuleTree({ context, dependency }, callback);\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.context context string path\n\t * @param {Dependency} options.dependency dependency used to create Module chain\n\t * @param {Partial<ModuleFactoryCreateDataContextInfo>=} options.contextInfo additional context info for the root module\n\t * @param {ModuleCallback} callback callback for when module chain is complete\n\t * @returns {void} will throw if dependency instance is not a valid Dependency\n\t */\n\taddModuleTree({ context, dependency, contextInfo }, callback) {\n\t\tif (\n\t\t\ttypeof dependency !== \"object\" ||\n\t\t\tdependency === null ||\n\t\t\t!dependency.constructor\n\t\t) {\n\t\t\treturn callback(\n\t\t\t\tnew WebpackError(\"Parameter 'dependency' must be a Dependency\")\n\t\t\t);\n\t\t}\n\t\tconst Dep = /** @type {DepConstructor} */ (dependency.constructor);\n\t\tconst moduleFactory = this.dependencyFactories.get(Dep);\n\t\tif (!moduleFactory) {\n\t\t\treturn callback(\n\t\t\t\tnew WebpackError(\n\t\t\t\t\t`No dependency factory available for this dependency type: ${dependency.constructor.name}`\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.handleModuleCreation(\n\t\t\t{\n\t\t\t\tfactory: moduleFactory,\n\t\t\t\tdependencies: [dependency],\n\t\t\t\toriginModule: null,\n\t\t\t\tcontextInfo,\n\t\t\t\tcontext\n\t\t\t},\n\t\t\t(err, result) => {\n\t\t\t\tif (err && this.bail) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t\tthis.buildQueue.stop();\n\t\t\t\t\tthis.rebuildQueue.stop();\n\t\t\t\t\tthis.processDependenciesQueue.stop();\n\t\t\t\t\tthis.factorizeQueue.stop();\n\t\t\t\t} else if (!err && result) {\n\t\t\t\t\tcallback(null, result);\n\t\t\t\t} else {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context path for entry\n\t * @param {Dependency} entry entry dependency that should be followed\n\t * @param {string | EntryOptions} optionsOrName options or deprecated name of entry\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\taddEntry(context, entry, optionsOrName, callback) {\n\t\t// TODO webpack 6 remove\n\t\tconst options =\n\t\t\ttypeof optionsOrName === \"object\"\n\t\t\t\t? optionsOrName\n\t\t\t\t: { name: optionsOrName };\n\n\t\tthis._addEntryItem(context, entry, \"dependencies\", options, callback);\n\t}\n\n\t/**\n\t * @param {string} context context path for entry\n\t * @param {Dependency} dependency dependency that should be followed\n\t * @param {EntryOptions} options options\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\taddInclude(context, dependency, options, callback) {\n\t\tthis._addEntryItem(\n\t\t\tcontext,\n\t\t\tdependency,\n\t\t\t\"includeDependencies\",\n\t\t\toptions,\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context path for entry\n\t * @param {Dependency} entry entry dependency that should be followed\n\t * @param {\"dependencies\" | \"includeDependencies\"} target type of entry\n\t * @param {EntryOptions} options options\n\t * @param {ModuleCallback} callback callback function\n\t * @returns {void} returns\n\t */\n\t_addEntryItem(context, entry, target, options, callback) {\n\t\tconst { name } = options;\n\t\tlet entryData =\n\t\t\tname !== undefined ? this.entries.get(name) : this.globalEntry;\n\t\tif (entryData === undefined) {\n\t\t\tentryData = {\n\t\t\t\tdependencies: [],\n\t\t\t\tincludeDependencies: [],\n\t\t\t\toptions: {\n\t\t\t\t\tname: undefined,\n\t\t\t\t\t...options\n\t\t\t\t}\n\t\t\t};\n\t\t\tentryData[target].push(entry);\n\t\t\tthis.entries.set(name, entryData);\n\t\t} else {\n\t\t\tentryData[target].push(entry);\n\t\t\tfor (const key of Object.keys(options)) {\n\t\t\t\tif (options[key] === undefined) continue;\n\t\t\t\tif (entryData.options[key] === options[key]) continue;\n\t\t\t\tif (\n\t\t\t\t\tArray.isArray(entryData.options[key]) &&\n\t\t\t\t\tArray.isArray(options[key]) &&\n\t\t\t\t\tarrayEquals(entryData.options[key], options[key])\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (entryData.options[key] === undefined) {\n\t\t\t\t\tentryData.options[key] = options[key];\n\t\t\t\t} else {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t\t`Conflicting entry option ${key} = ${entryData.options[key]} vs ${options[key]}`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.hooks.addEntry.call(entry, options);\n\n\t\tthis.addModuleTree(\n\t\t\t{\n\t\t\t\tcontext,\n\t\t\t\tdependency: entry,\n\t\t\t\tcontextInfo: entryData.options.layer\n\t\t\t\t\t? { issuerLayer: entryData.options.layer }\n\t\t\t\t\t: undefined\n\t\t\t},\n\t\t\t(err, module) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthis.hooks.failedEntry.call(entry, options, err);\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tthis.hooks.succeedEntry.call(entry, options, module);\n\t\t\t\treturn callback(null, module);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module module to be rebuilt\n\t * @param {ModuleCallback} callback callback when module finishes rebuilding\n\t * @returns {void}\n\t */\n\trebuildModule(module, callback) {\n\t\tthis.rebuildQueue.add(module, callback);\n\t}\n\n\t/**\n\t * @param {Module} module module to be rebuilt\n\t * @param {ModuleCallback} callback callback when module finishes rebuilding\n\t * @returns {void}\n\t */\n\t_rebuildModule(module, callback) {\n\t\tthis.hooks.rebuildModule.call(module);\n\t\tconst oldDependencies = module.dependencies.slice();\n\t\tconst oldBlocks = module.blocks.slice();\n\t\tmodule.invalidateBuild();\n\t\tthis.buildQueue.invalidate(module);\n\t\tthis.buildModule(module, err => {\n\t\t\tif (err) {\n\t\t\t\treturn this.hooks.finishRebuildingModule.callAsync(module, err2 => {\n\t\t\t\t\tif (err2) {\n\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\tmakeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallback(err);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.processDependenciesQueue.invalidate(module);\n\t\t\tthis.moduleGraph.unfreeze();\n\t\t\tthis.processModuleDependencies(module, err => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, {\n\t\t\t\t\tdependencies: oldDependencies,\n\t\t\t\t\tblocks: oldBlocks\n\t\t\t\t});\n\t\t\t\tthis.hooks.finishRebuildingModule.callAsync(module, err2 => {\n\t\t\t\t\tif (err2) {\n\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\tmakeWebpackError(err2, \"Compilation.hooks.finishRebuildingModule\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallback(null, module);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t_computeAffectedModules(modules) {\n\t\tconst moduleMemCacheCache = this.compiler.moduleMemCaches;\n\t\tif (!moduleMemCacheCache) return;\n\t\tif (!this.moduleMemCaches) {\n\t\t\tthis.moduleMemCaches = new Map();\n\t\t\tthis.moduleGraph.setModuleMemCaches(this.moduleMemCaches);\n\t\t}\n\t\tconst { moduleGraph, moduleMemCaches } = this;\n\t\tconst affectedModules = new Set();\n\t\tconst infectedModules = new Set();\n\t\tlet statNew = 0;\n\t\tlet statChanged = 0;\n\t\tlet statUnchanged = 0;\n\t\tlet statReferencesChanged = 0;\n\t\tlet statWithoutBuild = 0;\n\n\t\tconst computeReferences = module => {\n\t\t\t/** @type {WeakMap<Dependency, Module>} */\n\t\t\tlet references = undefined;\n\t\t\tfor (const connection of moduleGraph.getOutgoingConnections(module)) {\n\t\t\t\tconst d = connection.dependency;\n\t\t\t\tconst m = connection.module;\n\t\t\t\tif (!d || !m || unsafeCacheDependencies.has(d)) continue;\n\t\t\t\tif (references === undefined) references = new WeakMap();\n\t\t\t\treferences.set(d, m);\n\t\t\t}\n\t\t\treturn references;\n\t\t};\n\n\t\t/**\n\t\t * @param {Module} module the module\n\t\t * @param {WeakMap<Dependency, Module>} references references\n\t\t * @returns {boolean} true, when the references differ\n\t\t */\n\t\tconst compareReferences = (module, references) => {\n\t\t\tif (references === undefined) return true;\n\t\t\tfor (const connection of moduleGraph.getOutgoingConnections(module)) {\n\t\t\t\tconst d = connection.dependency;\n\t\t\t\tif (!d) continue;\n\t\t\t\tconst entry = references.get(d);\n\t\t\t\tif (entry === undefined) continue;\n\t\t\t\tif (entry !== connection.module) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst modulesWithoutCache = new Set(modules);\n\t\tfor (const [module, cachedMemCache] of moduleMemCacheCache) {\n\t\t\tif (modulesWithoutCache.has(module)) {\n\t\t\t\tconst buildInfo = module.buildInfo;\n\t\t\t\tif (buildInfo) {\n\t\t\t\t\tif (cachedMemCache.buildInfo !== buildInfo) {\n\t\t\t\t\t\t// use a new one\n\t\t\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\t\t\tmoduleMemCaches.set(module, memCache);\n\t\t\t\t\t\taffectedModules.add(module);\n\t\t\t\t\t\tcachedMemCache.buildInfo = buildInfo;\n\t\t\t\t\t\tcachedMemCache.references = computeReferences(module);\n\t\t\t\t\t\tcachedMemCache.memCache = memCache;\n\t\t\t\t\t\tstatChanged++;\n\t\t\t\t\t} else if (!compareReferences(module, cachedMemCache.references)) {\n\t\t\t\t\t\t// use a new one\n\t\t\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\t\t\tmoduleMemCaches.set(module, memCache);\n\t\t\t\t\t\taffectedModules.add(module);\n\t\t\t\t\t\tcachedMemCache.references = computeReferences(module);\n\t\t\t\t\t\tcachedMemCache.memCache = memCache;\n\t\t\t\t\t\tstatReferencesChanged++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep the old mem cache\n\t\t\t\t\t\tmoduleMemCaches.set(module, cachedMemCache.memCache);\n\t\t\t\t\t\tstatUnchanged++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinfectedModules.add(module);\n\t\t\t\t\tmoduleMemCacheCache.delete(module);\n\t\t\t\t\tstatWithoutBuild++;\n\t\t\t\t}\n\t\t\t\tmodulesWithoutCache.delete(module);\n\t\t\t} else {\n\t\t\t\tmoduleMemCacheCache.delete(module);\n\t\t\t}\n\t\t}\n\n\t\tfor (const module of modulesWithoutCache) {\n\t\t\tconst buildInfo = module.buildInfo;\n\t\t\tif (buildInfo) {\n\t\t\t\t// create a new entry\n\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\tmoduleMemCacheCache.set(module, {\n\t\t\t\t\tbuildInfo,\n\t\t\t\t\treferences: computeReferences(module),\n\t\t\t\t\tmemCache\n\t\t\t\t});\n\t\t\t\tmoduleMemCaches.set(module, memCache);\n\t\t\t\taffectedModules.add(module);\n\t\t\t\tstatNew++;\n\t\t\t} else {\n\t\t\t\tinfectedModules.add(module);\n\t\t\t\tstatWithoutBuild++;\n\t\t\t}\n\t\t}\n\n\t\tconst reduceAffectType = connections => {\n\t\t\tlet affected = false;\n\t\t\tfor (const { dependency } of connections) {\n\t\t\t\tif (!dependency) continue;\n\t\t\t\tconst type = dependency.couldAffectReferencingModule();\n\t\t\t\tif (type === Dependency.TRANSITIVE) return Dependency.TRANSITIVE;\n\t\t\t\tif (type === false) continue;\n\t\t\t\taffected = true;\n\t\t\t}\n\t\t\treturn affected;\n\t\t};\n\t\tconst directOnlyInfectedModules = new Set();\n\t\tfor (const module of infectedModules) {\n\t\t\tfor (const [\n\t\t\t\treferencingModule,\n\t\t\t\tconnections\n\t\t\t] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {\n\t\t\t\tif (!referencingModule) continue;\n\t\t\t\tif (infectedModules.has(referencingModule)) continue;\n\t\t\t\tconst type = reduceAffectType(connections);\n\t\t\t\tif (!type) continue;\n\t\t\t\tif (type === true) {\n\t\t\t\t\tdirectOnlyInfectedModules.add(referencingModule);\n\t\t\t\t} else {\n\t\t\t\t\tinfectedModules.add(referencingModule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const module of directOnlyInfectedModules) infectedModules.add(module);\n\t\tconst directOnlyAffectModules = new Set();\n\t\tfor (const module of affectedModules) {\n\t\t\tfor (const [\n\t\t\t\treferencingModule,\n\t\t\t\tconnections\n\t\t\t] of moduleGraph.getIncomingConnectionsByOriginModule(module)) {\n\t\t\t\tif (!referencingModule) continue;\n\t\t\t\tif (infectedModules.has(referencingModule)) continue;\n\t\t\t\tif (affectedModules.has(referencingModule)) continue;\n\t\t\t\tconst type = reduceAffectType(connections);\n\t\t\t\tif (!type) continue;\n\t\t\t\tif (type === true) {\n\t\t\t\t\tdirectOnlyAffectModules.add(referencingModule);\n\t\t\t\t} else {\n\t\t\t\t\taffectedModules.add(referencingModule);\n\t\t\t\t}\n\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\tconst cache = moduleMemCacheCache.get(referencingModule);\n\t\t\t\tcache.memCache = memCache;\n\t\t\t\tmoduleMemCaches.set(referencingModule, memCache);\n\t\t\t}\n\t\t}\n\t\tfor (const module of directOnlyAffectModules) affectedModules.add(module);\n\t\tthis.logger.log(\n\t\t\t`${Math.round(\n\t\t\t\t(100 * (affectedModules.size + infectedModules.size)) /\n\t\t\t\t\tthis.modules.size\n\t\t\t)}% (${affectedModules.size} affected + ${\n\t\t\t\tinfectedModules.size\n\t\t\t} infected of ${\n\t\t\t\tthis.modules.size\n\t\t\t}) modules flagged as affected (${statNew} new modules, ${statChanged} changed, ${statReferencesChanged} references changed, ${statUnchanged} unchanged, ${statWithoutBuild} were not built)`\n\t\t);\n\t}\n\n\t_computeAffectedModulesWithChunkGraph() {\n\t\tconst { moduleMemCaches } = this;\n\t\tif (!moduleMemCaches) return;\n\t\tconst moduleMemCaches2 = (this.moduleMemCaches2 = new Map());\n\t\tconst { moduleGraph, chunkGraph } = this;\n\t\tconst key = \"memCache2\";\n\t\tlet statUnchanged = 0;\n\t\tlet statChanged = 0;\n\t\tlet statNew = 0;\n\t\t/**\n\t\t * @param {Module} module module\n\t\t * @returns {{ id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[] }} references\n\t\t */\n\t\tconst computeReferences = module => {\n\t\t\tconst id = chunkGraph.getModuleId(module);\n\t\t\t/** @type {Map<Module, string | number | undefined>} */\n\t\t\tlet modules = undefined;\n\t\t\t/** @type {(string | number)[] | undefined} */\n\t\t\tlet blocks = undefined;\n\t\t\tconst outgoing = moduleGraph.getOutgoingConnectionsByModule(module);\n\t\t\tif (outgoing !== undefined) {\n\t\t\t\tfor (const m of outgoing.keys()) {\n\t\t\t\t\tif (!m) continue;\n\t\t\t\t\tif (modules === undefined) modules = new Map();\n\t\t\t\t\tmodules.set(m, chunkGraph.getModuleId(m));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.blocks.length > 0) {\n\t\t\t\tblocks = [];\n\t\t\t\tconst queue = Array.from(module.blocks);\n\t\t\t\tfor (const block of queue) {\n\t\t\t\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\t\t\t\tif (chunkGroup) {\n\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\tblocks.push(chunk.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblocks.push(null);\n\t\t\t\t\t}\n\t\t\t\t\tqueue.push.apply(queue, block.blocks);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { id, modules, blocks };\n\t\t};\n\t\t/**\n\t\t * @param {Module} module module\n\t\t * @param {Object} references references\n\t\t * @param {string | number} references.id id\n\t\t * @param {Map<Module, string | number>=} references.modules modules\n\t\t * @param {(string | number)[]=} references.blocks blocks\n\t\t * @returns {boolean} ok?\n\t\t */\n\t\tconst compareReferences = (module, { id, modules, blocks }) => {\n\t\t\tif (id !== chunkGraph.getModuleId(module)) return false;\n\t\t\tif (modules !== undefined) {\n\t\t\t\tfor (const [module, id] of modules) {\n\t\t\t\t\tif (chunkGraph.getModuleId(module) !== id) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (blocks !== undefined) {\n\t\t\t\tconst queue = Array.from(module.blocks);\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const block of queue) {\n\t\t\t\t\tconst chunkGroup = chunkGraph.getBlockChunkGroup(block);\n\t\t\t\t\tif (chunkGroup) {\n\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\tif (i >= blocks.length || blocks[i++] !== chunk.id) return false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (i >= blocks.length || blocks[i++] !== null) return false;\n\t\t\t\t\t}\n\t\t\t\t\tqueue.push.apply(queue, block.blocks);\n\t\t\t\t}\n\t\t\t\tif (i !== blocks.length) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tfor (const [module, memCache] of moduleMemCaches) {\n\t\t\t/** @type {{ references: { id: string | number, modules?: Map<Module, string | number | undefined>, blocks?: (string | number)[]}, memCache: WeakTupleMap<any[], any> }} */\n\t\t\tconst cache = memCache.get(key);\n\t\t\tif (cache === undefined) {\n\t\t\t\tconst memCache2 = new WeakTupleMap();\n\t\t\t\tmemCache.set(key, {\n\t\t\t\t\treferences: computeReferences(module),\n\t\t\t\t\tmemCache: memCache2\n\t\t\t\t});\n\t\t\t\tmoduleMemCaches2.set(module, memCache2);\n\t\t\t\tstatNew++;\n\t\t\t} else if (!compareReferences(module, cache.references)) {\n\t\t\t\tconst memCache = new WeakTupleMap();\n\t\t\t\tcache.references = computeReferences(module);\n\t\t\t\tcache.memCache = memCache;\n\t\t\t\tmoduleMemCaches2.set(module, memCache);\n\t\t\t\tstatChanged++;\n\t\t\t} else {\n\t\t\t\tmoduleMemCaches2.set(module, cache.memCache);\n\t\t\t\tstatUnchanged++;\n\t\t\t}\n\t\t}\n\n\t\tthis.logger.log(\n\t\t\t`${Math.round(\n\t\t\t\t(100 * statChanged) / (statNew + statChanged + statUnchanged)\n\t\t\t)}% modules flagged as affected by chunk graph (${statNew} new modules, ${statChanged} changed, ${statUnchanged} unchanged)`\n\t\t);\n\t}\n\n\tfinish(callback) {\n\t\tthis.factorizeQueue.clear();\n\t\tif (this.profile) {\n\t\t\tthis.logger.time(\"finish module profiles\");\n\t\t\tconst ParallelismFactorCalculator = require(\"./util/ParallelismFactorCalculator\");\n\t\t\tconst p = new ParallelismFactorCalculator();\n\t\t\tconst moduleGraph = this.moduleGraph;\n\t\t\tconst modulesWithProfiles = new Map();\n\t\t\tfor (const module of this.modules) {\n\t\t\t\tconst profile = moduleGraph.getProfile(module);\n\t\t\t\tif (!profile) continue;\n\t\t\t\tmodulesWithProfiles.set(module, profile);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.buildingStartTime,\n\t\t\t\t\tprofile.buildingEndTime,\n\t\t\t\t\tf => (profile.buildingParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.factoryStartTime,\n\t\t\t\t\tprofile.factoryEndTime,\n\t\t\t\t\tf => (profile.factoryParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.integrationStartTime,\n\t\t\t\t\tprofile.integrationEndTime,\n\t\t\t\t\tf => (profile.integrationParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.storingStartTime,\n\t\t\t\t\tprofile.storingEndTime,\n\t\t\t\t\tf => (profile.storingParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tp.range(\n\t\t\t\t\tprofile.restoringStartTime,\n\t\t\t\t\tprofile.restoringEndTime,\n\t\t\t\t\tf => (profile.restoringParallelismFactor = f)\n\t\t\t\t);\n\t\t\t\tif (profile.additionalFactoryTimes) {\n\t\t\t\t\tfor (const { start, end } of profile.additionalFactoryTimes) {\n\t\t\t\t\t\tconst influence = (end - start) / profile.additionalFactories;\n\t\t\t\t\t\tp.range(\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend,\n\t\t\t\t\t\t\tf =>\n\t\t\t\t\t\t\t\t(profile.additionalFactoriesParallelismFactor += f * influence)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tp.calculate();\n\n\t\t\tconst logger = this.getLogger(\"webpack.Compilation.ModuleProfile\");\n\t\t\t// Avoid coverage problems due indirect changes\n\t\t\t/* istanbul ignore next */\n\t\t\tconst logByValue = (value, msg) => {\n\t\t\t\tif (value > 1000) {\n\t\t\t\t\tlogger.error(msg);\n\t\t\t\t} else if (value > 500) {\n\t\t\t\t\tlogger.warn(msg);\n\t\t\t\t} else if (value > 200) {\n\t\t\t\t\tlogger.info(msg);\n\t\t\t\t} else if (value > 30) {\n\t\t\t\t\tlogger.log(msg);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.debug(msg);\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst logNormalSummary = (category, getDuration, getParallelism) => {\n\t\t\t\tlet sum = 0;\n\t\t\t\tlet max = 0;\n\t\t\t\tfor (const [module, profile] of modulesWithProfiles) {\n\t\t\t\t\tconst p = getParallelism(profile);\n\t\t\t\t\tconst d = getDuration(profile);\n\t\t\t\t\tif (d === 0 || p === 0) continue;\n\t\t\t\t\tconst t = d / p;\n\t\t\t\t\tsum += t;\n\t\t\t\t\tif (t <= 10) continue;\n\t\t\t\t\tlogByValue(\n\t\t\t\t\t\tt,\n\t\t\t\t\t\t` | ${Math.round(t)} ms${\n\t\t\t\t\t\t\tp >= 1.1 ? ` (parallelism ${Math.round(p * 10) / 10})` : \"\"\n\t\t\t\t\t\t} ${category} > ${module.readableIdentifier(this.requestShortener)}`\n\t\t\t\t\t);\n\t\t\t\t\tmax = Math.max(max, t);\n\t\t\t\t}\n\t\t\t\tif (sum <= 10) return;\n\t\t\t\tlogByValue(\n\t\t\t\t\tMath.max(sum / 10, max),\n\t\t\t\t\t`${Math.round(sum)} ms ${category}`\n\t\t\t\t);\n\t\t\t};\n\t\t\tconst logByLoadersSummary = (category, getDuration, getParallelism) => {\n\t\t\t\tconst map = new Map();\n\t\t\t\tfor (const [module, profile] of modulesWithProfiles) {\n\t\t\t\t\tconst list = getOrInsert(\n\t\t\t\t\t\tmap,\n\t\t\t\t\t\tmodule.type + \"!\" + module.identifier().replace(/(!|^)[^!]*$/, \"\"),\n\t\t\t\t\t\t() => []\n\t\t\t\t\t);\n\t\t\t\t\tlist.push({ module, profile });\n\t\t\t\t}\n\n\t\t\t\tlet sum = 0;\n\t\t\t\tlet max = 0;\n\t\t\t\tfor (const [key, modules] of map) {\n\t\t\t\t\tlet innerSum = 0;\n\t\t\t\t\tlet innerMax = 0;\n\t\t\t\t\tfor (const { module, profile } of modules) {\n\t\t\t\t\t\tconst p = getParallelism(profile);\n\t\t\t\t\t\tconst d = getDuration(profile);\n\t\t\t\t\t\tif (d === 0 || p === 0) continue;\n\t\t\t\t\t\tconst t = d / p;\n\t\t\t\t\t\tinnerSum += t;\n\t\t\t\t\t\tif (t <= 10) continue;\n\t\t\t\t\t\tlogByValue(\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\t` |  | ${Math.round(t)} ms${\n\t\t\t\t\t\t\t\tp >= 1.1 ? ` (parallelism ${Math.round(p * 10) / 10})` : \"\"\n\t\t\t\t\t\t\t} ${category} > ${module.readableIdentifier(\n\t\t\t\t\t\t\t\tthis.requestShortener\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tinnerMax = Math.max(innerMax, t);\n\t\t\t\t\t}\n\t\t\t\t\tsum += innerSum;\n\t\t\t\t\tif (innerSum <= 10) continue;\n\t\t\t\t\tconst idx = key.indexOf(\"!\");\n\t\t\t\t\tconst loaders = key.slice(idx + 1);\n\t\t\t\t\tconst moduleType = key.slice(0, idx);\n\t\t\t\t\tconst t = Math.max(innerSum / 10, innerMax);\n\t\t\t\t\tlogByValue(\n\t\t\t\t\t\tt,\n\t\t\t\t\t\t` | ${Math.round(innerSum)} ms ${category} > ${\n\t\t\t\t\t\t\tloaders\n\t\t\t\t\t\t\t\t? `${\n\t\t\t\t\t\t\t\t\t\tmodules.length\n\t\t\t\t\t\t\t\t  } x ${moduleType} with ${this.requestShortener.shorten(\n\t\t\t\t\t\t\t\t\t\tloaders\n\t\t\t\t\t\t\t\t  )}`\n\t\t\t\t\t\t\t\t: `${modules.length} x ${moduleType}`\n\t\t\t\t\t\t}`\n\t\t\t\t\t);\n\t\t\t\t\tmax = Math.max(max, t);\n\t\t\t\t}\n\t\t\t\tif (sum <= 10) return;\n\t\t\t\tlogByValue(\n\t\t\t\t\tMath.max(sum / 10, max),\n\t\t\t\t\t`${Math.round(sum)} ms ${category}`\n\t\t\t\t);\n\t\t\t};\n\t\t\tlogNormalSummary(\n\t\t\t\t\"resolve to new modules\",\n\t\t\t\tp => p.factory,\n\t\t\t\tp => p.factoryParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"resolve to existing modules\",\n\t\t\t\tp => p.additionalFactories,\n\t\t\t\tp => p.additionalFactoriesParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"integrate modules\",\n\t\t\t\tp => p.restoring,\n\t\t\t\tp => p.restoringParallelismFactor\n\t\t\t);\n\t\t\tlogByLoadersSummary(\n\t\t\t\t\"build modules\",\n\t\t\t\tp => p.building,\n\t\t\t\tp => p.buildingParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"store modules\",\n\t\t\t\tp => p.storing,\n\t\t\t\tp => p.storingParallelismFactor\n\t\t\t);\n\t\t\tlogNormalSummary(\n\t\t\t\t\"restore modules\",\n\t\t\t\tp => p.restoring,\n\t\t\t\tp => p.restoringParallelismFactor\n\t\t\t);\n\t\t\tthis.logger.timeEnd(\"finish module profiles\");\n\t\t}\n\t\tthis.logger.time(\"compute affected modules\");\n\t\tthis._computeAffectedModules(this.modules);\n\t\tthis.logger.timeEnd(\"compute affected modules\");\n\t\tthis.logger.time(\"finish modules\");\n\t\tconst { modules, moduleMemCaches } = this;\n\t\tthis.hooks.finishModules.callAsync(modules, err => {\n\t\t\tthis.logger.timeEnd(\"finish modules\");\n\t\t\tif (err) return callback(err);\n\n\t\t\t// extract warnings and errors from modules\n\t\t\tthis.moduleGraph.freeze(\"dependency errors\");\n\t\t\t// TODO keep a cacheToken (= {}) for each module in the graph\n\t\t\t// create a new one per compilation and flag all updated files\n\t\t\t// and parents with it\n\t\t\tthis.logger.time(\"report dependency errors and warnings\");\n\t\t\tfor (const module of modules) {\n\t\t\t\t// TODO only run for modules with changed cacheToken\n\t\t\t\t// global WeakMap<CacheToken, WeakSet<Module>> to keep modules without errors/warnings\n\t\t\t\tconst memCache = moduleMemCaches && moduleMemCaches.get(module);\n\t\t\t\tif (memCache && memCache.get(\"noWarningsOrErrors\")) continue;\n\t\t\t\tlet hasProblems = this.reportDependencyErrorsAndWarnings(module, [\n\t\t\t\t\tmodule\n\t\t\t\t]);\n\t\t\t\tconst errors = module.getErrors();\n\t\t\t\tif (errors !== undefined) {\n\t\t\t\t\tfor (const error of errors) {\n\t\t\t\t\t\tif (!error.module) {\n\t\t\t\t\t\t\terror.module = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst warnings = module.getWarnings();\n\t\t\t\tif (warnings !== undefined) {\n\t\t\t\t\tfor (const warning of warnings) {\n\t\t\t\t\t\tif (!warning.module) {\n\t\t\t\t\t\t\twarning.module = module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasProblems && memCache) memCache.set(\"noWarningsOrErrors\", true);\n\t\t\t}\n\t\t\tthis.moduleGraph.unfreeze();\n\t\t\tthis.logger.timeEnd(\"report dependency errors and warnings\");\n\n\t\t\tcallback();\n\t\t});\n\t}\n\n\tunseal() {\n\t\tthis.hooks.unseal.call();\n\t\tthis.chunks.clear();\n\t\tthis.chunkGroups.length = 0;\n\t\tthis.namedChunks.clear();\n\t\tthis.namedChunkGroups.clear();\n\t\tthis.entrypoints.clear();\n\t\tthis.additionalChunkAssets.length = 0;\n\t\tthis.assets = {};\n\t\tthis.assetsInfo.clear();\n\t\tthis.moduleGraph.removeAllModuleAttributes();\n\t\tthis.moduleGraph.unfreeze();\n\t\tthis.moduleMemCaches2 = undefined;\n\t}\n\n\t/**\n\t * @param {Callback} callback signals when the call finishes\n\t * @returns {void}\n\t */\n\tseal(callback) {\n\t\tconst finalCallback = err => {\n\t\t\tthis.factorizeQueue.clear();\n\t\t\tthis.buildQueue.clear();\n\t\t\tthis.rebuildQueue.clear();\n\t\t\tthis.processDependenciesQueue.clear();\n\t\t\tthis.addModuleQueue.clear();\n\t\t\treturn callback(err);\n\t\t};\n\t\tconst chunkGraph = new ChunkGraph(\n\t\t\tthis.moduleGraph,\n\t\t\tthis.outputOptions.hashFunction\n\t\t);\n\t\tthis.chunkGraph = chunkGraph;\n\n\t\tif (this._backCompat) {\n\t\t\tfor (const module of this.modules) {\n\t\t\t\tChunkGraph.setChunkGraphForModule(module, chunkGraph);\n\t\t\t}\n\t\t}\n\n\t\tthis.hooks.seal.call();\n\n\t\tthis.logger.time(\"optimize dependencies\");\n\t\twhile (this.hooks.optimizeDependencies.call(this.modules)) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeDependencies.call(this.modules);\n\t\tthis.logger.timeEnd(\"optimize dependencies\");\n\n\t\tthis.logger.time(\"create chunks\");\n\t\tthis.hooks.beforeChunks.call();\n\t\tthis.moduleGraph.freeze(\"seal\");\n\t\t/** @type {Map<Entrypoint, Module[]>} */\n\t\tconst chunkGraphInit = new Map();\n\t\tfor (const [name, { dependencies, includeDependencies, options }] of this\n\t\t\t.entries) {\n\t\t\tconst chunk = this.addChunk(name);\n\t\t\tif (options.filename) {\n\t\t\t\tchunk.filenameTemplate = options.filename;\n\t\t\t}\n\t\t\tconst entrypoint = new Entrypoint(options);\n\t\t\tif (!options.dependOn && !options.runtime) {\n\t\t\t\tentrypoint.setRuntimeChunk(chunk);\n\t\t\t}\n\t\t\tentrypoint.setEntrypointChunk(chunk);\n\t\t\tthis.namedChunkGroups.set(name, entrypoint);\n\t\t\tthis.entrypoints.set(name, entrypoint);\n\t\t\tthis.chunkGroups.push(entrypoint);\n\t\t\tconnectChunkGroupAndChunk(entrypoint, chunk);\n\n\t\t\tconst entryModules = new Set();\n\t\t\tfor (const dep of [...this.globalEntry.dependencies, ...dependencies]) {\n\t\t\t\tentrypoint.addOrigin(null, { name }, /** @type {any} */ (dep).request);\n\n\t\t\t\tconst module = this.moduleGraph.getModule(dep);\n\t\t\t\tif (module) {\n\t\t\t\t\tchunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n\t\t\t\t\tentryModules.add(module);\n\t\t\t\t\tconst modulesList = chunkGraphInit.get(entrypoint);\n\t\t\t\t\tif (modulesList === undefined) {\n\t\t\t\t\t\tchunkGraphInit.set(entrypoint, [module]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodulesList.push(module);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.assignDepths(entryModules);\n\n\t\t\tconst mapAndSort = deps =>\n\t\t\t\tdeps\n\t\t\t\t\t.map(dep => this.moduleGraph.getModule(dep))\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.sort(compareModulesByIdentifier);\n\t\t\tconst includedModules = [\n\t\t\t\t...mapAndSort(this.globalEntry.includeDependencies),\n\t\t\t\t...mapAndSort(includeDependencies)\n\t\t\t];\n\n\t\t\tlet modulesList = chunkGraphInit.get(entrypoint);\n\t\t\tif (modulesList === undefined) {\n\t\t\t\tchunkGraphInit.set(entrypoint, (modulesList = []));\n\t\t\t}\n\t\t\tfor (const module of includedModules) {\n\t\t\t\tthis.assignDepth(module);\n\t\t\t\tmodulesList.push(module);\n\t\t\t}\n\t\t}\n\t\tconst runtimeChunks = new Set();\n\t\touter: for (const [\n\t\t\tname,\n\t\t\t{\n\t\t\t\toptions: { dependOn, runtime }\n\t\t\t}\n\t\t] of this.entries) {\n\t\t\tif (dependOn && runtime) {\n\t\t\t\tconst err =\n\t\t\t\t\tnew WebpackError(`Entrypoint '${name}' has 'dependOn' and 'runtime' specified. This is not valid.\nEntrypoints that depend on other entrypoints do not have their own runtime.\nThey will use the runtime(s) from referenced entrypoints instead.\nRemove the 'runtime' option from the entrypoint.`);\n\t\t\t\tconst entry = this.entrypoints.get(name);\n\t\t\t\terr.chunk = entry.getEntrypointChunk();\n\t\t\t\tthis.errors.push(err);\n\t\t\t}\n\t\t\tif (dependOn) {\n\t\t\t\tconst entry = this.entrypoints.get(name);\n\t\t\t\tconst referencedChunks = entry\n\t\t\t\t\t.getEntrypointChunk()\n\t\t\t\t\t.getAllReferencedChunks();\n\t\t\t\tconst dependOnEntries = [];\n\t\t\t\tfor (const dep of dependOn) {\n\t\t\t\t\tconst dependency = this.entrypoints.get(dep);\n\t\t\t\t\tif (!dependency) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Entry ${name} depends on ${dep}, but this entry was not found`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (referencedChunks.has(dependency.getEntrypointChunk())) {\n\t\t\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\t\t`Entrypoints '${name}' and '${dep}' use 'dependOn' to depend on each other in a circular way.`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst entryChunk = entry.getEntrypointChunk();\n\t\t\t\t\t\terr.chunk = entryChunk;\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t\tentry.setRuntimeChunk(entryChunk);\n\t\t\t\t\t\tcontinue outer;\n\t\t\t\t\t}\n\t\t\t\t\tdependOnEntries.push(dependency);\n\t\t\t\t}\n\t\t\t\tfor (const dependency of dependOnEntries) {\n\t\t\t\t\tconnectChunkGroupParentAndChild(dependency, entry);\n\t\t\t\t}\n\t\t\t} else if (runtime) {\n\t\t\t\tconst entry = this.entrypoints.get(name);\n\t\t\t\tlet chunk = this.namedChunks.get(runtime);\n\t\t\t\tif (chunk) {\n\t\t\t\t\tif (!runtimeChunks.has(chunk)) {\n\t\t\t\t\t\tconst err =\n\t\t\t\t\t\t\tnew WebpackError(`Entrypoint '${name}' has a 'runtime' option which points to another entrypoint named '${runtime}'.\nIt's not valid to use other entrypoints as runtime chunk.\nDid you mean to use 'dependOn: ${JSON.stringify(\n\t\t\t\t\t\t\t\truntime\n\t\t\t\t\t\t\t)}' instead to allow using entrypoint '${name}' within the runtime of entrypoint '${runtime}'? For this '${runtime}' must always be loaded when '${name}' is used.\nOr do you want to use the entrypoints '${name}' and '${runtime}' independently on the same page with a shared runtime? In this case give them both the same value for the 'runtime' option. It must be a name not already used by an entrypoint.`);\n\t\t\t\t\t\tconst entryChunk = entry.getEntrypointChunk();\n\t\t\t\t\t\terr.chunk = entryChunk;\n\t\t\t\t\t\tthis.errors.push(err);\n\t\t\t\t\t\tentry.setRuntimeChunk(entryChunk);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunk = this.addChunk(runtime);\n\t\t\t\t\tchunk.preventIntegration = true;\n\t\t\t\t\truntimeChunks.add(chunk);\n\t\t\t\t}\n\t\t\t\tentry.unshiftChunk(chunk);\n\t\t\t\tchunk.addGroup(entry);\n\t\t\t\tentry.setRuntimeChunk(chunk);\n\t\t\t}\n\t\t}\n\t\tbuildChunkGraph(this, chunkGraphInit);\n\t\tthis.hooks.afterChunks.call(this.chunks);\n\t\tthis.logger.timeEnd(\"create chunks\");\n\n\t\tthis.logger.time(\"optimize\");\n\t\tthis.hooks.optimize.call();\n\n\t\twhile (this.hooks.optimizeModules.call(this.modules)) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeModules.call(this.modules);\n\n\t\twhile (this.hooks.optimizeChunks.call(this.chunks, this.chunkGroups)) {\n\t\t\t/* empty */\n\t\t}\n\t\tthis.hooks.afterOptimizeChunks.call(this.chunks, this.chunkGroups);\n\n\t\tthis.hooks.optimizeTree.callAsync(this.chunks, this.modules, err => {\n\t\t\tif (err) {\n\t\t\t\treturn finalCallback(\n\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.optimizeTree\")\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.hooks.afterOptimizeTree.call(this.chunks, this.modules);\n\n\t\t\tthis.hooks.optimizeChunkModules.callAsync(\n\t\t\t\tthis.chunks,\n\t\t\t\tthis.modules,\n\t\t\t\terr => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn finalCallback(\n\t\t\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.optimizeChunkModules\")\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hooks.afterOptimizeChunkModules.call(this.chunks, this.modules);\n\n\t\t\t\t\tconst shouldRecord = this.hooks.shouldRecord.call() !== false;\n\n\t\t\t\t\tthis.hooks.reviveModules.call(this.modules, this.records);\n\t\t\t\t\tthis.hooks.beforeModuleIds.call(this.modules);\n\t\t\t\t\tthis.hooks.moduleIds.call(this.modules);\n\t\t\t\t\tthis.hooks.optimizeModuleIds.call(this.modules);\n\t\t\t\t\tthis.hooks.afterOptimizeModuleIds.call(this.modules);\n\n\t\t\t\t\tthis.hooks.reviveChunks.call(this.chunks, this.records);\n\t\t\t\t\tthis.hooks.beforeChunkIds.call(this.chunks);\n\t\t\t\t\tthis.hooks.chunkIds.call(this.chunks);\n\t\t\t\t\tthis.hooks.optimizeChunkIds.call(this.chunks);\n\t\t\t\t\tthis.hooks.afterOptimizeChunkIds.call(this.chunks);\n\n\t\t\t\t\tthis.assignRuntimeIds();\n\n\t\t\t\t\tthis.logger.time(\"compute affected modules with chunk graph\");\n\t\t\t\t\tthis._computeAffectedModulesWithChunkGraph();\n\t\t\t\t\tthis.logger.timeEnd(\"compute affected modules with chunk graph\");\n\n\t\t\t\t\tthis.sortItemsWithChunkIds();\n\n\t\t\t\t\tif (shouldRecord) {\n\t\t\t\t\t\tthis.hooks.recordModules.call(this.modules, this.records);\n\t\t\t\t\t\tthis.hooks.recordChunks.call(this.chunks, this.records);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.hooks.optimizeCodeGeneration.call(this.modules);\n\t\t\t\t\tthis.logger.timeEnd(\"optimize\");\n\n\t\t\t\t\tthis.logger.time(\"module hashing\");\n\t\t\t\t\tthis.hooks.beforeModuleHash.call();\n\t\t\t\t\tthis.createModuleHashes();\n\t\t\t\t\tthis.hooks.afterModuleHash.call();\n\t\t\t\t\tthis.logger.timeEnd(\"module hashing\");\n\n\t\t\t\t\tthis.logger.time(\"code generation\");\n\t\t\t\t\tthis.hooks.beforeCodeGeneration.call();\n\t\t\t\t\tthis.codeGeneration(err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.hooks.afterCodeGeneration.call();\n\t\t\t\t\t\tthis.logger.timeEnd(\"code generation\");\n\n\t\t\t\t\t\tthis.logger.time(\"runtime requirements\");\n\t\t\t\t\t\tthis.hooks.beforeRuntimeRequirements.call();\n\t\t\t\t\t\tthis.processRuntimeRequirements();\n\t\t\t\t\t\tthis.hooks.afterRuntimeRequirements.call();\n\t\t\t\t\t\tthis.logger.timeEnd(\"runtime requirements\");\n\n\t\t\t\t\t\tthis.logger.time(\"hashing\");\n\t\t\t\t\t\tthis.hooks.beforeHash.call();\n\t\t\t\t\t\tconst codeGenerationJobs = this.createHash();\n\t\t\t\t\t\tthis.hooks.afterHash.call();\n\t\t\t\t\t\tthis.logger.timeEnd(\"hashing\");\n\n\t\t\t\t\t\tthis._runCodeGenerationJobs(codeGenerationJobs, err => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (shouldRecord) {\n\t\t\t\t\t\t\t\tthis.logger.time(\"record hash\");\n\t\t\t\t\t\t\t\tthis.hooks.recordHash.call(this.records);\n\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"record hash\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.logger.time(\"module assets\");\n\t\t\t\t\t\t\tthis.clearAssets();\n\n\t\t\t\t\t\t\tthis.hooks.beforeModuleAssets.call();\n\t\t\t\t\t\t\tthis.createModuleAssets();\n\t\t\t\t\t\t\tthis.logger.timeEnd(\"module assets\");\n\n\t\t\t\t\t\t\tconst cont = () => {\n\t\t\t\t\t\t\t\tthis.logger.time(\"process assets\");\n\t\t\t\t\t\t\t\tthis.hooks.processAssets.callAsync(this.assets, err => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn finalCallback(\n\t\t\t\t\t\t\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.processAssets\")\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.hooks.afterProcessAssets.call(this.assets);\n\t\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"process assets\");\n\t\t\t\t\t\t\t\t\tthis.assets = this._backCompat\n\t\t\t\t\t\t\t\t\t\t? soonFrozenObjectDeprecation(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.assets,\n\t\t\t\t\t\t\t\t\t\t\t\t\"Compilation.assets\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"DEP_WEBPACK_COMPILATION_ASSETS\",\n\t\t\t\t\t\t\t\t\t\t\t\t`BREAKING CHANGE: No more changes should happen to Compilation.assets after sealing the Compilation.\n\tDo changes to assets earlier, e. g. in Compilation.hooks.processAssets.\n\tMake sure to select an appropriate stage from Compilation.PROCESS_ASSETS_STAGE_*.`\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: Object.freeze(this.assets);\n\n\t\t\t\t\t\t\t\t\tthis.summarizeDependencies();\n\t\t\t\t\t\t\t\t\tif (shouldRecord) {\n\t\t\t\t\t\t\t\t\t\tthis.hooks.record.call(this, this.records);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (this.hooks.needAdditionalSeal.call()) {\n\t\t\t\t\t\t\t\t\t\tthis.unseal();\n\t\t\t\t\t\t\t\t\t\treturn this.seal(callback);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn this.hooks.afterSeal.callAsync(err => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\treturn finalCallback(\n\t\t\t\t\t\t\t\t\t\t\t\tmakeWebpackError(err, \"Compilation.hooks.afterSeal\")\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis.fileSystemInfo.logStatistics();\n\t\t\t\t\t\t\t\t\t\tfinalCallback();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tthis.logger.time(\"create chunk assets\");\n\t\t\t\t\t\t\tif (this.hooks.shouldGenerateChunkAssets.call() !== false) {\n\t\t\t\t\t\t\t\tthis.hooks.beforeChunkAssets.call();\n\t\t\t\t\t\t\t\tthis.createChunkAssets(err => {\n\t\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"create chunk assets\");\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcont();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.logger.timeEnd(\"create chunk assets\");\n\t\t\t\t\t\t\t\tcont();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * @param {Module} module module to report from\n\t * @param {DependenciesBlock[]} blocks blocks to report from\n\t * @returns {boolean} true, when it has warnings or errors\n\t */\n\treportDependencyErrorsAndWarnings(module, blocks) {\n\t\tlet hasProblems = false;\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst block = blocks[indexBlock];\n\t\t\tconst dependencies = block.dependencies;\n\n\t\t\tfor (let indexDep = 0; indexDep < dependencies.length; indexDep++) {\n\t\t\t\tconst d = dependencies[indexDep];\n\n\t\t\t\tconst warnings = d.getWarnings(this.moduleGraph);\n\t\t\t\tif (warnings) {\n\t\t\t\t\tfor (let indexWar = 0; indexWar < warnings.length; indexWar++) {\n\t\t\t\t\t\tconst w = warnings[indexWar];\n\n\t\t\t\t\t\tconst warning = new ModuleDependencyWarning(module, w, d.loc);\n\t\t\t\t\t\tthis.warnings.push(warning);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst errors = d.getErrors(this.moduleGraph);\n\t\t\t\tif (errors) {\n\t\t\t\t\tfor (let indexErr = 0; indexErr < errors.length; indexErr++) {\n\t\t\t\t\t\tconst e = errors[indexErr];\n\n\t\t\t\t\t\tconst error = new ModuleDependencyError(module, e, d.loc);\n\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\thasProblems = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.reportDependencyErrorsAndWarnings(module, block.blocks))\n\t\t\t\thasProblems = true;\n\t\t}\n\t\treturn hasProblems;\n\t}\n\n\tcodeGeneration(callback) {\n\t\tconst { chunkGraph } = this;\n\t\tthis.codeGenerationResults = new CodeGenerationResults(\n\t\t\tthis.outputOptions.hashFunction\n\t\t);\n\t\t/** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n\t\tconst jobs = [];\n\t\tfor (const module of this.modules) {\n\t\t\tconst runtimes = chunkGraph.getModuleRuntimes(module);\n\t\t\tif (runtimes.size === 1) {\n\t\t\t\tfor (const runtime of runtimes) {\n\t\t\t\t\tconst hash = chunkGraph.getModuleHash(module, runtime);\n\t\t\t\t\tjobs.push({ module, hash, runtime, runtimes: [runtime] });\n\t\t\t\t}\n\t\t\t} else if (runtimes.size > 1) {\n\t\t\t\t/** @type {Map<string, { runtimes: RuntimeSpec[] }>} */\n\t\t\t\tconst map = new Map();\n\t\t\t\tfor (const runtime of runtimes) {\n\t\t\t\t\tconst hash = chunkGraph.getModuleHash(module, runtime);\n\t\t\t\t\tconst job = map.get(hash);\n\t\t\t\t\tif (job === undefined) {\n\t\t\t\t\t\tconst newJob = { module, hash, runtime, runtimes: [runtime] };\n\t\t\t\t\t\tjobs.push(newJob);\n\t\t\t\t\t\tmap.set(hash, newJob);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjob.runtimes.push(runtime);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._runCodeGenerationJobs(jobs, callback);\n\t}\n\n\t_runCodeGenerationJobs(jobs, callback) {\n\t\tif (jobs.length === 0) {\n\t\t\treturn callback();\n\t\t}\n\t\tlet statModulesFromCache = 0;\n\t\tlet statModulesGenerated = 0;\n\t\tconst { chunkGraph, moduleGraph, dependencyTemplates, runtimeTemplate } =\n\t\t\tthis;\n\t\tconst results = this.codeGenerationResults;\n\t\tconst errors = [];\n\t\t/** @type {Set<Module> | undefined} */\n\t\tlet notCodeGeneratedModules = undefined;\n\t\tconst runIteration = () => {\n\t\t\tlet delayedJobs = [];\n\t\t\tlet delayedModules = new Set();\n\t\t\tasyncLib.eachLimit(\n\t\t\t\tjobs,\n\t\t\t\tthis.options.parallelism,\n\t\t\t\t(job, callback) => {\n\t\t\t\t\tconst { module } = job;\n\t\t\t\t\tconst { codeGenerationDependencies } = module;\n\t\t\t\t\tif (codeGenerationDependencies !== undefined) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tnotCodeGeneratedModules === undefined ||\n\t\t\t\t\t\t\tcodeGenerationDependencies.some(dep => {\n\t\t\t\t\t\t\t\tconst referencedModule = moduleGraph.getModule(dep);\n\t\t\t\t\t\t\t\treturn notCodeGeneratedModules.has(referencedModule);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdelayedJobs.push(job);\n\t\t\t\t\t\t\tdelayedModules.add(module);\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst { hash, runtime, runtimes } = job;\n\t\t\t\t\tthis._codeGenerationModule(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\truntimes,\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tresults,\n\t\t\t\t\t\t(err, codeGenerated) => {\n\t\t\t\t\t\t\tif (codeGenerated) statModulesGenerated++;\n\t\t\t\t\t\t\telse statModulesFromCache++;\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (delayedJobs.length > 0) {\n\t\t\t\t\t\tif (delayedJobs.length === jobs.length) {\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`Unable to make progress during code generation because of circular code generation dependency: ${Array.from(\n\t\t\t\t\t\t\t\t\t\tdelayedModules,\n\t\t\t\t\t\t\t\t\t\tm => m.identifier()\n\t\t\t\t\t\t\t\t\t).join(\", \")}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjobs = delayedJobs;\n\t\t\t\t\t\tdelayedJobs = [];\n\t\t\t\t\t\tnotCodeGeneratedModules = delayedModules;\n\t\t\t\t\t\tdelayedModules = new Set();\n\t\t\t\t\t\treturn runIteration();\n\t\t\t\t\t}\n\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\terrors.sort(\n\t\t\t\t\t\t\tcompareSelect(err => err.module, compareModulesByIdentifier)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const error of errors) {\n\t\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.logger.log(\n\t\t\t\t\t\t`${Math.round(\n\t\t\t\t\t\t\t(100 * statModulesGenerated) /\n\t\t\t\t\t\t\t\t(statModulesGenerated + statModulesFromCache)\n\t\t\t\t\t\t)}% code generated (${statModulesGenerated} generated, ${statModulesFromCache} from cache)`\n\t\t\t\t\t);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\trunIteration();\n\t}\n\n\t/**\n\t * @param {Module} module module\n\t * @param {RuntimeSpec} runtime runtime\n\t * @param {RuntimeSpec[]} runtimes runtimes\n\t * @param {string} hash hash\n\t * @param {DependencyTemplates} dependencyTemplates dependencyTemplates\n\t * @param {ChunkGraph} chunkGraph chunkGraph\n\t * @param {ModuleGraph} moduleGraph moduleGraph\n\t * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\n\t * @param {WebpackError[]} errors errors\n\t * @param {CodeGenerationResults} results results\n\t * @param {function(WebpackError=, boolean=): void} callback callback\n\t */\n\t_codeGenerationModule(\n\t\tmodule,\n\t\truntime,\n\t\truntimes,\n\t\thash,\n\t\tdependencyTemplates,\n\t\tchunkGraph,\n\t\tmoduleGraph,\n\t\truntimeTemplate,\n\t\terrors,\n\t\tresults,\n\t\tcallback\n\t) {\n\t\tlet codeGenerated = false;\n\t\tconst cache = new MultiItemCache(\n\t\t\truntimes.map(runtime =>\n\t\t\t\tthis._codeGenerationCache.getItemCache(\n\t\t\t\t\t`${module.identifier()}|${getRuntimeKey(runtime)}`,\n\t\t\t\t\t`${hash}|${dependencyTemplates.getHash()}`\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tcache.get((err, cachedResult) => {\n\t\t\tif (err) return callback(err);\n\t\t\tlet result;\n\t\t\tif (!cachedResult) {\n\t\t\t\ttry {\n\t\t\t\t\tcodeGenerated = true;\n\t\t\t\t\tthis.codeGeneratedModules.add(module);\n\t\t\t\t\tresult = module.codeGeneration({\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\tcodeGenerationResults: results,\n\t\t\t\t\t\tcompilation: this\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\terrors.push(new CodeGenerationError(module, err));\n\t\t\t\t\tresult = cachedResult = {\n\t\t\t\t\t\tsources: new Map(),\n\t\t\t\t\t\truntimeRequirements: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = cachedResult;\n\t\t\t}\n\t\t\tfor (const runtime of runtimes) {\n\t\t\t\tresults.add(module, runtime, result);\n\t\t\t}\n\t\t\tif (!cachedResult) {\n\t\t\t\tcache.store(result, err => callback(err, codeGenerated));\n\t\t\t} else {\n\t\t\t\tcallback(null, codeGenerated);\n\t\t\t}\n\t\t});\n\t}\n\n\t_getChunkGraphEntries() {\n\t\t/** @type {Set<Chunk>} */\n\t\tconst treeEntries = new Set();\n\t\tfor (const ep of this.entrypoints.values()) {\n\t\t\tconst chunk = ep.getRuntimeChunk();\n\t\t\tif (chunk) treeEntries.add(chunk);\n\t\t}\n\t\tfor (const ep of this.asyncEntrypoints) {\n\t\t\tconst chunk = ep.getRuntimeChunk();\n\t\t\tif (chunk) treeEntries.add(chunk);\n\t\t}\n\t\treturn treeEntries;\n\t}\n\n\t/**\n\t * @param {Object} options options\n\t * @param {ChunkGraph=} options.chunkGraph the chunk graph\n\t * @param {Iterable<Module>=} options.modules modules\n\t * @param {Iterable<Chunk>=} options.chunks chunks\n\t * @param {CodeGenerationResults=} options.codeGenerationResults codeGenerationResults\n\t * @param {Iterable<Chunk>=} options.chunkGraphEntries chunkGraphEntries\n\t * @returns {void}\n\t */\n\tprocessRuntimeRequirements({\n\t\tchunkGraph = this.chunkGraph,\n\t\tmodules = this.modules,\n\t\tchunks = this.chunks,\n\t\tcodeGenerationResults = this.codeGenerationResults,\n\t\tchunkGraphEntries = this._getChunkGraphEntries()\n\t} = {}) {\n\t\tconst context = { chunkGraph, codeGenerationResults };\n\t\tconst { moduleMemCaches2 } = this;\n\t\tthis.logger.time(\"runtime requirements.modules\");\n\t\tconst additionalModuleRuntimeRequirements =\n\t\t\tthis.hooks.additionalModuleRuntimeRequirements;\n\t\tconst runtimeRequirementInModule = this.hooks.runtimeRequirementInModule;\n\t\tfor (const module of modules) {\n\t\t\tif (chunkGraph.getNumberOfModuleChunks(module) > 0) {\n\t\t\t\tconst memCache = moduleMemCaches2 && moduleMemCaches2.get(module);\n\t\t\t\tfor (const runtime of chunkGraph.getModuleRuntimes(module)) {\n\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\tconst cached = memCache.get(\n\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (cached !== undefined) {\n\t\t\t\t\t\t\tif (cached !== null) {\n\t\t\t\t\t\t\t\tchunkGraph.addModuleRuntimeRequirements(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\t\tcached,\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet set;\n\t\t\t\t\tconst runtimeRequirements =\n\t\t\t\t\t\tcodeGenerationResults.getRuntimeRequirements(module, runtime);\n\t\t\t\t\tif (runtimeRequirements && runtimeRequirements.size > 0) {\n\t\t\t\t\t\tset = new Set(runtimeRequirements);\n\t\t\t\t\t} else if (additionalModuleRuntimeRequirements.isUsed()) {\n\t\t\t\t\t\tset = new Set();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\t\tmemCache.set(\n\t\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tadditionalModuleRuntimeRequirements.call(module, set, context);\n\n\t\t\t\t\tfor (const r of set) {\n\t\t\t\t\t\tconst hook = runtimeRequirementInModule.get(r);\n\t\t\t\t\t\tif (hook !== undefined) hook.call(module, set, context);\n\t\t\t\t\t}\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\t\tmemCache.set(\n\t\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (memCache) {\n\t\t\t\t\t\t\tmemCache.set(\n\t\t\t\t\t\t\t\t`moduleRuntimeRequirements-${getRuntimeKey(runtime)}`,\n\t\t\t\t\t\t\t\tset\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tchunkGraph.addModuleRuntimeRequirements(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\tset,\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchunkGraph.addModuleRuntimeRequirements(module, runtime, set);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.logger.timeEnd(\"runtime requirements.modules\");\n\n\t\tthis.logger.time(\"runtime requirements.chunks\");\n\t\tfor (const chunk of chunks) {\n\t\t\tconst set = new Set();\n\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\tconst runtimeRequirements = chunkGraph.getModuleRuntimeRequirements(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunk.runtime\n\t\t\t\t);\n\t\t\t\tfor (const r of runtimeRequirements) set.add(r);\n\t\t\t}\n\t\t\tthis.hooks.additionalChunkRuntimeRequirements.call(chunk, set, context);\n\n\t\t\tfor (const r of set) {\n\t\t\t\tthis.hooks.runtimeRequirementInChunk.for(r).call(chunk, set, context);\n\t\t\t}\n\n\t\t\tchunkGraph.addChunkRuntimeRequirements(chunk, set);\n\t\t}\n\t\tthis.logger.timeEnd(\"runtime requirements.chunks\");\n\n\t\tthis.logger.time(\"runtime requirements.entries\");\n\t\tfor (const treeEntry of chunkGraphEntries) {\n\t\t\tconst set = new Set();\n\t\t\tfor (const chunk of treeEntry.getAllReferencedChunks()) {\n\t\t\t\tconst runtimeRequirements =\n\t\t\t\t\tchunkGraph.getChunkRuntimeRequirements(chunk);\n\t\t\t\tfor (const r of runtimeRequirements) set.add(r);\n\t\t\t}\n\n\t\t\tthis.hooks.additionalTreeRuntimeRequirements.call(\n\t\t\t\ttreeEntry,\n\t\t\t\tset,\n\t\t\t\tcontext\n\t\t\t);\n\n\t\t\tfor (const r of set) {\n\t\t\t\tthis.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(r)\n\t\t\t\t\t.call(treeEntry, set, context);\n\t\t\t}\n\n\t\t\tchunkGraph.addTreeRuntimeRequirements(treeEntry, set);\n\t\t}\n\t\tthis.logger.timeEnd(\"runtime requirements.entries\");\n\t}\n\n\t// TODO webpack 6 make chunkGraph argument non-optional\n\t/**\n\t * @param {Chunk} chunk target chunk\n\t * @param {RuntimeModule} module runtime module\n\t * @param {ChunkGraph} chunkGraph the chunk graph\n\t * @returns {void}\n\t */\n\taddRuntimeModule(chunk, module, chunkGraph = this.chunkGraph) {\n\t\t// Deprecated ModuleGraph association\n\t\tif (this._backCompat)\n\t\t\tModuleGraph.setModuleGraphForModule(module, this.moduleGraph);\n\n\t\t// add it to the list\n\t\tthis.modules.add(module);\n\t\tthis._modules.set(module.identifier(), module);\n\n\t\t// connect to the chunk graph\n\t\tchunkGraph.connectChunkAndModule(chunk, module);\n\t\tchunkGraph.connectChunkAndRuntimeModule(chunk, module);\n\t\tif (module.fullHash) {\n\t\t\tchunkGraph.addFullHashModuleToChunk(chunk, module);\n\t\t} else if (module.dependentHash) {\n\t\t\tchunkGraph.addDependentHashModuleToChunk(chunk, module);\n\t\t}\n\n\t\t// attach runtime module\n\t\tmodule.attach(this, chunk, chunkGraph);\n\n\t\t// Setup internals\n\t\tconst exportsInfo = this.moduleGraph.getExportsInfo(module);\n\t\texportsInfo.setHasProvideInfo();\n\t\tif (typeof chunk.runtime === \"string\") {\n\t\t\texportsInfo.setUsedForSideEffectsOnly(chunk.runtime);\n\t\t} else if (chunk.runtime === undefined) {\n\t\t\texportsInfo.setUsedForSideEffectsOnly(undefined);\n\t\t} else {\n\t\t\tfor (const runtime of chunk.runtime) {\n\t\t\t\texportsInfo.setUsedForSideEffectsOnly(runtime);\n\t\t\t}\n\t\t}\n\t\tchunkGraph.addModuleRuntimeRequirements(\n\t\t\tmodule,\n\t\t\tchunk.runtime,\n\t\t\tnew Set([RuntimeGlobals.requireScope])\n\t\t);\n\n\t\t// runtime modules don't need ids\n\t\tchunkGraph.setModuleId(module, \"\");\n\n\t\t// Call hook\n\t\tthis.hooks.runtimeModule.call(module, chunk);\n\t}\n\n\t/**\n\t * If `module` is passed, `loc` and `request` must also be passed.\n\t * @param {string | ChunkGroupOptions} groupOptions options for the chunk group\n\t * @param {Module=} module the module the references the chunk group\n\t * @param {DependencyLocation=} loc the location from with the chunk group is referenced (inside of module)\n\t * @param {string=} request the request from which the the chunk group is referenced\n\t * @returns {ChunkGroup} the new or existing chunk group\n\t */\n\taddChunkInGroup(groupOptions, module, loc, request) {\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t}\n\t\tconst name = groupOptions.name;\n\n\t\tif (name) {\n\t\t\tconst chunkGroup = this.namedChunkGroups.get(name);\n\t\t\tif (chunkGroup !== undefined) {\n\t\t\t\tchunkGroup.addOptions(groupOptions);\n\t\t\t\tif (module) {\n\t\t\t\t\tchunkGroup.addOrigin(module, loc, request);\n\t\t\t\t}\n\t\t\t\treturn chunkGroup;\n\t\t\t}\n\t\t}\n\t\tconst chunkGroup = new ChunkGroup(groupOptions);\n\t\tif (module) chunkGroup.addOrigin(module, loc, request);\n\t\tconst chunk = this.addChunk(name);\n\n\t\tconnectChunkGroupAndChunk(chunkGroup, chunk);\n\n\t\tthis.chunkGroups.push(chunkGroup);\n\t\tif (name) {\n\t\t\tthis.namedChunkGroups.set(name, chunkGroup);\n\t\t}\n\t\treturn chunkGroup;\n\t}\n\n\t/**\n\t * @param {EntryOptions} options options for the entrypoint\n\t * @param {Module} module the module the references the chunk group\n\t * @param {DependencyLocation} loc the location from with the chunk group is referenced (inside of module)\n\t * @param {string} request the request from which the the chunk group is referenced\n\t * @returns {Entrypoint} the new or existing entrypoint\n\t */\n\taddAsyncEntrypoint(options, module, loc, request) {\n\t\tconst name = options.name;\n\t\tif (name) {\n\t\t\tconst entrypoint = this.namedChunkGroups.get(name);\n\t\t\tif (entrypoint instanceof Entrypoint) {\n\t\t\t\tif (entrypoint !== undefined) {\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tentrypoint.addOrigin(module, loc, request);\n\t\t\t\t\t}\n\t\t\t\t\treturn entrypoint;\n\t\t\t\t}\n\t\t\t} else if (entrypoint) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Cannot add an async entrypoint with the name '${name}', because there is already an chunk group with this name`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst chunk = this.addChunk(name);\n\t\tif (options.filename) {\n\t\t\tchunk.filenameTemplate = options.filename;\n\t\t}\n\t\tconst entrypoint = new Entrypoint(options, false);\n\t\tentrypoint.setRuntimeChunk(chunk);\n\t\tentrypoint.setEntrypointChunk(chunk);\n\t\tif (name) {\n\t\t\tthis.namedChunkGroups.set(name, entrypoint);\n\t\t}\n\t\tthis.chunkGroups.push(entrypoint);\n\t\tthis.asyncEntrypoints.push(entrypoint);\n\t\tconnectChunkGroupAndChunk(entrypoint, chunk);\n\t\tif (module) {\n\t\t\tentrypoint.addOrigin(module, loc, request);\n\t\t}\n\t\treturn entrypoint;\n\t}\n\n\t/**\n\t * This method first looks to see if a name is provided for a new chunk,\n\t * and first looks to see if any named chunks already exist and reuse that chunk instead.\n\t *\n\t * @param {string=} name optional chunk name to be provided\n\t * @returns {Chunk} create a chunk (invoked during seal event)\n\t */\n\taddChunk(name) {\n\t\tif (name) {\n\t\t\tconst chunk = this.namedChunks.get(name);\n\t\t\tif (chunk !== undefined) {\n\t\t\t\treturn chunk;\n\t\t\t}\n\t\t}\n\t\tconst chunk = new Chunk(name, this._backCompat);\n\t\tthis.chunks.add(chunk);\n\t\tif (this._backCompat)\n\t\t\tChunkGraph.setChunkGraphForChunk(chunk, this.chunkGraph);\n\t\tif (name) {\n\t\t\tthis.namedChunks.set(name, chunk);\n\t\t}\n\t\treturn chunk;\n\t}\n\n\t/**\n\t * @deprecated\n\t * @param {Module} module module to assign depth\n\t * @returns {void}\n\t */\n\tassignDepth(module) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\tconst queue = new Set([module]);\n\t\tlet depth;\n\n\t\tmoduleGraph.setDepth(module, 0);\n\n\t\t/**\n\t\t * @param {Module} module module for processing\n\t\t * @returns {void}\n\t\t */\n\t\tconst processModule = module => {\n\t\t\tif (!moduleGraph.setDepthIfLower(module, depth)) return;\n\t\t\tqueue.add(module);\n\t\t};\n\n\t\tfor (module of queue) {\n\t\t\tqueue.delete(module);\n\t\t\tdepth = moduleGraph.getDepth(module) + 1;\n\n\t\t\tfor (const connection of moduleGraph.getOutgoingConnections(module)) {\n\t\t\t\tconst refModule = connection.module;\n\t\t\t\tif (refModule) {\n\t\t\t\t\tprocessModule(refModule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Set<Module>} modules module to assign depth\n\t * @returns {void}\n\t */\n\tassignDepths(modules) {\n\t\tconst moduleGraph = this.moduleGraph;\n\n\t\t/** @type {Set<Module | number>} */\n\t\tconst queue = new Set(modules);\n\t\tqueue.add(1);\n\t\tlet depth = 0;\n\n\t\tlet i = 0;\n\t\tfor (const module of queue) {\n\t\t\ti++;\n\t\t\tif (typeof module === \"number\") {\n\t\t\t\tdepth = module;\n\t\t\t\tif (queue.size === i) return;\n\t\t\t\tqueue.add(depth + 1);\n\t\t\t} else {\n\t\t\t\tmoduleGraph.setDepth(module, depth);\n\t\t\t\tfor (const { module: refModule } of moduleGraph.getOutgoingConnections(\n\t\t\t\t\tmodule\n\t\t\t\t)) {\n\t\t\t\t\tif (refModule) {\n\t\t\t\t\t\tqueue.add(refModule);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetDependencyReferencedExports(dependency, runtime) {\n\t\tconst referencedExports = dependency.getReferencedExports(\n\t\t\tthis.moduleGraph,\n\t\t\truntime\n\t\t);\n\t\treturn this.hooks.dependencyReferencedExports.call(\n\t\t\treferencedExports,\n\t\t\tdependency,\n\t\t\truntime\n\t\t);\n\t}\n\n\t/**\n\t *\n\t * @param {Module} module module relationship for removal\n\t * @param {DependenciesBlockLike} block //TODO: good description\n\t * @returns {void}\n\t */\n\tremoveReasonsOfDependencyBlock(module, block) {\n\t\tif (block.blocks) {\n\t\t\tfor (const b of block.blocks) {\n\t\t\t\tthis.removeReasonsOfDependencyBlock(module, b);\n\t\t\t}\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\tfor (const dep of block.dependencies) {\n\t\t\t\tconst originalModule = this.moduleGraph.getModule(dep);\n\t\t\t\tif (originalModule) {\n\t\t\t\t\tthis.moduleGraph.removeConnection(dep);\n\n\t\t\t\t\tif (this.chunkGraph) {\n\t\t\t\t\t\tfor (const chunk of this.chunkGraph.getModuleChunks(\n\t\t\t\t\t\t\toriginalModule\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tthis.patchChunksAfterReasonRemoval(originalModule, chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module module to patch tie\n\t * @param {Chunk} chunk chunk to patch tie\n\t * @returns {void}\n\t */\n\tpatchChunksAfterReasonRemoval(module, chunk) {\n\t\tif (!module.hasReasons(this.moduleGraph, chunk.runtime)) {\n\t\t\tthis.removeReasonsOfDependencyBlock(module, module);\n\t\t}\n\t\tif (!module.hasReasonForChunk(chunk, this.moduleGraph, this.chunkGraph)) {\n\t\t\tif (this.chunkGraph.isModuleInChunk(module, chunk)) {\n\t\t\t\tthis.chunkGraph.disconnectChunkAndModule(chunk, module);\n\t\t\t\tthis.removeChunkFromDependencies(module, chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {DependenciesBlock} block block tie for Chunk\n\t * @param {Chunk} chunk chunk to remove from dep\n\t * @returns {void}\n\t */\n\tremoveChunkFromDependencies(block, chunk) {\n\t\t/**\n\t\t * @param {Dependency} d dependency to (maybe) patch up\n\t\t */\n\t\tconst iteratorDependency = d => {\n\t\t\tconst depModule = this.moduleGraph.getModule(d);\n\t\t\tif (!depModule) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patchChunksAfterReasonRemoval(depModule, chunk);\n\t\t};\n\n\t\tconst blocks = block.blocks;\n\t\tfor (let indexBlock = 0; indexBlock < blocks.length; indexBlock++) {\n\t\t\tconst asyncBlock = blocks[indexBlock];\n\t\t\tconst chunkGroup = this.chunkGraph.getBlockChunkGroup(asyncBlock);\n\t\t\t// Grab all chunks from the first Block's AsyncDepBlock\n\t\t\tconst chunks = chunkGroup.chunks;\n\t\t\t// For each chunk in chunkGroup\n\t\t\tfor (let indexChunk = 0; indexChunk < chunks.length; indexChunk++) {\n\t\t\t\tconst iteratedChunk = chunks[indexChunk];\n\t\t\t\tchunkGroup.removeChunk(iteratedChunk);\n\t\t\t\t// Recurse\n\t\t\t\tthis.removeChunkFromDependencies(block, iteratedChunk);\n\t\t\t}\n\t\t}\n\n\t\tif (block.dependencies) {\n\t\t\tfor (const dep of block.dependencies) iteratorDependency(dep);\n\t\t}\n\t}\n\n\tassignRuntimeIds() {\n\t\tconst { chunkGraph } = this;\n\t\tconst processEntrypoint = ep => {\n\t\t\tconst runtime = ep.options.runtime || ep.name;\n\t\t\tconst chunk = ep.getRuntimeChunk();\n\t\t\tchunkGraph.setRuntimeId(runtime, chunk.id);\n\t\t};\n\t\tfor (const ep of this.entrypoints.values()) {\n\t\t\tprocessEntrypoint(ep);\n\t\t}\n\t\tfor (const ep of this.asyncEntrypoints) {\n\t\t\tprocessEntrypoint(ep);\n\t\t}\n\t}\n\n\tsortItemsWithChunkIds() {\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.sortItems();\n\t\t}\n\n\t\tthis.errors.sort(compareErrors);\n\t\tthis.warnings.sort(compareErrors);\n\t\tthis.children.sort(byNameOrHash);\n\t}\n\n\tsummarizeDependencies() {\n\t\tfor (\n\t\t\tlet indexChildren = 0;\n\t\t\tindexChildren < this.children.length;\n\t\t\tindexChildren++\n\t\t) {\n\t\t\tconst child = this.children[indexChildren];\n\n\t\t\tthis.fileDependencies.addAll(child.fileDependencies);\n\t\t\tthis.contextDependencies.addAll(child.contextDependencies);\n\t\t\tthis.missingDependencies.addAll(child.missingDependencies);\n\t\t\tthis.buildDependencies.addAll(child.buildDependencies);\n\t\t}\n\n\t\tfor (const module of this.modules) {\n\t\t\tmodule.addCacheDependencies(\n\t\t\t\tthis.fileDependencies,\n\t\t\t\tthis.contextDependencies,\n\t\t\t\tthis.missingDependencies,\n\t\t\t\tthis.buildDependencies\n\t\t\t);\n\t\t}\n\t}\n\n\tcreateModuleHashes() {\n\t\tlet statModulesHashed = 0;\n\t\tlet statModulesFromCache = 0;\n\t\tconst { chunkGraph, runtimeTemplate, moduleMemCaches2 } = this;\n\t\tconst { hashFunction, hashDigest, hashDigestLength } = this.outputOptions;\n\t\tconst errors = [];\n\t\tfor (const module of this.modules) {\n\t\t\tconst memCache = moduleMemCaches2 && moduleMemCaches2.get(module);\n\t\t\tfor (const runtime of chunkGraph.getModuleRuntimes(module)) {\n\t\t\t\tif (memCache) {\n\t\t\t\t\tconst digest = memCache.get(`moduleHash-${getRuntimeKey(runtime)}`);\n\t\t\t\t\tif (digest !== undefined) {\n\t\t\t\t\t\tchunkGraph.setModuleHashes(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\tdigest,\n\t\t\t\t\t\t\tdigest.slice(0, hashDigestLength)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstatModulesFromCache++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstatModulesHashed++;\n\t\t\t\tconst digest = this._createModuleHash(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime,\n\t\t\t\t\thashFunction,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\thashDigest,\n\t\t\t\t\thashDigestLength,\n\t\t\t\t\terrors\n\t\t\t\t);\n\t\t\t\tif (memCache) {\n\t\t\t\t\tmemCache.set(`moduleHash-${getRuntimeKey(runtime)}`, digest);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (errors.length > 0) {\n\t\t\terrors.sort(compareSelect(err => err.module, compareModulesByIdentifier));\n\t\t\tfor (const error of errors) {\n\t\t\t\tthis.errors.push(error);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(\n\t\t\t`${statModulesHashed} modules hashed, ${statModulesFromCache} from cache (${\n\t\t\t\tMath.round(\n\t\t\t\t\t(100 * (statModulesHashed + statModulesFromCache)) / this.modules.size\n\t\t\t\t) / 100\n\t\t\t} variants per module in average)`\n\t\t);\n\t}\n\n\t_createModuleHash(\n\t\tmodule,\n\t\tchunkGraph,\n\t\truntime,\n\t\thashFunction,\n\t\truntimeTemplate,\n\t\thashDigest,\n\t\thashDigestLength,\n\t\terrors\n\t) {\n\t\tlet moduleHashDigest;\n\t\ttry {\n\t\t\tconst moduleHash = createHash(hashFunction);\n\t\t\tmodule.updateHash(moduleHash, {\n\t\t\t\tchunkGraph,\n\t\t\t\truntime,\n\t\t\t\truntimeTemplate\n\t\t\t});\n\t\t\tmoduleHashDigest = /** @type {string} */ (moduleHash.digest(hashDigest));\n\t\t} catch (err) {\n\t\t\terrors.push(new ModuleHashingError(module, err));\n\t\t\tmoduleHashDigest = \"XXXXXX\";\n\t\t}\n\t\tchunkGraph.setModuleHashes(\n\t\t\tmodule,\n\t\t\truntime,\n\t\t\tmoduleHashDigest,\n\t\t\tmoduleHashDigest.slice(0, hashDigestLength)\n\t\t);\n\t\treturn moduleHashDigest;\n\t}\n\n\tcreateHash() {\n\t\tthis.logger.time(\"hashing: initialize hash\");\n\t\tconst chunkGraph = this.chunkGraph;\n\t\tconst runtimeTemplate = this.runtimeTemplate;\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst hashFunction = outputOptions.hashFunction;\n\t\tconst hashDigest = outputOptions.hashDigest;\n\t\tconst hashDigestLength = outputOptions.hashDigestLength;\n\t\tconst hash = createHash(hashFunction);\n\t\tif (outputOptions.hashSalt) {\n\t\t\thash.update(outputOptions.hashSalt);\n\t\t}\n\t\tthis.logger.timeEnd(\"hashing: initialize hash\");\n\t\tif (this.children.length > 0) {\n\t\t\tthis.logger.time(\"hashing: hash child compilations\");\n\t\t\tfor (const child of this.children) {\n\t\t\t\thash.update(child.hash);\n\t\t\t}\n\t\t\tthis.logger.timeEnd(\"hashing: hash child compilations\");\n\t\t}\n\t\tif (this.warnings.length > 0) {\n\t\t\tthis.logger.time(\"hashing: hash warnings\");\n\t\t\tfor (const warning of this.warnings) {\n\t\t\t\thash.update(`${warning.message}`);\n\t\t\t}\n\t\t\tthis.logger.timeEnd(\"hashing: hash warnings\");\n\t\t}\n\t\tif (this.errors.length > 0) {\n\t\t\tthis.logger.time(\"hashing: hash errors\");\n\t\t\tfor (const error of this.errors) {\n\t\t\t\thash.update(`${error.message}`);\n\t\t\t}\n\t\t\tthis.logger.timeEnd(\"hashing: hash errors\");\n\t\t}\n\n\t\tthis.logger.time(\"hashing: sort chunks\");\n\t\t/*\n\t\t * all non-runtime chunks need to be hashes first,\n\t\t * since runtime chunk might use their hashes.\n\t\t * runtime chunks need to be hashed in the correct order\n\t\t * since they may depend on each other (for async entrypoints).\n\t\t * So we put all non-runtime chunks first and hash them in any order.\n\t\t * And order runtime chunks according to referenced between each other.\n\t\t * Chunks need to be in deterministic order since we add hashes to full chunk\n\t\t * during these hashing.\n\t\t */\n\t\t/** @type {Chunk[]} */\n\t\tconst unorderedRuntimeChunks = [];\n\t\t/** @type {Chunk[]} */\n\t\tconst otherChunks = [];\n\t\tfor (const c of this.chunks) {\n\t\t\tif (c.hasRuntime()) {\n\t\t\t\tunorderedRuntimeChunks.push(c);\n\t\t\t} else {\n\t\t\t\totherChunks.push(c);\n\t\t\t}\n\t\t}\n\t\tunorderedRuntimeChunks.sort(byId);\n\t\totherChunks.sort(byId);\n\n\t\t/** @typedef {{ chunk: Chunk, referencedBy: RuntimeChunkInfo[], remaining: number }} RuntimeChunkInfo */\n\t\t/** @type {Map<Chunk, RuntimeChunkInfo>} */\n\t\tconst runtimeChunksMap = new Map();\n\t\tfor (const chunk of unorderedRuntimeChunks) {\n\t\t\truntimeChunksMap.set(chunk, {\n\t\t\t\tchunk,\n\t\t\t\treferencedBy: [],\n\t\t\t\tremaining: 0\n\t\t\t});\n\t\t}\n\t\tlet remaining = 0;\n\t\tfor (const info of runtimeChunksMap.values()) {\n\t\t\tfor (const other of new Set(\n\t\t\t\tArray.from(info.chunk.getAllReferencedAsyncEntrypoints()).map(\n\t\t\t\t\te => e.chunks[e.chunks.length - 1]\n\t\t\t\t)\n\t\t\t)) {\n\t\t\t\tconst otherInfo = runtimeChunksMap.get(other);\n\t\t\t\totherInfo.referencedBy.push(info);\n\t\t\t\tinfo.remaining++;\n\t\t\t\tremaining++;\n\t\t\t}\n\t\t}\n\t\t/** @type {Chunk[]} */\n\t\tconst runtimeChunks = [];\n\t\tfor (const info of runtimeChunksMap.values()) {\n\t\t\tif (info.remaining === 0) {\n\t\t\t\truntimeChunks.push(info.chunk);\n\t\t\t}\n\t\t}\n\t\t// If there are any references between chunks\n\t\t// make sure to follow these chains\n\t\tif (remaining > 0) {\n\t\t\tconst readyChunks = [];\n\t\t\tfor (const chunk of runtimeChunks) {\n\t\t\t\tconst hasFullHashModules =\n\t\t\t\t\tchunkGraph.getNumberOfChunkFullHashModules(chunk) !== 0;\n\t\t\t\tconst info = runtimeChunksMap.get(chunk);\n\t\t\t\tfor (const otherInfo of info.referencedBy) {\n\t\t\t\t\tif (hasFullHashModules) {\n\t\t\t\t\t\tchunkGraph.upgradeDependentToFullHashModules(otherInfo.chunk);\n\t\t\t\t\t}\n\t\t\t\t\tremaining--;\n\t\t\t\t\tif (--otherInfo.remaining === 0) {\n\t\t\t\t\t\treadyChunks.push(otherInfo.chunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (readyChunks.length > 0) {\n\t\t\t\t\t// This ensures deterministic ordering, since referencedBy is non-deterministic\n\t\t\t\t\treadyChunks.sort(byId);\n\t\t\t\t\tfor (const c of readyChunks) runtimeChunks.push(c);\n\t\t\t\t\treadyChunks.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If there are still remaining references we have cycles and want to create a warning\n\t\tif (remaining > 0) {\n\t\t\tlet circularRuntimeChunkInfo = [];\n\t\t\tfor (const info of runtimeChunksMap.values()) {\n\t\t\t\tif (info.remaining !== 0) {\n\t\t\t\t\tcircularRuntimeChunkInfo.push(info);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcircularRuntimeChunkInfo.sort(compareSelect(i => i.chunk, byId));\n\t\t\tconst err =\n\t\t\t\tnew WebpackError(`Circular dependency between chunks with runtime (${Array.from(\n\t\t\t\t\tcircularRuntimeChunkInfo,\n\t\t\t\t\tc => c.chunk.name || c.chunk.id\n\t\t\t\t).join(\", \")})\nThis prevents using hashes of each other and should be avoided.`);\n\t\t\terr.chunk = circularRuntimeChunkInfo[0].chunk;\n\t\t\tthis.warnings.push(err);\n\t\t\tfor (const i of circularRuntimeChunkInfo) runtimeChunks.push(i.chunk);\n\t\t}\n\t\tthis.logger.timeEnd(\"hashing: sort chunks\");\n\n\t\tconst fullHashChunks = new Set();\n\t\t/** @type {{module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}[]} */\n\t\tconst codeGenerationJobs = [];\n\t\t/** @type {Map<string, Map<Module, {module: Module, hash: string, runtime: RuntimeSpec, runtimes: RuntimeSpec[]}>>} */\n\t\tconst codeGenerationJobsMap = new Map();\n\t\tconst errors = [];\n\n\t\tconst processChunk = chunk => {\n\t\t\t// Last minute module hash generation for modules that depend on chunk hashes\n\t\t\tthis.logger.time(\"hashing: hash runtime modules\");\n\t\t\tconst runtime = chunk.runtime;\n\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\tif (!chunkGraph.hasModuleHashes(module, runtime)) {\n\t\t\t\t\tconst hash = this._createModuleHash(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\terrors\n\t\t\t\t\t);\n\t\t\t\t\tlet hashMap = codeGenerationJobsMap.get(hash);\n\t\t\t\t\tif (hashMap) {\n\t\t\t\t\t\tconst moduleJob = hashMap.get(module);\n\t\t\t\t\t\tif (moduleJob) {\n\t\t\t\t\t\t\tmoduleJob.runtimes.push(runtime);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thashMap = new Map();\n\t\t\t\t\t\tcodeGenerationJobsMap.set(hash, hashMap);\n\t\t\t\t\t}\n\t\t\t\t\tconst job = {\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\thash,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\truntimes: [runtime]\n\t\t\t\t\t};\n\t\t\t\t\thashMap.set(module, job);\n\t\t\t\t\tcodeGenerationJobs.push(job);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.logger.timeAggregate(\"hashing: hash runtime modules\");\n\t\t\ttry {\n\t\t\t\tthis.logger.time(\"hashing: hash chunks\");\n\t\t\t\tconst chunkHash = createHash(hashFunction);\n\t\t\t\tif (outputOptions.hashSalt) {\n\t\t\t\t\tchunkHash.update(outputOptions.hashSalt);\n\t\t\t\t}\n\t\t\t\tchunk.updateHash(chunkHash, chunkGraph);\n\t\t\t\tthis.hooks.chunkHash.call(chunk, chunkHash, {\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tcodeGenerationResults: this.codeGenerationResults,\n\t\t\t\t\tmoduleGraph: this.moduleGraph,\n\t\t\t\t\truntimeTemplate: this.runtimeTemplate\n\t\t\t\t});\n\t\t\t\tconst chunkHashDigest = /** @type {string} */ (\n\t\t\t\t\tchunkHash.digest(hashDigest)\n\t\t\t\t);\n\t\t\t\thash.update(chunkHashDigest);\n\t\t\t\tchunk.hash = chunkHashDigest;\n\t\t\t\tchunk.renderedHash = chunk.hash.slice(0, hashDigestLength);\n\t\t\t\tconst fullHashModules =\n\t\t\t\t\tchunkGraph.getChunkFullHashModulesIterable(chunk);\n\t\t\t\tif (fullHashModules) {\n\t\t\t\t\tfullHashChunks.add(chunk);\n\t\t\t\t} else {\n\t\t\t\t\tthis.hooks.contentHash.call(chunk);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, \"\", err));\n\t\t\t}\n\t\t\tthis.logger.timeAggregate(\"hashing: hash chunks\");\n\t\t};\n\t\totherChunks.forEach(processChunk);\n\t\tfor (const chunk of runtimeChunks) processChunk(chunk);\n\t\tif (errors.length > 0) {\n\t\t\terrors.sort(compareSelect(err => err.module, compareModulesByIdentifier));\n\t\t\tfor (const error of errors) {\n\t\t\t\tthis.errors.push(error);\n\t\t\t}\n\t\t}\n\n\t\tthis.logger.timeAggregateEnd(\"hashing: hash runtime modules\");\n\t\tthis.logger.timeAggregateEnd(\"hashing: hash chunks\");\n\t\tthis.logger.time(\"hashing: hash digest\");\n\t\tthis.hooks.fullHash.call(hash);\n\t\tthis.fullHash = /** @type {string} */ (hash.digest(hashDigest));\n\t\tthis.hash = this.fullHash.slice(0, hashDigestLength);\n\t\tthis.logger.timeEnd(\"hashing: hash digest\");\n\n\t\tthis.logger.time(\"hashing: process full hash modules\");\n\t\tfor (const chunk of fullHashChunks) {\n\t\t\tfor (const module of chunkGraph.getChunkFullHashModulesIterable(chunk)) {\n\t\t\t\tconst moduleHash = createHash(hashFunction);\n\t\t\t\tmodule.updateHash(moduleHash, {\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime: chunk.runtime,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t});\n\t\t\t\tconst moduleHashDigest = /** @type {string} */ (\n\t\t\t\t\tmoduleHash.digest(hashDigest)\n\t\t\t\t);\n\t\t\t\tconst oldHash = chunkGraph.getModuleHash(module, chunk.runtime);\n\t\t\t\tchunkGraph.setModuleHashes(\n\t\t\t\t\tmodule,\n\t\t\t\t\tchunk.runtime,\n\t\t\t\t\tmoduleHashDigest,\n\t\t\t\t\tmoduleHashDigest.slice(0, hashDigestLength)\n\t\t\t\t);\n\t\t\t\tcodeGenerationJobsMap.get(oldHash).get(module).hash = moduleHashDigest;\n\t\t\t}\n\t\t\tconst chunkHash = createHash(hashFunction);\n\t\t\tchunkHash.update(chunk.hash);\n\t\t\tchunkHash.update(this.hash);\n\t\t\tconst chunkHashDigest = /** @type {string} */ (\n\t\t\t\tchunkHash.digest(hashDigest)\n\t\t\t);\n\t\t\tchunk.hash = chunkHashDigest;\n\t\t\tchunk.renderedHash = chunk.hash.slice(0, hashDigestLength);\n\t\t\tthis.hooks.contentHash.call(chunk);\n\t\t}\n\t\tthis.logger.timeEnd(\"hashing: process full hash modules\");\n\t\treturn codeGenerationJobs;\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t * @param {Source} source asset source\n\t * @param {AssetInfo} assetInfo extra asset information\n\t * @returns {void}\n\t */\n\temitAsset(file, source, assetInfo = {}) {\n\t\tif (this.assets[file]) {\n\t\t\tif (!isSourceEqual(this.assets[file], source)) {\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t`Conflict: Multiple assets emit different content to the same filename ${file}${\n\t\t\t\t\t\t\tassetInfo.sourceFilename\n\t\t\t\t\t\t\t\t? `. Original source ${assetInfo.sourceFilename}`\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.assets[file] = source;\n\t\t\t\tthis._setAssetInfo(file, assetInfo);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst oldInfo = this.assetsInfo.get(file);\n\t\t\tconst newInfo = Object.assign({}, oldInfo, assetInfo);\n\t\t\tthis._setAssetInfo(file, newInfo, oldInfo);\n\t\t\treturn;\n\t\t}\n\t\tthis.assets[file] = source;\n\t\tthis._setAssetInfo(file, assetInfo, undefined);\n\t}\n\n\t_setAssetInfo(file, newInfo, oldInfo = this.assetsInfo.get(file)) {\n\t\tif (newInfo === undefined) {\n\t\t\tthis.assetsInfo.delete(file);\n\t\t} else {\n\t\t\tthis.assetsInfo.set(file, newInfo);\n\t\t}\n\t\tconst oldRelated = oldInfo && oldInfo.related;\n\t\tconst newRelated = newInfo && newInfo.related;\n\t\tif (oldRelated) {\n\t\t\tfor (const key of Object.keys(oldRelated)) {\n\t\t\t\tconst remove = name => {\n\t\t\t\t\tconst relatedIn = this._assetsRelatedIn.get(name);\n\t\t\t\t\tif (relatedIn === undefined) return;\n\t\t\t\t\tconst entry = relatedIn.get(key);\n\t\t\t\t\tif (entry === undefined) return;\n\t\t\t\t\tentry.delete(file);\n\t\t\t\t\tif (entry.size !== 0) return;\n\t\t\t\t\trelatedIn.delete(key);\n\t\t\t\t\tif (relatedIn.size === 0) this._assetsRelatedIn.delete(name);\n\t\t\t\t};\n\t\t\t\tconst entry = oldRelated[key];\n\t\t\t\tif (Array.isArray(entry)) {\n\t\t\t\t\tentry.forEach(remove);\n\t\t\t\t} else if (entry) {\n\t\t\t\t\tremove(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (newRelated) {\n\t\t\tfor (const key of Object.keys(newRelated)) {\n\t\t\t\tconst add = name => {\n\t\t\t\t\tlet relatedIn = this._assetsRelatedIn.get(name);\n\t\t\t\t\tif (relatedIn === undefined) {\n\t\t\t\t\t\tthis._assetsRelatedIn.set(name, (relatedIn = new Map()));\n\t\t\t\t\t}\n\t\t\t\t\tlet entry = relatedIn.get(key);\n\t\t\t\t\tif (entry === undefined) {\n\t\t\t\t\t\trelatedIn.set(key, (entry = new Set()));\n\t\t\t\t\t}\n\t\t\t\t\tentry.add(file);\n\t\t\t\t};\n\t\t\t\tconst entry = newRelated[key];\n\t\t\t\tif (Array.isArray(entry)) {\n\t\t\t\t\tentry.forEach(add);\n\t\t\t\t} else if (entry) {\n\t\t\t\t\tadd(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t * @param {Source | function(Source): Source} newSourceOrFunction new asset source or function converting old to new\n\t * @param {AssetInfo | function(AssetInfo | undefined): AssetInfo} assetInfoUpdateOrFunction new asset info or function converting old to new\n\t */\n\tupdateAsset(\n\t\tfile,\n\t\tnewSourceOrFunction,\n\t\tassetInfoUpdateOrFunction = undefined\n\t) {\n\t\tif (!this.assets[file]) {\n\t\t\tthrow new Error(\n\t\t\t\t`Called Compilation.updateAsset for not existing filename ${file}`\n\t\t\t);\n\t\t}\n\t\tif (typeof newSourceOrFunction === \"function\") {\n\t\t\tthis.assets[file] = newSourceOrFunction(this.assets[file]);\n\t\t} else {\n\t\t\tthis.assets[file] = newSourceOrFunction;\n\t\t}\n\t\tif (assetInfoUpdateOrFunction !== undefined) {\n\t\t\tconst oldInfo = this.assetsInfo.get(file) || EMPTY_ASSET_INFO;\n\t\t\tif (typeof assetInfoUpdateOrFunction === \"function\") {\n\t\t\t\tthis._setAssetInfo(file, assetInfoUpdateOrFunction(oldInfo), oldInfo);\n\t\t\t} else {\n\t\t\t\tthis._setAssetInfo(\n\t\t\t\t\tfile,\n\t\t\t\t\tcachedCleverMerge(oldInfo, assetInfoUpdateOrFunction),\n\t\t\t\t\toldInfo\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\trenameAsset(file, newFile) {\n\t\tconst source = this.assets[file];\n\t\tif (!source) {\n\t\t\tthrow new Error(\n\t\t\t\t`Called Compilation.renameAsset for not existing filename ${file}`\n\t\t\t);\n\t\t}\n\t\tif (this.assets[newFile]) {\n\t\t\tif (!isSourceEqual(this.assets[file], source)) {\n\t\t\t\tthis.errors.push(\n\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t`Conflict: Called Compilation.renameAsset for already existing filename ${newFile} with different content`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst assetInfo = this.assetsInfo.get(file);\n\t\t// Update related in all other assets\n\t\tconst relatedInInfo = this._assetsRelatedIn.get(file);\n\t\tif (relatedInInfo) {\n\t\t\tfor (const [key, assets] of relatedInInfo) {\n\t\t\t\tfor (const name of assets) {\n\t\t\t\t\tconst info = this.assetsInfo.get(name);\n\t\t\t\t\tif (!info) continue;\n\t\t\t\t\tconst related = info.related;\n\t\t\t\t\tif (!related) continue;\n\t\t\t\t\tconst entry = related[key];\n\t\t\t\t\tlet newEntry;\n\t\t\t\t\tif (Array.isArray(entry)) {\n\t\t\t\t\t\tnewEntry = entry.map(x => (x === file ? newFile : x));\n\t\t\t\t\t} else if (entry === file) {\n\t\t\t\t\t\tnewEntry = newFile;\n\t\t\t\t\t} else continue;\n\t\t\t\t\tthis.assetsInfo.set(name, {\n\t\t\t\t\t\t...info,\n\t\t\t\t\t\trelated: {\n\t\t\t\t\t\t\t...related,\n\t\t\t\t\t\t\t[key]: newEntry\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._setAssetInfo(file, undefined, assetInfo);\n\t\tthis._setAssetInfo(newFile, assetInfo);\n\t\tdelete this.assets[file];\n\t\tthis.assets[newFile] = source;\n\t\tfor (const chunk of this.chunks) {\n\t\t\t{\n\t\t\t\tconst size = chunk.files.size;\n\t\t\t\tchunk.files.delete(file);\n\t\t\t\tif (size !== chunk.files.size) {\n\t\t\t\t\tchunk.files.add(newFile);\n\t\t\t\t}\n\t\t\t}\n\t\t\t{\n\t\t\t\tconst size = chunk.auxiliaryFiles.size;\n\t\t\t\tchunk.auxiliaryFiles.delete(file);\n\t\t\t\tif (size !== chunk.auxiliaryFiles.size) {\n\t\t\t\t\tchunk.auxiliaryFiles.add(newFile);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} file file name\n\t */\n\tdeleteAsset(file) {\n\t\tif (!this.assets[file]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this.assets[file];\n\t\tconst assetInfo = this.assetsInfo.get(file);\n\t\tthis._setAssetInfo(file, undefined, assetInfo);\n\t\tconst related = assetInfo && assetInfo.related;\n\t\tif (related) {\n\t\t\tfor (const key of Object.keys(related)) {\n\t\t\t\tconst checkUsedAndDelete = file => {\n\t\t\t\t\tif (!this._assetsRelatedIn.has(file)) {\n\t\t\t\t\t\tthis.deleteAsset(file);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst items = related[key];\n\t\t\t\tif (Array.isArray(items)) {\n\t\t\t\t\titems.forEach(checkUsedAndDelete);\n\t\t\t\t} else if (items) {\n\t\t\t\t\tcheckUsedAndDelete(items);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// TODO If this becomes a performance problem\n\t\t// store a reverse mapping from asset to chunk\n\t\tfor (const chunk of this.chunks) {\n\t\t\tchunk.files.delete(file);\n\t\t\tchunk.auxiliaryFiles.delete(file);\n\t\t}\n\t}\n\n\tgetAssets() {\n\t\t/** @type {Readonly<Asset>[]} */\n\t\tconst array = [];\n\t\tfor (const assetName of Object.keys(this.assets)) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(this.assets, assetName)) {\n\t\t\t\tarray.push({\n\t\t\t\t\tname: assetName,\n\t\t\t\t\tsource: this.assets[assetName],\n\t\t\t\t\tinfo: this.assetsInfo.get(assetName) || EMPTY_ASSET_INFO\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * @param {string} name the name of the asset\n\t * @returns {Readonly<Asset> | undefined} the asset or undefined when not found\n\t */\n\tgetAsset(name) {\n\t\tif (!Object.prototype.hasOwnProperty.call(this.assets, name))\n\t\t\treturn undefined;\n\t\treturn {\n\t\t\tname,\n\t\t\tsource: this.assets[name],\n\t\t\tinfo: this.assetsInfo.get(name) || EMPTY_ASSET_INFO\n\t\t};\n\t}\n\n\tclearAssets() {\n\t\tfor (const chunk of this.chunks) {\n\t\t\tchunk.files.clear();\n\t\t\tchunk.auxiliaryFiles.clear();\n\t\t}\n\t}\n\n\tcreateModuleAssets() {\n\t\tconst { chunkGraph } = this;\n\t\tfor (const module of this.modules) {\n\t\t\tif (module.buildInfo.assets) {\n\t\t\t\tconst assetsInfo = module.buildInfo.assetsInfo;\n\t\t\t\tfor (const assetName of Object.keys(module.buildInfo.assets)) {\n\t\t\t\t\tconst fileName = this.getPath(assetName, {\n\t\t\t\t\t\tchunkGraph: this.chunkGraph,\n\t\t\t\t\t\tmodule\n\t\t\t\t\t});\n\t\t\t\t\tfor (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n\t\t\t\t\t\tchunk.auxiliaryFiles.add(fileName);\n\t\t\t\t\t}\n\t\t\t\t\tthis.emitAsset(\n\t\t\t\t\t\tfileName,\n\t\t\t\t\t\tmodule.buildInfo.assets[assetName],\n\t\t\t\t\t\tassetsInfo ? assetsInfo.get(assetName) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tthis.hooks.moduleAsset.call(module, fileName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {RenderManifestOptions} options options object\n\t * @returns {RenderManifestEntry[]} manifest entries\n\t */\n\tgetRenderManifest(options) {\n\t\treturn this.hooks.renderManifest.call([], options);\n\t}\n\n\t/**\n\t * @param {Callback} callback signals when the call finishes\n\t * @returns {void}\n\t */\n\tcreateChunkAssets(callback) {\n\t\tconst outputOptions = this.outputOptions;\n\t\tconst cachedSourceMap = new WeakMap();\n\t\t/** @type {Map<string, {hash: string, source: Source, chunk: Chunk}>} */\n\t\tconst alreadyWrittenFiles = new Map();\n\n\t\tasyncLib.forEachLimit(\n\t\t\tthis.chunks,\n\t\t\t15,\n\t\t\t(chunk, callback) => {\n\t\t\t\t/** @type {RenderManifestEntry[]} */\n\t\t\t\tlet manifest;\n\t\t\t\ttry {\n\t\t\t\t\tmanifest = this.getRenderManifest({\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\thash: this.hash,\n\t\t\t\t\t\tfullHash: this.fullHash,\n\t\t\t\t\t\toutputOptions,\n\t\t\t\t\t\tcodeGenerationResults: this.codeGenerationResults,\n\t\t\t\t\t\tmoduleTemplates: this.moduleTemplates,\n\t\t\t\t\t\tdependencyTemplates: this.dependencyTemplates,\n\t\t\t\t\t\tchunkGraph: this.chunkGraph,\n\t\t\t\t\t\tmoduleGraph: this.moduleGraph,\n\t\t\t\t\t\truntimeTemplate: this.runtimeTemplate\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, \"\", err));\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tmanifest,\n\t\t\t\t\t(fileManifest, callback) => {\n\t\t\t\t\t\tconst ident = fileManifest.identifier;\n\t\t\t\t\t\tconst usedHash = fileManifest.hash;\n\n\t\t\t\t\t\tconst assetCacheItem = this._assetsCache.getItemCache(\n\t\t\t\t\t\t\tident,\n\t\t\t\t\t\t\tusedHash\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tassetCacheItem.get((err, sourceFromCache) => {\n\t\t\t\t\t\t\t/** @type {string | function(PathData, AssetInfo=): string} */\n\t\t\t\t\t\t\tlet filenameTemplate;\n\t\t\t\t\t\t\t/** @type {string} */\n\t\t\t\t\t\t\tlet file;\n\t\t\t\t\t\t\t/** @type {AssetInfo} */\n\t\t\t\t\t\t\tlet assetInfo;\n\n\t\t\t\t\t\t\tlet inTry = true;\n\t\t\t\t\t\t\tconst errorAndCallback = err => {\n\t\t\t\t\t\t\t\tconst filename =\n\t\t\t\t\t\t\t\t\tfile ||\n\t\t\t\t\t\t\t\t\t(typeof file === \"string\"\n\t\t\t\t\t\t\t\t\t\t? file\n\t\t\t\t\t\t\t\t\t\t: typeof filenameTemplate === \"string\"\n\t\t\t\t\t\t\t\t\t\t? filenameTemplate\n\t\t\t\t\t\t\t\t\t\t: \"\");\n\n\t\t\t\t\t\t\t\tthis.errors.push(new ChunkRenderError(chunk, filename, err));\n\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (\"filename\" in fileManifest) {\n\t\t\t\t\t\t\t\t\tfile = fileManifest.filename;\n\t\t\t\t\t\t\t\t\tassetInfo = fileManifest.info;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfilenameTemplate = fileManifest.filenameTemplate;\n\t\t\t\t\t\t\t\t\tconst pathAndInfo = this.getPathWithInfo(\n\t\t\t\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\t\t\t\tfileManifest.pathOptions\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfile = pathAndInfo.path;\n\t\t\t\t\t\t\t\t\tassetInfo = fileManifest.info\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t...pathAndInfo.info,\n\t\t\t\t\t\t\t\t\t\t\t\t...fileManifest.info\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t: pathAndInfo.info;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn errorAndCallback(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlet source = sourceFromCache;\n\n\t\t\t\t\t\t\t\t// check if the same filename was already written by another chunk\n\t\t\t\t\t\t\t\tconst alreadyWritten = alreadyWrittenFiles.get(file);\n\t\t\t\t\t\t\t\tif (alreadyWritten !== undefined) {\n\t\t\t\t\t\t\t\t\tif (alreadyWritten.hash !== usedHash) {\n\t\t\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\tnew WebpackError(\n\t\t\t\t\t\t\t\t\t\t\t\t`Conflict: Multiple chunks emit assets to the same filename ${file}` +\n\t\t\t\t\t\t\t\t\t\t\t\t\t` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsource = alreadyWritten.source;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (!source) {\n\t\t\t\t\t\t\t\t\t// render the asset\n\t\t\t\t\t\t\t\t\tsource = fileManifest.render();\n\n\t\t\t\t\t\t\t\t\t// Ensure that source is a cached source to avoid additional cost because of repeated access\n\t\t\t\t\t\t\t\t\tif (!(source instanceof CachedSource)) {\n\t\t\t\t\t\t\t\t\t\tconst cacheEntry = cachedSourceMap.get(source);\n\t\t\t\t\t\t\t\t\t\tif (cacheEntry) {\n\t\t\t\t\t\t\t\t\t\t\tsource = cacheEntry;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tconst cachedSource = new CachedSource(source);\n\t\t\t\t\t\t\t\t\t\t\tcachedSourceMap.set(source, cachedSource);\n\t\t\t\t\t\t\t\t\t\t\tsource = cachedSource;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.emitAsset(file, source, assetInfo);\n\t\t\t\t\t\t\t\tif (fileManifest.auxiliary) {\n\t\t\t\t\t\t\t\t\tchunk.auxiliaryFiles.add(file);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchunk.files.add(file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.hooks.chunkAsset.call(chunk, file);\n\t\t\t\t\t\t\t\talreadyWrittenFiles.set(file, {\n\t\t\t\t\t\t\t\t\thash: usedHash,\n\t\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (source !== sourceFromCache) {\n\t\t\t\t\t\t\t\t\tassetCacheItem.store(source, err => {\n\t\t\t\t\t\t\t\t\t\tif (err) return errorAndCallback(err);\n\t\t\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinTry = false;\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (!inTry) throw err;\n\t\t\t\t\t\t\t\terrorAndCallback(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t},\n\t\t\tcallback\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {string} interpolated path\n\t */\n\tgetPath(filename, data = {}) {\n\t\tif (!data.hash) {\n\t\t\tdata = {\n\t\t\t\thash: this.hash,\n\t\t\t\t...data\n\t\t\t};\n\t\t}\n\t\treturn this.getAssetPath(filename, data);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n\t */\n\tgetPathWithInfo(filename, data = {}) {\n\t\tif (!data.hash) {\n\t\t\tdata = {\n\t\t\t\thash: this.hash,\n\t\t\t\t...data\n\t\t\t};\n\t\t}\n\t\treturn this.getAssetPathWithInfo(filename, data);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {string} interpolated path\n\t */\n\tgetAssetPath(filename, data) {\n\t\treturn this.hooks.assetPath.call(\n\t\t\ttypeof filename === \"function\" ? filename(data) : filename,\n\t\t\tdata,\n\t\t\tundefined\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | function(PathData, AssetInfo=): string} filename used to get asset path with hash\n\t * @param {PathData} data context data\n\t * @returns {{ path: string, info: AssetInfo }} interpolated path and asset info\n\t */\n\tgetAssetPathWithInfo(filename, data) {\n\t\tconst assetInfo = {};\n\t\t// TODO webpack 5: refactor assetPath hook to receive { path, info } object\n\t\tconst newPath = this.hooks.assetPath.call(\n\t\t\ttypeof filename === \"function\" ? filename(data, assetInfo) : filename,\n\t\t\tdata,\n\t\t\tassetInfo\n\t\t);\n\t\treturn { path: newPath, info: assetInfo };\n\t}\n\n\tgetWarnings() {\n\t\treturn this.hooks.processWarnings.call(this.warnings);\n\t}\n\n\tgetErrors() {\n\t\treturn this.hooks.processErrors.call(this.errors);\n\t}\n\n\t/**\n\t * This function allows you to run another instance of webpack inside of webpack however as\n\t * a child with different settings and configurations (if desired) applied. It copies all hooks, plugins\n\t * from parent (or top level compiler) and creates a child Compilation\n\t *\n\t * @param {string} name name of the child compiler\n\t * @param {OutputOptions=} outputOptions // Need to convert config schema to types for this\n\t * @param {Array<WebpackPluginInstance | WebpackPluginFunction>=} plugins webpack plugins that will be applied\n\t * @returns {Compiler} creates a child Compiler instance\n\t */\n\tcreateChildCompiler(name, outputOptions, plugins) {\n\t\tconst idx = this.childrenCounters[name] || 0;\n\t\tthis.childrenCounters[name] = idx + 1;\n\t\treturn this.compiler.createChildCompiler(\n\t\t\tthis,\n\t\t\tname,\n\t\t\tidx,\n\t\t\toutputOptions,\n\t\t\tplugins\n\t\t);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {ExecuteModuleOptions} options options\n\t * @param {ExecuteModuleCallback} callback callback\n\t */\n\texecuteModule(module, options, callback) {\n\t\t// Aggregate all referenced modules and ensure they are ready\n\t\tconst modules = new Set([module]);\n\t\tprocessAsyncTree(\n\t\t\tmodules,\n\t\t\t10,\n\t\t\t/**\n\t\t\t * @param {Module} module the module\n\t\t\t * @param {function(Module): void} push push more jobs\n\t\t\t * @param {Callback} callback callback\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\t(module, push, callback) => {\n\t\t\t\tthis.buildQueue.waitFor(module, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tthis.processDependenciesQueue.waitFor(module, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tfor (const { module: m } of this.moduleGraph.getOutgoingConnections(\n\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tconst size = modules.size;\n\t\t\t\t\t\t\tmodules.add(m);\n\t\t\t\t\t\t\tif (modules.size !== size) push(m);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t// Create new chunk graph, chunk and entrypoint for the build time execution\n\t\t\t\tconst chunkGraph = new ChunkGraph(\n\t\t\t\t\tthis.moduleGraph,\n\t\t\t\t\tthis.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t\tconst runtime = \"build time\";\n\t\t\t\tconst { hashFunction, hashDigest, hashDigestLength } =\n\t\t\t\t\tthis.outputOptions;\n\t\t\t\tconst runtimeTemplate = this.runtimeTemplate;\n\n\t\t\t\tconst chunk = new Chunk(\"build time chunk\", this._backCompat);\n\t\t\t\tchunk.id = chunk.name;\n\t\t\t\tchunk.ids = [chunk.id];\n\t\t\t\tchunk.runtime = runtime;\n\n\t\t\t\tconst entrypoint = new Entrypoint({\n\t\t\t\t\truntime,\n\t\t\t\t\tchunkLoading: false,\n\t\t\t\t\t...options.entryOptions\n\t\t\t\t});\n\t\t\t\tchunkGraph.connectChunkAndEntryModule(chunk, module, entrypoint);\n\t\t\t\tconnectChunkGroupAndChunk(entrypoint, chunk);\n\t\t\t\tentrypoint.setRuntimeChunk(chunk);\n\t\t\t\tentrypoint.setEntrypointChunk(chunk);\n\n\t\t\t\tconst chunks = new Set([chunk]);\n\n\t\t\t\t// Assign ids to modules and modules to the chunk\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tconst id = module.identifier();\n\t\t\t\t\tchunkGraph.setModuleId(module, id);\n\t\t\t\t\tchunkGraph.connectChunkAndModule(chunk, module);\n\t\t\t\t}\n\n\t\t\t\t/** @type {WebpackError[]} */\n\t\t\t\tconst errors = [];\n\n\t\t\t\t// Hash modules\n\t\t\t\tfor (const module of modules) {\n\t\t\t\t\tthis._createModuleHash(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\terrors\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst codeGenerationResults = new CodeGenerationResults(\n\t\t\t\t\tthis.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t\t/**\n\t\t\t\t * @param {Module} module the module\n\t\t\t\t * @param {Callback} callback callback\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst codeGen = (module, callback) => {\n\t\t\t\t\tthis._codeGenerationModule(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\truntime,\n\t\t\t\t\t\t[runtime],\n\t\t\t\t\t\tchunkGraph.getModuleHash(module, runtime),\n\t\t\t\t\t\tthis.dependencyTemplates,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tthis.moduleGraph,\n\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\t(err, codeGenerated) => {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst reportErrors = () => {\n\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\terrors.sort(\n\t\t\t\t\t\t\tcompareSelect(err => err.module, compareModulesByIdentifier)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const error of errors) {\n\t\t\t\t\t\t\tthis.errors.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\terrors.length = 0;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Generate code for all aggregated modules\n\t\t\t\tasyncLib.eachLimit(modules, 10, codeGen, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\treportErrors();\n\n\t\t\t\t\t// for backward-compat temporary set the chunk graph\n\t\t\t\t\t// TODO webpack 6\n\t\t\t\t\tconst old = this.chunkGraph;\n\t\t\t\t\tthis.chunkGraph = chunkGraph;\n\t\t\t\t\tthis.processRuntimeRequirements({\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\tmodules,\n\t\t\t\t\t\tchunks,\n\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\tchunkGraphEntries: chunks\n\t\t\t\t\t});\n\t\t\t\t\tthis.chunkGraph = old;\n\n\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesIterable(chunk);\n\n\t\t\t\t\t// Hash runtime modules\n\t\t\t\t\tfor (const module of runtimeModules) {\n\t\t\t\t\t\tmodules.add(module);\n\t\t\t\t\t\tthis._createModuleHash(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\t\thashDigestLength\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Generate code for all runtime modules\n\t\t\t\t\tasyncLib.eachLimit(runtimeModules, 10, codeGen, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\treportErrors();\n\n\t\t\t\t\t\t/** @type {Map<Module, ExecuteModuleArgument>} */\n\t\t\t\t\t\tconst moduleArgumentsMap = new Map();\n\t\t\t\t\t\t/** @type {Map<string, ExecuteModuleArgument>} */\n\t\t\t\t\t\tconst moduleArgumentsById = new Map();\n\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"fileDependencies\"]} */\n\t\t\t\t\t\tconst fileDependencies = new LazySet();\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"contextDependencies\"]} */\n\t\t\t\t\t\tconst contextDependencies = new LazySet();\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"missingDependencies\"]} */\n\t\t\t\t\t\tconst missingDependencies = new LazySet();\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"buildDependencies\"]} */\n\t\t\t\t\t\tconst buildDependencies = new LazySet();\n\n\t\t\t\t\t\t/** @type {ExecuteModuleResult[\"assets\"]} */\n\t\t\t\t\t\tconst assets = new Map();\n\n\t\t\t\t\t\tlet cacheable = true;\n\n\t\t\t\t\t\t/** @type {ExecuteModuleContext} */\n\t\t\t\t\t\tconst context = {\n\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t__webpack_require__: undefined,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Prepare execution\n\t\t\t\t\t\tasyncLib.eachLimit(\n\t\t\t\t\t\t\tmodules,\n\t\t\t\t\t\t\t10,\n\t\t\t\t\t\t\t(module, callback) => {\n\t\t\t\t\t\t\t\tconst codeGenerationResult = codeGenerationResults.get(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\truntime\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t/** @type {ExecuteModuleArgument} */\n\t\t\t\t\t\t\t\tconst moduleArgument = {\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\tcodeGenerationResult,\n\t\t\t\t\t\t\t\t\tpreparedInfo: undefined,\n\t\t\t\t\t\t\t\t\tmoduleObject: undefined\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tmoduleArgumentsMap.set(module, moduleArgument);\n\t\t\t\t\t\t\t\tmoduleArgumentsById.set(module.identifier(), moduleArgument);\n\t\t\t\t\t\t\t\tmodule.addCacheDependencies(\n\t\t\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\t\t\tmissingDependencies,\n\t\t\t\t\t\t\t\t\tbuildDependencies\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (module.buildInfo.cacheable === false) {\n\t\t\t\t\t\t\t\t\tcacheable = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (module.buildInfo && module.buildInfo.assets) {\n\t\t\t\t\t\t\t\t\tconst { assets: moduleAssets, assetsInfo } = module.buildInfo;\n\t\t\t\t\t\t\t\t\tfor (const assetName of Object.keys(moduleAssets)) {\n\t\t\t\t\t\t\t\t\t\tassets.set(assetName, {\n\t\t\t\t\t\t\t\t\t\t\tsource: moduleAssets[assetName],\n\t\t\t\t\t\t\t\t\t\t\tinfo: assetsInfo ? assetsInfo.get(assetName) : undefined\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.hooks.prepareModuleExecution.callAsync(\n\t\t\t\t\t\t\t\t\tmoduleArgument,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tlet exports;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\tstrictModuleErrorHandling,\n\t\t\t\t\t\t\t\t\t\tstrictModuleExceptionHandling\n\t\t\t\t\t\t\t\t\t} = this.outputOptions;\n\t\t\t\t\t\t\t\t\tconst __webpack_require__ = id => {\n\t\t\t\t\t\t\t\t\t\tconst cached = moduleCache[id];\n\t\t\t\t\t\t\t\t\t\tif (cached !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tif (cached.error) throw cached.error;\n\t\t\t\t\t\t\t\t\t\t\treturn cached.exports;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst moduleArgument = moduleArgumentsById.get(id);\n\t\t\t\t\t\t\t\t\t\treturn __webpack_require_module__(moduleArgument, id);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tconst interceptModuleExecution = (__webpack_require__[\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.interceptModuleExecution.replace(\n\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.require}.`,\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t] = []);\n\t\t\t\t\t\t\t\t\tconst moduleCache = (__webpack_require__[\n\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.moduleCache.replace(\n\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.require}.`,\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t] = {});\n\n\t\t\t\t\t\t\t\t\tcontext.__webpack_require__ = __webpack_require__;\n\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @param {ExecuteModuleArgument} moduleArgument the module argument\n\t\t\t\t\t\t\t\t\t * @param {string=} id id\n\t\t\t\t\t\t\t\t\t * @returns {any} exports\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tconst __webpack_require_module__ = (moduleArgument, id) => {\n\t\t\t\t\t\t\t\t\t\tvar execOptions = {\n\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\tmodule: {\n\t\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\t\texports: {},\n\t\t\t\t\t\t\t\t\t\t\t\tloaded: false,\n\t\t\t\t\t\t\t\t\t\t\t\terror: undefined\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\trequire: __webpack_require__\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tinterceptModuleExecution.forEach(handler =>\n\t\t\t\t\t\t\t\t\t\t\thandler(execOptions)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst module = moduleArgument.module;\n\t\t\t\t\t\t\t\t\t\tthis.buildTimeExecutedModules.add(module);\n\t\t\t\t\t\t\t\t\t\tconst moduleObject = execOptions.module;\n\t\t\t\t\t\t\t\t\t\tmoduleArgument.moduleObject = moduleObject;\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tif (id) moduleCache[id] = moduleObject;\n\n\t\t\t\t\t\t\t\t\t\t\ttryRunOrWebpackError(\n\t\t\t\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.hooks.executeModule.call(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoduleArgument,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontext\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\"Compilation.hooks.executeModule\"\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tmoduleObject.loaded = true;\n\t\t\t\t\t\t\t\t\t\t\treturn moduleObject.exports;\n\t\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\t\tif (strictModuleExceptionHandling) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (id) delete moduleCache[id];\n\t\t\t\t\t\t\t\t\t\t\t} else if (strictModuleErrorHandling) {\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleObject.error = e;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!e.module) e.module = module;\n\t\t\t\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tfor (const runtimeModule of chunkGraph.getChunkRuntimeModulesInOrder(\n\t\t\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\t\t__webpack_require_module__(\n\t\t\t\t\t\t\t\t\t\t\tmoduleArgumentsMap.get(runtimeModule)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\texports = __webpack_require__(module.identifier());\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconst err = new WebpackError(\n\t\t\t\t\t\t\t\t\t\t`Execution of module code from module graph (${module.readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\tthis.requestShortener\n\t\t\t\t\t\t\t\t\t\t)}) failed: ${e.message}`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\terr.stack = e.stack;\n\t\t\t\t\t\t\t\t\terr.module = e.module;\n\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\t\texports,\n\t\t\t\t\t\t\t\t\tassets,\n\t\t\t\t\t\t\t\t\tcacheable,\n\t\t\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\t\t\tmissingDependencies,\n\t\t\t\t\t\t\t\t\tbuildDependencies\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tcheckConstraints() {\n\t\tconst chunkGraph = this.chunkGraph;\n\n\t\t/** @type {Set<number|string>} */\n\t\tconst usedIds = new Set();\n\n\t\tfor (const module of this.modules) {\n\t\t\tif (module.type === WEBPACK_MODULE_TYPE_RUNTIME) continue;\n\t\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\t\tif (moduleId === null) continue;\n\t\t\tif (usedIds.has(moduleId)) {\n\t\t\t\tthrow new Error(`checkConstraints: duplicate module id ${moduleId}`);\n\t\t\t}\n\t\t\tusedIds.add(moduleId);\n\t\t}\n\n\t\tfor (const chunk of this.chunks) {\n\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\tif (!this.modules.has(module)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"checkConstraints: module in chunk but not in compilation \" +\n\t\t\t\t\t\t\t` ${chunk.debugId} ${module.debugId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const module of chunkGraph.getChunkEntryModulesIterable(chunk)) {\n\t\t\t\tif (!this.modules.has(module)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"checkConstraints: entry module in chunk but not in compilation \" +\n\t\t\t\t\t\t\t` ${chunk.debugId} ${module.debugId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const chunkGroup of this.chunkGroups) {\n\t\t\tchunkGroup.checkConstraints();\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} FactorizeModuleOptions\n * @property {ModuleProfile} currentProfile\n * @property {ModuleFactory} factory\n * @property {Dependency[]} dependencies\n * @property {boolean=} factoryResult return full ModuleFactoryResult instead of only module\n * @property {Module | null} originModule\n * @property {Partial<ModuleFactoryCreateDataContextInfo>=} contextInfo\n * @property {string=} context\n */\n\n/**\n * @param {FactorizeModuleOptions} options options object\n * @param {ModuleCallback | ModuleFactoryResultCallback} callback callback\n * @returns {void}\n */\n\n// Workaround for typescript as it doesn't support function overloading in jsdoc within a class\nCompilation.prototype.factorizeModule = /** @type {{\n\t(options: FactorizeModuleOptions & { factoryResult?: false }, callback: ModuleCallback): void;\n\t(options: FactorizeModuleOptions & { factoryResult: true }, callback: ModuleFactoryResultCallback): void;\n}} */ (\n\tfunction (options, callback) {\n\t\tthis.factorizeQueue.add(options, callback);\n\t}\n);\n\n// Hide from typescript\nconst compilationPrototype = Compilation.prototype;\n\n// TODO webpack 6 remove\nObject.defineProperty(compilationPrototype, \"modifyHash\", {\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: false,\n\tvalue: () => {\n\t\tthrow new Error(\n\t\t\t\"Compilation.modifyHash was removed in favor of Compilation.hooks.fullHash\"\n\t\t);\n\t}\n});\n\n// TODO webpack 6 remove\nObject.defineProperty(compilationPrototype, \"cache\", {\n\tenumerable: false,\n\tconfigurable: false,\n\tget: util.deprecate(\n\t\t/**\n\t\t * @this {Compilation} the compilation\n\t\t * @returns {Cache} the cache\n\t\t */\n\t\tfunction () {\n\t\t\treturn this.compiler.cache;\n\t\t},\n\t\t\"Compilation.cache was removed in favor of Compilation.getCache()\",\n\t\t\"DEP_WEBPACK_COMPILATION_CACHE\"\n\t),\n\tset: util.deprecate(\n\t\tv => {},\n\t\t\"Compilation.cache was removed in favor of Compilation.getCache()\",\n\t\t\"DEP_WEBPACK_COMPILATION_CACHE\"\n\t)\n});\n\n/**\n * Add additional assets to the compilation.\n */\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONAL = -2000;\n\n/**\n * Basic preprocessing of assets.\n */\nCompilation.PROCESS_ASSETS_STAGE_PRE_PROCESS = -1000;\n\n/**\n * Derive new assets from existing assets.\n * Existing assets should not be treated as complete.\n */\nCompilation.PROCESS_ASSETS_STAGE_DERIVED = -200;\n\n/**\n * Add additional sections to existing assets, like a banner or initialization code.\n */\nCompilation.PROCESS_ASSETS_STAGE_ADDITIONS = -100;\n\n/**\n * Optimize existing assets in a general way.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE = 100;\n\n/**\n * Optimize the count of existing assets, e. g. by merging them.\n * Only assets of the same type should be merged.\n * For assets of different types see PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT = 200;\n\n/**\n * Optimize the compatibility of existing assets, e. g. add polyfills or vendor-prefixes.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY = 300;\n\n/**\n * Optimize the size of existing assets, e. g. by minimizing or omitting whitespace.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE = 400;\n\n/**\n * Add development tooling to assets, e. g. by extracting a SourceMap.\n */\nCompilation.PROCESS_ASSETS_STAGE_DEV_TOOLING = 500;\n\n/**\n * Optimize the count of existing assets, e. g. by inlining assets of into other assets.\n * Only assets of different types should be inlined.\n * For assets of the same type see PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE = 700;\n\n/**\n * Summarize the list of existing assets\n * e. g. creating an assets manifest of Service Workers.\n */\nCompilation.PROCESS_ASSETS_STAGE_SUMMARIZE = 1000;\n\n/**\n * Optimize the hashes of the assets, e. g. by generating real hashes of the asset content.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_HASH = 2500;\n\n/**\n * Optimize the transfer of existing assets, e. g. by preparing a compressed (gzip) file as separate asset.\n */\nCompilation.PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER = 3000;\n\n/**\n * Analyse existing assets.\n */\nCompilation.PROCESS_ASSETS_STAGE_ANALYSE = 4000;\n\n/**\n * Creating assets for reporting purposes.\n */\nCompilation.PROCESS_ASSETS_STAGE_REPORT = 5000;\n\nmodule.exports = Compilation;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
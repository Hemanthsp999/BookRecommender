{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Server = void 0;\nconst array_flatten_1 = __importDefault(require(\"array-flatten\"));\nconst es6_1 = __importDefault(require(\"fast-deep-equal/es6\"));\nconst multicast_dns_1 = __importDefault(require(\"multicast-dns\"));\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\nclass Server {\n  constructor(opts, errorCallback) {\n    this.registry = {};\n    this.mdns = (0, multicast_dns_1.default)(opts);\n    this.mdns.setMaxListeners(0);\n    this.mdns.on('query', this.respondToQuery.bind(this));\n    this.errorCallback = errorCallback !== null && errorCallback !== void 0 ? errorCallback : function (err) {\n      throw err;\n    };\n  }\n  register(records) {\n    const shouldRegister = record => {\n      var subRegistry = this.registry[record.type];\n      if (!subRegistry) {\n        subRegistry = this.registry[record.type] = [];\n      } else if (subRegistry.some(this.isDuplicateRecord(record))) {\n        return;\n      }\n      subRegistry.push(record);\n    };\n    if (Array.isArray(records)) {\n      records.forEach(shouldRegister);\n    } else {\n      shouldRegister(records);\n    }\n  }\n  unregister(records) {\n    const shouldUnregister = record => {\n      let type = record.type;\n      if (!(type in this.registry)) {\n        return;\n      }\n      this.registry[type] = this.registry[type].filter(i => i.name !== record.name);\n    };\n    if (Array.isArray(records)) {\n      records.forEach(shouldUnregister);\n    } else {\n      shouldUnregister(records);\n    }\n  }\n  respondToQuery(query) {\n    let self = this;\n    query.questions.forEach(question => {\n      var type = question.type;\n      var name = question.name;\n      var answers = type === 'ANY' ? array_flatten_1.default.depth(Object.keys(self.registry).map(self.recordsFor.bind(self, name)), 1) : self.recordsFor(name, type);\n      if (answers.length === 0) return;\n      var additionals = [];\n      if (type !== 'ANY') {\n        answers.forEach(answer => {\n          if (answer.type !== 'PTR') return;\n          additionals = additionals.concat(self.recordsFor(answer.data, 'SRV')).concat(self.recordsFor(answer.data, 'TXT'));\n        });\n        additionals.filter(function (record) {\n          return record.type === 'SRV';\n        }).map(function (record) {\n          return record.data.target;\n        }).filter(this.unique()).forEach(function (target) {\n          additionals = additionals.concat(self.recordsFor(target, 'A')).concat(self.recordsFor(target, 'AAAA'));\n        });\n      }\n      self.mdns.respond({\n        answers: answers,\n        additionals: additionals\n      }, err => {\n        if (err) {\n          this.errorCallback(err);\n        }\n      });\n    });\n  }\n  recordsFor(name, type) {\n    if (!(type in this.registry)) {\n      return [];\n    }\n    return this.registry[type].filter(record => {\n      var _name = ~name.indexOf('.') ? record.name : record.name.split('.')[0];\n      return (0, dns_equal_1.default)(_name, name);\n    });\n  }\n  isDuplicateRecord(a) {\n    return b => {\n      return a.type === b.type && a.name === b.name && (0, es6_1.default)(a.data, b.data);\n    };\n  }\n  unique() {\n    var set = [];\n    return obj => {\n      if (~set.indexOf(obj)) return false;\n      set.push(obj);\n      return true;\n    };\n  }\n}\nexports.Server = Server;\nexports.default = Server;","map":{"version":3,"names":["array_flatten_1","__importDefault","require","es6_1","multicast_dns_1","dns_equal_1","Server","constructor","opts","errorCallback","registry","mdns","default","setMaxListeners","on","respondToQuery","bind","err","register","records","shouldRegister","record","subRegistry","type","some","isDuplicateRecord","push","Array","isArray","forEach","unregister","shouldUnregister","filter","i","name","query","self","questions","question","answers","depth","Object","keys","map","recordsFor","length","additionals","answer","concat","data","target","unique","respond","_name","indexOf","split","a","b","set","obj","exports"],"sources":["../../src/lib/mdns-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
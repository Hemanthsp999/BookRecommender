{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @param {string} path path\n * @returns {{paths: string[], segments: string[]}}} paths and segments\n */\nmodule.exports = function getPaths(path) {\n  if (path === \"/\") return {\n    paths: [\"/\"],\n    segments: [\"\"]\n  };\n  const parts = path.split(/(.*?[\\\\/]+)/);\n  const paths = [path];\n  const segments = [parts[parts.length - 1]];\n  let part = parts[parts.length - 1];\n  path = path.substring(0, path.length - part.length - 1);\n  for (let i = parts.length - 2; i > 2; i -= 2) {\n    paths.push(path);\n    part = parts[i];\n    path = path.substring(0, path.length - part.length) || \"/\";\n    segments.push(part.slice(0, -1));\n  }\n  part = parts[1];\n  segments.push(part);\n  paths.push(part);\n  return {\n    paths: paths,\n    segments: segments\n  };\n};\n\n/**\n * @param {string} path path\n * @returns {string|null} basename or null\n */\nmodule.exports.basename = function basename(path) {\n  const i = path.lastIndexOf(\"/\"),\n    j = path.lastIndexOf(\"\\\\\");\n  const p = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n  if (p < 0) return null;\n  const s = path.slice(p + 1);\n  return s;\n};","map":{"version":3,"names":["module","exports","getPaths","path","paths","segments","parts","split","length","part","substring","i","push","slice","basename","lastIndexOf","j","p","s"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/getPaths.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @param {string} path path\n * @returns {{paths: string[], segments: string[]}}} paths and segments\n */\nmodule.exports = function getPaths(path) {\n\tif (path === \"/\") return { paths: [\"/\"], segments: [\"\"] };\n\tconst parts = path.split(/(.*?[\\\\/]+)/);\n\tconst paths = [path];\n\tconst segments = [parts[parts.length - 1]];\n\tlet part = parts[parts.length - 1];\n\tpath = path.substring(0, path.length - part.length - 1);\n\tfor (let i = parts.length - 2; i > 2; i -= 2) {\n\t\tpaths.push(path);\n\t\tpart = parts[i];\n\t\tpath = path.substring(0, path.length - part.length) || \"/\";\n\t\tsegments.push(part.slice(0, -1));\n\t}\n\tpart = parts[1];\n\tsegments.push(part);\n\tpaths.push(part);\n\treturn {\n\t\tpaths: paths,\n\t\tsegments: segments\n\t};\n};\n\n/**\n * @param {string} path path\n * @returns {string|null} basename or null\n */\nmodule.exports.basename = function basename(path) {\n\tconst i = path.lastIndexOf(\"/\"),\n\t\tj = path.lastIndexOf(\"\\\\\");\n\tconst p = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n\tif (p < 0) return null;\n\tconst s = path.slice(p + 1);\n\treturn s;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACC,IAAI,EAAE;EACxC,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC,GAAG,CAAC;IAAEC,QAAQ,EAAE,CAAC,EAAE;EAAE,CAAC;EACzD,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,aAAa,CAAC;EACvC,MAAMH,KAAK,GAAG,CAACD,IAAI,CAAC;EACpB,MAAME,QAAQ,GAAG,CAACC,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGH,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EAClCL,IAAI,GAAGA,IAAI,CAACO,SAAS,CAAC,CAAC,EAAEP,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC;EACvD,KAAK,IAAIG,CAAC,GAAGL,KAAK,CAACE,MAAM,GAAG,CAAC,EAAEG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC7CP,KAAK,CAACQ,IAAI,CAACT,IAAI,CAAC;IAChBM,IAAI,GAAGH,KAAK,CAACK,CAAC,CAAC;IACfR,IAAI,GAAGA,IAAI,CAACO,SAAS,CAAC,CAAC,EAAEP,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,IAAI,GAAG;IAC1DH,QAAQ,CAACO,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjC;EACAJ,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;EACfD,QAAQ,CAACO,IAAI,CAACH,IAAI,CAAC;EACnBL,KAAK,CAACQ,IAAI,CAACH,IAAI,CAAC;EAChB,OAAO;IACNL,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACX,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACAL,MAAM,CAACC,OAAO,CAACa,QAAQ,GAAG,SAASA,QAAQA,CAACX,IAAI,EAAE;EACjD,MAAMQ,CAAC,GAAGR,IAAI,CAACY,WAAW,CAAC,GAAG,CAAC;IAC9BC,CAAC,GAAGb,IAAI,CAACY,WAAW,CAAC,IAAI,CAAC;EAC3B,MAAME,CAAC,GAAGN,CAAC,GAAG,CAAC,GAAGK,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGL,CAAC,GAAGA,CAAC,GAAGK,CAAC,GAAGA,CAAC,GAAGL,CAAC;EAC/C,IAAIM,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;EACtB,MAAMC,CAAC,GAAGf,IAAI,CAACU,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC;EAC3B,OAAOC,CAAC;AACT,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../css/CssParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CssImportDependency extends ModuleDependency {\n  /**\n   * Example of dependency:\n   *\n   * \\@import url(\"landscape.css\") layer(forms) screen and (orientation: landscape) screen and (orientation: landscape);\n   *\n   * @param {string} request request\n   * @param {Range} range range of the argument\n   * @param {string | undefined} layer layer\n   * @param {string | undefined} supports list of supports conditions\n   * @param {string | undefined} media list of media conditions\n   */\n  constructor(request, range, layer, supports, media) {\n    super(request);\n    this.range = range;\n    this.layer = layer;\n    this.supports = supports;\n    this.media = media;\n  }\n  get type() {\n    return \"css @import\";\n  }\n  get category() {\n    return \"css-import\";\n  }\n\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n  getResourceIdentifier() {\n    let str = `context${this._context || \"\"}|module${this.request}`;\n    if (this.layer) {\n      str += `|layer${this.layer}`;\n    }\n    if (this.supports) {\n      str += `|supports${this.supports}`;\n    }\n    if (this.media) {\n      str += `|media${this.media}`;\n    }\n    return str;\n  }\n\n  /**\n   * @param {string} context context directory\n   * @returns {Module} a module\n   */\n  createIgnoredModule(context) {\n    return null;\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.layer);\n    write(this.supports);\n    write(this.media);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.layer = read();\n    this.supports = read();\n    this.media = read();\n    super.deserialize(context);\n  }\n}\nCssImportDependency.Template = class CssImportDependencyTemplate extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep = /** @type {CssImportDependency} */dependency;\n    source.replace(dep.range[0], dep.range[1] - 1, \"\");\n  }\n};\nmakeSerializable(CssImportDependency, \"webpack/lib/dependencies/CssImportDependency\");\nmodule.exports = CssImportDependency;","map":{"version":3,"names":["makeSerializable","require","ModuleDependency","CssImportDependency","constructor","request","range","layer","supports","media","type","category","getResourceIdentifier","str","_context","createIgnoredModule","context","serialize","write","deserialize","read","Template","CssImportDependencyTemplate","apply","dependency","source","templateContext","dep","replace","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/CssImportDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../css/CssParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CssImportDependency extends ModuleDependency {\n\t/**\n\t * Example of dependency:\n\t *\n\t * \\@import url(\"landscape.css\") layer(forms) screen and (orientation: landscape) screen and (orientation: landscape);\n\t *\n\t * @param {string} request request\n\t * @param {Range} range range of the argument\n\t * @param {string | undefined} layer layer\n\t * @param {string | undefined} supports list of supports conditions\n\t * @param {string | undefined} media list of media conditions\n\t */\n\tconstructor(request, range, layer, supports, media) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.layer = layer;\n\t\tthis.supports = supports;\n\t\tthis.media = media;\n\t}\n\n\tget type() {\n\t\treturn \"css @import\";\n\t}\n\n\tget category() {\n\t\treturn \"css-import\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\tlet str = `context${this._context || \"\"}|module${this.request}`;\n\n\t\tif (this.layer) {\n\t\t\tstr += `|layer${this.layer}`;\n\t\t}\n\n\t\tif (this.supports) {\n\t\t\tstr += `|supports${this.supports}`;\n\t\t}\n\n\t\tif (this.media) {\n\t\t\tstr += `|media${this.media}`;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.layer);\n\t\twrite(this.supports);\n\t\twrite(this.media);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.layer = read();\n\t\tthis.supports = read();\n\t\tthis.media = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nCssImportDependency.Template = class CssImportDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {CssImportDependency} */ (dependency);\n\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"\");\n\t}\n};\n\nmakeSerializable(\n\tCssImportDependency,\n\t\"webpack/lib/dependencies/CssImportDependency\"\n);\n\nmodule.exports = CssImportDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC5D,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,mBAAmB,SAASD,gBAAgB,CAAC;EAClD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCE,WAAWA,CAACC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IACnD,KAAK,CAACJ,OAAO,CAAC;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;EACnB;EAEA,IAAIC,IAAIA,CAAA,EAAG;IACV,OAAO,aAAa;EACrB;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACd,OAAO,YAAY;EACpB;;EAEA;AACD;AACA;EACCC,qBAAqBA,CAAA,EAAG;IACvB,IAAIC,GAAG,GAAI,UAAS,IAAI,CAACC,QAAQ,IAAI,EAAG,UAAS,IAAI,CAACT,OAAQ,EAAC;IAE/D,IAAI,IAAI,CAACE,KAAK,EAAE;MACfM,GAAG,IAAK,SAAQ,IAAI,CAACN,KAAM,EAAC;IAC7B;IAEA,IAAI,IAAI,CAACC,QAAQ,EAAE;MAClBK,GAAG,IAAK,YAAW,IAAI,CAACL,QAAS,EAAC;IACnC;IAEA,IAAI,IAAI,CAACC,KAAK,EAAE;MACfI,GAAG,IAAK,SAAQ,IAAI,CAACJ,KAAM,EAAC;IAC7B;IAEA,OAAOI,GAAG;EACX;;EAEA;AACD;AACA;AACA;EACCE,mBAAmBA,CAACC,OAAO,EAAE;IAC5B,OAAO,IAAI;EACZ;;EAEA;AACD;AACA;EACCC,SAASA,CAACD,OAAO,EAAE;IAClB,MAAM;MAAEE;IAAM,CAAC,GAAGF,OAAO;IACzBE,KAAK,CAAC,IAAI,CAACX,KAAK,CAAC;IACjBW,KAAK,CAAC,IAAI,CAACV,QAAQ,CAAC;IACpBU,KAAK,CAAC,IAAI,CAACT,KAAK,CAAC;IACjB,KAAK,CAACQ,SAAS,CAACD,OAAO,CAAC;EACzB;;EAEA;AACD;AACA;EACCG,WAAWA,CAACH,OAAO,EAAE;IACpB,MAAM;MAAEI;IAAK,CAAC,GAAGJ,OAAO;IACxB,IAAI,CAACT,KAAK,GAAGa,IAAI,CAAC,CAAC;IACnB,IAAI,CAACZ,QAAQ,GAAGY,IAAI,CAAC,CAAC;IACtB,IAAI,CAACX,KAAK,GAAGW,IAAI,CAAC,CAAC;IACnB,KAAK,CAACD,WAAW,CAACH,OAAO,CAAC;EAC3B;AACD;AAEAb,mBAAmB,CAACkB,QAAQ,GAAG,MAAMC,2BAA2B,SAC/DpB,gBAAgB,CAACmB,QAAQ,CACxB;EACD;AACD;AACA;AACA;AACA;AACA;EACCE,KAAKA,CAACC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;IAC1C,MAAMC,GAAG,GAAG,kCAAoCH,UAAW;IAE3DC,MAAM,CAACG,OAAO,CAACD,GAAG,CAACrB,KAAK,CAAC,CAAC,CAAC,EAAEqB,GAAG,CAACrB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;EACnD;AACD,CAAC;AAEDN,gBAAgB,CACfG,mBAAmB,EACnB,8CACD,CAAC;AAED0B,MAAM,CAACC,OAAO,GAAG3B,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
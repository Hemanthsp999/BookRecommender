{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst sequences = {};\nconst DEFAULTS = {\n  timestamp: () => () => Date.now(),\n  datetime: () => () => new Date().toISOString(),\n  date: () => () => new Date().toISOString().slice(0, 10),\n  time: () => () => new Date().toISOString().slice(11),\n  random: () => () => Math.random(),\n  randomint: args => {\n    var _a;\n    const max = (_a = args === null || args === void 0 ? void 0 : args.max) !== null && _a !== void 0 ? _a : 2;\n    return () => Math.floor(Math.random() * max);\n  },\n  seq: args => {\n    var _a;\n    const name = (_a = args === null || args === void 0 ? void 0 : args.name) !== null && _a !== void 0 ? _a : \"\";\n    sequences[name] || (sequences[name] = 0);\n    return () => sequences[name]++;\n  }\n};\nconst getDef = Object.assign(_getDef, {\n  DEFAULTS\n});\nfunction _getDef() {\n  return {\n    keyword: \"dynamicDefaults\",\n    type: \"object\",\n    schemaType: [\"string\", \"object\"],\n    modifying: true,\n    valid: true,\n    compile(schema, _parentSchema, it) {\n      if (!it.opts.useDefaults || it.compositeRule) return () => true;\n      const fs = {};\n      for (const key in schema) fs[key] = getDefault(schema[key]);\n      const empty = it.opts.useDefaults === \"empty\";\n      return data => {\n        for (const prop in schema) {\n          if (data[prop] === undefined || empty && (data[prop] === null || data[prop] === \"\")) {\n            data[prop] = fs[prop]();\n          }\n        }\n        return true;\n      };\n    },\n    metaSchema: {\n      type: \"object\",\n      additionalProperties: {\n        anyOf: [{\n          type: \"string\"\n        }, {\n          type: \"object\",\n          additionalProperties: false,\n          required: [\"func\", \"args\"],\n          properties: {\n            func: {\n              type: \"string\"\n            },\n            args: {\n              type: \"object\"\n            }\n          }\n        }]\n      }\n    }\n  };\n}\nfunction getDefault(d) {\n  return typeof d == \"object\" ? getObjDefault(d) : getStrDefault(d);\n}\nfunction getObjDefault(_ref) {\n  let {\n    func,\n    args\n  } = _ref;\n  const def = DEFAULTS[func];\n  assertDefined(func, def);\n  return def(args);\n}\nfunction getStrDefault() {\n  let d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const def = DEFAULTS[d];\n  assertDefined(d, def);\n  return def();\n}\nfunction assertDefined(name, def) {\n  if (!def) throw new Error(`invalid \"dynamicDefaults\" keyword property value: ${name}`);\n}\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"names":["sequences","DEFAULTS","timestamp","Date","now","datetime","toISOString","date","slice","time","random","Math","randomint","args","max","_a","floor","seq","name","getDef","Object","assign","_getDef","keyword","type","schemaType","modifying","valid","compile","schema","_parentSchema","it","opts","useDefaults","compositeRule","fs","key","getDefault","empty","data","prop","undefined","metaSchema","additionalProperties","anyOf","required","properties","func","d","getObjDefault","getStrDefault","_ref","def","assertDefined","arguments","length","Error","exports","default","module"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-dev-server/node_modules/ajv-keywords/src/definitions/dynamicDefaults.ts"],"sourcesContent":["import type {FuncKeywordDefinition, SchemaCxt} from \"ajv\"\n\nconst sequences: Record<string, number | undefined> = {}\n\nexport type DynamicDefaultFunc = (args?: Record<string, any>) => () => any\n\nconst DEFAULTS: Record<string, DynamicDefaultFunc | undefined> = {\n  timestamp: () => () => Date.now(),\n  datetime: () => () => new Date().toISOString(),\n  date: () => () => new Date().toISOString().slice(0, 10),\n  time: () => () => new Date().toISOString().slice(11),\n  random: () => () => Math.random(),\n  randomint: (args?: {max?: number}) => {\n    const max = args?.max ?? 2\n    return () => Math.floor(Math.random() * max)\n  },\n  seq: (args?: {name?: string}) => {\n    const name = args?.name ?? \"\"\n    sequences[name] ||= 0\n    return () => (sequences[name] as number)++\n  },\n}\n\ninterface PropertyDefaultSchema {\n  func: string\n  args: Record<string, any>\n}\n\ntype DefaultSchema = Record<string, string | PropertyDefaultSchema | undefined>\n\nconst getDef: (() => FuncKeywordDefinition) & {\n  DEFAULTS: typeof DEFAULTS\n} = Object.assign(_getDef, {DEFAULTS})\n\nfunction _getDef(): FuncKeywordDefinition {\n  return {\n    keyword: \"dynamicDefaults\",\n    type: \"object\",\n    schemaType: [\"string\", \"object\"],\n    modifying: true,\n    valid: true,\n    compile(schema: DefaultSchema, _parentSchema, it: SchemaCxt) {\n      if (!it.opts.useDefaults || it.compositeRule) return () => true\n      const fs: Record<string, () => any> = {}\n      for (const key in schema) fs[key] = getDefault(schema[key])\n      const empty = it.opts.useDefaults === \"empty\"\n\n      return (data: Record<string, any>) => {\n        for (const prop in schema) {\n          if (data[prop] === undefined || (empty && (data[prop] === null || data[prop] === \"\"))) {\n            data[prop] = fs[prop]()\n          }\n        }\n        return true\n      }\n    },\n    metaSchema: {\n      type: \"object\",\n      additionalProperties: {\n        anyOf: [\n          {type: \"string\"},\n          {\n            type: \"object\",\n            additionalProperties: false,\n            required: [\"func\", \"args\"],\n            properties: {\n              func: {type: \"string\"},\n              args: {type: \"object\"},\n            },\n          },\n        ],\n      },\n    },\n  }\n}\n\nfunction getDefault(d: string | PropertyDefaultSchema | undefined): () => any {\n  return typeof d == \"object\" ? getObjDefault(d) : getStrDefault(d)\n}\n\nfunction getObjDefault({func, args}: PropertyDefaultSchema): () => any {\n  const def = DEFAULTS[func]\n  assertDefined(func, def)\n  return def(args)\n}\n\nfunction getStrDefault(d = \"\"): () => any {\n  const def = DEFAULTS[d]\n  assertDefined(d, def)\n  return def()\n}\n\nfunction assertDefined(name: string, def?: DynamicDefaultFunc): asserts def is DynamicDefaultFunc {\n  if (!def) throw new Error(`invalid \"dynamicDefaults\" keyword property value: ${name}`)\n}\n\nexport default getDef\nmodule.exports = getDef\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
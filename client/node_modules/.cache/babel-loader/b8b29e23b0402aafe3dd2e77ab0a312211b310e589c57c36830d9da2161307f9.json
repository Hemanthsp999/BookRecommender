{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\nconst DATA_URI_CONTENT_LENGTH = 16;\nconst MAX_MODULE_IDENTIFIER_LENGTH = 80;\n\n/**\n * @param {number} n a number\n * @param {string} singular singular\n * @param {string} plural plural\n * @returns {string} if n is 1, singular, else plural\n */\nconst plural = (n, singular, plural) => n === 1 ? singular : plural;\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, _ref) => {\n  let {\n    formatSize = n => `${n}`\n  } = _ref;\n  const keys = Object.keys(sizes);\n  if (keys.length > 1) {\n    return keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n  } else if (keys.length === 1) {\n    return formatSize(sizes[keys[0]]);\n  }\n};\n\n/**\n * @param {string} resource resource\n * @returns {string} resource name for display\n */\nconst getResourceName = resource => {\n  const dataUrl = /^data:[^,]+,/.exec(resource);\n  if (!dataUrl) return resource;\n  const len = dataUrl[0].length + DATA_URI_CONTENT_LENGTH;\n  if (resource.length < len) return resource;\n  return `${resource.slice(0, Math.min(resource.length - /* '..'.length */2, len))}..`;\n};\n\n/**\n * @param {string} name module name\n * @returns {[string,string]} prefix and module name\n */\nconst getModuleName = name => {\n  const [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n  if (resource.length > MAX_MODULE_IDENTIFIER_LENGTH) {\n    const truncatedResource = `${resource.slice(0, Math.min(resource.length - /* '...(truncated)'.length */14, MAX_MODULE_IDENTIFIER_LENGTH))}...(truncated)`;\n    return [prefix, getResourceName(truncatedResource)];\n  }\n  return [prefix, getResourceName(resource)];\n};\n\n/**\n * @param {string} str string\n * @param {function(string): string} fn function to apply to each line\n * @returns {string} joined string\n */\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => n >= 10 ? `${n}` : `0${n}`;\nconst isValidId = id => {\n  return typeof id === \"number\" || id;\n};\n\n/**\n * @template T\n * @param {Array<T>} list of items\n * @param {number} count number of items to show\n * @returns {string} string representation of list\n */\nconst moreCount = (list, count) => {\n  return list && list.length > 0 ? `+ ${count}` : `${count}`;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n  \"compilation.summary!\": (_, _ref2) => {\n    let {\n      type,\n      bold,\n      green,\n      red,\n      yellow,\n      formatDateTime,\n      formatTime,\n      compilation: {\n        name,\n        hash,\n        version,\n        time,\n        builtAt,\n        errorsCount,\n        warningsCount\n      }\n    } = _ref2;\n    const root = type === \"compilation.summary!\";\n    const warningsMessage = warningsCount > 0 ? yellow(`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`) : \"\";\n    const errorsMessage = errorsCount > 0 ? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`) : \"\";\n    const timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n    const hashMessage = hash ? ` (${hash})` : \"\";\n    const builtAtMessage = root && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n    const versionMessage = root && version ? `webpack ${version}` : \"\";\n    const nameMessage = root && name ? bold(name) : name ? `Child ${bold(name)}` : root ? \"\" : \"Child\";\n    const subjectMessage = nameMessage && versionMessage ? `${nameMessage} (${versionMessage})` : versionMessage || nameMessage || \"webpack\";\n    let statusMessage;\n    if (errorsMessage && warningsMessage) {\n      statusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n    } else if (errorsMessage) {\n      statusMessage = `compiled with ${errorsMessage}`;\n    } else if (warningsMessage) {\n      statusMessage = `compiled with ${warningsMessage}`;\n    } else if (errorsCount === 0 && warningsCount === 0) {\n      statusMessage = `compiled ${green(\"successfully\")}`;\n    } else {\n      statusMessage = `compiled`;\n    }\n    if (builtAtMessage || versionMessage || errorsMessage || warningsMessage || errorsCount === 0 && warningsCount === 0 || timeMessage || hashMessage) return `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n  },\n  \"compilation.filteredWarningDetailsCount\": count => count ? `${count} ${plural(count, \"warning has\", \"warnings have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.` : undefined,\n  \"compilation.filteredErrorDetailsCount\": (count, _ref3) => {\n    let {\n      yellow\n    } = _ref3;\n    return count ? yellow(`${count} ${plural(count, \"error has\", \"errors have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`) : undefined;\n  },\n  \"compilation.env\": (env, _ref4) => {\n    let {\n      bold\n    } = _ref4;\n    return env ? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}` : undefined;\n  },\n  \"compilation.publicPath\": (publicPath, _ref5) => {\n    let {\n      bold\n    } = _ref5;\n    return `PublicPath: ${bold(publicPath || \"(none)\")}`;\n  },\n  \"compilation.entrypoints\": (entrypoints, context, printer) => Array.isArray(entrypoints) ? undefined : printer.print(context.type, Object.values(entrypoints), {\n    ...context,\n    chunkGroupKind: \"Entrypoint\"\n  }),\n  \"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n    if (!Array.isArray(namedChunkGroups)) {\n      const {\n        compilation: {\n          entrypoints\n        }\n      } = context;\n      let chunkGroups = Object.values(namedChunkGroups);\n      if (entrypoints) {\n        chunkGroups = chunkGroups.filter(group => !Object.prototype.hasOwnProperty.call(entrypoints, group.name));\n      }\n      return printer.print(context.type, chunkGroups, {\n        ...context,\n        chunkGroupKind: \"Chunk Group\"\n      });\n    }\n  },\n  \"compilation.assetsByChunkName\": () => \"\",\n  \"compilation.filteredModules\": (filteredModules, _ref6) => {\n    let {\n      compilation: {\n        modules\n      }\n    } = _ref6;\n    return filteredModules > 0 ? `${moreCount(modules, filteredModules)} ${plural(filteredModules, \"module\", \"modules\")}` : undefined;\n  },\n  \"compilation.filteredAssets\": (filteredAssets, _ref7) => {\n    let {\n      compilation: {\n        assets\n      }\n    } = _ref7;\n    return filteredAssets > 0 ? `${moreCount(assets, filteredAssets)} ${plural(filteredAssets, \"asset\", \"assets\")}` : undefined;\n  },\n  \"compilation.logging\": (logging, context, printer) => Array.isArray(logging) ? undefined : printer.print(context.type, Object.entries(logging).map(_ref8 => {\n    let [name, value] = _ref8;\n    return {\n      ...value,\n      name\n    };\n  }), context),\n  \"compilation.warningsInChildren!\": (_, _ref9) => {\n    let {\n      yellow,\n      compilation\n    } = _ref9;\n    if (!compilation.children && compilation.warningsCount > 0 && compilation.warnings) {\n      const childWarnings = compilation.warningsCount - compilation.warnings.length;\n      if (childWarnings > 0) {\n        return yellow(`${childWarnings} ${plural(childWarnings, \"WARNING\", \"WARNINGS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"compilation.errorsInChildren!\": (_, _ref10) => {\n    let {\n      red,\n      compilation\n    } = _ref10;\n    if (!compilation.children && compilation.errorsCount > 0 && compilation.errors) {\n      const childErrors = compilation.errorsCount - compilation.errors.length;\n      if (childErrors > 0) {\n        return red(`${childErrors} ${plural(childErrors, \"ERROR\", \"ERRORS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"asset.type\": type => type,\n  \"asset.name\": (name, _ref11) => {\n    let {\n      formatFilename,\n      asset: {\n        isOverSizeLimit\n      }\n    } = _ref11;\n    return formatFilename(name, isOverSizeLimit);\n  },\n  \"asset.size\": (size, _ref12) => {\n    let {\n      asset: {\n        isOverSizeLimit\n      },\n      yellow,\n      green,\n      formatSize\n    } = _ref12;\n    return isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size);\n  },\n  \"asset.emitted\": (emitted, _ref13) => {\n    let {\n      green,\n      formatFlag\n    } = _ref13;\n    return emitted ? green(formatFlag(\"emitted\")) : undefined;\n  },\n  \"asset.comparedForEmit\": (comparedForEmit, _ref14) => {\n    let {\n      yellow,\n      formatFlag\n    } = _ref14;\n    return comparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined;\n  },\n  \"asset.cached\": (cached, _ref15) => {\n    let {\n      green,\n      formatFlag\n    } = _ref15;\n    return cached ? green(formatFlag(\"cached\")) : undefined;\n  },\n  \"asset.isOverSizeLimit\": (isOverSizeLimit, _ref16) => {\n    let {\n      yellow,\n      formatFlag\n    } = _ref16;\n    return isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined;\n  },\n  \"asset.info.immutable\": (immutable, _ref17) => {\n    let {\n      green,\n      formatFlag\n    } = _ref17;\n    return immutable ? green(formatFlag(\"immutable\")) : undefined;\n  },\n  \"asset.info.javascriptModule\": (javascriptModule, _ref18) => {\n    let {\n      formatFlag\n    } = _ref18;\n    return javascriptModule ? formatFlag(\"javascript module\") : undefined;\n  },\n  \"asset.info.sourceFilename\": (sourceFilename, _ref19) => {\n    let {\n      formatFlag\n    } = _ref19;\n    return sourceFilename ? formatFlag(sourceFilename === true ? \"from source file\" : `from: ${sourceFilename}`) : undefined;\n  },\n  \"asset.info.development\": (development, _ref20) => {\n    let {\n      green,\n      formatFlag\n    } = _ref20;\n    return development ? green(formatFlag(\"dev\")) : undefined;\n  },\n  \"asset.info.hotModuleReplacement\": (hotModuleReplacement, _ref21) => {\n    let {\n      green,\n      formatFlag\n    } = _ref21;\n    return hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined;\n  },\n  \"asset.separator!\": () => \"\\n\",\n  \"asset.filteredRelated\": (filteredRelated, _ref22) => {\n    let {\n      asset: {\n        related\n      }\n    } = _ref22;\n    return filteredRelated > 0 ? `${moreCount(related, filteredRelated)} related ${plural(filteredRelated, \"asset\", \"assets\")}` : undefined;\n  },\n  \"asset.filteredChildren\": (filteredChildren, _ref23) => {\n    let {\n      asset: {\n        children\n      }\n    } = _ref23;\n    return filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"asset\", \"assets\")}` : undefined;\n  },\n  assetChunk: (id, _ref24) => {\n    let {\n      formatChunkId\n    } = _ref24;\n    return formatChunkId(id);\n  },\n  assetChunkName: name => name,\n  assetChunkIdHint: name => name,\n  \"module.type\": type => type !== \"module\" ? type : undefined,\n  \"module.id\": (id, _ref25) => {\n    let {\n      formatModuleId\n    } = _ref25;\n    return isValidId(id) ? formatModuleId(id) : undefined;\n  },\n  \"module.name\": (name, _ref26) => {\n    let {\n      bold\n    } = _ref26;\n    const [prefix, resource] = getModuleName(name);\n    return `${prefix || \"\"}${bold(resource || \"\")}`;\n  },\n  \"module.identifier\": identifier => undefined,\n  \"module.layer\": (layer, _ref27) => {\n    let {\n      formatLayer\n    } = _ref27;\n    return layer ? formatLayer(layer) : undefined;\n  },\n  \"module.sizes\": printSizes,\n  \"module.chunks[]\": (id, _ref28) => {\n    let {\n      formatChunkId\n    } = _ref28;\n    return formatChunkId(id);\n  },\n  \"module.depth\": (depth, _ref29) => {\n    let {\n      formatFlag\n    } = _ref29;\n    return depth !== null ? formatFlag(`depth ${depth}`) : undefined;\n  },\n  \"module.cacheable\": (cacheable, _ref30) => {\n    let {\n      formatFlag,\n      red\n    } = _ref30;\n    return cacheable === false ? red(formatFlag(\"not cacheable\")) : undefined;\n  },\n  \"module.orphan\": (orphan, _ref31) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref31;\n    return orphan ? yellow(formatFlag(\"orphan\")) : undefined;\n  },\n  \"module.runtime\": (runtime, _ref32) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref32;\n    return runtime ? yellow(formatFlag(\"runtime\")) : undefined;\n  },\n  \"module.optional\": (optional, _ref33) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref33;\n    return optional ? yellow(formatFlag(\"optional\")) : undefined;\n  },\n  \"module.dependent\": (dependent, _ref34) => {\n    let {\n      formatFlag,\n      cyan\n    } = _ref34;\n    return dependent ? cyan(formatFlag(\"dependent\")) : undefined;\n  },\n  \"module.built\": (built, _ref35) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref35;\n    return built ? yellow(formatFlag(\"built\")) : undefined;\n  },\n  \"module.codeGenerated\": (codeGenerated, _ref36) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref36;\n    return codeGenerated ? yellow(formatFlag(\"code generated\")) : undefined;\n  },\n  \"module.buildTimeExecuted\": (buildTimeExecuted, _ref37) => {\n    let {\n      formatFlag,\n      green\n    } = _ref37;\n    return buildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined;\n  },\n  \"module.cached\": (cached, _ref38) => {\n    let {\n      formatFlag,\n      green\n    } = _ref38;\n    return cached ? green(formatFlag(\"cached\")) : undefined;\n  },\n  \"module.assets\": (assets, _ref39) => {\n    let {\n      formatFlag,\n      magenta\n    } = _ref39;\n    return assets && assets.length ? magenta(formatFlag(`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`)) : undefined;\n  },\n  \"module.warnings\": (warnings, _ref40) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref40;\n    return warnings === true ? yellow(formatFlag(\"warnings\")) : warnings ? yellow(formatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)) : undefined;\n  },\n  \"module.errors\": (errors, _ref41) => {\n    let {\n      formatFlag,\n      red\n    } = _ref41;\n    return errors === true ? red(formatFlag(\"errors\")) : errors ? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`)) : undefined;\n  },\n  \"module.providedExports\": (providedExports, _ref42) => {\n    let {\n      formatFlag,\n      cyan\n    } = _ref42;\n    if (Array.isArray(providedExports)) {\n      if (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n      return cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n    }\n  },\n  \"module.usedExports\": (usedExports, _ref43) => {\n    let {\n      formatFlag,\n      cyan,\n      module\n    } = _ref43;\n    if (usedExports !== true) {\n      if (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n      if (usedExports === false) return cyan(formatFlag(\"module unused\"));\n      if (Array.isArray(usedExports)) {\n        if (usedExports.length === 0) return cyan(formatFlag(\"no exports used\"));\n        const providedExportsCount = Array.isArray(module.providedExports) ? module.providedExports.length : null;\n        if (providedExportsCount !== null && providedExportsCount === usedExports.length) {\n          return cyan(formatFlag(\"all exports used\"));\n        } else {\n          return cyan(formatFlag(`only some exports used: ${usedExports.join(\", \")}`));\n        }\n      }\n    }\n  },\n  \"module.optimizationBailout[]\": (optimizationBailout, _ref44) => {\n    let {\n      yellow\n    } = _ref44;\n    return yellow(optimizationBailout);\n  },\n  \"module.issuerPath\": (issuerPath, _ref45) => {\n    let {\n      module\n    } = _ref45;\n    return module.profile ? undefined : \"\";\n  },\n  \"module.profile\": profile => undefined,\n  \"module.filteredModules\": (filteredModules, _ref46) => {\n    let {\n      module: {\n        modules\n      }\n    } = _ref46;\n    return filteredModules > 0 ? `${moreCount(modules, filteredModules)} nested ${plural(filteredModules, \"module\", \"modules\")}` : undefined;\n  },\n  \"module.filteredReasons\": (filteredReasons, _ref47) => {\n    let {\n      module: {\n        reasons\n      }\n    } = _ref47;\n    return filteredReasons > 0 ? `${moreCount(reasons, filteredReasons)} ${plural(filteredReasons, \"reason\", \"reasons\")}` : undefined;\n  },\n  \"module.filteredChildren\": (filteredChildren, _ref48) => {\n    let {\n      module: {\n        children\n      }\n    } = _ref48;\n    return filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"module\", \"modules\")}` : undefined;\n  },\n  \"module.separator!\": () => \"\\n\",\n  \"moduleIssuer.id\": (id, _ref49) => {\n    let {\n      formatModuleId\n    } = _ref49;\n    return formatModuleId(id);\n  },\n  \"moduleIssuer.profile.total\": (value, _ref50) => {\n    let {\n      formatTime\n    } = _ref50;\n    return formatTime(value);\n  },\n  \"moduleReason.type\": type => type,\n  \"moduleReason.userRequest\": (userRequest, _ref51) => {\n    let {\n      cyan\n    } = _ref51;\n    return cyan(getResourceName(userRequest));\n  },\n  \"moduleReason.moduleId\": (moduleId, _ref52) => {\n    let {\n      formatModuleId\n    } = _ref52;\n    return isValidId(moduleId) ? formatModuleId(moduleId) : undefined;\n  },\n  \"moduleReason.module\": (module, _ref53) => {\n    let {\n      magenta\n    } = _ref53;\n    return magenta(module);\n  },\n  \"moduleReason.loc\": loc => loc,\n  \"moduleReason.explanation\": (explanation, _ref54) => {\n    let {\n      cyan\n    } = _ref54;\n    return cyan(explanation);\n  },\n  \"moduleReason.active\": (active, _ref55) => {\n    let {\n      formatFlag\n    } = _ref55;\n    return active ? undefined : formatFlag(\"inactive\");\n  },\n  \"moduleReason.resolvedModule\": (module, _ref56) => {\n    let {\n      magenta\n    } = _ref56;\n    return magenta(module);\n  },\n  \"moduleReason.filteredChildren\": (filteredChildren, _ref57) => {\n    let {\n      moduleReason: {\n        children\n      }\n    } = _ref57;\n    return filteredChildren > 0 ? `${moreCount(children, filteredChildren)} ${plural(filteredChildren, \"reason\", \"reasons\")}` : undefined;\n  },\n  \"module.profile.total\": (value, _ref58) => {\n    let {\n      formatTime\n    } = _ref58;\n    return formatTime(value);\n  },\n  \"module.profile.resolving\": (value, _ref59) => {\n    let {\n      formatTime\n    } = _ref59;\n    return `resolving: ${formatTime(value)}`;\n  },\n  \"module.profile.restoring\": (value, _ref60) => {\n    let {\n      formatTime\n    } = _ref60;\n    return `restoring: ${formatTime(value)}`;\n  },\n  \"module.profile.integration\": (value, _ref61) => {\n    let {\n      formatTime\n    } = _ref61;\n    return `integration: ${formatTime(value)}`;\n  },\n  \"module.profile.building\": (value, _ref62) => {\n    let {\n      formatTime\n    } = _ref62;\n    return `building: ${formatTime(value)}`;\n  },\n  \"module.profile.storing\": (value, _ref63) => {\n    let {\n      formatTime\n    } = _ref63;\n    return `storing: ${formatTime(value)}`;\n  },\n  \"module.profile.additionalResolving\": (value, _ref64) => {\n    let {\n      formatTime\n    } = _ref64;\n    return value ? `additional resolving: ${formatTime(value)}` : undefined;\n  },\n  \"module.profile.additionalIntegration\": (value, _ref65) => {\n    let {\n      formatTime\n    } = _ref65;\n    return value ? `additional integration: ${formatTime(value)}` : undefined;\n  },\n  \"chunkGroup.kind!\": (_, _ref66) => {\n    let {\n      chunkGroupKind\n    } = _ref66;\n    return chunkGroupKind;\n  },\n  \"chunkGroup.separator!\": () => \"\\n\",\n  \"chunkGroup.name\": (name, _ref67) => {\n    let {\n      bold\n    } = _ref67;\n    return bold(name);\n  },\n  \"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, _ref68) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref68;\n    return isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined;\n  },\n  \"chunkGroup.assetsSize\": (size, _ref69) => {\n    let {\n      formatSize\n    } = _ref69;\n    return size ? formatSize(size) : undefined;\n  },\n  \"chunkGroup.auxiliaryAssetsSize\": (size, _ref70) => {\n    let {\n      formatSize\n    } = _ref70;\n    return size ? `(${formatSize(size)})` : undefined;\n  },\n  \"chunkGroup.filteredAssets\": (n, _ref71) => {\n    let {\n      chunkGroup: {\n        assets\n      }\n    } = _ref71;\n    return n > 0 ? `${moreCount(assets, n)} ${plural(n, \"asset\", \"assets\")}` : undefined;\n  },\n  \"chunkGroup.filteredAuxiliaryAssets\": (n, _ref72) => {\n    let {\n      chunkGroup: {\n        auxiliaryAssets\n      }\n    } = _ref72;\n    return n > 0 ? `${moreCount(auxiliaryAssets, n)} auxiliary ${plural(n, \"asset\", \"assets\")}` : undefined;\n  },\n  \"chunkGroup.is!\": () => \"=\",\n  \"chunkGroupAsset.name\": (asset, _ref73) => {\n    let {\n      green\n    } = _ref73;\n    return green(asset);\n  },\n  \"chunkGroupAsset.size\": (size, _ref74) => {\n    let {\n      formatSize,\n      chunkGroup\n    } = _ref74;\n    return chunkGroup.assets.length > 1 || chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0 ? formatSize(size) : undefined;\n  },\n  \"chunkGroup.children\": (children, context, printer) => Array.isArray(children) ? undefined : printer.print(context.type, Object.keys(children).map(key => ({\n    type: key,\n    children: children[key]\n  })), context),\n  \"chunkGroupChildGroup.type\": type => `${type}:`,\n  \"chunkGroupChild.assets[]\": (file, _ref75) => {\n    let {\n      formatFilename\n    } = _ref75;\n    return formatFilename(file);\n  },\n  \"chunkGroupChild.chunks[]\": (id, _ref76) => {\n    let {\n      formatChunkId\n    } = _ref76;\n    return formatChunkId(id);\n  },\n  \"chunkGroupChild.name\": name => name ? `(name: ${name})` : undefined,\n  \"chunk.id\": (id, _ref77) => {\n    let {\n      formatChunkId\n    } = _ref77;\n    return formatChunkId(id);\n  },\n  \"chunk.files[]\": (file, _ref78) => {\n    let {\n      formatFilename\n    } = _ref78;\n    return formatFilename(file);\n  },\n  \"chunk.names[]\": name => name,\n  \"chunk.idHints[]\": name => name,\n  \"chunk.runtime[]\": name => name,\n  \"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n  \"chunk.parents[]\": (parents, context) => context.formatChunkId(parents, \"parent\"),\n  \"chunk.siblings[]\": (siblings, context) => context.formatChunkId(siblings, \"sibling\"),\n  \"chunk.children[]\": (children, context) => context.formatChunkId(children, \"child\"),\n  \"chunk.childrenByOrder\": (childrenByOrder, context, printer) => Array.isArray(childrenByOrder) ? undefined : printer.print(context.type, Object.keys(childrenByOrder).map(key => ({\n    type: key,\n    children: childrenByOrder[key]\n  })), context),\n  \"chunk.childrenByOrder[].type\": type => `${type}:`,\n  \"chunk.childrenByOrder[].children[]\": (id, _ref79) => {\n    let {\n      formatChunkId\n    } = _ref79;\n    return isValidId(id) ? formatChunkId(id) : undefined;\n  },\n  \"chunk.entry\": (entry, _ref80) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref80;\n    return entry ? yellow(formatFlag(\"entry\")) : undefined;\n  },\n  \"chunk.initial\": (initial, _ref81) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref81;\n    return initial ? yellow(formatFlag(\"initial\")) : undefined;\n  },\n  \"chunk.rendered\": (rendered, _ref82) => {\n    let {\n      formatFlag,\n      green\n    } = _ref82;\n    return rendered ? green(formatFlag(\"rendered\")) : undefined;\n  },\n  \"chunk.recorded\": (recorded, _ref83) => {\n    let {\n      formatFlag,\n      green\n    } = _ref83;\n    return recorded ? green(formatFlag(\"recorded\")) : undefined;\n  },\n  \"chunk.reason\": (reason, _ref84) => {\n    let {\n      yellow\n    } = _ref84;\n    return reason ? yellow(reason) : undefined;\n  },\n  \"chunk.filteredModules\": (filteredModules, _ref85) => {\n    let {\n      chunk: {\n        modules\n      }\n    } = _ref85;\n    return filteredModules > 0 ? `${moreCount(modules, filteredModules)} chunk ${plural(filteredModules, \"module\", \"modules\")}` : undefined;\n  },\n  \"chunk.separator!\": () => \"\\n\",\n  \"chunkOrigin.request\": request => request,\n  \"chunkOrigin.moduleId\": (moduleId, _ref86) => {\n    let {\n      formatModuleId\n    } = _ref86;\n    return isValidId(moduleId) ? formatModuleId(moduleId) : undefined;\n  },\n  \"chunkOrigin.moduleName\": (moduleName, _ref87) => {\n    let {\n      bold\n    } = _ref87;\n    return bold(moduleName);\n  },\n  \"chunkOrigin.loc\": loc => loc,\n  \"error.compilerPath\": (compilerPath, _ref88) => {\n    let {\n      bold\n    } = _ref88;\n    return compilerPath ? bold(`(${compilerPath})`) : undefined;\n  },\n  \"error.chunkId\": (chunkId, _ref89) => {\n    let {\n      formatChunkId\n    } = _ref89;\n    return isValidId(chunkId) ? formatChunkId(chunkId) : undefined;\n  },\n  \"error.chunkEntry\": (chunkEntry, _ref90) => {\n    let {\n      formatFlag\n    } = _ref90;\n    return chunkEntry ? formatFlag(\"entry\") : undefined;\n  },\n  \"error.chunkInitial\": (chunkInitial, _ref91) => {\n    let {\n      formatFlag\n    } = _ref91;\n    return chunkInitial ? formatFlag(\"initial\") : undefined;\n  },\n  \"error.file\": (file, _ref92) => {\n    let {\n      bold\n    } = _ref92;\n    return bold(file);\n  },\n  \"error.moduleName\": (moduleName, _ref93) => {\n    let {\n      bold\n    } = _ref93;\n    return moduleName.includes(\"!\") ? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})` : `${bold(moduleName)}`;\n  },\n  \"error.loc\": (loc, _ref94) => {\n    let {\n      green\n    } = _ref94;\n    return green(loc);\n  },\n  \"error.message\": (message, _ref95) => {\n    let {\n      bold,\n      formatError\n    } = _ref95;\n    return message.includes(\"\\u001b[\") ? message : bold(formatError(message));\n  },\n  \"error.details\": (details, _ref96) => {\n    let {\n      formatError\n    } = _ref96;\n    return formatError(details);\n  },\n  \"error.filteredDetails\": filteredDetails => filteredDetails ? `+ ${filteredDetails} hidden lines` : undefined,\n  \"error.stack\": stack => stack,\n  \"error.moduleTrace\": moduleTrace => undefined,\n  \"error.separator!\": () => \"\\n\",\n  \"loggingEntry(error).loggingEntry.message\": (message, _ref97) => {\n    let {\n      red\n    } = _ref97;\n    return mapLines(message, x => `<e> ${red(x)}`);\n  },\n  \"loggingEntry(warn).loggingEntry.message\": (message, _ref98) => {\n    let {\n      yellow\n    } = _ref98;\n    return mapLines(message, x => `<w> ${yellow(x)}`);\n  },\n  \"loggingEntry(info).loggingEntry.message\": (message, _ref99) => {\n    let {\n      green\n    } = _ref99;\n    return mapLines(message, x => `<i> ${green(x)}`);\n  },\n  \"loggingEntry(log).loggingEntry.message\": (message, _ref100) => {\n    let {\n      bold\n    } = _ref100;\n    return mapLines(message, x => `    ${bold(x)}`);\n  },\n  \"loggingEntry(debug).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(trace).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(status).loggingEntry.message\": (message, _ref101) => {\n    let {\n      magenta\n    } = _ref101;\n    return mapLines(message, x => `<s> ${magenta(x)}`);\n  },\n  \"loggingEntry(profile).loggingEntry.message\": (message, _ref102) => {\n    let {\n      magenta\n    } = _ref102;\n    return mapLines(message, x => `<p> ${magenta(x)}`);\n  },\n  \"loggingEntry(profileEnd).loggingEntry.message\": (message, _ref103) => {\n    let {\n      magenta\n    } = _ref103;\n    return mapLines(message, x => `</p> ${magenta(x)}`);\n  },\n  \"loggingEntry(time).loggingEntry.message\": (message, _ref104) => {\n    let {\n      magenta\n    } = _ref104;\n    return mapLines(message, x => `<t> ${magenta(x)}`);\n  },\n  \"loggingEntry(group).loggingEntry.message\": (message, _ref105) => {\n    let {\n      cyan\n    } = _ref105;\n    return mapLines(message, x => `<-> ${cyan(x)}`);\n  },\n  \"loggingEntry(groupCollapsed).loggingEntry.message\": (message, _ref106) => {\n    let {\n      cyan\n    } = _ref106;\n    return mapLines(message, x => `<+> ${cyan(x)}`);\n  },\n  \"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n  \"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n  \"loggingEntry.trace[]\": trace => trace ? mapLines(trace, x => `| ${x}`) : undefined,\n  \"moduleTraceItem.originName\": originName => originName,\n  loggingGroup: loggingGroup => loggingGroup.entries.length === 0 ? \"\" : undefined,\n  \"loggingGroup.debug\": (flag, _ref107) => {\n    let {\n      red\n    } = _ref107;\n    return flag ? red(\"DEBUG\") : undefined;\n  },\n  \"loggingGroup.name\": (name, _ref108) => {\n    let {\n      bold\n    } = _ref108;\n    return bold(`LOG from ${name}`);\n  },\n  \"loggingGroup.separator!\": () => \"\\n\",\n  \"loggingGroup.filteredEntries\": filteredEntries => filteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n  \"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n  \"compilation.assets[]\": \"asset\",\n  \"compilation.modules[]\": \"module\",\n  \"compilation.chunks[]\": \"chunk\",\n  \"compilation.entrypoints[]\": \"chunkGroup\",\n  \"compilation.namedChunkGroups[]\": \"chunkGroup\",\n  \"compilation.errors[]\": \"error\",\n  \"compilation.warnings[]\": \"error\",\n  \"compilation.logging[]\": \"loggingGroup\",\n  \"compilation.children[]\": \"compilation\",\n  \"asset.related[]\": \"asset\",\n  \"asset.children[]\": \"asset\",\n  \"asset.chunks[]\": \"assetChunk\",\n  \"asset.auxiliaryChunks[]\": \"assetChunk\",\n  \"asset.chunkNames[]\": \"assetChunkName\",\n  \"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n  \"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n  \"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n  \"chunkGroup.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n  \"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n  \"module.modules[]\": \"module\",\n  \"module.children[]\": \"module\",\n  \"module.reasons[]\": \"moduleReason\",\n  \"moduleReason.children[]\": \"moduleReason\",\n  \"module.issuerPath[]\": \"moduleIssuer\",\n  \"chunk.origins[]\": \"chunkOrigin\",\n  \"chunk.modules[]\": \"module\",\n  \"loggingGroup.entries[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"loggingEntry.children[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"error.moduleTrace[]\": \"moduleTraceItem\",\n  \"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\nconst ERROR_PREFERRED_ORDER = [\"compilerPath\", \"chunkId\", \"chunkEntry\", \"chunkInitial\", \"file\", \"separator!\", \"moduleName\", \"loc\", \"separator!\", \"message\", \"separator!\", \"details\", \"separator!\", \"filteredDetails\", \"separator!\", \"stack\", \"separator!\", \"missing\", \"separator!\", \"moduleTrace\"];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n  compilation: [\"name\", \"hash\", \"version\", \"time\", \"builtAt\", \"env\", \"publicPath\", \"assets\", \"filteredAssets\", \"entrypoints\", \"namedChunkGroups\", \"chunks\", \"modules\", \"filteredModules\", \"children\", \"logging\", \"warnings\", \"warningsInChildren!\", \"filteredWarningDetailsCount\", \"errors\", \"errorsInChildren!\", \"filteredErrorDetailsCount\", \"summary!\", \"needAdditionalPass\"],\n  asset: [\"type\", \"name\", \"size\", \"chunks\", \"auxiliaryChunks\", \"emitted\", \"comparedForEmit\", \"cached\", \"info\", \"isOverSizeLimit\", \"chunkNames\", \"auxiliaryChunkNames\", \"chunkIdHints\", \"auxiliaryChunkIdHints\", \"related\", \"filteredRelated\", \"children\", \"filteredChildren\"],\n  \"asset.info\": [\"immutable\", \"sourceFilename\", \"javascriptModule\", \"development\", \"hotModuleReplacement\"],\n  chunkGroup: [\"kind!\", \"name\", \"isOverSizeLimit\", \"assetsSize\", \"auxiliaryAssetsSize\", \"is!\", \"assets\", \"filteredAssets\", \"auxiliaryAssets\", \"filteredAuxiliaryAssets\", \"separator!\", \"children\"],\n  chunkGroupAsset: [\"name\", \"size\"],\n  chunkGroupChildGroup: [\"type\", \"children\"],\n  chunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n  module: [\"type\", \"name\", \"identifier\", \"id\", \"layer\", \"sizes\", \"chunks\", \"depth\", \"cacheable\", \"orphan\", \"runtime\", \"optional\", \"dependent\", \"built\", \"codeGenerated\", \"cached\", \"assets\", \"failed\", \"warnings\", \"errors\", \"children\", \"filteredChildren\", \"providedExports\", \"usedExports\", \"optimizationBailout\", \"reasons\", \"filteredReasons\", \"issuerPath\", \"profile\", \"modules\", \"filteredModules\"],\n  moduleReason: [\"active\", \"type\", \"userRequest\", \"moduleId\", \"module\", \"resolvedModule\", \"loc\", \"explanation\", \"children\", \"filteredChildren\"],\n  \"module.profile\": [\"total\", \"separator!\", \"resolving\", \"restoring\", \"integration\", \"building\", \"storing\", \"additionalResolving\", \"additionalIntegration\"],\n  chunk: [\"id\", \"runtime\", \"files\", \"names\", \"idHints\", \"sizes\", \"parents\", \"siblings\", \"children\", \"childrenByOrder\", \"entry\", \"initial\", \"rendered\", \"recorded\", \"reason\", \"separator!\", \"origins\", \"separator!\", \"modules\", \"separator!\", \"filteredModules\"],\n  chunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n  error: ERROR_PREFERRED_ORDER,\n  warning: ERROR_PREFERRED_ORDER,\n  \"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n  loggingGroup: [\"debug\", \"name\", \"separator!\", \"entries\", \"separator!\", \"filteredEntries\"],\n  loggingEntry: [\"message\", \"trace\", \"children\"]\n};\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items => items.length > 0 ? `(${name}: ${items.filter(Boolean).join(\", \")})` : undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n  \"chunk.parents\": itemsJoinOneLine,\n  \"chunk.siblings\": itemsJoinOneLine,\n  \"chunk.children\": itemsJoinOneLine,\n  \"chunk.names\": itemsJoinCommaBrackets,\n  \"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n  \"chunk.files\": itemsJoinComma,\n  \"chunk.childrenByOrder\": itemsJoinOneLine,\n  \"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n  \"chunkGroup.assets\": itemsJoinOneLine,\n  \"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"chunkGroupChildGroup.children\": itemsJoinComma,\n  \"chunkGroupChild.assets\": itemsJoinOneLine,\n  \"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"asset.chunks\": itemsJoinComma,\n  \"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n  \"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n  \"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n  \"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"asset.auxiliaryChunkIdHints\": itemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n  \"module.chunks\": itemsJoinOneLine,\n  \"module.issuerPath\": items => items.filter(Boolean).map(item => `${item} ->`).join(\" \"),\n  \"compilation.errors\": itemsJoinMoreSpacing,\n  \"compilation.warnings\": itemsJoinMoreSpacing,\n  \"compilation.logging\": itemsJoinMoreSpacing,\n  \"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n  \"moduleTraceItem.dependencies\": itemsJoinOneLine,\n  \"loggingEntry.children\": items => indent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\nconst joinOneLine = items => items.map(item => item.content).filter(Boolean).join(\" \");\nconst joinInBrackets = items => {\n  const res = [];\n  let mode = 0;\n  for (const item of items) {\n    if (item.element === \"separator!\") {\n      switch (mode) {\n        case 0:\n        case 1:\n          mode += 2;\n          break;\n        case 4:\n          res.push(\")\");\n          mode = 3;\n          break;\n      }\n    }\n    if (!item.content) continue;\n    switch (mode) {\n      case 0:\n        mode = 1;\n        break;\n      case 1:\n        res.push(\" \");\n        break;\n      case 2:\n        res.push(\"(\");\n        mode = 4;\n        break;\n      case 3:\n        res.push(\" (\");\n        mode = 4;\n        break;\n      case 4:\n        res.push(\", \");\n        break;\n    }\n    res.push(item.content);\n  }\n  if (mode === 4) res.push(\")\");\n  return res.join(\"\");\n};\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n  const rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n  if (noPrefixInFirstLine) return rem;\n  const ind = str[0] === \"\\n\" ? \"\" : prefix;\n  return ind + rem;\n};\nconst joinExplicitNewLine = (items, indenter) => {\n  let firstInLine = true;\n  let first = true;\n  return items.map(item => {\n    if (!item || !item.content) return;\n    let content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n    if (firstInLine) {\n      content = content.replace(/^\\n+/, \"\");\n    }\n    if (!content) return;\n    first = false;\n    const noJoiner = firstInLine || content.startsWith(\"\\n\");\n    firstInLine = content.endsWith(\"\\n\");\n    return noJoiner ? content : \" \" + content;\n  }).filter(Boolean).join(\"\").trim();\n};\nconst joinError = error => (items, _ref109) => {\n  let {\n    red,\n    yellow\n  } = _ref109;\n  return `${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(items, \"\")}`;\n};\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n  compilation: items => {\n    const result = [];\n    let lastNeedMore = false;\n    for (const item of items) {\n      if (!item.content) continue;\n      const needMoreSpace = item.element === \"warnings\" || item.element === \"filteredWarningDetailsCount\" || item.element === \"errors\" || item.element === \"filteredErrorDetailsCount\" || item.element === \"logging\";\n      if (result.length !== 0) {\n        result.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n      }\n      result.push(item.content);\n      lastNeedMore = needMoreSpace;\n    }\n    if (lastNeedMore) result.push(\"\\n\");\n    return result.join(\"\");\n  },\n  asset: items => joinExplicitNewLine(items.map(item => {\n    if ((item.element === \"related\" || item.element === \"children\") && item.content) {\n      return {\n        ...item,\n        content: `\\n${item.content}\\n`\n      };\n    }\n    return item;\n  }), \"  \"),\n  \"asset.info\": joinOneLine,\n  module: (items, _ref110) => {\n    let {\n      module\n    } = _ref110;\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"id\":\n          if (module.id === module.name) {\n            if (hasName) return false;\n            if (item.content) hasName = true;\n          }\n          break;\n        case \"name\":\n          if (hasName) return false;\n          if (item.content) hasName = true;\n          break;\n        case \"providedExports\":\n        case \"usedExports\":\n        case \"optimizationBailout\":\n        case \"reasons\":\n        case \"issuerPath\":\n        case \"profile\":\n        case \"children\":\n        case \"modules\":\n          if (item.content) {\n            return {\n              ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n          break;\n      }\n      return item;\n    }), \"  \");\n  },\n  chunk: items => {\n    let hasEntry = false;\n    return \"chunk \" + joinExplicitNewLine(items.filter(item => {\n      switch (item.element) {\n        case \"entry\":\n          if (item.content) hasEntry = true;\n          break;\n        case \"initial\":\n          if (hasEntry) return false;\n          break;\n      }\n      return true;\n    }), \"  \");\n  },\n  \"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n  chunkGroup: items => joinExplicitNewLine(items, \"  \"),\n  chunkGroupAsset: joinOneLine,\n  chunkGroupChildGroup: joinOneLine,\n  chunkGroupChild: joinOneLine,\n  // moduleReason: (items, { moduleReason }) => {\n  // \tlet hasName = false;\n  // \treturn joinOneLine(\n  // \t\titems.filter(item => {\n  // \t\t\tswitch (item.element) {\n  // \t\t\t\tcase \"moduleId\":\n  // \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n  // \t\t\t\t\t\thasName = true;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"module\":\n  // \t\t\t\t\tif (hasName) return false;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"resolvedModule\":\n  // \t\t\t\t\treturn (\n  // \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n  // \t\t\t\t\t\titem.content\n  // \t\t\t\t\t);\n  // \t\t\t}\n  // \t\t\treturn true;\n  // \t\t})\n  // \t);\n  // },\n  moduleReason: (items, _ref111) => {\n    let {\n      moduleReason\n    } = _ref111;\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"moduleId\":\n          if (moduleReason.moduleId === moduleReason.module && item.content) hasName = true;\n          break;\n        case \"module\":\n          if (hasName) return false;\n          break;\n        case \"resolvedModule\":\n          if (moduleReason.module === moduleReason.resolvedModule) return false;\n          break;\n        case \"children\":\n          if (item.content) {\n            return {\n              ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n          break;\n      }\n      return item;\n    }), \"  \");\n  },\n  \"module.profile\": joinInBrackets,\n  moduleIssuer: joinOneLine,\n  chunkOrigin: items => \"> \" + joinOneLine(items),\n  \"errors[].error\": joinError(true),\n  \"warnings[].error\": joinError(false),\n  loggingGroup: items => joinExplicitNewLine(items, \"\").trimEnd(),\n  moduleTraceItem: items => \" @ \" + joinOneLine(items),\n  moduleTraceDependency: joinOneLine\n};\nconst AVAILABLE_COLORS = {\n  bold: \"\\u001b[1m\",\n  yellow: \"\\u001b[1m\\u001b[33m\",\n  red: \"\\u001b[1m\\u001b[31m\",\n  green: \"\\u001b[1m\\u001b[32m\",\n  cyan: \"\\u001b[1m\\u001b[36m\",\n  magenta: \"\\u001b[1m\\u001b[35m\"\n};\nconst AVAILABLE_FORMATS = {\n  formatChunkId: (id, _ref112, direction) => {\n    let {\n      yellow\n    } = _ref112;\n    switch (direction) {\n      case \"parent\":\n        return `<{${yellow(id)}}>`;\n      case \"sibling\":\n        return `={${yellow(id)}}=`;\n      case \"child\":\n        return `>{${yellow(id)}}<`;\n      default:\n        return `{${yellow(id)}}`;\n    }\n  },\n  formatModuleId: id => `[${id}]`,\n  formatFilename: (filename, _ref113, oversize) => {\n    let {\n      green,\n      yellow\n    } = _ref113;\n    return (oversize ? yellow : green)(filename);\n  },\n  formatFlag: flag => `[${flag}]`,\n  formatLayer: layer => `(in ${layer})`,\n  formatSize: require(\"../SizeFormatHelpers\").formatSize,\n  formatDateTime: (dateTime, _ref114) => {\n    let {\n      bold\n    } = _ref114;\n    const d = new Date(dateTime);\n    const x = twoDigit;\n    const date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n    const time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n    return `${date} ${bold(time)}`;\n  },\n  formatTime: (time, _ref115, boldQuantity) => {\n    let {\n      timeReference,\n      bold,\n      green,\n      yellow,\n      red\n    } = _ref115;\n    const unit = \" ms\";\n    if (timeReference && time !== timeReference) {\n      const times = [timeReference / 2, timeReference / 4, timeReference / 8, timeReference / 16];\n      if (time < times[3]) return `${time}${unit}`;else if (time < times[2]) return bold(`${time}${unit}`);else if (time < times[1]) return green(`${time}${unit}`);else if (time < times[0]) return yellow(`${time}${unit}`);else return red(`${time}${unit}`);\n    } else {\n      return `${boldQuantity ? bold(time) : time}${unit}`;\n    }\n  },\n  formatError: (message, _ref116) => {\n    let {\n      green,\n      yellow,\n      red\n    } = _ref116;\n    if (message.includes(\"\\u001b[\")) return message;\n    const highlights = [{\n      regExp: /(Did you mean .+)/g,\n      format: green\n    }, {\n      regExp: /(Set 'mode' option to 'development' or 'production')/g,\n      format: green\n    }, {\n      regExp: /(\\(module has no exports\\))/g,\n      format: red\n    }, {\n      regExp: /\\(possible exports: (.+)\\)/g,\n      format: green\n    }, {\n      regExp: /(?:^|\\n)(.* doesn't exist)/g,\n      format: red\n    }, {\n      regExp: /('\\w+' option has not been set)/g,\n      format: red\n    }, {\n      regExp: /(Emitted value instead of an instance of Error)/g,\n      format: yellow\n    }, {\n      regExp: /(Used? .+ instead)/gi,\n      format: yellow\n    }, {\n      regExp: /\\b(deprecated|must|required)\\b/g,\n      format: yellow\n    }, {\n      regExp: /\\b(BREAKING CHANGE)\\b/gi,\n      format: red\n    }, {\n      regExp: /\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n      format: red\n    }];\n    for (const {\n      regExp,\n      format\n    } of highlights) {\n      message = message.replace(regExp, (match, content) => {\n        return match.replace(content, format(content));\n      });\n    }\n    return message;\n  }\n};\nconst RESULT_MODIFIER = {\n  \"module.modules\": result => {\n    return indent(result, \"| \");\n  }\n};\nconst createOrder = (array, preferredOrder) => {\n  const originalArray = array.slice();\n  const set = new Set(array);\n  const usedSet = new Set();\n  array.length = 0;\n  for (const element of preferredOrder) {\n    if (element.endsWith(\"!\") || set.has(element)) {\n      array.push(element);\n      usedSet.add(element);\n    }\n  }\n  for (const element of originalArray) {\n    if (!usedSet.has(element)) {\n      array.push(element);\n    }\n  }\n  return array;\n};\nclass DefaultStatsPrinterPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n      compilation.hooks.statsPrinter.tap(\"DefaultStatsPrinterPlugin\", (stats, options, context) => {\n        // Put colors into context\n        stats.hooks.print.for(\"compilation\").tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n          for (const color of Object.keys(AVAILABLE_COLORS)) {\n            let start;\n            if (options.colors) {\n              if (typeof options.colors === \"object\" && typeof options.colors[color] === \"string\") {\n                start = options.colors[color];\n              } else {\n                start = AVAILABLE_COLORS[color];\n              }\n            }\n            if (start) {\n              context[color] = str => `${start}${typeof str === \"string\" ? str.replace(/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g, `$1${start}`) : str}\\u001b[39m\\u001b[22m`;\n            } else {\n              context[color] = str => str;\n            }\n          }\n          for (const format of Object.keys(AVAILABLE_FORMATS)) {\n            context[format] = function (content) {\n              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n              }\n              return AVAILABLE_FORMATS[format](content, context, ...args);\n            };\n          }\n          context.timeReference = compilation.time;\n        });\n        for (const key of Object.keys(SIMPLE_PRINTERS)) {\n          stats.hooks.print.for(key).tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) => SIMPLE_PRINTERS[key](obj, ctx, stats));\n        }\n        for (const key of Object.keys(PREFERRED_ORDERS)) {\n          const preferredOrder = PREFERRED_ORDERS[key];\n          stats.hooks.sortElements.for(key).tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n            createOrder(elements, preferredOrder);\n          });\n        }\n        for (const key of Object.keys(ITEM_NAMES)) {\n          const itemName = ITEM_NAMES[key];\n          stats.hooks.getItemName.for(key).tap(\"DefaultStatsPrinterPlugin\", typeof itemName === \"string\" ? () => itemName : itemName);\n        }\n        for (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n          const joiner = SIMPLE_ITEMS_JOINER[key];\n          stats.hooks.printItems.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n        for (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n          const joiner = SIMPLE_ELEMENT_JOINERS[key];\n          stats.hooks.printElements.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n        for (const key of Object.keys(RESULT_MODIFIER)) {\n          const modifier = RESULT_MODIFIER[key];\n          stats.hooks.result.for(key).tap(\"DefaultStatsPrinterPlugin\", modifier);\n        }\n      });\n    });\n  }\n}\nmodule.exports = DefaultStatsPrinterPlugin;","map":{"version":3,"names":["DATA_URI_CONTENT_LENGTH","MAX_MODULE_IDENTIFIER_LENGTH","plural","n","singular","printSizes","sizes","_ref","formatSize","keys","Object","length","map","key","join","getResourceName","resource","dataUrl","exec","len","slice","Math","min","getModuleName","name","prefix","truncatedResource","mapLines","str","fn","split","twoDigit","isValidId","id","moreCount","list","count","SIMPLE_PRINTERS","compilation.summary!","_","_ref2","type","bold","green","red","yellow","formatDateTime","formatTime","compilation","hash","version","time","builtAt","errorsCount","warningsCount","root","warningsMessage","errorsMessage","timeMessage","hashMessage","builtAtMessage","versionMessage","nameMessage","subjectMessage","statusMessage","undefined","compilation.filteredErrorDetailsCount","_ref3","compilation.env","env","_ref4","JSON","stringify","compilation.publicPath","publicPath","_ref5","compilation.entrypoints","entrypoints","context","printer","Array","isArray","print","values","chunkGroupKind","compilation.namedChunkGroups","namedChunkGroups","chunkGroups","filter","group","prototype","hasOwnProperty","call","compilation.assetsByChunkName","compilation.filteredModules","filteredModules","_ref6","modules","compilation.filteredAssets","filteredAssets","_ref7","assets","compilation.logging","logging","entries","_ref8","value","compilation.warningsInChildren!","_ref9","children","warnings","childWarnings","compilation.errorsInChildren!","_ref10","errors","childErrors","asset.name","_ref11","formatFilename","asset","isOverSizeLimit","asset.size","size","_ref12","asset.emitted","emitted","_ref13","formatFlag","asset.comparedForEmit","comparedForEmit","_ref14","asset.cached","cached","_ref15","asset.isOverSizeLimit","_ref16","asset.info.immutable","immutable","_ref17","asset.info.javascriptModule","javascriptModule","_ref18","asset.info.sourceFilename","sourceFilename","_ref19","asset.info.development","development","_ref20","asset.info.hotModuleReplacement","hotModuleReplacement","_ref21","asset.separator!","asset.filteredRelated","filteredRelated","_ref22","related","asset.filteredChildren","filteredChildren","_ref23","assetChunk","_ref24","formatChunkId","assetChunkName","assetChunkIdHint","module.id","_ref25","formatModuleId","module.name","_ref26","identifier","module.layer","layer","_ref27","formatLayer","module.chunks[]","_ref28","module.depth","depth","_ref29","module.cacheable","cacheable","_ref30","module.orphan","orphan","_ref31","module.runtime","runtime","_ref32","module.optional","optional","_ref33","module.dependent","dependent","_ref34","cyan","module.built","built","_ref35","module.codeGenerated","codeGenerated","_ref36","module.buildTimeExecuted","buildTimeExecuted","_ref37","module.cached","_ref38","module.assets","_ref39","magenta","module.warnings","_ref40","module.errors","_ref41","module.providedExports","providedExports","_ref42","module.usedExports","usedExports","_ref43","module","providedExportsCount","module.optimizationBailout[]","optimizationBailout","_ref44","module.issuerPath","issuerPath","_ref45","profile","module.filteredModules","_ref46","module.filteredReasons","filteredReasons","_ref47","reasons","module.filteredChildren","_ref48","module.separator!","moduleIssuer.id","_ref49","moduleIssuer.profile.total","_ref50","moduleReason.userRequest","userRequest","_ref51","moduleReason.moduleId","moduleId","_ref52","moduleReason.module","_ref53","loc","moduleReason.explanation","explanation","_ref54","moduleReason.active","active","_ref55","moduleReason.resolvedModule","_ref56","moduleReason.filteredChildren","_ref57","moduleReason","module.profile.total","_ref58","module.profile.resolving","_ref59","module.profile.restoring","_ref60","module.profile.integration","_ref61","module.profile.building","_ref62","module.profile.storing","_ref63","module.profile.additionalResolving","_ref64","module.profile.additionalIntegration","_ref65","chunkGroup.kind!","_ref66","chunkGroup.separator!","chunkGroup.name","_ref67","chunkGroup.isOverSizeLimit","_ref68","chunkGroup.assetsSize","_ref69","chunkGroup.auxiliaryAssetsSize","_ref70","chunkGroup.filteredAssets","_ref71","chunkGroup","chunkGroup.filteredAuxiliaryAssets","_ref72","auxiliaryAssets","chunkGroup.is!","chunkGroupAsset.name","_ref73","chunkGroupAsset.size","_ref74","chunkGroup.children","chunkGroupChild.assets[]","file","_ref75","chunkGroupChild.chunks[]","_ref76","chunk.id","_ref77","chunk.files[]","_ref78","chunk.sizes","chunk.parents[]","parents","chunk.siblings[]","siblings","chunk.children[]","chunk.childrenByOrder","childrenByOrder","chunk.childrenByOrder[].children[]","_ref79","chunk.entry","entry","_ref80","chunk.initial","initial","_ref81","chunk.rendered","rendered","_ref82","chunk.recorded","recorded","_ref83","chunk.reason","reason","_ref84","chunk.filteredModules","_ref85","chunk","chunk.separator!","request","chunkOrigin.moduleId","_ref86","chunkOrigin.moduleName","moduleName","_ref87","error.compilerPath","compilerPath","_ref88","error.chunkId","chunkId","_ref89","error.chunkEntry","chunkEntry","_ref90","error.chunkInitial","chunkInitial","_ref91","error.file","_ref92","error.moduleName","_ref93","includes","replace","error.loc","_ref94","error.message","message","_ref95","formatError","error.details","details","_ref96","filteredDetails","stack","moduleTrace","error.separator!","loggingEntry(error).loggingEntry.message","_ref97","x","loggingEntry(warn).loggingEntry.message","_ref98","loggingEntry(info).loggingEntry.message","_ref99","loggingEntry(log).loggingEntry.message","_ref100","loggingEntry(status).loggingEntry.message","_ref101","loggingEntry(profile).loggingEntry.message","_ref102","loggingEntry(profileEnd).loggingEntry.message","_ref103","loggingEntry(time).loggingEntry.message","_ref104","loggingEntry(group).loggingEntry.message","_ref105","loggingEntry(groupCollapsed).loggingEntry.message","_ref106","loggingEntry(clear).loggingEntry","loggingEntry(groupCollapsed).loggingEntry.children","trace","originName","loggingGroup","loggingGroup.debug","flag","_ref107","loggingGroup.name","_ref108","loggingGroup.separator!","filteredEntries","ITEM_NAMES","logEntry","ERROR_PREFERRED_ORDER","PREFERRED_ORDERS","chunkGroupAsset","chunkGroupChildGroup","chunkGroupChild","chunkOrigin","error","warning","loggingEntry","itemsJoinOneLine","items","Boolean","itemsJoinOneLineBrackets","itemsJoinMoreSpacing","itemsJoinComma","itemsJoinCommaBrackets","itemsJoinCommaBracketsWithName","SIMPLE_ITEMS_JOINER","item","indent","joinOneLine","content","joinInBrackets","res","mode","element","push","noPrefixInFirstLine","rem","ind","joinExplicitNewLine","indenter","firstInLine","first","noJoiner","startsWith","endsWith","trim","joinError","_ref109","SIMPLE_ELEMENT_JOINERS","result","lastNeedMore","needMoreSpace","_ref110","hasName","hasEntry","_ref111","resolvedModule","moduleIssuer","trimEnd","moduleTraceItem","moduleTraceDependency","AVAILABLE_COLORS","AVAILABLE_FORMATS","_ref112","direction","filename","_ref113","oversize","require","dateTime","_ref114","d","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","_ref115","boldQuantity","timeReference","unit","times","_ref116","highlights","regExp","format","match","RESULT_MODIFIER","createOrder","array","preferredOrder","originalArray","set","Set","usedSet","has","add","DefaultStatsPrinterPlugin","apply","compiler","hooks","tap","statsPrinter","stats","options","for","color","start","colors","_len","arguments","args","_key","obj","ctx","sortElements","elements","itemName","getItemName","joiner","printItems","printElements","modifier","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/stats/DefaultStatsPrinterPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\n\nconst DATA_URI_CONTENT_LENGTH = 16;\nconst MAX_MODULE_IDENTIFIER_LENGTH = 80;\n\n/**\n * @param {number} n a number\n * @param {string} singular singular\n * @param {string} plural plural\n * @returns {string} if n is 1, singular, else plural\n */\nconst plural = (n, singular, plural) => (n === 1 ? singular : plural);\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, { formatSize = n => `${n}` }) => {\n\tconst keys = Object.keys(sizes);\n\tif (keys.length > 1) {\n\t\treturn keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n\t} else if (keys.length === 1) {\n\t\treturn formatSize(sizes[keys[0]]);\n\t}\n};\n\n/**\n * @param {string} resource resource\n * @returns {string} resource name for display\n */\nconst getResourceName = resource => {\n\tconst dataUrl = /^data:[^,]+,/.exec(resource);\n\tif (!dataUrl) return resource;\n\n\tconst len = dataUrl[0].length + DATA_URI_CONTENT_LENGTH;\n\tif (resource.length < len) return resource;\n\treturn `${resource.slice(\n\t\t0,\n\t\tMath.min(resource.length - /* '..'.length */ 2, len)\n\t)}..`;\n};\n\n/**\n * @param {string} name module name\n * @returns {[string,string]} prefix and module name\n */\nconst getModuleName = name => {\n\tconst [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n\n\tif (resource.length > MAX_MODULE_IDENTIFIER_LENGTH) {\n\t\tconst truncatedResource = `${resource.slice(\n\t\t\t0,\n\t\t\tMath.min(\n\t\t\t\tresource.length - /* '...(truncated)'.length */ 14,\n\t\t\t\tMAX_MODULE_IDENTIFIER_LENGTH\n\t\t\t)\n\t\t)}...(truncated)`;\n\n\t\treturn [prefix, getResourceName(truncatedResource)];\n\t}\n\n\treturn [prefix, getResourceName(resource)];\n};\n\n/**\n * @param {string} str string\n * @param {function(string): string} fn function to apply to each line\n * @returns {string} joined string\n */\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => (n >= 10 ? `${n}` : `0${n}`);\n\nconst isValidId = id => {\n\treturn typeof id === \"number\" || id;\n};\n\n/**\n * @template T\n * @param {Array<T>} list of items\n * @param {number} count number of items to show\n * @returns {string} string representation of list\n */\nconst moreCount = (list, count) => {\n\treturn list && list.length > 0 ? `+ ${count}` : `${count}`;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n\t\"compilation.summary!\": (\n\t\t_,\n\t\t{\n\t\t\ttype,\n\t\t\tbold,\n\t\t\tgreen,\n\t\t\tred,\n\t\t\tyellow,\n\t\t\tformatDateTime,\n\t\t\tformatTime,\n\t\t\tcompilation: {\n\t\t\t\tname,\n\t\t\t\thash,\n\t\t\t\tversion,\n\t\t\t\ttime,\n\t\t\t\tbuiltAt,\n\t\t\t\terrorsCount,\n\t\t\t\twarningsCount\n\t\t\t}\n\t\t}\n\t) => {\n\t\tconst root = type === \"compilation.summary!\";\n\t\tconst warningsMessage =\n\t\t\twarningsCount > 0\n\t\t\t\t? yellow(\n\t\t\t\t\t\t`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`\n\t\t\t\t  )\n\t\t\t\t: \"\";\n\t\tconst errorsMessage =\n\t\t\terrorsCount > 0\n\t\t\t\t? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`)\n\t\t\t\t: \"\";\n\t\tconst timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n\t\tconst hashMessage = hash ? ` (${hash})` : \"\";\n\t\tconst builtAtMessage =\n\t\t\troot && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n\t\tconst versionMessage = root && version ? `webpack ${version}` : \"\";\n\t\tconst nameMessage =\n\t\t\troot && name\n\t\t\t\t? bold(name)\n\t\t\t\t: name\n\t\t\t\t? `Child ${bold(name)}`\n\t\t\t\t: root\n\t\t\t\t? \"\"\n\t\t\t\t: \"Child\";\n\t\tconst subjectMessage =\n\t\t\tnameMessage && versionMessage\n\t\t\t\t? `${nameMessage} (${versionMessage})`\n\t\t\t\t: versionMessage || nameMessage || \"webpack\";\n\t\tlet statusMessage;\n\t\tif (errorsMessage && warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n\t\t} else if (errorsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage}`;\n\t\t} else if (warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${warningsMessage}`;\n\t\t} else if (errorsCount === 0 && warningsCount === 0) {\n\t\t\tstatusMessage = `compiled ${green(\"successfully\")}`;\n\t\t} else {\n\t\t\tstatusMessage = `compiled`;\n\t\t}\n\t\tif (\n\t\t\tbuiltAtMessage ||\n\t\t\tversionMessage ||\n\t\t\terrorsMessage ||\n\t\t\twarningsMessage ||\n\t\t\t(errorsCount === 0 && warningsCount === 0) ||\n\t\t\ttimeMessage ||\n\t\t\thashMessage\n\t\t)\n\t\t\treturn `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n\t},\n\t\"compilation.filteredWarningDetailsCount\": count =>\n\t\tcount\n\t\t\t? `${count} ${plural(\n\t\t\t\t\tcount,\n\t\t\t\t\t\"warning has\",\n\t\t\t\t\t\"warnings have\"\n\t\t\t  )} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t: undefined,\n\t\"compilation.filteredErrorDetailsCount\": (count, { yellow }) =>\n\t\tcount\n\t\t\t? yellow(\n\t\t\t\t\t`${count} ${plural(\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\"error has\",\n\t\t\t\t\t\t\"errors have\"\n\t\t\t\t\t)} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t  )\n\t\t\t: undefined,\n\t\"compilation.env\": (env, { bold }) =>\n\t\tenv\n\t\t\t? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}`\n\t\t\t: undefined,\n\t\"compilation.publicPath\": (publicPath, { bold }) =>\n\t\t`PublicPath: ${bold(publicPath || \"(none)\")}`,\n\t\"compilation.entrypoints\": (entrypoints, context, printer) =>\n\t\tArray.isArray(entrypoints)\n\t\t\t? undefined\n\t\t\t: printer.print(context.type, Object.values(entrypoints), {\n\t\t\t\t\t...context,\n\t\t\t\t\tchunkGroupKind: \"Entrypoint\"\n\t\t\t  }),\n\t\"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n\t\tif (!Array.isArray(namedChunkGroups)) {\n\t\t\tconst {\n\t\t\t\tcompilation: { entrypoints }\n\t\t\t} = context;\n\t\t\tlet chunkGroups = Object.values(namedChunkGroups);\n\t\t\tif (entrypoints) {\n\t\t\t\tchunkGroups = chunkGroups.filter(\n\t\t\t\t\tgroup =>\n\t\t\t\t\t\t!Object.prototype.hasOwnProperty.call(entrypoints, group.name)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn printer.print(context.type, chunkGroups, {\n\t\t\t\t...context,\n\t\t\t\tchunkGroupKind: \"Chunk Group\"\n\t\t\t});\n\t\t}\n\t},\n\t\"compilation.assetsByChunkName\": () => \"\",\n\n\t\"compilation.filteredModules\": (\n\t\tfilteredModules,\n\t\t{ compilation: { modules } }\n\t) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"compilation.filteredAssets\": (filteredAssets, { compilation: { assets } }) =>\n\t\tfilteredAssets > 0\n\t\t\t? `${moreCount(assets, filteredAssets)} ${plural(\n\t\t\t\t\tfilteredAssets,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"compilation.logging\": (logging, context, printer) =>\n\t\tArray.isArray(logging)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.entries(logging).map(([name, value]) => ({ ...value, name })),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"compilation.warningsInChildren!\": (_, { yellow, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.warningsCount > 0 &&\n\t\t\tcompilation.warnings\n\t\t) {\n\t\t\tconst childWarnings =\n\t\t\t\tcompilation.warningsCount - compilation.warnings.length;\n\t\t\tif (childWarnings > 0) {\n\t\t\t\treturn yellow(\n\t\t\t\t\t`${childWarnings} ${plural(\n\t\t\t\t\t\tchildWarnings,\n\t\t\t\t\t\t\"WARNING\",\n\t\t\t\t\t\t\"WARNINGS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\"compilation.errorsInChildren!\": (_, { red, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.errorsCount > 0 &&\n\t\t\tcompilation.errors\n\t\t) {\n\t\t\tconst childErrors = compilation.errorsCount - compilation.errors.length;\n\t\t\tif (childErrors > 0) {\n\t\t\t\treturn red(\n\t\t\t\t\t`${childErrors} ${plural(\n\t\t\t\t\t\tchildErrors,\n\t\t\t\t\t\t\"ERROR\",\n\t\t\t\t\t\t\"ERRORS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\t\"asset.type\": type => type,\n\t\"asset.name\": (name, { formatFilename, asset: { isOverSizeLimit } }) =>\n\t\tformatFilename(name, isOverSizeLimit),\n\t\"asset.size\": (\n\t\tsize,\n\t\t{ asset: { isOverSizeLimit }, yellow, green, formatSize }\n\t) => (isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size)),\n\t\"asset.emitted\": (emitted, { green, formatFlag }) =>\n\t\temitted ? green(formatFlag(\"emitted\")) : undefined,\n\t\"asset.comparedForEmit\": (comparedForEmit, { yellow, formatFlag }) =>\n\t\tcomparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined,\n\t\"asset.cached\": (cached, { green, formatFlag }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"asset.isOverSizeLimit\": (isOverSizeLimit, { yellow, formatFlag }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\n\t\"asset.info.immutable\": (immutable, { green, formatFlag }) =>\n\t\timmutable ? green(formatFlag(\"immutable\")) : undefined,\n\t\"asset.info.javascriptModule\": (javascriptModule, { formatFlag }) =>\n\t\tjavascriptModule ? formatFlag(\"javascript module\") : undefined,\n\t\"asset.info.sourceFilename\": (sourceFilename, { formatFlag }) =>\n\t\tsourceFilename\n\t\t\t? formatFlag(\n\t\t\t\t\tsourceFilename === true\n\t\t\t\t\t\t? \"from source file\"\n\t\t\t\t\t\t: `from: ${sourceFilename}`\n\t\t\t  )\n\t\t\t: undefined,\n\t\"asset.info.development\": (development, { green, formatFlag }) =>\n\t\tdevelopment ? green(formatFlag(\"dev\")) : undefined,\n\t\"asset.info.hotModuleReplacement\": (\n\t\thotModuleReplacement,\n\t\t{ green, formatFlag }\n\t) => (hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined),\n\t\"asset.separator!\": () => \"\\n\",\n\t\"asset.filteredRelated\": (filteredRelated, { asset: { related } }) =>\n\t\tfilteredRelated > 0\n\t\t\t? `${moreCount(related, filteredRelated)} related ${plural(\n\t\t\t\t\tfilteredRelated,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"asset.filteredChildren\": (filteredChildren, { asset: { children } }) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\n\tassetChunk: (id, { formatChunkId }) => formatChunkId(id),\n\n\tassetChunkName: name => name,\n\tassetChunkIdHint: name => name,\n\n\t\"module.type\": type => (type !== \"module\" ? type : undefined),\n\t\"module.id\": (id, { formatModuleId }) =>\n\t\tisValidId(id) ? formatModuleId(id) : undefined,\n\t\"module.name\": (name, { bold }) => {\n\t\tconst [prefix, resource] = getModuleName(name);\n\t\treturn `${prefix || \"\"}${bold(resource || \"\")}`;\n\t},\n\t\"module.identifier\": identifier => undefined,\n\t\"module.layer\": (layer, { formatLayer }) =>\n\t\tlayer ? formatLayer(layer) : undefined,\n\t\"module.sizes\": printSizes,\n\t\"module.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"module.depth\": (depth, { formatFlag }) =>\n\t\tdepth !== null ? formatFlag(`depth ${depth}`) : undefined,\n\t\"module.cacheable\": (cacheable, { formatFlag, red }) =>\n\t\tcacheable === false ? red(formatFlag(\"not cacheable\")) : undefined,\n\t\"module.orphan\": (orphan, { formatFlag, yellow }) =>\n\t\torphan ? yellow(formatFlag(\"orphan\")) : undefined,\n\t\"module.runtime\": (runtime, { formatFlag, yellow }) =>\n\t\truntime ? yellow(formatFlag(\"runtime\")) : undefined,\n\t\"module.optional\": (optional, { formatFlag, yellow }) =>\n\t\toptional ? yellow(formatFlag(\"optional\")) : undefined,\n\t\"module.dependent\": (dependent, { formatFlag, cyan }) =>\n\t\tdependent ? cyan(formatFlag(\"dependent\")) : undefined,\n\t\"module.built\": (built, { formatFlag, yellow }) =>\n\t\tbuilt ? yellow(formatFlag(\"built\")) : undefined,\n\t\"module.codeGenerated\": (codeGenerated, { formatFlag, yellow }) =>\n\t\tcodeGenerated ? yellow(formatFlag(\"code generated\")) : undefined,\n\t\"module.buildTimeExecuted\": (buildTimeExecuted, { formatFlag, green }) =>\n\t\tbuildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined,\n\t\"module.cached\": (cached, { formatFlag, green }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"module.assets\": (assets, { formatFlag, magenta }) =>\n\t\tassets && assets.length\n\t\t\t? magenta(\n\t\t\t\t\tformatFlag(\n\t\t\t\t\t\t`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: undefined,\n\t\"module.warnings\": (warnings, { formatFlag, yellow }) =>\n\t\twarnings === true\n\t\t\t? yellow(formatFlag(\"warnings\"))\n\t\t\t: warnings\n\t\t\t? yellow(\n\t\t\t\t\tformatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)\n\t\t\t  )\n\t\t\t: undefined,\n\t\"module.errors\": (errors, { formatFlag, red }) =>\n\t\terrors === true\n\t\t\t? red(formatFlag(\"errors\"))\n\t\t\t: errors\n\t\t\t? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`))\n\t\t\t: undefined,\n\t\"module.providedExports\": (providedExports, { formatFlag, cyan }) => {\n\t\tif (Array.isArray(providedExports)) {\n\t\t\tif (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n\t\t\treturn cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n\t\t}\n\t},\n\t\"module.usedExports\": (usedExports, { formatFlag, cyan, module }) => {\n\t\tif (usedExports !== true) {\n\t\t\tif (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n\t\t\tif (usedExports === false) return cyan(formatFlag(\"module unused\"));\n\t\t\tif (Array.isArray(usedExports)) {\n\t\t\t\tif (usedExports.length === 0)\n\t\t\t\t\treturn cyan(formatFlag(\"no exports used\"));\n\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t: null;\n\t\t\t\tif (\n\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\tprovidedExportsCount === usedExports.length\n\t\t\t\t) {\n\t\t\t\t\treturn cyan(formatFlag(\"all exports used\"));\n\t\t\t\t} else {\n\t\t\t\t\treturn cyan(\n\t\t\t\t\t\tformatFlag(`only some exports used: ${usedExports.join(\", \")}`)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"module.optimizationBailout[]\": (optimizationBailout, { yellow }) =>\n\t\tyellow(optimizationBailout),\n\t\"module.issuerPath\": (issuerPath, { module }) =>\n\t\tmodule.profile ? undefined : \"\",\n\t\"module.profile\": profile => undefined,\n\t\"module.filteredModules\": (filteredModules, { module: { modules } }) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} nested ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.filteredReasons\": (filteredReasons, { module: { reasons } }) =>\n\t\tfilteredReasons > 0\n\t\t\t? `${moreCount(reasons, filteredReasons)} ${plural(\n\t\t\t\t\tfilteredReasons,\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"reasons\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.filteredChildren\": (filteredChildren, { module: { children } }) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.separator!\": () => \"\\n\",\n\n\t\"moduleIssuer.id\": (id, { formatModuleId }) => formatModuleId(id),\n\t\"moduleIssuer.profile.total\": (value, { formatTime }) => formatTime(value),\n\n\t\"moduleReason.type\": type => type,\n\t\"moduleReason.userRequest\": (userRequest, { cyan }) =>\n\t\tcyan(getResourceName(userRequest)),\n\t\"moduleReason.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"moduleReason.module\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.loc\": loc => loc,\n\t\"moduleReason.explanation\": (explanation, { cyan }) => cyan(explanation),\n\t\"moduleReason.active\": (active, { formatFlag }) =>\n\t\tactive ? undefined : formatFlag(\"inactive\"),\n\t\"moduleReason.resolvedModule\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.filteredChildren\": (\n\t\tfilteredChildren,\n\t\t{ moduleReason: { children } }\n\t) =>\n\t\tfilteredChildren > 0\n\t\t\t? `${moreCount(children, filteredChildren)} ${plural(\n\t\t\t\t\tfilteredChildren,\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"reasons\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\n\t\"module.profile.total\": (value, { formatTime }) => formatTime(value),\n\t\"module.profile.resolving\": (value, { formatTime }) =>\n\t\t`resolving: ${formatTime(value)}`,\n\t\"module.profile.restoring\": (value, { formatTime }) =>\n\t\t`restoring: ${formatTime(value)}`,\n\t\"module.profile.integration\": (value, { formatTime }) =>\n\t\t`integration: ${formatTime(value)}`,\n\t\"module.profile.building\": (value, { formatTime }) =>\n\t\t`building: ${formatTime(value)}`,\n\t\"module.profile.storing\": (value, { formatTime }) =>\n\t\t`storing: ${formatTime(value)}`,\n\t\"module.profile.additionalResolving\": (value, { formatTime }) =>\n\t\tvalue ? `additional resolving: ${formatTime(value)}` : undefined,\n\t\"module.profile.additionalIntegration\": (value, { formatTime }) =>\n\t\tvalue ? `additional integration: ${formatTime(value)}` : undefined,\n\n\t\"chunkGroup.kind!\": (_, { chunkGroupKind }) => chunkGroupKind,\n\t\"chunkGroup.separator!\": () => \"\\n\",\n\t\"chunkGroup.name\": (name, { bold }) => bold(name),\n\t\"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, { formatFlag, yellow }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\t\"chunkGroup.assetsSize\": (size, { formatSize }) =>\n\t\tsize ? formatSize(size) : undefined,\n\t\"chunkGroup.auxiliaryAssetsSize\": (size, { formatSize }) =>\n\t\tsize ? `(${formatSize(size)})` : undefined,\n\t\"chunkGroup.filteredAssets\": (n, { chunkGroup: { assets } }) =>\n\t\tn > 0\n\t\t\t? `${moreCount(assets, n)} ${plural(n, \"asset\", \"assets\")}`\n\t\t\t: undefined,\n\t\"chunkGroup.filteredAuxiliaryAssets\": (\n\t\tn,\n\t\t{ chunkGroup: { auxiliaryAssets } }\n\t) =>\n\t\tn > 0\n\t\t\t? `${moreCount(auxiliaryAssets, n)} auxiliary ${plural(\n\t\t\t\t\tn,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"chunkGroup.is!\": () => \"=\",\n\t\"chunkGroupAsset.name\": (asset, { green }) => green(asset),\n\t\"chunkGroupAsset.size\": (size, { formatSize, chunkGroup }) =>\n\t\tchunkGroup.assets.length > 1 ||\n\t\t(chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0)\n\t\t\t? formatSize(size)\n\t\t\t: undefined,\n\t\"chunkGroup.children\": (children, context, printer) =>\n\t\tArray.isArray(children)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(children).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: children[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"chunkGroupChildGroup.type\": type => `${type}:`,\n\t\"chunkGroupChild.assets[]\": (file, { formatFilename }) =>\n\t\tformatFilename(file),\n\t\"chunkGroupChild.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunkGroupChild.name\": name => (name ? `(name: ${name})` : undefined),\n\n\t\"chunk.id\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunk.files[]\": (file, { formatFilename }) => formatFilename(file),\n\t\"chunk.names[]\": name => name,\n\t\"chunk.idHints[]\": name => name,\n\t\"chunk.runtime[]\": name => name,\n\t\"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n\t\"chunk.parents[]\": (parents, context) =>\n\t\tcontext.formatChunkId(parents, \"parent\"),\n\t\"chunk.siblings[]\": (siblings, context) =>\n\t\tcontext.formatChunkId(siblings, \"sibling\"),\n\t\"chunk.children[]\": (children, context) =>\n\t\tcontext.formatChunkId(children, \"child\"),\n\t\"chunk.childrenByOrder\": (childrenByOrder, context, printer) =>\n\t\tArray.isArray(childrenByOrder)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(childrenByOrder).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: childrenByOrder[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"chunk.childrenByOrder[].type\": type => `${type}:`,\n\t\"chunk.childrenByOrder[].children[]\": (id, { formatChunkId }) =>\n\t\tisValidId(id) ? formatChunkId(id) : undefined,\n\t\"chunk.entry\": (entry, { formatFlag, yellow }) =>\n\t\tentry ? yellow(formatFlag(\"entry\")) : undefined,\n\t\"chunk.initial\": (initial, { formatFlag, yellow }) =>\n\t\tinitial ? yellow(formatFlag(\"initial\")) : undefined,\n\t\"chunk.rendered\": (rendered, { formatFlag, green }) =>\n\t\trendered ? green(formatFlag(\"rendered\")) : undefined,\n\t\"chunk.recorded\": (recorded, { formatFlag, green }) =>\n\t\trecorded ? green(formatFlag(\"recorded\")) : undefined,\n\t\"chunk.reason\": (reason, { yellow }) => (reason ? yellow(reason) : undefined),\n\t\"chunk.filteredModules\": (filteredModules, { chunk: { modules } }) =>\n\t\tfilteredModules > 0\n\t\t\t? `${moreCount(modules, filteredModules)} chunk ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"chunk.separator!\": () => \"\\n\",\n\n\t\"chunkOrigin.request\": request => request,\n\t\"chunkOrigin.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"chunkOrigin.moduleName\": (moduleName, { bold }) => bold(moduleName),\n\t\"chunkOrigin.loc\": loc => loc,\n\n\t\"error.compilerPath\": (compilerPath, { bold }) =>\n\t\tcompilerPath ? bold(`(${compilerPath})`) : undefined,\n\t\"error.chunkId\": (chunkId, { formatChunkId }) =>\n\t\tisValidId(chunkId) ? formatChunkId(chunkId) : undefined,\n\t\"error.chunkEntry\": (chunkEntry, { formatFlag }) =>\n\t\tchunkEntry ? formatFlag(\"entry\") : undefined,\n\t\"error.chunkInitial\": (chunkInitial, { formatFlag }) =>\n\t\tchunkInitial ? formatFlag(\"initial\") : undefined,\n\t\"error.file\": (file, { bold }) => bold(file),\n\t\"error.moduleName\": (moduleName, { bold }) => {\n\t\treturn moduleName.includes(\"!\")\n\t\t\t? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})`\n\t\t\t: `${bold(moduleName)}`;\n\t},\n\t\"error.loc\": (loc, { green }) => green(loc),\n\t\"error.message\": (message, { bold, formatError }) =>\n\t\tmessage.includes(\"\\u001b[\") ? message : bold(formatError(message)),\n\t\"error.details\": (details, { formatError }) => formatError(details),\n\t\"error.filteredDetails\": filteredDetails =>\n\t\tfilteredDetails ? `+ ${filteredDetails} hidden lines` : undefined,\n\t\"error.stack\": stack => stack,\n\t\"error.moduleTrace\": moduleTrace => undefined,\n\t\"error.separator!\": () => \"\\n\",\n\n\t\"loggingEntry(error).loggingEntry.message\": (message, { red }) =>\n\t\tmapLines(message, x => `<e> ${red(x)}`),\n\t\"loggingEntry(warn).loggingEntry.message\": (message, { yellow }) =>\n\t\tmapLines(message, x => `<w> ${yellow(x)}`),\n\t\"loggingEntry(info).loggingEntry.message\": (message, { green }) =>\n\t\tmapLines(message, x => `<i> ${green(x)}`),\n\t\"loggingEntry(log).loggingEntry.message\": (message, { bold }) =>\n\t\tmapLines(message, x => `    ${bold(x)}`),\n\t\"loggingEntry(debug).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(trace).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(status).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<s> ${magenta(x)}`),\n\t\"loggingEntry(profile).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<p> ${magenta(x)}`),\n\t\"loggingEntry(profileEnd).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `</p> ${magenta(x)}`),\n\t\"loggingEntry(time).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<t> ${magenta(x)}`),\n\t\"loggingEntry(group).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<-> ${cyan(x)}`),\n\t\"loggingEntry(groupCollapsed).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<+> ${cyan(x)}`),\n\t\"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n\t\"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n\t\"loggingEntry.trace[]\": trace =>\n\t\ttrace ? mapLines(trace, x => `| ${x}`) : undefined,\n\n\t\"moduleTraceItem.originName\": originName => originName,\n\n\tloggingGroup: loggingGroup =>\n\t\tloggingGroup.entries.length === 0 ? \"\" : undefined,\n\t\"loggingGroup.debug\": (flag, { red }) => (flag ? red(\"DEBUG\") : undefined),\n\t\"loggingGroup.name\": (name, { bold }) => bold(`LOG from ${name}`),\n\t\"loggingGroup.separator!\": () => \"\\n\",\n\t\"loggingGroup.filteredEntries\": filteredEntries =>\n\t\tfilteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n\n\t\"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n\t\"compilation.assets[]\": \"asset\",\n\t\"compilation.modules[]\": \"module\",\n\t\"compilation.chunks[]\": \"chunk\",\n\t\"compilation.entrypoints[]\": \"chunkGroup\",\n\t\"compilation.namedChunkGroups[]\": \"chunkGroup\",\n\t\"compilation.errors[]\": \"error\",\n\t\"compilation.warnings[]\": \"error\",\n\t\"compilation.logging[]\": \"loggingGroup\",\n\t\"compilation.children[]\": \"compilation\",\n\t\"asset.related[]\": \"asset\",\n\t\"asset.children[]\": \"asset\",\n\t\"asset.chunks[]\": \"assetChunk\",\n\t\"asset.auxiliaryChunks[]\": \"assetChunk\",\n\t\"asset.chunkNames[]\": \"assetChunkName\",\n\t\"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n\t\"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n\t\"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n\t\"chunkGroup.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n\t\"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n\t\"module.modules[]\": \"module\",\n\t\"module.children[]\": \"module\",\n\t\"module.reasons[]\": \"moduleReason\",\n\t\"moduleReason.children[]\": \"moduleReason\",\n\t\"module.issuerPath[]\": \"moduleIssuer\",\n\t\"chunk.origins[]\": \"chunkOrigin\",\n\t\"chunk.modules[]\": \"module\",\n\t\"loggingGroup.entries[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"loggingEntry.children[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"error.moduleTrace[]\": \"moduleTraceItem\",\n\t\"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\n\nconst ERROR_PREFERRED_ORDER = [\n\t\"compilerPath\",\n\t\"chunkId\",\n\t\"chunkEntry\",\n\t\"chunkInitial\",\n\t\"file\",\n\t\"separator!\",\n\t\"moduleName\",\n\t\"loc\",\n\t\"separator!\",\n\t\"message\",\n\t\"separator!\",\n\t\"details\",\n\t\"separator!\",\n\t\"filteredDetails\",\n\t\"separator!\",\n\t\"stack\",\n\t\"separator!\",\n\t\"missing\",\n\t\"separator!\",\n\t\"moduleTrace\"\n];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n\tcompilation: [\n\t\t\"name\",\n\t\t\"hash\",\n\t\t\"version\",\n\t\t\"time\",\n\t\t\"builtAt\",\n\t\t\"env\",\n\t\t\"publicPath\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"entrypoints\",\n\t\t\"namedChunkGroups\",\n\t\t\"chunks\",\n\t\t\"modules\",\n\t\t\"filteredModules\",\n\t\t\"children\",\n\t\t\"logging\",\n\t\t\"warnings\",\n\t\t\"warningsInChildren!\",\n\t\t\"filteredWarningDetailsCount\",\n\t\t\"errors\",\n\t\t\"errorsInChildren!\",\n\t\t\"filteredErrorDetailsCount\",\n\t\t\"summary!\",\n\t\t\"needAdditionalPass\"\n\t],\n\tasset: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"size\",\n\t\t\"chunks\",\n\t\t\"auxiliaryChunks\",\n\t\t\"emitted\",\n\t\t\"comparedForEmit\",\n\t\t\"cached\",\n\t\t\"info\",\n\t\t\"isOverSizeLimit\",\n\t\t\"chunkNames\",\n\t\t\"auxiliaryChunkNames\",\n\t\t\"chunkIdHints\",\n\t\t\"auxiliaryChunkIdHints\",\n\t\t\"related\",\n\t\t\"filteredRelated\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"asset.info\": [\n\t\t\"immutable\",\n\t\t\"sourceFilename\",\n\t\t\"javascriptModule\",\n\t\t\"development\",\n\t\t\"hotModuleReplacement\"\n\t],\n\tchunkGroup: [\n\t\t\"kind!\",\n\t\t\"name\",\n\t\t\"isOverSizeLimit\",\n\t\t\"assetsSize\",\n\t\t\"auxiliaryAssetsSize\",\n\t\t\"is!\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"auxiliaryAssets\",\n\t\t\"filteredAuxiliaryAssets\",\n\t\t\"separator!\",\n\t\t\"children\"\n\t],\n\tchunkGroupAsset: [\"name\", \"size\"],\n\tchunkGroupChildGroup: [\"type\", \"children\"],\n\tchunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n\tmodule: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"identifier\",\n\t\t\"id\",\n\t\t\"layer\",\n\t\t\"sizes\",\n\t\t\"chunks\",\n\t\t\"depth\",\n\t\t\"cacheable\",\n\t\t\"orphan\",\n\t\t\"runtime\",\n\t\t\"optional\",\n\t\t\"dependent\",\n\t\t\"built\",\n\t\t\"codeGenerated\",\n\t\t\"cached\",\n\t\t\"assets\",\n\t\t\"failed\",\n\t\t\"warnings\",\n\t\t\"errors\",\n\t\t\"children\",\n\t\t\"filteredChildren\",\n\t\t\"providedExports\",\n\t\t\"usedExports\",\n\t\t\"optimizationBailout\",\n\t\t\"reasons\",\n\t\t\"filteredReasons\",\n\t\t\"issuerPath\",\n\t\t\"profile\",\n\t\t\"modules\",\n\t\t\"filteredModules\"\n\t],\n\tmoduleReason: [\n\t\t\"active\",\n\t\t\"type\",\n\t\t\"userRequest\",\n\t\t\"moduleId\",\n\t\t\"module\",\n\t\t\"resolvedModule\",\n\t\t\"loc\",\n\t\t\"explanation\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"module.profile\": [\n\t\t\"total\",\n\t\t\"separator!\",\n\t\t\"resolving\",\n\t\t\"restoring\",\n\t\t\"integration\",\n\t\t\"building\",\n\t\t\"storing\",\n\t\t\"additionalResolving\",\n\t\t\"additionalIntegration\"\n\t],\n\tchunk: [\n\t\t\"id\",\n\t\t\"runtime\",\n\t\t\"files\",\n\t\t\"names\",\n\t\t\"idHints\",\n\t\t\"sizes\",\n\t\t\"parents\",\n\t\t\"siblings\",\n\t\t\"children\",\n\t\t\"childrenByOrder\",\n\t\t\"entry\",\n\t\t\"initial\",\n\t\t\"rendered\",\n\t\t\"recorded\",\n\t\t\"reason\",\n\t\t\"separator!\",\n\t\t\"origins\",\n\t\t\"separator!\",\n\t\t\"modules\",\n\t\t\"separator!\",\n\t\t\"filteredModules\"\n\t],\n\tchunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n\terror: ERROR_PREFERRED_ORDER,\n\twarning: ERROR_PREFERRED_ORDER,\n\t\"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n\tloggingGroup: [\n\t\t\"debug\",\n\t\t\"name\",\n\t\t\"separator!\",\n\t\t\"entries\",\n\t\t\"separator!\",\n\t\t\"filteredEntries\"\n\t],\n\tloggingEntry: [\"message\", \"trace\", \"children\"]\n};\n\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items =>\n\titems.length > 0\n\t\t? `(${name}: ${items.filter(Boolean).join(\", \")})`\n\t\t: undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n\t\"chunk.parents\": itemsJoinOneLine,\n\t\"chunk.siblings\": itemsJoinOneLine,\n\t\"chunk.children\": itemsJoinOneLine,\n\t\"chunk.names\": itemsJoinCommaBrackets,\n\t\"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n\t\"chunk.files\": itemsJoinComma,\n\t\"chunk.childrenByOrder\": itemsJoinOneLine,\n\t\"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n\t\"chunkGroup.assets\": itemsJoinOneLine,\n\t\"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"chunkGroupChildGroup.children\": itemsJoinComma,\n\t\"chunkGroupChild.assets\": itemsJoinOneLine,\n\t\"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"asset.chunks\": itemsJoinComma,\n\t\"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n\t\"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n\t\"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n\t\"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"asset.auxiliaryChunkIdHints\":\n\t\titemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n\t\"module.chunks\": itemsJoinOneLine,\n\t\"module.issuerPath\": items =>\n\t\titems\n\t\t\t.filter(Boolean)\n\t\t\t.map(item => `${item} ->`)\n\t\t\t.join(\" \"),\n\t\"compilation.errors\": itemsJoinMoreSpacing,\n\t\"compilation.warnings\": itemsJoinMoreSpacing,\n\t\"compilation.logging\": itemsJoinMoreSpacing,\n\t\"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n\t\"moduleTraceItem.dependencies\": itemsJoinOneLine,\n\t\"loggingEntry.children\": items =>\n\t\tindent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\n\nconst joinOneLine = items =>\n\titems\n\t\t.map(item => item.content)\n\t\t.filter(Boolean)\n\t\t.join(\" \");\n\nconst joinInBrackets = items => {\n\tconst res = [];\n\tlet mode = 0;\n\tfor (const item of items) {\n\t\tif (item.element === \"separator!\") {\n\t\t\tswitch (mode) {\n\t\t\t\tcase 0:\n\t\t\t\tcase 1:\n\t\t\t\t\tmode += 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tres.push(\")\");\n\t\t\t\t\tmode = 3;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!item.content) continue;\n\t\tswitch (mode) {\n\t\t\tcase 0:\n\t\t\t\tmode = 1;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tres.push(\" \");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tres.push(\"(\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tres.push(\" (\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tres.push(\", \");\n\t\t\t\tbreak;\n\t\t}\n\t\tres.push(item.content);\n\t}\n\tif (mode === 4) res.push(\")\");\n\treturn res.join(\"\");\n};\n\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n\tconst rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n\tif (noPrefixInFirstLine) return rem;\n\tconst ind = str[0] === \"\\n\" ? \"\" : prefix;\n\treturn ind + rem;\n};\n\nconst joinExplicitNewLine = (items, indenter) => {\n\tlet firstInLine = true;\n\tlet first = true;\n\treturn items\n\t\t.map(item => {\n\t\t\tif (!item || !item.content) return;\n\t\t\tlet content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n\t\t\tif (firstInLine) {\n\t\t\t\tcontent = content.replace(/^\\n+/, \"\");\n\t\t\t}\n\t\t\tif (!content) return;\n\t\t\tfirst = false;\n\t\t\tconst noJoiner = firstInLine || content.startsWith(\"\\n\");\n\t\t\tfirstInLine = content.endsWith(\"\\n\");\n\t\t\treturn noJoiner ? content : \" \" + content;\n\t\t})\n\t\t.filter(Boolean)\n\t\t.join(\"\")\n\t\t.trim();\n};\n\nconst joinError =\n\terror =>\n\t(items, { red, yellow }) =>\n\t\t`${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(\n\t\t\titems,\n\t\t\t\"\"\n\t\t)}`;\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n\tcompilation: items => {\n\t\tconst result = [];\n\t\tlet lastNeedMore = false;\n\t\tfor (const item of items) {\n\t\t\tif (!item.content) continue;\n\t\t\tconst needMoreSpace =\n\t\t\t\titem.element === \"warnings\" ||\n\t\t\t\titem.element === \"filteredWarningDetailsCount\" ||\n\t\t\t\titem.element === \"errors\" ||\n\t\t\t\titem.element === \"filteredErrorDetailsCount\" ||\n\t\t\t\titem.element === \"logging\";\n\t\t\tif (result.length !== 0) {\n\t\t\t\tresult.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n\t\t\t}\n\t\t\tresult.push(item.content);\n\t\t\tlastNeedMore = needMoreSpace;\n\t\t}\n\t\tif (lastNeedMore) result.push(\"\\n\");\n\t\treturn result.join(\"\");\n\t},\n\tasset: items =>\n\t\tjoinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tif (\n\t\t\t\t\t(item.element === \"related\" || item.element === \"children\") &&\n\t\t\t\t\titem.content\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t),\n\t\"asset.info\": joinOneLine,\n\tmodule: (items, { module }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"id\":\n\t\t\t\t\t\tif (module.id === module.name) {\n\t\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"providedExports\":\n\t\t\t\t\tcase \"usedExports\":\n\t\t\t\t\tcase \"optimizationBailout\":\n\t\t\t\t\tcase \"reasons\":\n\t\t\t\t\tcase \"issuerPath\":\n\t\t\t\t\tcase \"profile\":\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\tcase \"modules\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\tchunk: items => {\n\t\tlet hasEntry = false;\n\t\treturn (\n\t\t\t\"chunk \" +\n\t\t\tjoinExplicitNewLine(\n\t\t\t\titems.filter(item => {\n\t\t\t\t\tswitch (item.element) {\n\t\t\t\t\t\tcase \"entry\":\n\t\t\t\t\t\t\tif (item.content) hasEntry = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"initial\":\n\t\t\t\t\t\t\tif (hasEntry) return false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}),\n\t\t\t\t\"  \"\n\t\t\t)\n\t\t);\n\t},\n\t\"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n\tchunkGroup: items => joinExplicitNewLine(items, \"  \"),\n\tchunkGroupAsset: joinOneLine,\n\tchunkGroupChildGroup: joinOneLine,\n\tchunkGroupChild: joinOneLine,\n\t// moduleReason: (items, { moduleReason }) => {\n\t// \tlet hasName = false;\n\t// \treturn joinOneLine(\n\t// \t\titems.filter(item => {\n\t// \t\t\tswitch (item.element) {\n\t// \t\t\t\tcase \"moduleId\":\n\t// \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t// \t\t\t\t\t\thasName = true;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"module\":\n\t// \t\t\t\t\tif (hasName) return false;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"resolvedModule\":\n\t// \t\t\t\t\treturn (\n\t// \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n\t// \t\t\t\t\t\titem.content\n\t// \t\t\t\t\t);\n\t// \t\t\t}\n\t// \t\t\treturn true;\n\t// \t\t})\n\t// \t);\n\t// },\n\tmoduleReason: (items, { moduleReason }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"moduleId\":\n\t\t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t\t\t\t\t\t\thasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"module\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"resolvedModule\":\n\t\t\t\t\t\tif (moduleReason.module === moduleReason.resolvedModule)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\t\"module.profile\": joinInBrackets,\n\tmoduleIssuer: joinOneLine,\n\tchunkOrigin: items => \"> \" + joinOneLine(items),\n\t\"errors[].error\": joinError(true),\n\t\"warnings[].error\": joinError(false),\n\tloggingGroup: items => joinExplicitNewLine(items, \"\").trimEnd(),\n\tmoduleTraceItem: items => \" @ \" + joinOneLine(items),\n\tmoduleTraceDependency: joinOneLine\n};\n\nconst AVAILABLE_COLORS = {\n\tbold: \"\\u001b[1m\",\n\tyellow: \"\\u001b[1m\\u001b[33m\",\n\tred: \"\\u001b[1m\\u001b[31m\",\n\tgreen: \"\\u001b[1m\\u001b[32m\",\n\tcyan: \"\\u001b[1m\\u001b[36m\",\n\tmagenta: \"\\u001b[1m\\u001b[35m\"\n};\n\nconst AVAILABLE_FORMATS = {\n\tformatChunkId: (id, { yellow }, direction) => {\n\t\tswitch (direction) {\n\t\t\tcase \"parent\":\n\t\t\t\treturn `<{${yellow(id)}}>`;\n\t\t\tcase \"sibling\":\n\t\t\t\treturn `={${yellow(id)}}=`;\n\t\t\tcase \"child\":\n\t\t\t\treturn `>{${yellow(id)}}<`;\n\t\t\tdefault:\n\t\t\t\treturn `{${yellow(id)}}`;\n\t\t}\n\t},\n\tformatModuleId: id => `[${id}]`,\n\tformatFilename: (filename, { green, yellow }, oversize) =>\n\t\t(oversize ? yellow : green)(filename),\n\tformatFlag: flag => `[${flag}]`,\n\tformatLayer: layer => `(in ${layer})`,\n\tformatSize: require(\"../SizeFormatHelpers\").formatSize,\n\tformatDateTime: (dateTime, { bold }) => {\n\t\tconst d = new Date(dateTime);\n\t\tconst x = twoDigit;\n\t\tconst date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n\t\tconst time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n\t\treturn `${date} ${bold(time)}`;\n\t},\n\tformatTime: (\n\t\ttime,\n\t\t{ timeReference, bold, green, yellow, red },\n\t\tboldQuantity\n\t) => {\n\t\tconst unit = \" ms\";\n\t\tif (timeReference && time !== timeReference) {\n\t\t\tconst times = [\n\t\t\t\ttimeReference / 2,\n\t\t\t\ttimeReference / 4,\n\t\t\t\ttimeReference / 8,\n\t\t\t\ttimeReference / 16\n\t\t\t];\n\t\t\tif (time < times[3]) return `${time}${unit}`;\n\t\t\telse if (time < times[2]) return bold(`${time}${unit}`);\n\t\t\telse if (time < times[1]) return green(`${time}${unit}`);\n\t\t\telse if (time < times[0]) return yellow(`${time}${unit}`);\n\t\t\telse return red(`${time}${unit}`);\n\t\t} else {\n\t\t\treturn `${boldQuantity ? bold(time) : time}${unit}`;\n\t\t}\n\t},\n\tformatError: (message, { green, yellow, red }) => {\n\t\tif (message.includes(\"\\u001b[\")) return message;\n\t\tconst highlights = [\n\t\t\t{ regExp: /(Did you mean .+)/g, format: green },\n\t\t\t{\n\t\t\t\tregExp: /(Set 'mode' option to 'development' or 'production')/g,\n\t\t\t\tformat: green\n\t\t\t},\n\t\t\t{ regExp: /(\\(module has no exports\\))/g, format: red },\n\t\t\t{ regExp: /\\(possible exports: (.+)\\)/g, format: green },\n\t\t\t{ regExp: /(?:^|\\n)(.* doesn't exist)/g, format: red },\n\t\t\t{ regExp: /('\\w+' option has not been set)/g, format: red },\n\t\t\t{\n\t\t\t\tregExp: /(Emitted value instead of an instance of Error)/g,\n\t\t\t\tformat: yellow\n\t\t\t},\n\t\t\t{ regExp: /(Used? .+ instead)/gi, format: yellow },\n\t\t\t{ regExp: /\\b(deprecated|must|required)\\b/g, format: yellow },\n\t\t\t{\n\t\t\t\tregExp: /\\b(BREAKING CHANGE)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t},\n\t\t\t{\n\t\t\t\tregExp:\n\t\t\t\t\t/\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t}\n\t\t];\n\t\tfor (const { regExp, format } of highlights) {\n\t\t\tmessage = message.replace(regExp, (match, content) => {\n\t\t\t\treturn match.replace(content, format(content));\n\t\t\t});\n\t\t}\n\t\treturn message;\n\t}\n};\n\nconst RESULT_MODIFIER = {\n\t\"module.modules\": result => {\n\t\treturn indent(result, \"| \");\n\t}\n};\n\nconst createOrder = (array, preferredOrder) => {\n\tconst originalArray = array.slice();\n\tconst set = new Set(array);\n\tconst usedSet = new Set();\n\tarray.length = 0;\n\tfor (const element of preferredOrder) {\n\t\tif (element.endsWith(\"!\") || set.has(element)) {\n\t\t\tarray.push(element);\n\t\t\tusedSet.add(element);\n\t\t}\n\t}\n\tfor (const element of originalArray) {\n\t\tif (!usedSet.has(element)) {\n\t\t\tarray.push(element);\n\t\t}\n\t}\n\treturn array;\n};\n\nclass DefaultStatsPrinterPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n\t\t\tcompilation.hooks.statsPrinter.tap(\n\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t(stats, options, context) => {\n\t\t\t\t\t// Put colors into context\n\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t.for(\"compilation\")\n\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n\t\t\t\t\t\t\tfor (const color of Object.keys(AVAILABLE_COLORS)) {\n\t\t\t\t\t\t\t\tlet start;\n\t\t\t\t\t\t\t\tif (options.colors) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors === \"object\" &&\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors[color] === \"string\"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tstart = options.colors[color];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstart = AVAILABLE_COLORS[color];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (start) {\n\t\t\t\t\t\t\t\t\tcontext[color] = str =>\n\t\t\t\t\t\t\t\t\t\t`${start}${\n\t\t\t\t\t\t\t\t\t\t\ttypeof str === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t? str.replace(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`$1${start}`\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t: str\n\t\t\t\t\t\t\t\t\t\t}\\u001b[39m\\u001b[22m`;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext[color] = str => str;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const format of Object.keys(AVAILABLE_FORMATS)) {\n\t\t\t\t\t\t\t\tcontext[format] = (content, ...args) =>\n\t\t\t\t\t\t\t\t\tAVAILABLE_FORMATS[format](content, context, ...args);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext.timeReference = compilation.time;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_PRINTERS)) {\n\t\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) =>\n\t\t\t\t\t\t\t\tSIMPLE_PRINTERS[key](obj, ctx, stats)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(PREFERRED_ORDERS)) {\n\t\t\t\t\t\tconst preferredOrder = PREFERRED_ORDERS[key];\n\t\t\t\t\t\tstats.hooks.sortElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n\t\t\t\t\t\t\t\tcreateOrder(elements, preferredOrder);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(ITEM_NAMES)) {\n\t\t\t\t\t\tconst itemName = ITEM_NAMES[key];\n\t\t\t\t\t\tstats.hooks.getItemName\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t\t\t\t\ttypeof itemName === \"string\" ? () => itemName : itemName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ITEMS_JOINER[key];\n\t\t\t\t\t\tstats.hooks.printItems\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ELEMENT_JOINERS[key];\n\t\t\t\t\t\tstats.hooks.printElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(RESULT_MODIFIER)) {\n\t\t\t\t\t\tconst modifier = RESULT_MODIFIER[key];\n\t\t\t\t\t\tstats.hooks.result\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", modifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = DefaultStatsPrinterPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
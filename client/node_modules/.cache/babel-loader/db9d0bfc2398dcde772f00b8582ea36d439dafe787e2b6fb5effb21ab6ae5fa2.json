{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nclass AMDDefineRuntimeModule extends RuntimeModule {\n  constructor() {\n    super(\"amd define\");\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  generate() {\n    return Template.asString([`${RuntimeGlobals.amdDefine} = function () {`, Template.indent(\"throw new Error('define cannot be used indirect');\"), \"};\"]);\n  }\n}\nclass AMDOptionsRuntimeModule extends RuntimeModule {\n  /**\n   * @param {Record<string, boolean | number | string>} options the AMD options\n   */\n  constructor(options) {\n    super(\"amd options\");\n    this.options = options;\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  generate() {\n    return Template.asString([`${RuntimeGlobals.amdOptions} = ${JSON.stringify(this.options)};`]);\n  }\n}\nexports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;\nexports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","AMDDefineRuntimeModule","constructor","generate","asString","amdDefine","indent","AMDOptionsRuntimeModule","options","amdOptions","JSON","stringify","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/AMDRuntimeModules.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\nclass AMDDefineRuntimeModule extends RuntimeModule {\n\tconstructor() {\n\t\tsuper(\"amd define\");\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\treturn Template.asString([\n\t\t\t`${RuntimeGlobals.amdDefine} = function () {`,\n\t\t\tTemplate.indent(\"throw new Error('define cannot be used indirect');\"),\n\t\t\t\"};\"\n\t\t]);\n\t}\n}\n\nclass AMDOptionsRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {Record<string, boolean | number | string>} options the AMD options\n\t */\n\tconstructor(options) {\n\t\tsuper(\"amd options\");\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\treturn Template.asString([\n\t\t\t`${RuntimeGlobals.amdOptions} = ${JSON.stringify(this.options)};`\n\t\t]);\n\t}\n}\n\nexports.AMDDefineRuntimeModule = AMDDefineRuntimeModule;\nexports.AMDOptionsRuntimeModule = AMDOptionsRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvC,MAAMG,sBAAsB,SAASF,aAAa,CAAC;EAClDG,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,YAAY,CAAC;EACpB;;EAEA;AACD;AACA;EACCC,QAAQA,CAAA,EAAG;IACV,OAAOH,QAAQ,CAACI,QAAQ,CAAC,CACvB,GAAEP,cAAc,CAACQ,SAAU,kBAAiB,EAC7CL,QAAQ,CAACM,MAAM,CAAC,oDAAoD,CAAC,EACrE,IAAI,CACJ,CAAC;EACH;AACD;AAEA,MAAMC,uBAAuB,SAASR,aAAa,CAAC;EACnD;AACD;AACA;EACCG,WAAWA,CAACM,OAAO,EAAE;IACpB,KAAK,CAAC,aAAa,CAAC;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;EACCL,QAAQA,CAAA,EAAG;IACV,OAAOH,QAAQ,CAACI,QAAQ,CAAC,CACvB,GAAEP,cAAc,CAACY,UAAW,MAAKC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACH,OAAO,CAAE,GAAE,CACjE,CAAC;EACH;AACD;AAEAI,OAAO,CAACX,sBAAsB,GAAGA,sBAAsB;AACvDW,OAAO,CAACL,uBAAuB,GAAGA,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
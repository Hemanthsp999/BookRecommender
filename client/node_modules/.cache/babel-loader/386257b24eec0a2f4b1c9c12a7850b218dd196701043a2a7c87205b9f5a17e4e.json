{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst {\n  parseOptions\n} = require(\"../container/options\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\nconst ProvideSharedDependency = require(\"./ProvideSharedDependency\");\nconst ProvideSharedModuleFactory = require(\"./ProvideSharedModuleFactory\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.check.js\"), () => require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.json\"), {\n  name: \"Provide Shared Plugin\",\n  baseDataPath: \"options\"\n});\n\n/**\n * @typedef {Object} ProvideOptions\n * @property {string} shareKey\n * @property {string} shareScope\n * @property {string | undefined | false} version\n * @property {boolean} eager\n */\n\n/** @typedef {Map<string, { config: ProvideOptions, version: string | undefined | false }>} ResolvedProvideMap */\n\nclass ProvideSharedPlugin {\n  /**\n   * @param {ProvideSharedPluginOptions} options options\n   */\n  constructor(options) {\n    validate(options);\n\n    /** @type {[string, ProvideOptions][]} */\n    this._provides = parseOptions(options.provides, item => {\n      if (Array.isArray(item)) throw new Error(\"Unexpected array of provides\");\n      /** @type {ProvideOptions} */\n      const result = {\n        shareKey: item,\n        version: undefined,\n        shareScope: options.shareScope || \"default\",\n        eager: false\n      };\n      return result;\n    }, item => ({\n      shareKey: item.shareKey,\n      version: item.version,\n      shareScope: item.shareScope || options.shareScope || \"default\",\n      eager: !!item.eager\n    }));\n    this._provides.sort((_ref, _ref2) => {\n      let [a] = _ref;\n      let [b] = _ref2;\n      if (a < b) return -1;\n      if (b < a) return 1;\n      return 0;\n    });\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    /** @type {WeakMap<Compilation, ResolvedProvideMap>} */\n    const compilationData = new WeakMap();\n    compiler.hooks.compilation.tap(\"ProvideSharedPlugin\", (compilation, _ref3) => {\n      let {\n        normalModuleFactory\n      } = _ref3;\n      /** @type {ResolvedProvideMap} */\n      const resolvedProvideMap = new Map();\n      /** @type {Map<string, ProvideOptions>} */\n      const matchProvides = new Map();\n      /** @type {Map<string, ProvideOptions>} */\n      const prefixMatchProvides = new Map();\n      for (const [request, config] of this._provides) {\n        if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\|\\.\\.?(\\/|$))/.test(request)) {\n          // relative request\n          resolvedProvideMap.set(request, {\n            config,\n            version: config.version\n          });\n        } else if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\)/.test(request)) {\n          // absolute path\n          resolvedProvideMap.set(request, {\n            config,\n            version: config.version\n          });\n        } else if (request.endsWith(\"/\")) {\n          // module request prefix\n          prefixMatchProvides.set(request, config);\n        } else {\n          // module request\n          matchProvides.set(request, config);\n        }\n      }\n      compilationData.set(compilation, resolvedProvideMap);\n      const provideSharedModule = (key, config, resource, resourceResolveData) => {\n        let version = config.version;\n        if (version === undefined) {\n          let details = \"\";\n          if (!resourceResolveData) {\n            details = `No resolve data provided from resolver.`;\n          } else {\n            const descriptionFileData = resourceResolveData.descriptionFileData;\n            if (!descriptionFileData) {\n              details = \"No description file (usually package.json) found. Add description file with name and version, or manually specify version in shared config.\";\n            } else if (!descriptionFileData.version) {\n              details = `No version in description file (usually package.json). Add version to description file ${resourceResolveData.descriptionFilePath}, or manually specify version in shared config.`;\n            } else {\n              version = descriptionFileData.version;\n            }\n          }\n          if (!version) {\n            const error = new WebpackError(`No version specified and unable to automatically determine one. ${details}`);\n            error.file = `shared module ${key} -> ${resource}`;\n            compilation.warnings.push(error);\n          }\n        }\n        resolvedProvideMap.set(resource, {\n          config,\n          version\n        });\n      };\n      normalModuleFactory.hooks.module.tap(\"ProvideSharedPlugin\", (module, _ref4, resolveData) => {\n        let {\n          resource,\n          resourceResolveData\n        } = _ref4;\n        if (resolvedProvideMap.has(resource)) {\n          return module;\n        }\n        const {\n          request\n        } = resolveData;\n        {\n          const config = matchProvides.get(request);\n          if (config !== undefined) {\n            provideSharedModule(request, config, resource, resourceResolveData);\n            resolveData.cacheable = false;\n          }\n        }\n        for (const [prefix, config] of prefixMatchProvides) {\n          if (request.startsWith(prefix)) {\n            const remainder = request.slice(prefix.length);\n            provideSharedModule(resource, {\n              ...config,\n              shareKey: config.shareKey + remainder\n            }, resource, resourceResolveData);\n            resolveData.cacheable = false;\n          }\n        }\n        return module;\n      });\n    });\n    compiler.hooks.finishMake.tapPromise(\"ProvideSharedPlugin\", compilation => {\n      const resolvedProvideMap = compilationData.get(compilation);\n      if (!resolvedProvideMap) return Promise.resolve();\n      return Promise.all(Array.from(resolvedProvideMap, _ref5 => {\n        let [resource, {\n          config,\n          version\n        }] = _ref5;\n        return new Promise((resolve, reject) => {\n          compilation.addInclude(compiler.context, new ProvideSharedDependency(config.shareScope, config.shareKey, version || false, resource, config.eager), {\n            name: undefined\n          }, err => {\n            if (err) return reject(err);\n            resolve();\n          });\n        });\n      })).then(() => {});\n    });\n    compiler.hooks.compilation.tap(\"ProvideSharedPlugin\", (compilation, _ref6) => {\n      let {\n        normalModuleFactory\n      } = _ref6;\n      compilation.dependencyFactories.set(ProvideForSharedDependency, normalModuleFactory);\n      compilation.dependencyFactories.set(ProvideSharedDependency, new ProvideSharedModuleFactory());\n    });\n  }\n}\nmodule.exports = ProvideSharedPlugin;","map":{"version":3,"names":["WebpackError","require","parseOptions","createSchemaValidation","ProvideForSharedDependency","ProvideSharedDependency","ProvideSharedModuleFactory","validate","name","baseDataPath","ProvideSharedPlugin","constructor","options","_provides","provides","item","Array","isArray","Error","result","shareKey","version","undefined","shareScope","eager","sort","_ref","_ref2","a","b","apply","compiler","compilationData","WeakMap","hooks","compilation","tap","_ref3","normalModuleFactory","resolvedProvideMap","Map","matchProvides","prefixMatchProvides","request","config","test","set","endsWith","provideSharedModule","key","resource","resourceResolveData","details","descriptionFileData","descriptionFilePath","error","file","warnings","push","module","_ref4","resolveData","has","get","cacheable","prefix","startsWith","remainder","slice","length","finishMake","tapPromise","Promise","resolve","all","from","_ref5","reject","addInclude","context","err","then","_ref6","dependencyFactories","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/sharing/ProvideSharedPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst WebpackError = require(\"../WebpackError\");\nconst { parseOptions } = require(\"../container/options\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ProvideForSharedDependency = require(\"./ProvideForSharedDependency\");\nconst ProvideSharedDependency = require(\"./ProvideSharedDependency\");\nconst ProvideSharedModuleFactory = require(\"./ProvideSharedModuleFactory\");\n\n/** @typedef {import(\"../../declarations/plugins/sharing/ProvideSharedPlugin\").ProvideSharedPluginOptions} ProvideSharedPluginOptions */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/sharing/ProvideSharedPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/sharing/ProvideSharedPlugin.json\"),\n\t{\n\t\tname: \"Provide Shared Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\n/**\n * @typedef {Object} ProvideOptions\n * @property {string} shareKey\n * @property {string} shareScope\n * @property {string | undefined | false} version\n * @property {boolean} eager\n */\n\n/** @typedef {Map<string, { config: ProvideOptions, version: string | undefined | false }>} ResolvedProvideMap */\n\nclass ProvideSharedPlugin {\n\t/**\n\t * @param {ProvideSharedPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\t/** @type {[string, ProvideOptions][]} */\n\t\tthis._provides = parseOptions(\n\t\t\toptions.provides,\n\t\t\titem => {\n\t\t\t\tif (Array.isArray(item))\n\t\t\t\t\tthrow new Error(\"Unexpected array of provides\");\n\t\t\t\t/** @type {ProvideOptions} */\n\t\t\t\tconst result = {\n\t\t\t\t\tshareKey: item,\n\t\t\t\t\tversion: undefined,\n\t\t\t\t\tshareScope: options.shareScope || \"default\",\n\t\t\t\t\teager: false\n\t\t\t\t};\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\titem => ({\n\t\t\t\tshareKey: item.shareKey,\n\t\t\t\tversion: item.version,\n\t\t\t\tshareScope: item.shareScope || options.shareScope || \"default\",\n\t\t\t\teager: !!item.eager\n\t\t\t})\n\t\t);\n\t\tthis._provides.sort(([a], [b]) => {\n\t\t\tif (a < b) return -1;\n\t\t\tif (b < a) return 1;\n\t\t\treturn 0;\n\t\t});\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\t/** @type {WeakMap<Compilation, ResolvedProvideMap>} */\n\t\tconst compilationData = new WeakMap();\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvideSharedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/** @type {ResolvedProvideMap} */\n\t\t\t\tconst resolvedProvideMap = new Map();\n\t\t\t\t/** @type {Map<string, ProvideOptions>} */\n\t\t\t\tconst matchProvides = new Map();\n\t\t\t\t/** @type {Map<string, ProvideOptions>} */\n\t\t\t\tconst prefixMatchProvides = new Map();\n\t\t\t\tfor (const [request, config] of this._provides) {\n\t\t\t\t\tif (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\|\\.\\.?(\\/|$))/.test(request)) {\n\t\t\t\t\t\t// relative request\n\t\t\t\t\t\tresolvedProvideMap.set(request, {\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tversion: config.version\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (/^(\\/|[A-Za-z]:\\\\|\\\\\\\\)/.test(request)) {\n\t\t\t\t\t\t// absolute path\n\t\t\t\t\t\tresolvedProvideMap.set(request, {\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\tversion: config.version\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (request.endsWith(\"/\")) {\n\t\t\t\t\t\t// module request prefix\n\t\t\t\t\t\tprefixMatchProvides.set(request, config);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// module request\n\t\t\t\t\t\tmatchProvides.set(request, config);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcompilationData.set(compilation, resolvedProvideMap);\n\t\t\t\tconst provideSharedModule = (\n\t\t\t\t\tkey,\n\t\t\t\t\tconfig,\n\t\t\t\t\tresource,\n\t\t\t\t\tresourceResolveData\n\t\t\t\t) => {\n\t\t\t\t\tlet version = config.version;\n\t\t\t\t\tif (version === undefined) {\n\t\t\t\t\t\tlet details = \"\";\n\t\t\t\t\t\tif (!resourceResolveData) {\n\t\t\t\t\t\t\tdetails = `No resolve data provided from resolver.`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst descriptionFileData =\n\t\t\t\t\t\t\t\tresourceResolveData.descriptionFileData;\n\t\t\t\t\t\t\tif (!descriptionFileData) {\n\t\t\t\t\t\t\t\tdetails =\n\t\t\t\t\t\t\t\t\t\"No description file (usually package.json) found. Add description file with name and version, or manually specify version in shared config.\";\n\t\t\t\t\t\t\t} else if (!descriptionFileData.version) {\n\t\t\t\t\t\t\t\tdetails = `No version in description file (usually package.json). Add version to description file ${resourceResolveData.descriptionFilePath}, or manually specify version in shared config.`;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tversion = descriptionFileData.version;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version) {\n\t\t\t\t\t\t\tconst error = new WebpackError(\n\t\t\t\t\t\t\t\t`No version specified and unable to automatically determine one. ${details}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\terror.file = `shared module ${key} -> ${resource}`;\n\t\t\t\t\t\t\tcompilation.warnings.push(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresolvedProvideMap.set(resource, {\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tversion\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.module.tap(\n\t\t\t\t\t\"ProvideSharedPlugin\",\n\t\t\t\t\t(module, { resource, resourceResolveData }, resolveData) => {\n\t\t\t\t\t\tif (resolvedProvideMap.has(resource)) {\n\t\t\t\t\t\t\treturn module;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { request } = resolveData;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst config = matchProvides.get(request);\n\t\t\t\t\t\t\tif (config !== undefined) {\n\t\t\t\t\t\t\t\tprovideSharedModule(\n\t\t\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tresourceResolveData\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolveData.cacheable = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const [prefix, config] of prefixMatchProvides) {\n\t\t\t\t\t\t\tif (request.startsWith(prefix)) {\n\t\t\t\t\t\t\t\tconst remainder = request.slice(prefix.length);\n\t\t\t\t\t\t\t\tprovideSharedModule(\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...config,\n\t\t\t\t\t\t\t\t\t\tshareKey: config.shareKey + remainder\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tresourceResolveData\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolveData.cacheable = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn module;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tcompiler.hooks.finishMake.tapPromise(\"ProvideSharedPlugin\", compilation => {\n\t\t\tconst resolvedProvideMap = compilationData.get(compilation);\n\t\t\tif (!resolvedProvideMap) return Promise.resolve();\n\t\t\treturn Promise.all(\n\t\t\t\tArray.from(\n\t\t\t\t\tresolvedProvideMap,\n\t\t\t\t\t([resource, { config, version }]) =>\n\t\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\t\tcompilation.addInclude(\n\t\t\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\t\t\tnew ProvideSharedDependency(\n\t\t\t\t\t\t\t\t\tconfig.shareScope,\n\t\t\t\t\t\t\t\t\tconfig.shareKey,\n\t\t\t\t\t\t\t\t\tversion || false,\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tconfig.eager\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: undefined\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\tif (err) return reject(err);\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t).then(() => {});\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvideSharedPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvideForSharedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvideSharedDependency,\n\t\t\t\t\tnew ProvideSharedModuleFactory()\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ProvideSharedPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Service = void 0;\nconst os_1 = __importDefault(require(\"os\"));\nconst dns_txt_1 = __importDefault(require(\"./dns-txt\"));\nconst events_1 = require(\"events\");\nconst service_types_1 = require(\"./service-types\");\nconst TLD = '.local';\nclass Service extends events_1.EventEmitter {\n  constructor(config) {\n    super();\n    this.probe = true;\n    this.published = false;\n    this.activated = false;\n    this.destroyed = false;\n    this.txtService = new dns_txt_1.default();\n    if (!config.name) throw new Error('ServiceConfig requires `name` property to be set');\n    if (!config.type) throw new Error('ServiceConfig requires `type` property to be set');\n    if (!config.port) throw new Error('ServiceConfig requires `port` property to be set');\n    this.name = config.name.split('.').join('-');\n    this.protocol = config.protocol || 'tcp';\n    this.type = (0, service_types_1.toString)({\n      name: config.type,\n      protocol: this.protocol\n    });\n    this.port = config.port;\n    this.host = config.host || os_1.default.hostname();\n    this.fqdn = `${this.name}.${this.type}${TLD}`;\n    this.txt = config.txt;\n    this.subtypes = config.subtypes;\n  }\n  records() {\n    var records = [this.RecordPTR(this), this.RecordSRV(this), this.RecordTXT(this)];\n    for (let subtype of this.subtypes || []) {\n      records.push(this.RecordSubtypePTR(this, subtype));\n    }\n    let ifaces = Object.values(os_1.default.networkInterfaces());\n    for (let iface of ifaces) {\n      let addrs = iface;\n      for (let addr of addrs) {\n        if (addr.internal || addr.mac === '00:00:00:00:00:00') continue;\n        switch (addr.family) {\n          case 'IPv4':\n            records.push(this.RecordA(this, addr.address));\n            break;\n          case 'IPv6':\n            records.push(this.RecordAAAA(this, addr.address));\n            break;\n        }\n      }\n    }\n    return records;\n  }\n  RecordPTR(service) {\n    return {\n      name: `${service.type}${TLD}`,\n      type: 'PTR',\n      ttl: 28800,\n      data: service.fqdn\n    };\n  }\n  RecordSubtypePTR(service, subtype) {\n    return {\n      name: `_${subtype}._sub.${service.type}${TLD}`,\n      type: 'PTR',\n      ttl: 28800,\n      data: `${service.name}.${service.type}${TLD}`\n    };\n  }\n  RecordSRV(service) {\n    return {\n      name: service.fqdn,\n      type: 'SRV',\n      ttl: 120,\n      data: {\n        port: service.port,\n        target: service.host\n      }\n    };\n  }\n  RecordTXT(service) {\n    return {\n      name: service.fqdn,\n      type: 'TXT',\n      ttl: 4500,\n      data: this.txtService.encode(service.txt)\n    };\n  }\n  RecordA(service, ip) {\n    return {\n      name: service.host,\n      type: 'A',\n      ttl: 120,\n      data: ip\n    };\n  }\n  RecordAAAA(service, ip) {\n    return {\n      name: service.host,\n      type: 'AAAA',\n      ttl: 120,\n      data: ip\n    };\n  }\n}\nexports.Service = Service;\nexports.default = Service;","map":{"version":3,"names":["os_1","__importDefault","require","dns_txt_1","events_1","service_types_1","TLD","Service","EventEmitter","constructor","config","probe","published","activated","destroyed","txtService","default","name","Error","type","port","split","join","protocol","toString","host","hostname","fqdn","txt","subtypes","records","RecordPTR","RecordSRV","RecordTXT","subtype","push","RecordSubtypePTR","ifaces","Object","values","networkInterfaces","iface","addrs","addr","internal","mac","family","RecordA","address","RecordAAAA","service","ttl","data","target","encode","ip","exports"],"sources":["../../src/lib/service.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst NormalModule = require(\"./NormalModule\");\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass AutomaticPrefetchPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"AutomaticPrefetchPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\n    });\n    let lastModules = null;\n    compiler.hooks.afterCompile.tap(\"AutomaticPrefetchPlugin\", compilation => {\n      lastModules = [];\n      for (const m of compilation.modules) {\n        if (m instanceof NormalModule) {\n          lastModules.push({\n            context: m.context,\n            request: m.request\n          });\n        }\n      }\n    });\n    compiler.hooks.make.tapAsync(\"AutomaticPrefetchPlugin\", (compilation, callback) => {\n      if (!lastModules) return callback();\n      asyncLib.forEach(lastModules, (m, callback) => {\n        compilation.addModuleChain(m.context || compiler.context, new PrefetchDependency(`!!${m.request}`), callback);\n      }, err => {\n        lastModules = null;\n        callback(err);\n      });\n    });\n  }\n}\nmodule.exports = AutomaticPrefetchPlugin;","map":{"version":3,"names":["asyncLib","require","NormalModule","PrefetchDependency","AutomaticPrefetchPlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","dependencyFactories","set","lastModules","afterCompile","m","modules","push","context","request","make","tapAsync","callback","forEach","addModuleChain","err","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/AutomaticPrefetchPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst NormalModule = require(\"./NormalModule\");\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass AutomaticPrefetchPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AutomaticPrefetchPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tPrefetchDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tlet lastModules = null;\n\t\tcompiler.hooks.afterCompile.tap(\"AutomaticPrefetchPlugin\", compilation => {\n\t\t\tlastModules = [];\n\n\t\t\tfor (const m of compilation.modules) {\n\t\t\t\tif (m instanceof NormalModule) {\n\t\t\t\t\tlastModules.push({\n\t\t\t\t\t\tcontext: m.context,\n\t\t\t\t\t\trequest: m.request\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"AutomaticPrefetchPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tif (!lastModules) return callback();\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tlastModules,\n\t\t\t\t\t(m, callback) => {\n\t\t\t\t\t\tcompilation.addModuleChain(\n\t\t\t\t\t\t\tm.context || compiler.context,\n\t\t\t\t\t\t\tnew PrefetchDependency(`!!${m.request}`),\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tlastModules = null;\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = AutomaticPrefetchPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAME,kBAAkB,GAAGF,OAAO,CAAC,mCAAmC,CAAC;;AAEvE;;AAEA,MAAMG,uBAAuB,CAAC;EAC7B;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,yBAAyB,EACzB,CAACD,WAAW,EAAAE,IAAA,KAA8B;MAAA,IAA5B;QAAEC;MAAoB,CAAC,GAAAD,IAAA;MACpCF,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCV,kBAAkB,EAClBQ,mBACD,CAAC;IACF,CACD,CAAC;IACD,IAAIG,WAAW,GAAG,IAAI;IACtBR,QAAQ,CAACC,KAAK,CAACQ,YAAY,CAACN,GAAG,CAAC,yBAAyB,EAAED,WAAW,IAAI;MACzEM,WAAW,GAAG,EAAE;MAEhB,KAAK,MAAME,CAAC,IAAIR,WAAW,CAACS,OAAO,EAAE;QACpC,IAAID,CAAC,YAAYd,YAAY,EAAE;UAC9BY,WAAW,CAACI,IAAI,CAAC;YAChBC,OAAO,EAAEH,CAAC,CAACG,OAAO;YAClBC,OAAO,EAAEJ,CAAC,CAACI;UACZ,CAAC,CAAC;QACH;MACD;IACD,CAAC,CAAC;IACFd,QAAQ,CAACC,KAAK,CAACc,IAAI,CAACC,QAAQ,CAC3B,yBAAyB,EACzB,CAACd,WAAW,EAAEe,QAAQ,KAAK;MAC1B,IAAI,CAACT,WAAW,EAAE,OAAOS,QAAQ,CAAC,CAAC;MACnCvB,QAAQ,CAACwB,OAAO,CACfV,WAAW,EACX,CAACE,CAAC,EAAEO,QAAQ,KAAK;QAChBf,WAAW,CAACiB,cAAc,CACzBT,CAAC,CAACG,OAAO,IAAIb,QAAQ,CAACa,OAAO,EAC7B,IAAIhB,kBAAkB,CAAE,KAAIa,CAAC,CAACI,OAAQ,EAAC,CAAC,EACxCG,QACD,CAAC;MACF,CAAC,EACDG,GAAG,IAAI;QACNZ,WAAW,GAAG,IAAI;QAClBS,QAAQ,CAACG,GAAG,CAAC;MACd,CACD,CAAC;IACF,CACD,CAAC;EACF;AACD;AACAC,MAAM,CAACC,OAAO,GAAGxB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
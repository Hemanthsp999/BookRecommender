{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst {\n  RawSource,\n  ReplaceSource\n} = require(\"webpack-sources\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n// TODO: clean up this file\n// replace with newer constructs\n\nconst deprecatedGetInitFragments = util.deprecate((template, dependency, templateContext) => template.getInitFragments(dependency, templateContext), \"DependencyTemplate.getInitFragment is deprecated (use apply(dep, source, { initFragments }) instead)\", \"DEP_WEBPACK_JAVASCRIPT_GENERATOR_GET_INIT_FRAGMENTS\");\nconst TYPES = new Set([\"javascript\"]);\nclass JavascriptGenerator extends Generator {\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {Set<string>} available types (do not mutate)\n   */\n  getTypes(module) {\n    return TYPES;\n  }\n\n  /**\n   * @param {NormalModule} module the module\n   * @param {string=} type source type\n   * @returns {number} estimate size of the module\n   */\n  getSize(module, type) {\n    const originalSource = module.originalSource();\n    if (!originalSource) {\n      return 39;\n    }\n    return originalSource.size();\n  }\n\n  /**\n   * @param {NormalModule} module module for which the bailout reason should be determined\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n  getConcatenationBailoutReason(module, context) {\n    // Only harmony modules are valid for optimization\n    if (!module.buildMeta || module.buildMeta.exportsType !== \"namespace\" || module.presentationalDependencies === undefined || !module.presentationalDependencies.some(d => d instanceof HarmonyCompatibilityDependency)) {\n      return \"Module is not an ECMAScript module\";\n    }\n\n    // Some expressions are not compatible with module concatenation\n    // because they may produce unexpected results. The plugin bails out\n    // if some were detected upfront.\n    if (module.buildInfo && module.buildInfo.moduleConcatenationBailout) {\n      return `Module uses ${module.buildInfo.moduleConcatenationBailout}`;\n    }\n  }\n\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {GenerateContext} generateContext context for generate\n   * @returns {Source} generated code\n   */\n  generate(module, generateContext) {\n    const originalSource = module.originalSource();\n    if (!originalSource) {\n      return new RawSource(\"throw new Error('No source available');\");\n    }\n    const source = new ReplaceSource(originalSource);\n    const initFragments = [];\n    this.sourceModule(module, initFragments, source, generateContext);\n    return InitFragment.addToSource(source, initFragments, generateContext);\n  }\n\n  /**\n   * @param {Module} module the module to generate\n   * @param {InitFragment[]} initFragments mutable list of init fragments\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {GenerateContext} generateContext the generateContext\n   * @returns {void}\n   */\n  sourceModule(module, initFragments, source, generateContext) {\n    for (const dependency of module.dependencies) {\n      this.sourceDependency(module, dependency, initFragments, source, generateContext);\n    }\n    if (module.presentationalDependencies !== undefined) {\n      for (const dependency of module.presentationalDependencies) {\n        this.sourceDependency(module, dependency, initFragments, source, generateContext);\n      }\n    }\n    for (const childBlock of module.blocks) {\n      this.sourceBlock(module, childBlock, initFragments, source, generateContext);\n    }\n  }\n\n  /**\n   * @param {Module} module the module to generate\n   * @param {DependenciesBlock} block the dependencies block which will be processed\n   * @param {InitFragment[]} initFragments mutable list of init fragments\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {GenerateContext} generateContext the generateContext\n   * @returns {void}\n   */\n  sourceBlock(module, block, initFragments, source, generateContext) {\n    for (const dependency of block.dependencies) {\n      this.sourceDependency(module, dependency, initFragments, source, generateContext);\n    }\n    for (const childBlock of block.blocks) {\n      this.sourceBlock(module, childBlock, initFragments, source, generateContext);\n    }\n  }\n\n  /**\n   * @param {Module} module the current module\n   * @param {Dependency} dependency the dependency to generate\n   * @param {InitFragment[]} initFragments mutable list of init fragments\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {GenerateContext} generateContext the render context\n   * @returns {void}\n   */\n  sourceDependency(module, dependency, initFragments, source, generateContext) {\n    const constructor = /** @type {new (...args: any[]) => Dependency} */\n    dependency.constructor;\n    const template = generateContext.dependencyTemplates.get(constructor);\n    if (!template) {\n      throw new Error(\"No template for dependency: \" + dependency.constructor.name);\n    }\n    const templateContext = {\n      runtimeTemplate: generateContext.runtimeTemplate,\n      dependencyTemplates: generateContext.dependencyTemplates,\n      moduleGraph: generateContext.moduleGraph,\n      chunkGraph: generateContext.chunkGraph,\n      module,\n      runtime: generateContext.runtime,\n      runtimeRequirements: generateContext.runtimeRequirements,\n      concatenationScope: generateContext.concatenationScope,\n      codeGenerationResults: generateContext.codeGenerationResults,\n      initFragments\n    };\n    template.apply(dependency, source, templateContext);\n\n    // TODO remove in webpack 6\n    if (\"getInitFragments\" in template) {\n      const fragments = deprecatedGetInitFragments(template, dependency, templateContext);\n      if (fragments) {\n        for (const fragment of fragments) {\n          initFragments.push(fragment);\n        }\n      }\n    }\n  }\n}\nmodule.exports = JavascriptGenerator;","map":{"version":3,"names":["util","require","RawSource","ReplaceSource","Generator","InitFragment","HarmonyCompatibilityDependency","deprecatedGetInitFragments","deprecate","template","dependency","templateContext","getInitFragments","TYPES","Set","JavascriptGenerator","getTypes","module","getSize","type","originalSource","size","getConcatenationBailoutReason","context","buildMeta","exportsType","presentationalDependencies","undefined","some","d","buildInfo","moduleConcatenationBailout","generate","generateContext","source","initFragments","sourceModule","addToSource","dependencies","sourceDependency","childBlock","blocks","sourceBlock","block","constructor","dependencyTemplates","get","Error","name","runtimeTemplate","moduleGraph","chunkGraph","runtime","runtimeRequirements","concatenationScope","codeGenerationResults","apply","fragments","fragment","push","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/javascript/JavascriptGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst { RawSource, ReplaceSource } = require(\"webpack-sources\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n// TODO: clean up this file\n// replace with newer constructs\n\nconst deprecatedGetInitFragments = util.deprecate(\n\t(template, dependency, templateContext) =>\n\t\ttemplate.getInitFragments(dependency, templateContext),\n\t\"DependencyTemplate.getInitFragment is deprecated (use apply(dep, source, { initFragments }) instead)\",\n\t\"DEP_WEBPACK_JAVASCRIPT_GENERATOR_GET_INIT_FRAGMENTS\"\n);\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass JavascriptGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\tconst originalSource = module.originalSource();\n\t\tif (!originalSource) {\n\t\t\treturn 39;\n\t\t}\n\t\treturn originalSource.size();\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the bailout reason should be determined\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(module, context) {\n\t\t// Only harmony modules are valid for optimization\n\t\tif (\n\t\t\t!module.buildMeta ||\n\t\t\tmodule.buildMeta.exportsType !== \"namespace\" ||\n\t\t\tmodule.presentationalDependencies === undefined ||\n\t\t\t!module.presentationalDependencies.some(\n\t\t\t\td => d instanceof HarmonyCompatibilityDependency\n\t\t\t)\n\t\t) {\n\t\t\treturn \"Module is not an ECMAScript module\";\n\t\t}\n\n\t\t// Some expressions are not compatible with module concatenation\n\t\t// because they may produce unexpected results. The plugin bails out\n\t\t// if some were detected upfront.\n\t\tif (module.buildInfo && module.buildInfo.moduleConcatenationBailout) {\n\t\t\treturn `Module uses ${module.buildInfo.moduleConcatenationBailout}`;\n\t\t}\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\tconst originalSource = module.originalSource();\n\t\tif (!originalSource) {\n\t\t\treturn new RawSource(\"throw new Error('No source available');\");\n\t\t}\n\n\t\tconst source = new ReplaceSource(originalSource);\n\t\tconst initFragments = [];\n\n\t\tthis.sourceModule(module, initFragments, source, generateContext);\n\n\t\treturn InitFragment.addToSource(source, initFragments, generateContext);\n\t}\n\n\t/**\n\t * @param {Module} module the module to generate\n\t * @param {InitFragment[]} initFragments mutable list of init fragments\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {GenerateContext} generateContext the generateContext\n\t * @returns {void}\n\t */\n\tsourceModule(module, initFragments, source, generateContext) {\n\t\tfor (const dependency of module.dependencies) {\n\t\t\tthis.sourceDependency(\n\t\t\t\tmodule,\n\t\t\t\tdependency,\n\t\t\t\tinitFragments,\n\t\t\t\tsource,\n\t\t\t\tgenerateContext\n\t\t\t);\n\t\t}\n\n\t\tif (module.presentationalDependencies !== undefined) {\n\t\t\tfor (const dependency of module.presentationalDependencies) {\n\t\t\t\tthis.sourceDependency(\n\t\t\t\t\tmodule,\n\t\t\t\t\tdependency,\n\t\t\t\t\tinitFragments,\n\t\t\t\t\tsource,\n\t\t\t\t\tgenerateContext\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const childBlock of module.blocks) {\n\t\t\tthis.sourceBlock(\n\t\t\t\tmodule,\n\t\t\t\tchildBlock,\n\t\t\t\tinitFragments,\n\t\t\t\tsource,\n\t\t\t\tgenerateContext\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module the module to generate\n\t * @param {DependenciesBlock} block the dependencies block which will be processed\n\t * @param {InitFragment[]} initFragments mutable list of init fragments\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {GenerateContext} generateContext the generateContext\n\t * @returns {void}\n\t */\n\tsourceBlock(module, block, initFragments, source, generateContext) {\n\t\tfor (const dependency of block.dependencies) {\n\t\t\tthis.sourceDependency(\n\t\t\t\tmodule,\n\t\t\t\tdependency,\n\t\t\t\tinitFragments,\n\t\t\t\tsource,\n\t\t\t\tgenerateContext\n\t\t\t);\n\t\t}\n\n\t\tfor (const childBlock of block.blocks) {\n\t\t\tthis.sourceBlock(\n\t\t\t\tmodule,\n\t\t\t\tchildBlock,\n\t\t\t\tinitFragments,\n\t\t\t\tsource,\n\t\t\t\tgenerateContext\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module the current module\n\t * @param {Dependency} dependency the dependency to generate\n\t * @param {InitFragment[]} initFragments mutable list of init fragments\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {GenerateContext} generateContext the render context\n\t * @returns {void}\n\t */\n\tsourceDependency(module, dependency, initFragments, source, generateContext) {\n\t\tconst constructor = /** @type {new (...args: any[]) => Dependency} */ (\n\t\t\tdependency.constructor\n\t\t);\n\t\tconst template = generateContext.dependencyTemplates.get(constructor);\n\t\tif (!template) {\n\t\t\tthrow new Error(\n\t\t\t\t\"No template for dependency: \" + dependency.constructor.name\n\t\t\t);\n\t\t}\n\n\t\tconst templateContext = {\n\t\t\truntimeTemplate: generateContext.runtimeTemplate,\n\t\t\tdependencyTemplates: generateContext.dependencyTemplates,\n\t\t\tmoduleGraph: generateContext.moduleGraph,\n\t\t\tchunkGraph: generateContext.chunkGraph,\n\t\t\tmodule,\n\t\t\truntime: generateContext.runtime,\n\t\t\truntimeRequirements: generateContext.runtimeRequirements,\n\t\t\tconcatenationScope: generateContext.concatenationScope,\n\t\t\tcodeGenerationResults: generateContext.codeGenerationResults,\n\t\t\tinitFragments\n\t\t};\n\n\t\ttemplate.apply(dependency, source, templateContext);\n\n\t\t// TODO remove in webpack 6\n\t\tif (\"getInitFragments\" in template) {\n\t\t\tconst fragments = deprecatedGetInitFragments(\n\t\t\t\ttemplate,\n\t\t\t\tdependency,\n\t\t\t\ttemplateContext\n\t\t\t);\n\n\t\t\tif (fragments) {\n\t\t\t\tfor (const fragment of fragments) {\n\t\t\t\t\tinitFragments.push(fragment);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = JavascriptGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
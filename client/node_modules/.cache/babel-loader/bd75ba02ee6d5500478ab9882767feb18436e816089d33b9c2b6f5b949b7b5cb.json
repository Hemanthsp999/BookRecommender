{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nvar _BaseWorkerPool = _interopRequireDefault(require('./base/BaseWorkerPool'));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst canUseWorkerThreads = () => {\n  try {\n    require('worker_threads');\n    return true;\n  } catch {\n    return false;\n  }\n};\nclass WorkerPool extends _BaseWorkerPool.default {\n  send(workerId, request, onStart, onEnd, onCustomMessage) {\n    this.getWorkerById(workerId).send(request, onStart, onEnd, onCustomMessage);\n  }\n  createWorker(workerOptions) {\n    let Worker;\n    if (this._options.enableWorkerThreads && canUseWorkerThreads()) {\n      Worker = require('./workers/NodeThreadsWorker').default;\n    } else {\n      Worker = require('./workers/ChildProcessWorker').default;\n    }\n    return new Worker(workerOptions);\n  }\n}\nvar _default = WorkerPool;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_BaseWorkerPool","_interopRequireDefault","require","obj","__esModule","canUseWorkerThreads","WorkerPool","send","workerId","request","onStart","onEnd","onCustomMessage","getWorkerById","createWorker","workerOptions","Worker","_options","enableWorkerThreads","_default"],"sources":["/home/hemanth/react-project/client/node_modules/jest-worker/build/WorkerPool.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _BaseWorkerPool = _interopRequireDefault(require('./base/BaseWorkerPool'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst canUseWorkerThreads = () => {\n  try {\n    require('worker_threads');\n\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nclass WorkerPool extends _BaseWorkerPool.default {\n  send(workerId, request, onStart, onEnd, onCustomMessage) {\n    this.getWorkerById(workerId).send(request, onStart, onEnd, onCustomMessage);\n  }\n\n  createWorker(workerOptions) {\n    let Worker;\n\n    if (this._options.enableWorkerThreads && canUseWorkerThreads()) {\n      Worker = require('./workers/NodeThreadsWorker').default;\n    } else {\n      Worker = require('./workers/ChildProcessWorker').default;\n    }\n\n    return new Worker(workerOptions);\n  }\n}\n\nvar _default = WorkerPool;\nexports.default = _default;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,eAAe,GAAGC,sBAAsB,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAE9E,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAACJ,OAAO,EAAEI;EAAG,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;EAChC,IAAI;IACFH,OAAO,CAAC,gBAAgB,CAAC;IAEzB,OAAO,IAAI;EACb,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMI,UAAU,SAASN,eAAe,CAACD,OAAO,CAAC;EAC/CQ,IAAIA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,eAAe,EAAE;IACvD,IAAI,CAACC,aAAa,CAACL,QAAQ,CAAC,CAACD,IAAI,CAACE,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,eAAe,CAAC;EAC7E;EAEAE,YAAYA,CAACC,aAAa,EAAE;IAC1B,IAAIC,MAAM;IAEV,IAAI,IAAI,CAACC,QAAQ,CAACC,mBAAmB,IAAIb,mBAAmB,CAAC,CAAC,EAAE;MAC9DW,MAAM,GAAGd,OAAO,CAAC,6BAA6B,CAAC,CAACH,OAAO;IACzD,CAAC,MAAM;MACLiB,MAAM,GAAGd,OAAO,CAAC,8BAA8B,CAAC,CAACH,OAAO;IAC1D;IAEA,OAAO,IAAIiB,MAAM,CAACD,aAAa,CAAC;EAClC;AACF;AAEA,IAAII,QAAQ,GAAGb,UAAU;AACzBT,OAAO,CAACE,OAAO,GAAGoB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
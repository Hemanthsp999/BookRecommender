{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst {\n  getChunkFilenameTemplate\n} = require(\"./css/CssModulesPlugin\");\nconst RuntimeRequirementsDependency = require(\"./dependencies/RuntimeRequirementsDependency\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\nconst AsyncModuleRuntimeModule = require(\"./runtime/AsyncModuleRuntimeModule\");\nconst AutoPublicPathRuntimeModule = require(\"./runtime/AutoPublicPathRuntimeModule\");\nconst BaseUriRuntimeModule = require(\"./runtime/BaseUriRuntimeModule\");\nconst CompatGetDefaultExportRuntimeModule = require(\"./runtime/CompatGetDefaultExportRuntimeModule\");\nconst CompatRuntimeModule = require(\"./runtime/CompatRuntimeModule\");\nconst CreateFakeNamespaceObjectRuntimeModule = require(\"./runtime/CreateFakeNamespaceObjectRuntimeModule\");\nconst CreateScriptRuntimeModule = require(\"./runtime/CreateScriptRuntimeModule\");\nconst CreateScriptUrlRuntimeModule = require(\"./runtime/CreateScriptUrlRuntimeModule\");\nconst DefinePropertyGettersRuntimeModule = require(\"./runtime/DefinePropertyGettersRuntimeModule\");\nconst EnsureChunkRuntimeModule = require(\"./runtime/EnsureChunkRuntimeModule\");\nconst GetChunkFilenameRuntimeModule = require(\"./runtime/GetChunkFilenameRuntimeModule\");\nconst GetMainFilenameRuntimeModule = require(\"./runtime/GetMainFilenameRuntimeModule\");\nconst GetTrustedTypesPolicyRuntimeModule = require(\"./runtime/GetTrustedTypesPolicyRuntimeModule\");\nconst GlobalRuntimeModule = require(\"./runtime/GlobalRuntimeModule\");\nconst HasOwnPropertyRuntimeModule = require(\"./runtime/HasOwnPropertyRuntimeModule\");\nconst LoadScriptRuntimeModule = require(\"./runtime/LoadScriptRuntimeModule\");\nconst MakeNamespaceObjectRuntimeModule = require(\"./runtime/MakeNamespaceObjectRuntimeModule\");\nconst NonceRuntimeModule = require(\"./runtime/NonceRuntimeModule\");\nconst OnChunksLoadedRuntimeModule = require(\"./runtime/OnChunksLoadedRuntimeModule\");\nconst PublicPathRuntimeModule = require(\"./runtime/PublicPathRuntimeModule\");\nconst RelativeUrlRuntimeModule = require(\"./runtime/RelativeUrlRuntimeModule\");\nconst RuntimeIdRuntimeModule = require(\"./runtime/RuntimeIdRuntimeModule\");\nconst SystemContextRuntimeModule = require(\"./runtime/SystemContextRuntimeModule\");\nconst ShareRuntimeModule = require(\"./sharing/ShareRuntimeModule\");\nconst StringXor = require(\"./util/StringXor\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n\nconst GLOBALS_ON_REQUIRE = [RuntimeGlobals.chunkName, RuntimeGlobals.runtimeId, RuntimeGlobals.compatGetDefaultExport, RuntimeGlobals.createFakeNamespaceObject, RuntimeGlobals.createScript, RuntimeGlobals.createScriptUrl, RuntimeGlobals.getTrustedTypesPolicy, RuntimeGlobals.definePropertyGetters, RuntimeGlobals.ensureChunk, RuntimeGlobals.entryModuleId, RuntimeGlobals.getFullHash, RuntimeGlobals.global, RuntimeGlobals.makeNamespaceObject, RuntimeGlobals.moduleCache, RuntimeGlobals.moduleFactories, RuntimeGlobals.moduleFactoriesAddOnly, RuntimeGlobals.interceptModuleExecution, RuntimeGlobals.publicPath, RuntimeGlobals.baseURI, RuntimeGlobals.relativeUrl, RuntimeGlobals.scriptNonce, RuntimeGlobals.uncaughtErrorHandler, RuntimeGlobals.asyncModule, RuntimeGlobals.wasmInstances, RuntimeGlobals.instantiateWasm, RuntimeGlobals.shareScopeMap, RuntimeGlobals.initializeSharing, RuntimeGlobals.loadScript, RuntimeGlobals.systemContext, RuntimeGlobals.onChunksLoaded];\nconst MODULE_DEPENDENCIES = {\n  [RuntimeGlobals.moduleLoaded]: [RuntimeGlobals.module],\n  [RuntimeGlobals.moduleId]: [RuntimeGlobals.module]\n};\nconst TREE_DEPENDENCIES = {\n  [RuntimeGlobals.definePropertyGetters]: [RuntimeGlobals.hasOwnProperty],\n  [RuntimeGlobals.compatGetDefaultExport]: [RuntimeGlobals.definePropertyGetters],\n  [RuntimeGlobals.createFakeNamespaceObject]: [RuntimeGlobals.definePropertyGetters, RuntimeGlobals.makeNamespaceObject, RuntimeGlobals.require],\n  [RuntimeGlobals.initializeSharing]: [RuntimeGlobals.shareScopeMap],\n  [RuntimeGlobals.shareScopeMap]: [RuntimeGlobals.hasOwnProperty]\n};\nclass RuntimePlugin {\n  /**\n   * @param {Compiler} compiler the Compiler\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RuntimePlugin\", compilation => {\n      const globalChunkLoading = compilation.outputOptions.chunkLoading;\n      const isChunkLoadingDisabledForChunk = chunk => {\n        const options = chunk.getEntryOptions();\n        const chunkLoading = options && options.chunkLoading !== undefined ? options.chunkLoading : globalChunkLoading;\n        return chunkLoading === false;\n      };\n      compilation.dependencyTemplates.set(RuntimeRequirementsDependency, new RuntimeRequirementsDependency.Template());\n      for (const req of GLOBALS_ON_REQUIRE) {\n        compilation.hooks.runtimeRequirementInModule.for(req).tap(\"RuntimePlugin\", (module, set) => {\n          set.add(RuntimeGlobals.requireScope);\n        });\n        compilation.hooks.runtimeRequirementInTree.for(req).tap(\"RuntimePlugin\", (module, set) => {\n          set.add(RuntimeGlobals.requireScope);\n        });\n      }\n      for (const req of Object.keys(TREE_DEPENDENCIES)) {\n        const deps = TREE_DEPENDENCIES[req];\n        compilation.hooks.runtimeRequirementInTree.for(req).tap(\"RuntimePlugin\", (chunk, set) => {\n          for (const dep of deps) set.add(dep);\n        });\n      }\n      for (const req of Object.keys(MODULE_DEPENDENCIES)) {\n        const deps = MODULE_DEPENDENCIES[req];\n        compilation.hooks.runtimeRequirementInModule.for(req).tap(\"RuntimePlugin\", (chunk, set) => {\n          for (const dep of deps) set.add(dep);\n        });\n      }\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.definePropertyGetters).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new DefinePropertyGettersRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.makeNamespaceObject).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new MakeNamespaceObjectRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.createFakeNamespaceObject).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new CreateFakeNamespaceObjectRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hasOwnProperty).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new HasOwnPropertyRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.compatGetDefaultExport).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new CompatGetDefaultExportRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.runtimeId).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new RuntimeIdRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.publicPath).tap(\"RuntimePlugin\", (chunk, set) => {\n        const {\n          outputOptions\n        } = compilation;\n        const {\n          publicPath: globalPublicPath,\n          scriptType\n        } = outputOptions;\n        const entryOptions = chunk.getEntryOptions();\n        const publicPath = entryOptions && entryOptions.publicPath !== undefined ? entryOptions.publicPath : globalPublicPath;\n        if (publicPath === \"auto\") {\n          const module = new AutoPublicPathRuntimeModule();\n          if (scriptType !== \"module\") set.add(RuntimeGlobals.global);\n          compilation.addRuntimeModule(chunk, module);\n        } else {\n          const module = new PublicPathRuntimeModule(publicPath);\n          if (typeof publicPath !== \"string\" || /\\[(full)?hash\\]/.test(publicPath)) {\n            module.fullHash = true;\n          }\n          compilation.addRuntimeModule(chunk, module);\n        }\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.global).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new GlobalRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.asyncModule).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new AsyncModuleRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.systemContext).tap(\"RuntimePlugin\", chunk => {\n        const {\n          outputOptions\n        } = compilation;\n        const {\n          library: globalLibrary\n        } = outputOptions;\n        const entryOptions = chunk.getEntryOptions();\n        const libraryType = entryOptions && entryOptions.library !== undefined ? entryOptions.library.type : globalLibrary.type;\n        if (libraryType === \"system\") {\n          compilation.addRuntimeModule(chunk, new SystemContextRuntimeModule());\n        }\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getChunkScriptFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (typeof compilation.outputOptions.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n        compilation.addRuntimeModule(chunk, new GetChunkFilenameRuntimeModule(\"javascript\", \"javascript\", RuntimeGlobals.getChunkScriptFilename, chunk => chunk.filenameTemplate || (chunk.canBeInitial() ? compilation.outputOptions.filename : compilation.outputOptions.chunkFilename), false));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getChunkCssFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (typeof compilation.outputOptions.cssChunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.cssChunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n        compilation.addRuntimeModule(chunk, new GetChunkFilenameRuntimeModule(\"css\", \"css\", RuntimeGlobals.getChunkCssFilename, chunk => getChunkFilenameTemplate(chunk, compilation.outputOptions), set.has(RuntimeGlobals.hmrDownloadUpdateHandlers)));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getChunkUpdateScriptFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (/\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.hotUpdateChunkFilename)) set.add(RuntimeGlobals.getFullHash);\n        compilation.addRuntimeModule(chunk, new GetChunkFilenameRuntimeModule(\"javascript\", \"javascript update\", RuntimeGlobals.getChunkUpdateScriptFilename, c => compilation.outputOptions.hotUpdateChunkFilename, true));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getUpdateManifestFilename).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (/\\[(full)?hash(:\\d+)?\\]/.test(compilation.outputOptions.hotUpdateMainFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n        compilation.addRuntimeModule(chunk, new GetMainFilenameRuntimeModule(\"update manifest\", RuntimeGlobals.getUpdateManifestFilename, compilation.outputOptions.hotUpdateMainFilename));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunk).tap(\"RuntimePlugin\", (chunk, set) => {\n        const hasAsyncChunks = chunk.hasAsyncChunks();\n        if (hasAsyncChunks) {\n          set.add(RuntimeGlobals.ensureChunkHandlers);\n        }\n        compilation.addRuntimeModule(chunk, new EnsureChunkRuntimeModule(set));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkIncludeEntries).tap(\"RuntimePlugin\", (chunk, set) => {\n        set.add(RuntimeGlobals.ensureChunkHandlers);\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.shareScopeMap).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new ShareRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.loadScript).tap(\"RuntimePlugin\", (chunk, set) => {\n        const withCreateScriptUrl = !!compilation.outputOptions.trustedTypes;\n        if (withCreateScriptUrl) {\n          set.add(RuntimeGlobals.createScriptUrl);\n        }\n        compilation.addRuntimeModule(chunk, new LoadScriptRuntimeModule(withCreateScriptUrl));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.createScript).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (compilation.outputOptions.trustedTypes) {\n          set.add(RuntimeGlobals.getTrustedTypesPolicy);\n        }\n        compilation.addRuntimeModule(chunk, new CreateScriptRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.createScriptUrl).tap(\"RuntimePlugin\", (chunk, set) => {\n        if (compilation.outputOptions.trustedTypes) {\n          set.add(RuntimeGlobals.getTrustedTypesPolicy);\n        }\n        compilation.addRuntimeModule(chunk, new CreateScriptUrlRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.getTrustedTypesPolicy).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new GetTrustedTypesPolicyRuntimeModule(set));\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.relativeUrl).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new RelativeUrlRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.onChunksLoaded).tap(\"RuntimePlugin\", (chunk, set) => {\n        compilation.addRuntimeModule(chunk, new OnChunksLoadedRuntimeModule());\n        return true;\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.baseURI).tap(\"RuntimePlugin\", chunk => {\n        if (isChunkLoadingDisabledForChunk(chunk)) {\n          compilation.addRuntimeModule(chunk, new BaseUriRuntimeModule());\n          return true;\n        }\n      });\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.scriptNonce).tap(\"RuntimePlugin\", chunk => {\n        compilation.addRuntimeModule(chunk, new NonceRuntimeModule());\n        return true;\n      });\n      // TODO webpack 6: remove CompatRuntimeModule\n      compilation.hooks.additionalTreeRuntimeRequirements.tap(\"RuntimePlugin\", (chunk, set) => {\n        const {\n          mainTemplate\n        } = compilation;\n        if (mainTemplate.hooks.bootstrap.isUsed() || mainTemplate.hooks.localVars.isUsed() || mainTemplate.hooks.requireEnsure.isUsed() || mainTemplate.hooks.requireExtensions.isUsed()) {\n          compilation.addRuntimeModule(chunk, new CompatRuntimeModule());\n        }\n      });\n      JavascriptModulesPlugin.getCompilationHooks(compilation).chunkHash.tap(\"RuntimePlugin\", (chunk, hash, _ref) => {\n        let {\n          chunkGraph\n        } = _ref;\n        const xor = new StringXor();\n        for (const m of chunkGraph.getChunkRuntimeModulesIterable(chunk)) {\n          xor.add(chunkGraph.getModuleHash(m, chunk.runtime));\n        }\n        xor.updateHash(hash);\n      });\n    });\n  }\n}\nmodule.exports = RuntimePlugin;","map":{"version":3,"names":["RuntimeGlobals","require","getChunkFilenameTemplate","RuntimeRequirementsDependency","JavascriptModulesPlugin","AsyncModuleRuntimeModule","AutoPublicPathRuntimeModule","BaseUriRuntimeModule","CompatGetDefaultExportRuntimeModule","CompatRuntimeModule","CreateFakeNamespaceObjectRuntimeModule","CreateScriptRuntimeModule","CreateScriptUrlRuntimeModule","DefinePropertyGettersRuntimeModule","EnsureChunkRuntimeModule","GetChunkFilenameRuntimeModule","GetMainFilenameRuntimeModule","GetTrustedTypesPolicyRuntimeModule","GlobalRuntimeModule","HasOwnPropertyRuntimeModule","LoadScriptRuntimeModule","MakeNamespaceObjectRuntimeModule","NonceRuntimeModule","OnChunksLoadedRuntimeModule","PublicPathRuntimeModule","RelativeUrlRuntimeModule","RuntimeIdRuntimeModule","SystemContextRuntimeModule","ShareRuntimeModule","StringXor","GLOBALS_ON_REQUIRE","chunkName","runtimeId","compatGetDefaultExport","createFakeNamespaceObject","createScript","createScriptUrl","getTrustedTypesPolicy","definePropertyGetters","ensureChunk","entryModuleId","getFullHash","global","makeNamespaceObject","moduleCache","moduleFactories","moduleFactoriesAddOnly","interceptModuleExecution","publicPath","baseURI","relativeUrl","scriptNonce","uncaughtErrorHandler","asyncModule","wasmInstances","instantiateWasm","shareScopeMap","initializeSharing","loadScript","systemContext","onChunksLoaded","MODULE_DEPENDENCIES","moduleLoaded","module","moduleId","TREE_DEPENDENCIES","hasOwnProperty","RuntimePlugin","apply","compiler","hooks","compilation","tap","globalChunkLoading","outputOptions","chunkLoading","isChunkLoadingDisabledForChunk","chunk","options","getEntryOptions","undefined","dependencyTemplates","set","Template","req","runtimeRequirementInModule","for","add","requireScope","runtimeRequirementInTree","Object","keys","deps","dep","addRuntimeModule","globalPublicPath","scriptType","entryOptions","test","fullHash","library","globalLibrary","libraryType","type","getChunkScriptFilename","chunkFilename","filenameTemplate","canBeInitial","filename","getChunkCssFilename","cssChunkFilename","has","hmrDownloadUpdateHandlers","getChunkUpdateScriptFilename","hotUpdateChunkFilename","c","getUpdateManifestFilename","hotUpdateMainFilename","hasAsyncChunks","ensureChunkHandlers","ensureChunkIncludeEntries","withCreateScriptUrl","trustedTypes","additionalTreeRuntimeRequirements","mainTemplate","bootstrap","isUsed","localVars","requireEnsure","requireExtensions","getCompilationHooks","chunkHash","hash","_ref","chunkGraph","xor","m","getChunkRuntimeModulesIterable","getModuleHash","runtime","updateHash","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/RuntimePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst { getChunkFilenameTemplate } = require(\"./css/CssModulesPlugin\");\nconst RuntimeRequirementsDependency = require(\"./dependencies/RuntimeRequirementsDependency\");\nconst JavascriptModulesPlugin = require(\"./javascript/JavascriptModulesPlugin\");\nconst AsyncModuleRuntimeModule = require(\"./runtime/AsyncModuleRuntimeModule\");\nconst AutoPublicPathRuntimeModule = require(\"./runtime/AutoPublicPathRuntimeModule\");\nconst BaseUriRuntimeModule = require(\"./runtime/BaseUriRuntimeModule\");\nconst CompatGetDefaultExportRuntimeModule = require(\"./runtime/CompatGetDefaultExportRuntimeModule\");\nconst CompatRuntimeModule = require(\"./runtime/CompatRuntimeModule\");\nconst CreateFakeNamespaceObjectRuntimeModule = require(\"./runtime/CreateFakeNamespaceObjectRuntimeModule\");\nconst CreateScriptRuntimeModule = require(\"./runtime/CreateScriptRuntimeModule\");\nconst CreateScriptUrlRuntimeModule = require(\"./runtime/CreateScriptUrlRuntimeModule\");\nconst DefinePropertyGettersRuntimeModule = require(\"./runtime/DefinePropertyGettersRuntimeModule\");\nconst EnsureChunkRuntimeModule = require(\"./runtime/EnsureChunkRuntimeModule\");\nconst GetChunkFilenameRuntimeModule = require(\"./runtime/GetChunkFilenameRuntimeModule\");\nconst GetMainFilenameRuntimeModule = require(\"./runtime/GetMainFilenameRuntimeModule\");\nconst GetTrustedTypesPolicyRuntimeModule = require(\"./runtime/GetTrustedTypesPolicyRuntimeModule\");\nconst GlobalRuntimeModule = require(\"./runtime/GlobalRuntimeModule\");\nconst HasOwnPropertyRuntimeModule = require(\"./runtime/HasOwnPropertyRuntimeModule\");\nconst LoadScriptRuntimeModule = require(\"./runtime/LoadScriptRuntimeModule\");\nconst MakeNamespaceObjectRuntimeModule = require(\"./runtime/MakeNamespaceObjectRuntimeModule\");\nconst NonceRuntimeModule = require(\"./runtime/NonceRuntimeModule\");\nconst OnChunksLoadedRuntimeModule = require(\"./runtime/OnChunksLoadedRuntimeModule\");\nconst PublicPathRuntimeModule = require(\"./runtime/PublicPathRuntimeModule\");\nconst RelativeUrlRuntimeModule = require(\"./runtime/RelativeUrlRuntimeModule\");\nconst RuntimeIdRuntimeModule = require(\"./runtime/RuntimeIdRuntimeModule\");\nconst SystemContextRuntimeModule = require(\"./runtime/SystemContextRuntimeModule\");\nconst ShareRuntimeModule = require(\"./sharing/ShareRuntimeModule\");\nconst StringXor = require(\"./util/StringXor\");\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Module\")} Module */\n\nconst GLOBALS_ON_REQUIRE = [\n\tRuntimeGlobals.chunkName,\n\tRuntimeGlobals.runtimeId,\n\tRuntimeGlobals.compatGetDefaultExport,\n\tRuntimeGlobals.createFakeNamespaceObject,\n\tRuntimeGlobals.createScript,\n\tRuntimeGlobals.createScriptUrl,\n\tRuntimeGlobals.getTrustedTypesPolicy,\n\tRuntimeGlobals.definePropertyGetters,\n\tRuntimeGlobals.ensureChunk,\n\tRuntimeGlobals.entryModuleId,\n\tRuntimeGlobals.getFullHash,\n\tRuntimeGlobals.global,\n\tRuntimeGlobals.makeNamespaceObject,\n\tRuntimeGlobals.moduleCache,\n\tRuntimeGlobals.moduleFactories,\n\tRuntimeGlobals.moduleFactoriesAddOnly,\n\tRuntimeGlobals.interceptModuleExecution,\n\tRuntimeGlobals.publicPath,\n\tRuntimeGlobals.baseURI,\n\tRuntimeGlobals.relativeUrl,\n\tRuntimeGlobals.scriptNonce,\n\tRuntimeGlobals.uncaughtErrorHandler,\n\tRuntimeGlobals.asyncModule,\n\tRuntimeGlobals.wasmInstances,\n\tRuntimeGlobals.instantiateWasm,\n\tRuntimeGlobals.shareScopeMap,\n\tRuntimeGlobals.initializeSharing,\n\tRuntimeGlobals.loadScript,\n\tRuntimeGlobals.systemContext,\n\tRuntimeGlobals.onChunksLoaded\n];\n\nconst MODULE_DEPENDENCIES = {\n\t[RuntimeGlobals.moduleLoaded]: [RuntimeGlobals.module],\n\t[RuntimeGlobals.moduleId]: [RuntimeGlobals.module]\n};\n\nconst TREE_DEPENDENCIES = {\n\t[RuntimeGlobals.definePropertyGetters]: [RuntimeGlobals.hasOwnProperty],\n\t[RuntimeGlobals.compatGetDefaultExport]: [\n\t\tRuntimeGlobals.definePropertyGetters\n\t],\n\t[RuntimeGlobals.createFakeNamespaceObject]: [\n\t\tRuntimeGlobals.definePropertyGetters,\n\t\tRuntimeGlobals.makeNamespaceObject,\n\t\tRuntimeGlobals.require\n\t],\n\t[RuntimeGlobals.initializeSharing]: [RuntimeGlobals.shareScopeMap],\n\t[RuntimeGlobals.shareScopeMap]: [RuntimeGlobals.hasOwnProperty]\n};\n\nclass RuntimePlugin {\n\t/**\n\t * @param {Compiler} compiler the Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"RuntimePlugin\", compilation => {\n\t\t\tconst globalChunkLoading = compilation.outputOptions.chunkLoading;\n\t\t\tconst isChunkLoadingDisabledForChunk = chunk => {\n\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\tconst chunkLoading =\n\t\t\t\t\toptions && options.chunkLoading !== undefined\n\t\t\t\t\t\t? options.chunkLoading\n\t\t\t\t\t\t: globalChunkLoading;\n\t\t\t\treturn chunkLoading === false;\n\t\t\t};\n\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\tRuntimeRequirementsDependency,\n\t\t\t\tnew RuntimeRequirementsDependency.Template()\n\t\t\t);\n\t\t\tfor (const req of GLOBALS_ON_REQUIRE) {\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tfor (const req of Object.keys(TREE_DEPENDENCIES)) {\n\t\t\t\tconst deps = TREE_DEPENDENCIES[req];\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\t\tfor (const dep of deps) set.add(dep);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tfor (const req of Object.keys(MODULE_DEPENDENCIES)) {\n\t\t\t\tconst deps = MODULE_DEPENDENCIES[req];\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(req)\n\t\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\t\tfor (const dep of deps) set.add(dep);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.definePropertyGetters)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew DefinePropertyGettersRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.makeNamespaceObject)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew MakeNamespaceObjectRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.createFakeNamespaceObject)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew CreateFakeNamespaceObjectRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.hasOwnProperty)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew HasOwnPropertyRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.compatGetDefaultExport)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew CompatGetDefaultExportRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.runtimeId)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RuntimeIdRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.publicPath)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tconst { outputOptions } = compilation;\n\t\t\t\t\tconst { publicPath: globalPublicPath, scriptType } = outputOptions;\n\t\t\t\t\tconst entryOptions = chunk.getEntryOptions();\n\t\t\t\t\tconst publicPath =\n\t\t\t\t\t\tentryOptions && entryOptions.publicPath !== undefined\n\t\t\t\t\t\t\t? entryOptions.publicPath\n\t\t\t\t\t\t\t: globalPublicPath;\n\n\t\t\t\t\tif (publicPath === \"auto\") {\n\t\t\t\t\t\tconst module = new AutoPublicPathRuntimeModule();\n\t\t\t\t\t\tif (scriptType !== \"module\") set.add(RuntimeGlobals.global);\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, module);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst module = new PublicPathRuntimeModule(publicPath);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof publicPath !== \"string\" ||\n\t\t\t\t\t\t\t/\\[(full)?hash\\]/.test(publicPath)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmodule.fullHash = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, module);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.global)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new GlobalRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.asyncModule)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new AsyncModuleRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.systemContext)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tconst { outputOptions } = compilation;\n\t\t\t\t\tconst { library: globalLibrary } = outputOptions;\n\t\t\t\t\tconst entryOptions = chunk.getEntryOptions();\n\t\t\t\t\tconst libraryType =\n\t\t\t\t\t\tentryOptions && entryOptions.library !== undefined\n\t\t\t\t\t\t\t? entryOptions.library.type\n\t\t\t\t\t\t\t: globalLibrary.type;\n\n\t\t\t\t\tif (libraryType === \"system\") {\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew SystemContextRuntimeModule()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getChunkScriptFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof compilation.outputOptions.chunkFilename === \"string\" &&\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.chunkFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetChunkFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename,\n\t\t\t\t\t\t\tchunk =>\n\t\t\t\t\t\t\t\tchunk.filenameTemplate ||\n\t\t\t\t\t\t\t\t(chunk.canBeInitial()\n\t\t\t\t\t\t\t\t\t? compilation.outputOptions.filename\n\t\t\t\t\t\t\t\t\t: compilation.outputOptions.chunkFilename),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getChunkCssFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof compilation.outputOptions.cssChunkFilename === \"string\" &&\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.cssChunkFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetChunkFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"css\",\n\t\t\t\t\t\t\t\"css\",\n\t\t\t\t\t\t\tRuntimeGlobals.getChunkCssFilename,\n\t\t\t\t\t\t\tchunk =>\n\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t\t\t\t\tset.has(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getChunkUpdateScriptFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.hotUpdateChunkFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetChunkFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\t\t\"javascript update\",\n\t\t\t\t\t\t\tRuntimeGlobals.getChunkUpdateScriptFilename,\n\t\t\t\t\t\t\tc => compilation.outputOptions.hotUpdateChunkFilename,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getUpdateManifestFilename)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t/\\[(full)?hash(:\\d+)?\\]/.test(\n\t\t\t\t\t\t\tcompilation.outputOptions.hotUpdateMainFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getFullHash);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetMainFilenameRuntimeModule(\n\t\t\t\t\t\t\t\"update manifest\",\n\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename,\n\t\t\t\t\t\t\tcompilation.outputOptions.hotUpdateMainFilename\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.ensureChunk)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tconst hasAsyncChunks = chunk.hasAsyncChunks();\n\t\t\t\t\tif (hasAsyncChunks) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.ensureChunkHandlers);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew EnsureChunkRuntimeModule(set)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.ensureChunkIncludeEntries)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tset.add(RuntimeGlobals.ensureChunkHandlers);\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.shareScopeMap)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new ShareRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.loadScript)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tconst withCreateScriptUrl = !!compilation.outputOptions.trustedTypes;\n\t\t\t\t\tif (withCreateScriptUrl) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.createScriptUrl);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew LoadScriptRuntimeModule(withCreateScriptUrl)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.createScript)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getTrustedTypesPolicy);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CreateScriptRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.createScriptUrl)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tif (compilation.outputOptions.trustedTypes) {\n\t\t\t\t\t\tset.add(RuntimeGlobals.getTrustedTypesPolicy);\n\t\t\t\t\t}\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew CreateScriptUrlRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.getTrustedTypesPolicy)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew GetTrustedTypesPolicyRuntimeModule(set)\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.relativeUrl)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RelativeUrlRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.onChunksLoaded)\n\t\t\t\t.tap(\"RuntimePlugin\", (chunk, set) => {\n\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tnew OnChunksLoadedRuntimeModule()\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.baseURI)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tif (isChunkLoadingDisabledForChunk(chunk)) {\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new BaseUriRuntimeModule());\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t.for(RuntimeGlobals.scriptNonce)\n\t\t\t\t.tap(\"RuntimePlugin\", chunk => {\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new NonceRuntimeModule());\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t// TODO webpack 6: remove CompatRuntimeModule\n\t\t\tcompilation.hooks.additionalTreeRuntimeRequirements.tap(\n\t\t\t\t\"RuntimePlugin\",\n\t\t\t\t(chunk, set) => {\n\t\t\t\t\tconst { mainTemplate } = compilation;\n\t\t\t\t\tif (\n\t\t\t\t\t\tmainTemplate.hooks.bootstrap.isUsed() ||\n\t\t\t\t\t\tmainTemplate.hooks.localVars.isUsed() ||\n\t\t\t\t\t\tmainTemplate.hooks.requireEnsure.isUsed() ||\n\t\t\t\t\t\tmainTemplate.hooks.requireExtensions.isUsed()\n\t\t\t\t\t) {\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CompatRuntimeModule());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tJavascriptModulesPlugin.getCompilationHooks(compilation).chunkHash.tap(\n\t\t\t\t\"RuntimePlugin\",\n\t\t\t\t(chunk, hash, { chunkGraph }) => {\n\t\t\t\t\tconst xor = new StringXor();\n\t\t\t\t\tfor (const m of chunkGraph.getChunkRuntimeModulesIterable(chunk)) {\n\t\t\t\t\t\txor.add(chunkGraph.getModuleHash(m, chunk.runtime));\n\t\t\t\t\t}\n\t\t\t\t\txor.updateHash(hash);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = RuntimePlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
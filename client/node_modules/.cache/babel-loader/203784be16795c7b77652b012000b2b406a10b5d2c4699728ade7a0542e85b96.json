{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/facebookincubator/create-react-app/blob/master/LICENSE\n *\n * Modified by Yuxi Evan You\n */\n\nconst fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst colors = require('picocolors');\nconst childProcess = require('child_process');\nconst guessEditor = require('./guess');\nconst getArgumentsForPosition = require('./get-args');\nfunction wrapErrorCallback(cb) {\n  return (fileName, errorMessage) => {\n    console.log();\n    console.log(colors.red('Could not open ' + path.basename(fileName) + ' in the editor.'));\n    if (errorMessage) {\n      if (errorMessage[errorMessage.length - 1] !== '.') {\n        errorMessage += '.';\n      }\n      console.log(colors.red('The editor process exited with an error: ' + errorMessage));\n    }\n    console.log();\n    if (cb) cb(fileName, errorMessage);\n  };\n}\nfunction isTerminalEditor(editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true;\n  }\n  return false;\n}\nconst positionRE = /:(\\d+)(:(\\d+))?$/;\nfunction parseFile(file) {\n  const fileName = file.replace(positionRE, '');\n  const match = file.match(positionRE);\n  const lineNumber = match && match[1];\n  const columnNumber = match && match[3];\n  return {\n    fileName,\n    lineNumber,\n    columnNumber\n  };\n}\nlet _childProcess = null;\nfunction launchEditor(file, specifiedEditor, onErrorCallback) {\n  const parsed = parseFile(file);\n  let {\n    fileName\n  } = parsed;\n  const {\n    lineNumber,\n    columnNumber\n  } = parsed;\n  if (!fs.existsSync(fileName)) {\n    return;\n  }\n  if (typeof specifiedEditor === 'function') {\n    onErrorCallback = specifiedEditor;\n    specifiedEditor = undefined;\n  }\n  onErrorCallback = wrapErrorCallback(onErrorCallback);\n  const [editor, ...args] = guessEditor(specifiedEditor);\n  if (!editor) {\n    onErrorCallback(fileName, null);\n    return;\n  }\n  if (process.platform === 'linux' && fileName.startsWith('/mnt/') && /Microsoft/i.test(os.release())) {\n    // Assume WSL / \"Bash on Ubuntu on Windows\" is being used, and\n    // that the file exists on the Windows file system.\n    // `os.release()` is \"4.4.0-43-Microsoft\" in the current release\n    // build of WSL, see: https://github.com/Microsoft/BashOnWindows/issues/423#issuecomment-221627364\n    // When a Windows editor is specified, interop functionality can\n    // handle the path translation, but only if a relative path is used.\n    fileName = path.relative('', fileName);\n  }\n  if (lineNumber) {\n    const extraArgs = getArgumentsForPosition(editor, fileName, lineNumber, columnNumber);\n    args.push.apply(args, extraArgs);\n  } else {\n    args.push(fileName);\n  }\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL');\n  }\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = childProcess.spawn('cmd.exe', ['/C', editor].concat(args), {\n      stdio: 'inherit'\n    });\n  } else {\n    _childProcess = childProcess.spawn(editor, args, {\n      stdio: 'inherit'\n    });\n  }\n  _childProcess.on('exit', function (errorCode) {\n    _childProcess = null;\n    if (errorCode) {\n      onErrorCallback(fileName, '(code ' + errorCode + ')');\n    }\n  });\n  _childProcess.on('error', function (error) {\n    onErrorCallback(fileName, error.message);\n  });\n}\nmodule.exports = launchEditor;","map":{"version":3,"names":["fs","require","os","path","colors","childProcess","guessEditor","getArgumentsForPosition","wrapErrorCallback","cb","fileName","errorMessage","console","log","red","basename","length","isTerminalEditor","editor","positionRE","parseFile","file","replace","match","lineNumber","columnNumber","_childProcess","launchEditor","specifiedEditor","onErrorCallback","parsed","existsSync","undefined","args","process","platform","startsWith","test","release","relative","extraArgs","push","apply","kill","spawn","concat","stdio","on","errorCode","error","message","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/launch-editor/index.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/facebookincubator/create-react-app/blob/master/LICENSE\n *\n * Modified by Yuxi Evan You\n */\n\nconst fs = require('fs')\nconst os = require('os')\nconst path = require('path')\nconst colors = require('picocolors')\nconst childProcess = require('child_process')\n\nconst guessEditor = require('./guess')\nconst getArgumentsForPosition = require('./get-args')\n\nfunction wrapErrorCallback (cb) {\n  return (fileName, errorMessage) => {\n    console.log()\n    console.log(\n      colors.red('Could not open ' + path.basename(fileName) + ' in the editor.')\n    )\n    if (errorMessage) {\n      if (errorMessage[errorMessage.length - 1] !== '.') {\n        errorMessage += '.'\n      }\n      console.log(\n        colors.red('The editor process exited with an error: ' + errorMessage)\n      )\n    }\n    console.log()\n    if (cb) cb(fileName, errorMessage)\n  }\n}\n\nfunction isTerminalEditor (editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true\n  }\n  return false\n}\n\nconst positionRE = /:(\\d+)(:(\\d+))?$/\nfunction parseFile (file) {\n  const fileName = file.replace(positionRE, '')\n  const match = file.match(positionRE)\n  const lineNumber = match && match[1]\n  const columnNumber = match && match[3]\n  return {\n    fileName,\n    lineNumber,\n    columnNumber\n  }\n}\n\nlet _childProcess = null\n\nfunction launchEditor (file, specifiedEditor, onErrorCallback) {\n  const parsed = parseFile(file)\n  let { fileName } = parsed\n  const { lineNumber, columnNumber } = parsed\n\n  if (!fs.existsSync(fileName)) {\n    return\n  }\n\n  if (typeof specifiedEditor === 'function') {\n    onErrorCallback = specifiedEditor\n    specifiedEditor = undefined\n  }\n\n  onErrorCallback = wrapErrorCallback(onErrorCallback)\n\n  const [editor, ...args] = guessEditor(specifiedEditor)\n  if (!editor) {\n    onErrorCallback(fileName, null)\n    return\n  }\n\n  if (\n    process.platform === 'linux' &&\n    fileName.startsWith('/mnt/') &&\n    /Microsoft/i.test(os.release())\n  ) {\n    // Assume WSL / \"Bash on Ubuntu on Windows\" is being used, and\n    // that the file exists on the Windows file system.\n    // `os.release()` is \"4.4.0-43-Microsoft\" in the current release\n    // build of WSL, see: https://github.com/Microsoft/BashOnWindows/issues/423#issuecomment-221627364\n    // When a Windows editor is specified, interop functionality can\n    // handle the path translation, but only if a relative path is used.\n    fileName = path.relative('', fileName)\n  }\n\n  if (lineNumber) {\n    const extraArgs = getArgumentsForPosition(editor, fileName, lineNumber, columnNumber)\n    args.push.apply(args, extraArgs)\n  } else {\n    args.push(fileName)\n  }\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL')\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = childProcess.spawn(\n      'cmd.exe',\n      ['/C', editor].concat(args),\n      { stdio: 'inherit' }\n    )\n  } else {\n    _childProcess = childProcess.spawn(editor, args, { stdio: 'inherit' })\n  }\n  _childProcess.on('exit', function (errorCode) {\n    _childProcess = null\n\n    if (errorCode) {\n      onErrorCallback(fileName, '(code ' + errorCode + ')')\n    }\n  })\n\n  _childProcess.on('error', function (error) {\n    onErrorCallback(fileName, error.message)\n  })\n}\n\nmodule.exports = launchEditor\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
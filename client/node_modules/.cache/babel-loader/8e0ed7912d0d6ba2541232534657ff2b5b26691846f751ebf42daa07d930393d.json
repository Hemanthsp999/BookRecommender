{"ast":null,"code":"'use strict';\n\nvar _types = require('../types');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nlet file = null;\nlet setupArgs = [];\nlet initialized = false;\n/**\n * This file is a small bootstrapper for workers. It sets up the communication\n * between the worker and the parent process, interpreting parent messages and\n * sending results back.\n *\n * The file loaded will be lazily initialized the first time any of the workers\n * is called. This is done for optimal performance: if the farm is initialized,\n * but no call is made to it, child Node processes will be consuming the least\n * possible amount of memory.\n *\n * If an invalid message is detected, the child will exit (by throwing) with a\n * non-zero exit code.\n */\n\nconst messageListener = request => {\n  switch (request[0]) {\n    case _types.CHILD_MESSAGE_INITIALIZE:\n      const init = request;\n      file = init[2];\n      setupArgs = request[3];\n      break;\n    case _types.CHILD_MESSAGE_CALL:\n      const call = request;\n      execMethod(call[2], call[3]);\n      break;\n    case _types.CHILD_MESSAGE_END:\n      end();\n      break;\n    default:\n      throw new TypeError('Unexpected request from parent process: ' + request[0]);\n  }\n};\nprocess.on('message', messageListener);\nfunction reportSuccess(result) {\n  if (!process || !process.send) {\n    throw new Error('Child can only be used on a forked process');\n  }\n  process.send([_types.PARENT_MESSAGE_OK, result]);\n}\nfunction reportClientError(error) {\n  return reportError(error, _types.PARENT_MESSAGE_CLIENT_ERROR);\n}\nfunction reportInitializeError(error) {\n  return reportError(error, _types.PARENT_MESSAGE_SETUP_ERROR);\n}\nfunction reportError(error, type) {\n  if (!process || !process.send) {\n    throw new Error('Child can only be used on a forked process');\n  }\n  if (error == null) {\n    error = new Error('\"null\" or \"undefined\" thrown');\n  }\n  process.send([type, error.constructor && error.constructor.name, error.message, error.stack, typeof error === 'object' ? {\n    ...error\n  } : error]);\n}\nfunction end() {\n  const main = require(file);\n  if (!main.teardown) {\n    exitProcess();\n    return;\n  }\n  execFunction(main.teardown, main, [], exitProcess, exitProcess);\n}\nfunction exitProcess() {\n  // Clean up open handles so the process ideally exits gracefully\n  process.removeListener('message', messageListener);\n}\nfunction execMethod(method, args) {\n  const main = require(file);\n  let fn;\n  if (method === 'default') {\n    fn = main.__esModule ? main['default'] : main;\n  } else {\n    fn = main[method];\n  }\n  function execHelper() {\n    execFunction(fn, main, args, reportSuccess, reportClientError);\n  }\n  if (initialized || !main.setup) {\n    execHelper();\n    return;\n  }\n  initialized = true;\n  execFunction(main.setup, main, setupArgs, execHelper, reportInitializeError);\n}\nconst isPromise = obj => !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\nfunction execFunction(fn, ctx, args, onResult, onError) {\n  let result;\n  try {\n    result = fn.apply(ctx, args);\n  } catch (err) {\n    onError(err);\n    return;\n  }\n  if (isPromise(result)) {\n    result.then(onResult, onError);\n  } else {\n    onResult(result);\n  }\n}","map":{"version":3,"names":["_types","require","file","setupArgs","initialized","messageListener","request","CHILD_MESSAGE_INITIALIZE","init","CHILD_MESSAGE_CALL","call","execMethod","CHILD_MESSAGE_END","end","TypeError","process","on","reportSuccess","result","send","Error","PARENT_MESSAGE_OK","reportClientError","error","reportError","PARENT_MESSAGE_CLIENT_ERROR","reportInitializeError","PARENT_MESSAGE_SETUP_ERROR","type","constructor","name","message","stack","main","teardown","exitProcess","execFunction","removeListener","method","args","fn","__esModule","execHelper","setup","isPromise","obj","then","ctx","onResult","onError","apply","err"],"sources":["/home/hemanth/react-project/client/node_modules/jest-worker/build/workers/processChild.js"],"sourcesContent":["'use strict';\n\nvar _types = require('../types');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nlet file = null;\nlet setupArgs = [];\nlet initialized = false;\n/**\n * This file is a small bootstrapper for workers. It sets up the communication\n * between the worker and the parent process, interpreting parent messages and\n * sending results back.\n *\n * The file loaded will be lazily initialized the first time any of the workers\n * is called. This is done for optimal performance: if the farm is initialized,\n * but no call is made to it, child Node processes will be consuming the least\n * possible amount of memory.\n *\n * If an invalid message is detected, the child will exit (by throwing) with a\n * non-zero exit code.\n */\n\nconst messageListener = request => {\n  switch (request[0]) {\n    case _types.CHILD_MESSAGE_INITIALIZE:\n      const init = request;\n      file = init[2];\n      setupArgs = request[3];\n      break;\n\n    case _types.CHILD_MESSAGE_CALL:\n      const call = request;\n      execMethod(call[2], call[3]);\n      break;\n\n    case _types.CHILD_MESSAGE_END:\n      end();\n      break;\n\n    default:\n      throw new TypeError(\n        'Unexpected request from parent process: ' + request[0]\n      );\n  }\n};\n\nprocess.on('message', messageListener);\n\nfunction reportSuccess(result) {\n  if (!process || !process.send) {\n    throw new Error('Child can only be used on a forked process');\n  }\n\n  process.send([_types.PARENT_MESSAGE_OK, result]);\n}\n\nfunction reportClientError(error) {\n  return reportError(error, _types.PARENT_MESSAGE_CLIENT_ERROR);\n}\n\nfunction reportInitializeError(error) {\n  return reportError(error, _types.PARENT_MESSAGE_SETUP_ERROR);\n}\n\nfunction reportError(error, type) {\n  if (!process || !process.send) {\n    throw new Error('Child can only be used on a forked process');\n  }\n\n  if (error == null) {\n    error = new Error('\"null\" or \"undefined\" thrown');\n  }\n\n  process.send([\n    type,\n    error.constructor && error.constructor.name,\n    error.message,\n    error.stack,\n    typeof error === 'object' ? {...error} : error\n  ]);\n}\n\nfunction end() {\n  const main = require(file);\n\n  if (!main.teardown) {\n    exitProcess();\n    return;\n  }\n\n  execFunction(main.teardown, main, [], exitProcess, exitProcess);\n}\n\nfunction exitProcess() {\n  // Clean up open handles so the process ideally exits gracefully\n  process.removeListener('message', messageListener);\n}\n\nfunction execMethod(method, args) {\n  const main = require(file);\n\n  let fn;\n\n  if (method === 'default') {\n    fn = main.__esModule ? main['default'] : main;\n  } else {\n    fn = main[method];\n  }\n\n  function execHelper() {\n    execFunction(fn, main, args, reportSuccess, reportClientError);\n  }\n\n  if (initialized || !main.setup) {\n    execHelper();\n    return;\n  }\n\n  initialized = true;\n  execFunction(main.setup, main, setupArgs, execHelper, reportInitializeError);\n}\n\nconst isPromise = obj =>\n  !!obj &&\n  (typeof obj === 'object' || typeof obj === 'function') &&\n  typeof obj.then === 'function';\n\nfunction execFunction(fn, ctx, args, onResult, onError) {\n  let result;\n\n  try {\n    result = fn.apply(ctx, args);\n  } catch (err) {\n    onError(err);\n    return;\n  }\n\n  if (isPromise(result)) {\n    result.then(onResult, onError);\n  } else {\n    onResult(result);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
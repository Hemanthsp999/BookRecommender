{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * Module itself is not connected, but transitive modules are connected transitively.\n */\nconst TRANSITIVE_ONLY = Symbol(\"transitive only\");\n\n/**\n * While determining the active state, this flag is used to signal a circular connection.\n */\nconst CIRCULAR_CONNECTION = Symbol(\"circular connection\");\n\n/** @typedef {boolean | typeof TRANSITIVE_ONLY | typeof CIRCULAR_CONNECTION} ConnectionState */\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} merged\n */\nconst addConnectionStates = (a, b) => {\n  if (a === true || b === true) return true;\n  if (a === false) return b;\n  if (b === false) return a;\n  if (a === TRANSITIVE_ONLY) return b;\n  if (b === TRANSITIVE_ONLY) return a;\n  return a;\n};\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} intersected\n */\nconst intersectConnectionStates = (a, b) => {\n  if (a === false || b === false) return false;\n  if (a === true) return b;\n  if (b === true) return a;\n  if (a === CIRCULAR_CONNECTION) return b;\n  if (b === CIRCULAR_CONNECTION) return a;\n  return a;\n};\nclass ModuleGraphConnection {\n  /**\n   * @param {Module|null} originModule the referencing module\n   * @param {Dependency|null} dependency the referencing dependency\n   * @param {Module} module the referenced module\n   * @param {string=} explanation some extra detail\n   * @param {boolean=} weak the reference is weak\n   * @param {false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState=} condition condition for the connection\n   */\n  constructor(originModule, dependency, module, explanation) {\n    let weak = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let condition = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n    this.originModule = originModule;\n    this.resolvedOriginModule = originModule;\n    this.dependency = dependency;\n    this.resolvedModule = module;\n    this.module = module;\n    this.weak = weak;\n    this.conditional = !!condition;\n    this._active = condition !== false;\n    /** @type {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} */\n    this.condition = condition || undefined;\n    /** @type {Set<string>} */\n    this.explanations = undefined;\n    if (explanation) {\n      this.explanations = new Set();\n      this.explanations.add(explanation);\n    }\n  }\n  clone() {\n    const clone = new ModuleGraphConnection(this.resolvedOriginModule, this.dependency, this.resolvedModule, undefined, this.weak, this.condition);\n    clone.originModule = this.originModule;\n    clone.module = this.module;\n    clone.conditional = this.conditional;\n    clone._active = this._active;\n    if (this.explanations) clone.explanations = new Set(this.explanations);\n    return clone;\n  }\n\n  /**\n   * @param {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} condition condition for the connection\n   * @returns {void}\n   */\n  addCondition(condition) {\n    if (this.conditional) {\n      const old = this.condition;\n      this.condition = (c, r) => intersectConnectionStates(old(c, r), condition(c, r));\n    } else if (this._active) {\n      this.conditional = true;\n      this.condition = condition;\n    }\n  }\n\n  /**\n   * @param {string} explanation the explanation to add\n   * @returns {void}\n   */\n  addExplanation(explanation) {\n    if (this.explanations === undefined) {\n      this.explanations = new Set();\n    }\n    this.explanations.add(explanation);\n  }\n  get explanation() {\n    if (this.explanations === undefined) return \"\";\n    return Array.from(this.explanations).join(\" \");\n  }\n\n  // TODO webpack 5 remove\n  get active() {\n    throw new Error(\"Use getActiveState instead\");\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, if the connection is active\n   */\n  isActive(runtime) {\n    if (!this.conditional) return this._active;\n    return this.condition(this, runtime) !== false;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, if the connection is active\n   */\n  isTargetActive(runtime) {\n    if (!this.conditional) return this._active;\n    return this.condition(this, runtime) === true;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {ConnectionState} true: fully active, false: inactive, TRANSITIVE: direct module inactive, but transitive connection maybe active\n   */\n  getActiveState(runtime) {\n    if (!this.conditional) return this._active;\n    return this.condition(this, runtime);\n  }\n\n  /**\n   * @param {boolean} value active or not\n   * @returns {void}\n   */\n  setActive(value) {\n    this.conditional = false;\n    this._active = value;\n  }\n  set active(value) {\n    throw new Error(\"Use setActive instead\");\n  }\n}\n\n/** @typedef {typeof TRANSITIVE_ONLY} TRANSITIVE_ONLY */\n/** @typedef {typeof CIRCULAR_CONNECTION} CIRCULAR_CONNECTION */\n\nmodule.exports = ModuleGraphConnection;\nmodule.exports.addConnectionStates = addConnectionStates;\nmodule.exports.TRANSITIVE_ONLY = /** @type {typeof TRANSITIVE_ONLY} */\nTRANSITIVE_ONLY;\nmodule.exports.CIRCULAR_CONNECTION = /** @type {typeof CIRCULAR_CONNECTION} */\nCIRCULAR_CONNECTION;","map":{"version":3,"names":["TRANSITIVE_ONLY","Symbol","CIRCULAR_CONNECTION","addConnectionStates","a","b","intersectConnectionStates","ModuleGraphConnection","constructor","originModule","dependency","module","explanation","weak","arguments","length","undefined","condition","resolvedOriginModule","resolvedModule","conditional","_active","explanations","Set","add","clone","addCondition","old","c","r","addExplanation","Array","from","join","active","Error","isActive","runtime","isTargetActive","getActiveState","setActive","value","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ModuleGraphConnection.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * Module itself is not connected, but transitive modules are connected transitively.\n */\nconst TRANSITIVE_ONLY = Symbol(\"transitive only\");\n\n/**\n * While determining the active state, this flag is used to signal a circular connection.\n */\nconst CIRCULAR_CONNECTION = Symbol(\"circular connection\");\n\n/** @typedef {boolean | typeof TRANSITIVE_ONLY | typeof CIRCULAR_CONNECTION} ConnectionState */\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} merged\n */\nconst addConnectionStates = (a, b) => {\n\tif (a === true || b === true) return true;\n\tif (a === false) return b;\n\tif (b === false) return a;\n\tif (a === TRANSITIVE_ONLY) return b;\n\tif (b === TRANSITIVE_ONLY) return a;\n\treturn a;\n};\n\n/**\n * @param {ConnectionState} a first\n * @param {ConnectionState} b second\n * @returns {ConnectionState} intersected\n */\nconst intersectConnectionStates = (a, b) => {\n\tif (a === false || b === false) return false;\n\tif (a === true) return b;\n\tif (b === true) return a;\n\tif (a === CIRCULAR_CONNECTION) return b;\n\tif (b === CIRCULAR_CONNECTION) return a;\n\treturn a;\n};\n\nclass ModuleGraphConnection {\n\t/**\n\t * @param {Module|null} originModule the referencing module\n\t * @param {Dependency|null} dependency the referencing dependency\n\t * @param {Module} module the referenced module\n\t * @param {string=} explanation some extra detail\n\t * @param {boolean=} weak the reference is weak\n\t * @param {false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState=} condition condition for the connection\n\t */\n\tconstructor(\n\t\toriginModule,\n\t\tdependency,\n\t\tmodule,\n\t\texplanation,\n\t\tweak = false,\n\t\tcondition = undefined\n\t) {\n\t\tthis.originModule = originModule;\n\t\tthis.resolvedOriginModule = originModule;\n\t\tthis.dependency = dependency;\n\t\tthis.resolvedModule = module;\n\t\tthis.module = module;\n\t\tthis.weak = weak;\n\t\tthis.conditional = !!condition;\n\t\tthis._active = condition !== false;\n\t\t/** @type {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} */\n\t\tthis.condition = condition || undefined;\n\t\t/** @type {Set<string>} */\n\t\tthis.explanations = undefined;\n\t\tif (explanation) {\n\t\t\tthis.explanations = new Set();\n\t\t\tthis.explanations.add(explanation);\n\t\t}\n\t}\n\n\tclone() {\n\t\tconst clone = new ModuleGraphConnection(\n\t\t\tthis.resolvedOriginModule,\n\t\t\tthis.dependency,\n\t\t\tthis.resolvedModule,\n\t\t\tundefined,\n\t\t\tthis.weak,\n\t\t\tthis.condition\n\t\t);\n\t\tclone.originModule = this.originModule;\n\t\tclone.module = this.module;\n\t\tclone.conditional = this.conditional;\n\t\tclone._active = this._active;\n\t\tif (this.explanations) clone.explanations = new Set(this.explanations);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * @param {function(ModuleGraphConnection, RuntimeSpec): ConnectionState} condition condition for the connection\n\t * @returns {void}\n\t */\n\taddCondition(condition) {\n\t\tif (this.conditional) {\n\t\t\tconst old = this.condition;\n\t\t\tthis.condition = (c, r) =>\n\t\t\t\tintersectConnectionStates(old(c, r), condition(c, r));\n\t\t} else if (this._active) {\n\t\t\tthis.conditional = true;\n\t\t\tthis.condition = condition;\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} explanation the explanation to add\n\t * @returns {void}\n\t */\n\taddExplanation(explanation) {\n\t\tif (this.explanations === undefined) {\n\t\t\tthis.explanations = new Set();\n\t\t}\n\t\tthis.explanations.add(explanation);\n\t}\n\n\tget explanation() {\n\t\tif (this.explanations === undefined) return \"\";\n\t\treturn Array.from(this.explanations).join(\" \");\n\t}\n\n\t// TODO webpack 5 remove\n\tget active() {\n\t\tthrow new Error(\"Use getActiveState instead\");\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, if the connection is active\n\t */\n\tisActive(runtime) {\n\t\tif (!this.conditional) return this._active;\n\t\treturn this.condition(this, runtime) !== false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, if the connection is active\n\t */\n\tisTargetActive(runtime) {\n\t\tif (!this.conditional) return this._active;\n\t\treturn this.condition(this, runtime) === true;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {ConnectionState} true: fully active, false: inactive, TRANSITIVE: direct module inactive, but transitive connection maybe active\n\t */\n\tgetActiveState(runtime) {\n\t\tif (!this.conditional) return this._active;\n\t\treturn this.condition(this, runtime);\n\t}\n\n\t/**\n\t * @param {boolean} value active or not\n\t * @returns {void}\n\t */\n\tsetActive(value) {\n\t\tthis.conditional = false;\n\t\tthis._active = value;\n\t}\n\n\tset active(value) {\n\t\tthrow new Error(\"Use setActive instead\");\n\t}\n}\n\n/** @typedef {typeof TRANSITIVE_ONLY} TRANSITIVE_ONLY */\n/** @typedef {typeof CIRCULAR_CONNECTION} CIRCULAR_CONNECTION */\n\nmodule.exports = ModuleGraphConnection;\nmodule.exports.addConnectionStates = addConnectionStates;\nmodule.exports.TRANSITIVE_ONLY = /** @type {typeof TRANSITIVE_ONLY} */ (\n\tTRANSITIVE_ONLY\n);\nmodule.exports.CIRCULAR_CONNECTION = /** @type {typeof CIRCULAR_CONNECTION} */ (\n\tCIRCULAR_CONNECTION\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
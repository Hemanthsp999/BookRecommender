{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nvar _FifoQueue = _interopRequireDefault(require('./FifoQueue'));\nvar _types = require('./types');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nclass Farm {\n  constructor(_numOfWorkers, _callback) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _options$workerSchedu, _options$taskQueue;\n    _defineProperty(this, '_computeWorkerKey', void 0);\n    _defineProperty(this, '_workerSchedulingPolicy', void 0);\n    _defineProperty(this, '_cacheKeys', Object.create(null));\n    _defineProperty(this, '_locks', []);\n    _defineProperty(this, '_offset', 0);\n    _defineProperty(this, '_taskQueue', void 0);\n    this._numOfWorkers = _numOfWorkers;\n    this._callback = _callback;\n    this._computeWorkerKey = options.computeWorkerKey;\n    this._workerSchedulingPolicy = (_options$workerSchedu = options.workerSchedulingPolicy) !== null && _options$workerSchedu !== void 0 ? _options$workerSchedu : 'round-robin';\n    this._taskQueue = (_options$taskQueue = options.taskQueue) !== null && _options$taskQueue !== void 0 ? _options$taskQueue : new _FifoQueue.default();\n  }\n  doWork(method) {\n    const customMessageListeners = new Set();\n    const addCustomMessageListener = listener => {\n      customMessageListeners.add(listener);\n      return () => {\n        customMessageListeners.delete(listener);\n      };\n    };\n    const onCustomMessage = message => {\n      customMessageListeners.forEach(listener => listener(message));\n    };\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const promise = new Promise(\n    // Bind args to this function so it won't reference to the parent scope.\n    // This prevents a memory leak in v8, because otherwise the function will\n    // retaine args for the closure.\n    ((args, resolve, reject) => {\n      const computeWorkerKey = this._computeWorkerKey;\n      const request = [_types.CHILD_MESSAGE_CALL, false, method, args];\n      let worker = null;\n      let hash = null;\n      if (computeWorkerKey) {\n        hash = computeWorkerKey.call(this, method, ...args);\n        worker = hash == null ? null : this._cacheKeys[hash];\n      }\n      const onStart = worker => {\n        if (hash != null) {\n          this._cacheKeys[hash] = worker;\n        }\n      };\n      const onEnd = (error, result) => {\n        customMessageListeners.clear();\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      };\n      const task = {\n        onCustomMessage,\n        onEnd,\n        onStart,\n        request\n      };\n      if (worker) {\n        this._taskQueue.enqueue(task, worker.getWorkerId());\n        this._process(worker.getWorkerId());\n      } else {\n        this._push(task);\n      }\n    }).bind(null, args));\n    promise.UNSTABLE_onCustomMessage = addCustomMessageListener;\n    return promise;\n  }\n  _process(workerId) {\n    if (this._isLocked(workerId)) {\n      return this;\n    }\n    const task = this._taskQueue.dequeue(workerId);\n    if (!task) {\n      return this;\n    }\n    if (task.request[1]) {\n      throw new Error('Queue implementation returned processed task');\n    } // Reference the task object outside so it won't be retained by onEnd,\n    // and other properties of the task object, such as task.request can be\n    // garbage collected.\n\n    const taskOnEnd = task.onEnd;\n    const onEnd = (error, result) => {\n      taskOnEnd(error, result);\n      this._unlock(workerId);\n      this._process(workerId);\n    };\n    task.request[1] = true;\n    this._lock(workerId);\n    this._callback(workerId, task.request, task.onStart, onEnd, task.onCustomMessage);\n    return this;\n  }\n  _push(task) {\n    this._taskQueue.enqueue(task);\n    const offset = this._getNextWorkerOffset();\n    for (let i = 0; i < this._numOfWorkers; i++) {\n      this._process((offset + i) % this._numOfWorkers);\n      if (task.request[1]) {\n        break;\n      }\n    }\n    return this;\n  }\n  _getNextWorkerOffset() {\n    switch (this._workerSchedulingPolicy) {\n      case 'in-order':\n        return 0;\n      case 'round-robin':\n        return this._offset++;\n    }\n  }\n  _lock(workerId) {\n    this._locks[workerId] = true;\n  }\n  _unlock(workerId) {\n    this._locks[workerId] = false;\n  }\n  _isLocked(workerId) {\n    return this._locks[workerId];\n  }\n}\nexports.default = Farm;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_FifoQueue","_interopRequireDefault","require","_types","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","Farm","constructor","_numOfWorkers","_callback","options","arguments","length","undefined","_options$workerSchedu","_options$taskQueue","create","_computeWorkerKey","computeWorkerKey","_workerSchedulingPolicy","workerSchedulingPolicy","_taskQueue","taskQueue","doWork","method","customMessageListeners","Set","addCustomMessageListener","listener","add","delete","onCustomMessage","message","forEach","_len","args","Array","_key","promise","Promise","resolve","reject","request","CHILD_MESSAGE_CALL","worker","hash","call","_cacheKeys","onStart","onEnd","error","result","clear","task","enqueue","getWorkerId","_process","_push","bind","UNSTABLE_onCustomMessage","workerId","_isLocked","dequeue","Error","taskOnEnd","_unlock","_lock","offset","_getNextWorkerOffset","i","_offset","_locks"],"sources":["/home/hemanth/react-project/client/node_modules/jest-worker/build/Farm.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _FifoQueue = _interopRequireDefault(require('./FifoQueue'));\n\nvar _types = require('./types');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass Farm {\n  constructor(_numOfWorkers, _callback, options = {}) {\n    var _options$workerSchedu, _options$taskQueue;\n\n    _defineProperty(this, '_computeWorkerKey', void 0);\n\n    _defineProperty(this, '_workerSchedulingPolicy', void 0);\n\n    _defineProperty(this, '_cacheKeys', Object.create(null));\n\n    _defineProperty(this, '_locks', []);\n\n    _defineProperty(this, '_offset', 0);\n\n    _defineProperty(this, '_taskQueue', void 0);\n\n    this._numOfWorkers = _numOfWorkers;\n    this._callback = _callback;\n    this._computeWorkerKey = options.computeWorkerKey;\n    this._workerSchedulingPolicy =\n      (_options$workerSchedu = options.workerSchedulingPolicy) !== null &&\n      _options$workerSchedu !== void 0\n        ? _options$workerSchedu\n        : 'round-robin';\n    this._taskQueue =\n      (_options$taskQueue = options.taskQueue) !== null &&\n      _options$taskQueue !== void 0\n        ? _options$taskQueue\n        : new _FifoQueue.default();\n  }\n\n  doWork(method, ...args) {\n    const customMessageListeners = new Set();\n\n    const addCustomMessageListener = listener => {\n      customMessageListeners.add(listener);\n      return () => {\n        customMessageListeners.delete(listener);\n      };\n    };\n\n    const onCustomMessage = message => {\n      customMessageListeners.forEach(listener => listener(message));\n    };\n\n    const promise = new Promise( // Bind args to this function so it won't reference to the parent scope.\n      // This prevents a memory leak in v8, because otherwise the function will\n      // retaine args for the closure.\n      ((args, resolve, reject) => {\n        const computeWorkerKey = this._computeWorkerKey;\n        const request = [_types.CHILD_MESSAGE_CALL, false, method, args];\n        let worker = null;\n        let hash = null;\n\n        if (computeWorkerKey) {\n          hash = computeWorkerKey.call(this, method, ...args);\n          worker = hash == null ? null : this._cacheKeys[hash];\n        }\n\n        const onStart = worker => {\n          if (hash != null) {\n            this._cacheKeys[hash] = worker;\n          }\n        };\n\n        const onEnd = (error, result) => {\n          customMessageListeners.clear();\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(result);\n          }\n        };\n\n        const task = {\n          onCustomMessage,\n          onEnd,\n          onStart,\n          request\n        };\n\n        if (worker) {\n          this._taskQueue.enqueue(task, worker.getWorkerId());\n\n          this._process(worker.getWorkerId());\n        } else {\n          this._push(task);\n        }\n      }).bind(null, args)\n    );\n    promise.UNSTABLE_onCustomMessage = addCustomMessageListener;\n    return promise;\n  }\n\n  _process(workerId) {\n    if (this._isLocked(workerId)) {\n      return this;\n    }\n\n    const task = this._taskQueue.dequeue(workerId);\n\n    if (!task) {\n      return this;\n    }\n\n    if (task.request[1]) {\n      throw new Error('Queue implementation returned processed task');\n    } // Reference the task object outside so it won't be retained by onEnd,\n    // and other properties of the task object, such as task.request can be\n    // garbage collected.\n\n    const taskOnEnd = task.onEnd;\n\n    const onEnd = (error, result) => {\n      taskOnEnd(error, result);\n\n      this._unlock(workerId);\n\n      this._process(workerId);\n    };\n\n    task.request[1] = true;\n\n    this._lock(workerId);\n\n    this._callback(\n      workerId,\n      task.request,\n      task.onStart,\n      onEnd,\n      task.onCustomMessage\n    );\n\n    return this;\n  }\n\n  _push(task) {\n    this._taskQueue.enqueue(task);\n\n    const offset = this._getNextWorkerOffset();\n\n    for (let i = 0; i < this._numOfWorkers; i++) {\n      this._process((offset + i) % this._numOfWorkers);\n\n      if (task.request[1]) {\n        break;\n      }\n    }\n\n    return this;\n  }\n\n  _getNextWorkerOffset() {\n    switch (this._workerSchedulingPolicy) {\n      case 'in-order':\n        return 0;\n\n      case 'round-robin':\n        return this._offset++;\n    }\n  }\n\n  _lock(workerId) {\n    this._locks[workerId] = true;\n  }\n\n  _unlock(workerId) {\n    this._locks[workerId] = false;\n  }\n\n  _isLocked(workerId) {\n    return this._locks[workerId];\n  }\n}\n\nexports.default = Farm;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @param {ChunkGroup} chunkGroup the ChunkGroup to connect\n * @param {Chunk} chunk chunk to tie to ChunkGroup\n * @returns {void}\n */\nconst connectChunkGroupAndChunk = (chunkGroup, chunk) => {\n  if (chunkGroup.pushChunk(chunk)) {\n    chunk.addGroup(chunkGroup);\n  }\n};\n\n/**\n * @param {ChunkGroup} parent parent ChunkGroup to connect\n * @param {ChunkGroup} child child ChunkGroup to connect\n * @returns {void}\n */\nconst connectChunkGroupParentAndChild = (parent, child) => {\n  if (parent.addChild(child)) {\n    child.addParent(parent);\n  }\n};\nexports.connectChunkGroupAndChunk = connectChunkGroupAndChunk;\nexports.connectChunkGroupParentAndChild = connectChunkGroupParentAndChild;","map":{"version":3,"names":["connectChunkGroupAndChunk","chunkGroup","chunk","pushChunk","addGroup","connectChunkGroupParentAndChild","parent","child","addChild","addParent","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/GraphHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @param {ChunkGroup} chunkGroup the ChunkGroup to connect\n * @param {Chunk} chunk chunk to tie to ChunkGroup\n * @returns {void}\n */\nconst connectChunkGroupAndChunk = (chunkGroup, chunk) => {\n\tif (chunkGroup.pushChunk(chunk)) {\n\t\tchunk.addGroup(chunkGroup);\n\t}\n};\n\n/**\n * @param {ChunkGroup} parent parent ChunkGroup to connect\n * @param {ChunkGroup} child child ChunkGroup to connect\n * @returns {void}\n */\nconst connectChunkGroupParentAndChild = (parent, child) => {\n\tif (parent.addChild(child)) {\n\t\tchild.addParent(parent);\n\t}\n};\n\nexports.connectChunkGroupAndChunk = connectChunkGroupAndChunk;\nexports.connectChunkGroupParentAndChild = connectChunkGroupParentAndChild;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,yBAAyB,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;EACxD,IAAID,UAAU,CAACE,SAAS,CAACD,KAAK,CAAC,EAAE;IAChCA,KAAK,CAACE,QAAQ,CAACH,UAAU,CAAC;EAC3B;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMI,+BAA+B,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;EAC1D,IAAID,MAAM,CAACE,QAAQ,CAACD,KAAK,CAAC,EAAE;IAC3BA,KAAK,CAACE,SAAS,CAACH,MAAM,CAAC;EACxB;AACD,CAAC;AAEDI,OAAO,CAACV,yBAAyB,GAAGA,yBAAyB;AAC7DU,OAAO,CAACL,+BAA+B,GAAGA,+BAA+B"},"metadata":{},"sourceType":"script","externalDependencies":[]}
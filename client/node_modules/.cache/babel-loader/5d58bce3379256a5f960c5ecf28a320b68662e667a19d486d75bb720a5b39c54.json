{"ast":null,"code":"\"use strict\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\nfunction setupWriteToDisk(context) {\n  /**\n   * @type {Compiler[]}\n   */\n  const compilers = /** @type {MultiCompiler} */\n  context.compiler.compilers || [context.compiler];\n  for (const compiler of compilers) {\n    compiler.hooks.emit.tap(\"DevMiddleware\",\n    /**\n     * @param {Compilation} compilation\n     */\n    compilation => {\n      // @ts-ignore\n      if (compiler.hasWebpackDevMiddlewareAssetEmittedCallback) {\n        return;\n      }\n      compiler.hooks.assetEmitted.tapAsync(\"DevMiddleware\", (file, info, callback) => {\n        /**\n         * @type {string}\n         */\n        let targetPath;\n        /**\n         * @type {Buffer}\n         */\n\n        let content; // webpack@5\n\n        if (info.compilation) {\n          ({\n            targetPath,\n            content\n          } = info);\n        } else {\n          let targetFile = file;\n          const queryStringIdx = targetFile.indexOf(\"?\");\n          if (queryStringIdx >= 0) {\n            targetFile = targetFile.slice(0, queryStringIdx);\n          }\n          let {\n            outputPath\n          } = compiler;\n          outputPath = compilation.getPath(outputPath, {}); // @ts-ignore\n\n          content = info;\n          targetPath = path.join(outputPath, targetFile);\n        }\n        const {\n          writeToDisk: filter\n        } = context.options;\n        const allowWrite = filter && typeof filter === \"function\" ? filter(targetPath) : true;\n        if (!allowWrite) {\n          return callback();\n        }\n        const dir = path.dirname(targetPath);\n        const name = compiler.options.name ? `Child \"${compiler.options.name}\": ` : \"\";\n        return fs.mkdir(dir, {\n          recursive: true\n        }, mkdirError => {\n          if (mkdirError) {\n            context.logger.error(`${name}Unable to write \"${dir}\" directory to disk:\\n${mkdirError}`);\n            return callback(mkdirError);\n          }\n          return fs.writeFile(targetPath, content, writeFileError => {\n            if (writeFileError) {\n              context.logger.error(`${name}Unable to write \"${targetPath}\" asset to disk:\\n${writeFileError}`);\n              return callback(writeFileError);\n            }\n            context.logger.log(`${name}Asset written to disk: \"${targetPath}\"`);\n            return callback();\n          });\n        });\n      }); // @ts-ignore\n\n      compiler.hasWebpackDevMiddlewareAssetEmittedCallback = true;\n    });\n  }\n}\nmodule.exports = setupWriteToDisk;","map":{"version":3,"names":["fs","require","path","setupWriteToDisk","context","compilers","compiler","hooks","emit","tap","compilation","hasWebpackDevMiddlewareAssetEmittedCallback","assetEmitted","tapAsync","file","info","callback","targetPath","content","targetFile","queryStringIdx","indexOf","slice","outputPath","getPath","join","writeToDisk","filter","options","allowWrite","dir","dirname","name","mkdir","recursive","mkdirError","logger","error","writeFile","writeFileError","log","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-dev-middleware/dist/utils/setupWriteToDisk.js"],"sourcesContent":["\"use strict\";\n\nconst fs = require(\"fs\");\n\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\n\nfunction setupWriteToDisk(context) {\n  /**\n   * @type {Compiler[]}\n   */\n  const compilers =\n  /** @type {MultiCompiler} */\n  context.compiler.compilers || [context.compiler];\n\n  for (const compiler of compilers) {\n    compiler.hooks.emit.tap(\"DevMiddleware\",\n    /**\n     * @param {Compilation} compilation\n     */\n    compilation => {\n      // @ts-ignore\n      if (compiler.hasWebpackDevMiddlewareAssetEmittedCallback) {\n        return;\n      }\n\n      compiler.hooks.assetEmitted.tapAsync(\"DevMiddleware\", (file, info, callback) => {\n        /**\n         * @type {string}\n         */\n        let targetPath;\n        /**\n         * @type {Buffer}\n         */\n\n        let content; // webpack@5\n\n        if (info.compilation) {\n          ({\n            targetPath,\n            content\n          } = info);\n        } else {\n          let targetFile = file;\n          const queryStringIdx = targetFile.indexOf(\"?\");\n\n          if (queryStringIdx >= 0) {\n            targetFile = targetFile.slice(0, queryStringIdx);\n          }\n\n          let {\n            outputPath\n          } = compiler;\n          outputPath = compilation.getPath(outputPath, {}); // @ts-ignore\n\n          content = info;\n          targetPath = path.join(outputPath, targetFile);\n        }\n\n        const {\n          writeToDisk: filter\n        } = context.options;\n        const allowWrite = filter && typeof filter === \"function\" ? filter(targetPath) : true;\n\n        if (!allowWrite) {\n          return callback();\n        }\n\n        const dir = path.dirname(targetPath);\n        const name = compiler.options.name ? `Child \"${compiler.options.name}\": ` : \"\";\n        return fs.mkdir(dir, {\n          recursive: true\n        }, mkdirError => {\n          if (mkdirError) {\n            context.logger.error(`${name}Unable to write \"${dir}\" directory to disk:\\n${mkdirError}`);\n            return callback(mkdirError);\n          }\n\n          return fs.writeFile(targetPath, content, writeFileError => {\n            if (writeFileError) {\n              context.logger.error(`${name}Unable to write \"${targetPath}\" asset to disk:\\n${writeFileError}`);\n              return callback(writeFileError);\n            }\n\n            context.logger.log(`${name}Asset written to disk: \"${targetPath}\"`);\n            return callback();\n          });\n        });\n      }); // @ts-ignore\n\n      compiler.hasWebpackDevMiddlewareAssetEmittedCallback = true;\n    });\n  }\n}\n\nmodule.exports = setupWriteToDisk;"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,SAASE,gBAAgBA,CAACC,OAAO,EAAE;EACjC;AACF;AACA;EACE,MAAMC,SAAS,GACf;EACAD,OAAO,CAACE,QAAQ,CAACD,SAAS,IAAI,CAACD,OAAO,CAACE,QAAQ,CAAC;EAEhD,KAAK,MAAMA,QAAQ,IAAID,SAAS,EAAE;IAChCC,QAAQ,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,eAAe;IACvC;AACJ;AACA;IACIC,WAAW,IAAI;MACb;MACA,IAAIJ,QAAQ,CAACK,2CAA2C,EAAE;QACxD;MACF;MAEAL,QAAQ,CAACC,KAAK,CAACK,YAAY,CAACC,QAAQ,CAAC,eAAe,EAAE,CAACC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,KAAK;QAC9E;AACR;AACA;QACQ,IAAIC,UAAU;QACd;AACR;AACA;;QAEQ,IAAIC,OAAO,CAAC,CAAC;;QAEb,IAAIH,IAAI,CAACL,WAAW,EAAE;UACpB,CAAC;YACCO,UAAU;YACVC;UACF,CAAC,GAAGH,IAAI;QACV,CAAC,MAAM;UACL,IAAII,UAAU,GAAGL,IAAI;UACrB,MAAMM,cAAc,GAAGD,UAAU,CAACE,OAAO,CAAC,GAAG,CAAC;UAE9C,IAAID,cAAc,IAAI,CAAC,EAAE;YACvBD,UAAU,GAAGA,UAAU,CAACG,KAAK,CAAC,CAAC,EAAEF,cAAc,CAAC;UAClD;UAEA,IAAI;YACFG;UACF,CAAC,GAAGjB,QAAQ;UACZiB,UAAU,GAAGb,WAAW,CAACc,OAAO,CAACD,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;UAElDL,OAAO,GAAGH,IAAI;UACdE,UAAU,GAAGf,IAAI,CAACuB,IAAI,CAACF,UAAU,EAAEJ,UAAU,CAAC;QAChD;QAEA,MAAM;UACJO,WAAW,EAAEC;QACf,CAAC,GAAGvB,OAAO,CAACwB,OAAO;QACnB,MAAMC,UAAU,GAAGF,MAAM,IAAI,OAAOA,MAAM,KAAK,UAAU,GAAGA,MAAM,CAACV,UAAU,CAAC,GAAG,IAAI;QAErF,IAAI,CAACY,UAAU,EAAE;UACf,OAAOb,QAAQ,CAAC,CAAC;QACnB;QAEA,MAAMc,GAAG,GAAG5B,IAAI,CAAC6B,OAAO,CAACd,UAAU,CAAC;QACpC,MAAMe,IAAI,GAAG1B,QAAQ,CAACsB,OAAO,CAACI,IAAI,GAAI,UAAS1B,QAAQ,CAACsB,OAAO,CAACI,IAAK,KAAI,GAAG,EAAE;QAC9E,OAAOhC,EAAE,CAACiC,KAAK,CAACH,GAAG,EAAE;UACnBI,SAAS,EAAE;QACb,CAAC,EAAEC,UAAU,IAAI;UACf,IAAIA,UAAU,EAAE;YACd/B,OAAO,CAACgC,MAAM,CAACC,KAAK,CAAE,GAAEL,IAAK,oBAAmBF,GAAI,yBAAwBK,UAAW,EAAC,CAAC;YACzF,OAAOnB,QAAQ,CAACmB,UAAU,CAAC;UAC7B;UAEA,OAAOnC,EAAE,CAACsC,SAAS,CAACrB,UAAU,EAAEC,OAAO,EAAEqB,cAAc,IAAI;YACzD,IAAIA,cAAc,EAAE;cAClBnC,OAAO,CAACgC,MAAM,CAACC,KAAK,CAAE,GAAEL,IAAK,oBAAmBf,UAAW,qBAAoBsB,cAAe,EAAC,CAAC;cAChG,OAAOvB,QAAQ,CAACuB,cAAc,CAAC;YACjC;YAEAnC,OAAO,CAACgC,MAAM,CAACI,GAAG,CAAE,GAAER,IAAK,2BAA0Bf,UAAW,GAAE,CAAC;YACnE,OAAOD,QAAQ,CAAC,CAAC;UACnB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC;;MAEJV,QAAQ,CAACK,2CAA2C,GAAG,IAAI;IAC7D,CAAC,CAAC;EACJ;AACF;AAEA8B,MAAM,CAACC,OAAO,GAAGvC,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
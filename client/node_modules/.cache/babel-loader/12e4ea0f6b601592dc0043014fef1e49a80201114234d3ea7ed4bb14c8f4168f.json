{"ast":null,"code":"\"use strict\";\n\nconst webpack = require(\"webpack\");\nconst {\n  isColorSupported\n} = require(\"colorette\");\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Stats} Stats */\n\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/** @typedef {Configuration[\"stats\"]} StatsOptions */\n\n/** @typedef {{ children: Configuration[\"stats\"][] }} MultiStatsOptions */\n\n/** @typedef {Exclude<Configuration[\"stats\"], boolean | string | undefined>} NormalizedStatsOptions */\n// TODO remove `color` after dropping webpack v4\n\n/** @typedef {{ children: StatsOptions[], colors?: any }} MultiNormalizedStatsOptions */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\nfunction setupHooks(context) {\n  function invalid() {\n    if (context.state) {\n      context.logger.log(\"Compilation starting...\");\n    } // We are now in invalid state\n    // eslint-disable-next-line no-param-reassign\n\n    context.state = false; // eslint-disable-next-line no-param-reassign, no-undefined\n\n    context.stats = undefined;\n  } // @ts-ignore\n\n  const statsForWebpack4 = webpack.Stats && webpack.Stats.presetToOptions;\n  /**\n   * @param {Configuration[\"stats\"]} statsOptions\n   * @returns {NormalizedStatsOptions}\n   */\n\n  function normalizeStatsOptions(statsOptions) {\n    if (statsForWebpack4) {\n      if (typeof statsOptions === \"undefined\") {\n        // eslint-disable-next-line no-param-reassign\n        statsOptions = {};\n      } else if (typeof statsOptions === \"boolean\" || typeof statsOptions === \"string\") {\n        // @ts-ignore\n        // eslint-disable-next-line no-param-reassign\n        statsOptions = webpack.Stats.presetToOptions(statsOptions);\n      } // @ts-ignore\n\n      return statsOptions;\n    }\n    if (typeof statsOptions === \"undefined\") {\n      // eslint-disable-next-line no-param-reassign\n      statsOptions = {\n        preset: \"normal\"\n      };\n    } else if (typeof statsOptions === \"boolean\") {\n      // eslint-disable-next-line no-param-reassign\n      statsOptions = statsOptions ? {\n        preset: \"normal\"\n      } : {\n        preset: \"none\"\n      };\n    } else if (typeof statsOptions === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      statsOptions = {\n        preset: statsOptions\n      };\n    }\n    return statsOptions;\n  }\n  /**\n   * @param {Stats | MultiStats} stats\n   */\n\n  function done(stats) {\n    // We are now on valid state\n    // eslint-disable-next-line no-param-reassign\n    context.state = true; // eslint-disable-next-line no-param-reassign\n\n    context.stats = stats; // Do the stuff in nextTick, because bundle may be invalidated if a change happened while compiling\n\n    process.nextTick(() => {\n      const {\n        compiler,\n        logger,\n        options,\n        state,\n        callbacks\n      } = context; // Check if still in valid state\n\n      if (!state) {\n        return;\n      }\n      logger.log(\"Compilation finished\");\n      const isMultiCompilerMode = Boolean( /** @type {MultiCompiler} */\n      compiler.compilers);\n      /**\n       * @type {StatsOptions | MultiStatsOptions | NormalizedStatsOptions | MultiNormalizedStatsOptions}\n       */\n\n      let statsOptions;\n      if (typeof options.stats !== \"undefined\") {\n        statsOptions = isMultiCompilerMode ? {\n          children: /** @type {MultiCompiler} */\n          compiler.compilers.map(() => options.stats)\n        } : options.stats;\n      } else {\n        statsOptions = isMultiCompilerMode ? {\n          children: /** @type {MultiCompiler} */\n          compiler.compilers.map(child => child.options.stats)\n        } : /** @type {Compiler} */\n        compiler.options.stats;\n      }\n      if (isMultiCompilerMode) {\n        /** @type {MultiNormalizedStatsOptions} */\n        statsOptions.children = /** @type {MultiStatsOptions} */\n        statsOptions.children.map(\n        /**\n         * @param {StatsOptions} childStatsOptions\n         * @return {NormalizedStatsOptions}\n         */\n        childStatsOptions => {\n          // eslint-disable-next-line no-param-reassign\n          childStatsOptions = normalizeStatsOptions(childStatsOptions);\n          if (typeof childStatsOptions.colors === \"undefined\") {\n            // eslint-disable-next-line no-param-reassign\n            childStatsOptions.colors = isColorSupported;\n          }\n          return childStatsOptions;\n        });\n      } else {\n        /** @type {NormalizedStatsOptions} */\n        statsOptions = normalizeStatsOptions( /** @type {StatsOptions} */\n        statsOptions);\n        if (typeof statsOptions.colors === \"undefined\") {\n          statsOptions.colors = isColorSupported;\n        }\n      } // TODO webpack@4 doesn't support `{ children: [{ colors: true }, { colors: true }] }` for stats\n\n      if ( /** @type {MultiCompiler} */\n      compiler.compilers && statsForWebpack4) {\n        /** @type {MultiNormalizedStatsOptions} */\n        statsOptions.colors = /** @type {MultiNormalizedStatsOptions} */\n        statsOptions.children.some(\n        /**\n         * @param {StatsOptions} child\n         */\n        // @ts-ignore\n        child => child.colors);\n      }\n      const printedStats = stats.toString(statsOptions); // Avoid extra empty line when `stats: 'none'`\n\n      if (printedStats) {\n        // eslint-disable-next-line no-console\n        console.log(printedStats);\n      } // eslint-disable-next-line no-param-reassign\n\n      context.callbacks = []; // Execute callback that are delayed\n\n      callbacks.forEach(\n      /**\n       * @param {(...args: any[]) => Stats | MultiStats} callback\n       */\n      callback => {\n        callback(stats);\n      });\n    });\n  }\n  context.compiler.hooks.watchRun.tap(\"webpack-dev-middleware\", invalid);\n  context.compiler.hooks.invalid.tap(\"webpack-dev-middleware\", invalid);\n  context.compiler.hooks.done.tap(\"webpack-dev-middleware\", done);\n}\nmodule.exports = setupHooks;","map":{"version":3,"names":["webpack","require","isColorSupported","setupHooks","context","invalid","state","logger","log","stats","undefined","statsForWebpack4","Stats","presetToOptions","normalizeStatsOptions","statsOptions","preset","done","process","nextTick","compiler","options","callbacks","isMultiCompilerMode","Boolean","compilers","children","map","child","childStatsOptions","colors","some","printedStats","toString","console","forEach","callback","hooks","watchRun","tap","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-dev-middleware/dist/utils/setupHooks.js"],"sourcesContent":["\"use strict\";\n\nconst webpack = require(\"webpack\");\n\nconst {\n  isColorSupported\n} = require(\"colorette\");\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Stats} Stats */\n\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n/** @typedef {Configuration[\"stats\"]} StatsOptions */\n\n/** @typedef {{ children: Configuration[\"stats\"][] }} MultiStatsOptions */\n\n/** @typedef {Exclude<Configuration[\"stats\"], boolean | string | undefined>} NormalizedStatsOptions */\n// TODO remove `color` after dropping webpack v4\n\n/** @typedef {{ children: StatsOptions[], colors?: any }} MultiNormalizedStatsOptions */\n\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n */\n\n\nfunction setupHooks(context) {\n  function invalid() {\n    if (context.state) {\n      context.logger.log(\"Compilation starting...\");\n    } // We are now in invalid state\n    // eslint-disable-next-line no-param-reassign\n\n\n    context.state = false; // eslint-disable-next-line no-param-reassign, no-undefined\n\n    context.stats = undefined;\n  } // @ts-ignore\n\n\n  const statsForWebpack4 = webpack.Stats && webpack.Stats.presetToOptions;\n  /**\n   * @param {Configuration[\"stats\"]} statsOptions\n   * @returns {NormalizedStatsOptions}\n   */\n\n  function normalizeStatsOptions(statsOptions) {\n    if (statsForWebpack4) {\n      if (typeof statsOptions === \"undefined\") {\n        // eslint-disable-next-line no-param-reassign\n        statsOptions = {};\n      } else if (typeof statsOptions === \"boolean\" || typeof statsOptions === \"string\") {\n        // @ts-ignore\n        // eslint-disable-next-line no-param-reassign\n        statsOptions = webpack.Stats.presetToOptions(statsOptions);\n      } // @ts-ignore\n\n\n      return statsOptions;\n    }\n\n    if (typeof statsOptions === \"undefined\") {\n      // eslint-disable-next-line no-param-reassign\n      statsOptions = {\n        preset: \"normal\"\n      };\n    } else if (typeof statsOptions === \"boolean\") {\n      // eslint-disable-next-line no-param-reassign\n      statsOptions = statsOptions ? {\n        preset: \"normal\"\n      } : {\n        preset: \"none\"\n      };\n    } else if (typeof statsOptions === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      statsOptions = {\n        preset: statsOptions\n      };\n    }\n\n    return statsOptions;\n  }\n  /**\n   * @param {Stats | MultiStats} stats\n   */\n\n\n  function done(stats) {\n    // We are now on valid state\n    // eslint-disable-next-line no-param-reassign\n    context.state = true; // eslint-disable-next-line no-param-reassign\n\n    context.stats = stats; // Do the stuff in nextTick, because bundle may be invalidated if a change happened while compiling\n\n    process.nextTick(() => {\n      const {\n        compiler,\n        logger,\n        options,\n        state,\n        callbacks\n      } = context; // Check if still in valid state\n\n      if (!state) {\n        return;\n      }\n\n      logger.log(\"Compilation finished\");\n      const isMultiCompilerMode = Boolean(\n      /** @type {MultiCompiler} */\n      compiler.compilers);\n      /**\n       * @type {StatsOptions | MultiStatsOptions | NormalizedStatsOptions | MultiNormalizedStatsOptions}\n       */\n\n      let statsOptions;\n\n      if (typeof options.stats !== \"undefined\") {\n        statsOptions = isMultiCompilerMode ? {\n          children:\n          /** @type {MultiCompiler} */\n          compiler.compilers.map(() => options.stats)\n        } : options.stats;\n      } else {\n        statsOptions = isMultiCompilerMode ? {\n          children:\n          /** @type {MultiCompiler} */\n          compiler.compilers.map(child => child.options.stats)\n        } :\n        /** @type {Compiler} */\n        compiler.options.stats;\n      }\n\n      if (isMultiCompilerMode) {\n        /** @type {MultiNormalizedStatsOptions} */\n        statsOptions.children =\n        /** @type {MultiStatsOptions} */\n        statsOptions.children.map(\n        /**\n         * @param {StatsOptions} childStatsOptions\n         * @return {NormalizedStatsOptions}\n         */\n        childStatsOptions => {\n          // eslint-disable-next-line no-param-reassign\n          childStatsOptions = normalizeStatsOptions(childStatsOptions);\n\n          if (typeof childStatsOptions.colors === \"undefined\") {\n            // eslint-disable-next-line no-param-reassign\n            childStatsOptions.colors = isColorSupported;\n          }\n\n          return childStatsOptions;\n        });\n      } else {\n        /** @type {NormalizedStatsOptions} */\n        statsOptions = normalizeStatsOptions(\n        /** @type {StatsOptions} */\n        statsOptions);\n\n        if (typeof statsOptions.colors === \"undefined\") {\n          statsOptions.colors = isColorSupported;\n        }\n      } // TODO webpack@4 doesn't support `{ children: [{ colors: true }, { colors: true }] }` for stats\n\n\n      if (\n      /** @type {MultiCompiler} */\n      compiler.compilers && statsForWebpack4) {\n        /** @type {MultiNormalizedStatsOptions} */\n        statsOptions.colors =\n        /** @type {MultiNormalizedStatsOptions} */\n        statsOptions.children.some(\n        /**\n         * @param {StatsOptions} child\n         */\n        // @ts-ignore\n        child => child.colors);\n      }\n\n      const printedStats = stats.toString(statsOptions); // Avoid extra empty line when `stats: 'none'`\n\n      if (printedStats) {\n        // eslint-disable-next-line no-console\n        console.log(printedStats);\n      } // eslint-disable-next-line no-param-reassign\n\n\n      context.callbacks = []; // Execute callback that are delayed\n\n      callbacks.forEach(\n      /**\n       * @param {(...args: any[]) => Stats | MultiStats} callback\n       */\n      callback => {\n        callback(stats);\n      });\n    });\n  }\n\n  context.compiler.hooks.watchRun.tap(\"webpack-dev-middleware\", invalid);\n  context.compiler.hooks.invalid.tap(\"webpack-dev-middleware\", invalid);\n  context.compiler.hooks.done.tap(\"webpack-dev-middleware\", done);\n}\n\nmodule.exports = setupHooks;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getWatcherManager = require(\"./getWatcherManager\");\nconst LinkResolver = require(\"./LinkResolver\");\nconst EventEmitter = require(\"events\").EventEmitter;\nconst globToRegExp = require(\"glob-to-regexp\");\nconst watchEventSource = require(\"./watchEventSource\");\nconst EMPTY_ARRAY = [];\nconst EMPTY_OPTIONS = {};\nfunction addWatchersToSet(watchers, set) {\n  for (const ww of watchers) {\n    const w = ww.watcher;\n    if (!set.has(w.directoryWatcher)) {\n      set.add(w.directoryWatcher);\n    }\n  }\n}\nconst stringToRegexp = ignored => {\n  const source = globToRegExp(ignored, {\n    globstar: true,\n    extended: true\n  }).source;\n  const matchingStart = source.slice(0, source.length - 1) + \"(?:$|\\\\/)\";\n  return matchingStart;\n};\nconst ignoredToFunction = ignored => {\n  if (Array.isArray(ignored)) {\n    const regexp = new RegExp(ignored.map(i => stringToRegexp(i)).join(\"|\"));\n    return x => regexp.test(x.replace(/\\\\/g, \"/\"));\n  } else if (typeof ignored === \"string\") {\n    const regexp = new RegExp(stringToRegexp(ignored));\n    return x => regexp.test(x.replace(/\\\\/g, \"/\"));\n  } else if (ignored instanceof RegExp) {\n    return x => ignored.test(x.replace(/\\\\/g, \"/\"));\n  } else if (ignored instanceof Function) {\n    return ignored;\n  } else if (ignored) {\n    throw new Error(`Invalid option for 'ignored': ${ignored}`);\n  } else {\n    return () => false;\n  }\n};\nconst normalizeOptions = options => {\n  return {\n    followSymlinks: !!options.followSymlinks,\n    ignored: ignoredToFunction(options.ignored),\n    poll: options.poll\n  };\n};\nconst normalizeCache = new WeakMap();\nconst cachedNormalizeOptions = options => {\n  const cacheEntry = normalizeCache.get(options);\n  if (cacheEntry !== undefined) return cacheEntry;\n  const normalized = normalizeOptions(options);\n  normalizeCache.set(options, normalized);\n  return normalized;\n};\nclass WatchpackFileWatcher {\n  constructor(watchpack, watcher, files) {\n    this.files = Array.isArray(files) ? files : [files];\n    this.watcher = watcher;\n    watcher.on(\"initial-missing\", type => {\n      for (const file of this.files) {\n        if (!watchpack._missing.has(file)) watchpack._onRemove(file, file, type);\n      }\n    });\n    watcher.on(\"change\", (mtime, type) => {\n      for (const file of this.files) {\n        watchpack._onChange(file, mtime, file, type);\n      }\n    });\n    watcher.on(\"remove\", type => {\n      for (const file of this.files) {\n        watchpack._onRemove(file, file, type);\n      }\n    });\n  }\n  update(files) {\n    if (!Array.isArray(files)) {\n      if (this.files.length !== 1) {\n        this.files = [files];\n      } else if (this.files[0] !== files) {\n        this.files[0] = files;\n      }\n    } else {\n      this.files = files;\n    }\n  }\n  close() {\n    this.watcher.close();\n  }\n}\nclass WatchpackDirectoryWatcher {\n  constructor(watchpack, watcher, directories) {\n    this.directories = Array.isArray(directories) ? directories : [directories];\n    this.watcher = watcher;\n    watcher.on(\"initial-missing\", type => {\n      for (const item of this.directories) {\n        watchpack._onRemove(item, item, type);\n      }\n    });\n    watcher.on(\"change\", (file, mtime, type) => {\n      for (const item of this.directories) {\n        watchpack._onChange(item, mtime, file, type);\n      }\n    });\n    watcher.on(\"remove\", type => {\n      for (const item of this.directories) {\n        watchpack._onRemove(item, item, type);\n      }\n    });\n  }\n  update(directories) {\n    if (!Array.isArray(directories)) {\n      if (this.directories.length !== 1) {\n        this.directories = [directories];\n      } else if (this.directories[0] !== directories) {\n        this.directories[0] = directories;\n      }\n    } else {\n      this.directories = directories;\n    }\n  }\n  close() {\n    this.watcher.close();\n  }\n}\nclass Watchpack extends EventEmitter {\n  constructor(options) {\n    super();\n    if (!options) options = EMPTY_OPTIONS;\n    this.options = options;\n    this.aggregateTimeout = typeof options.aggregateTimeout === \"number\" ? options.aggregateTimeout : 200;\n    this.watcherOptions = cachedNormalizeOptions(options);\n    this.watcherManager = getWatcherManager(this.watcherOptions);\n    this.fileWatchers = new Map();\n    this.directoryWatchers = new Map();\n    this._missing = new Set();\n    this.startTime = undefined;\n    this.paused = false;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    this.aggregateTimer = undefined;\n    this._onTimeout = this._onTimeout.bind(this);\n  }\n  watch(arg1, arg2, arg3) {\n    let files, directories, missing, startTime;\n    if (!arg2) {\n      ({\n        files = EMPTY_ARRAY,\n        directories = EMPTY_ARRAY,\n        missing = EMPTY_ARRAY,\n        startTime\n      } = arg1);\n    } else {\n      files = arg1;\n      directories = arg2;\n      missing = EMPTY_ARRAY;\n      startTime = arg3;\n    }\n    this.paused = false;\n    const fileWatchers = this.fileWatchers;\n    const directoryWatchers = this.directoryWatchers;\n    const ignored = this.watcherOptions.ignored;\n    const filter = path => !ignored(path);\n    const addToMap = (map, key, item) => {\n      const list = map.get(key);\n      if (list === undefined) {\n        map.set(key, item);\n      } else if (Array.isArray(list)) {\n        list.push(item);\n      } else {\n        map.set(key, [list, item]);\n      }\n    };\n    const fileWatchersNeeded = new Map();\n    const directoryWatchersNeeded = new Map();\n    const missingFiles = new Set();\n    if (this.watcherOptions.followSymlinks) {\n      const resolver = new LinkResolver();\n      for (const file of files) {\n        if (filter(file)) {\n          for (const innerFile of resolver.resolve(file)) {\n            if (file === innerFile || filter(innerFile)) {\n              addToMap(fileWatchersNeeded, innerFile, file);\n            }\n          }\n        }\n      }\n      for (const file of missing) {\n        if (filter(file)) {\n          for (const innerFile of resolver.resolve(file)) {\n            if (file === innerFile || filter(innerFile)) {\n              missingFiles.add(file);\n              addToMap(fileWatchersNeeded, innerFile, file);\n            }\n          }\n        }\n      }\n      for (const dir of directories) {\n        if (filter(dir)) {\n          let first = true;\n          for (const innerItem of resolver.resolve(dir)) {\n            if (filter(innerItem)) {\n              addToMap(first ? directoryWatchersNeeded : fileWatchersNeeded, innerItem, dir);\n            }\n            first = false;\n          }\n        }\n      }\n    } else {\n      for (const file of files) {\n        if (filter(file)) {\n          addToMap(fileWatchersNeeded, file, file);\n        }\n      }\n      for (const file of missing) {\n        if (filter(file)) {\n          missingFiles.add(file);\n          addToMap(fileWatchersNeeded, file, file);\n        }\n      }\n      for (const dir of directories) {\n        if (filter(dir)) {\n          addToMap(directoryWatchersNeeded, dir, dir);\n        }\n      }\n    }\n    // Close unneeded old watchers\n    // and update existing watchers\n    for (const [key, w] of fileWatchers) {\n      const needed = fileWatchersNeeded.get(key);\n      if (needed === undefined) {\n        w.close();\n        fileWatchers.delete(key);\n      } else {\n        w.update(needed);\n        fileWatchersNeeded.delete(key);\n      }\n    }\n    for (const [key, w] of directoryWatchers) {\n      const needed = directoryWatchersNeeded.get(key);\n      if (needed === undefined) {\n        w.close();\n        directoryWatchers.delete(key);\n      } else {\n        w.update(needed);\n        directoryWatchersNeeded.delete(key);\n      }\n    }\n    // Create new watchers and install handlers on these watchers\n    watchEventSource.batch(() => {\n      for (const [key, files] of fileWatchersNeeded) {\n        const watcher = this.watcherManager.watchFile(key, startTime);\n        if (watcher) {\n          fileWatchers.set(key, new WatchpackFileWatcher(this, watcher, files));\n        }\n      }\n      for (const [key, directories] of directoryWatchersNeeded) {\n        const watcher = this.watcherManager.watchDirectory(key, startTime);\n        if (watcher) {\n          directoryWatchers.set(key, new WatchpackDirectoryWatcher(this, watcher, directories));\n        }\n      }\n    });\n    this._missing = missingFiles;\n    this.startTime = startTime;\n  }\n  close() {\n    this.paused = true;\n    if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n    for (const w of this.fileWatchers.values()) w.close();\n    for (const w of this.directoryWatchers.values()) w.close();\n    this.fileWatchers.clear();\n    this.directoryWatchers.clear();\n  }\n  pause() {\n    this.paused = true;\n    if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n  }\n  getTimes() {\n    const directoryWatchers = new Set();\n    addWatchersToSet(this.fileWatchers.values(), directoryWatchers);\n    addWatchersToSet(this.directoryWatchers.values(), directoryWatchers);\n    const obj = Object.create(null);\n    for (const w of directoryWatchers) {\n      const times = w.getTimes();\n      for (const file of Object.keys(times)) obj[file] = times[file];\n    }\n    return obj;\n  }\n  getTimeInfoEntries() {\n    const map = new Map();\n    this.collectTimeInfoEntries(map, map);\n    return map;\n  }\n  collectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n    const allWatchers = new Set();\n    addWatchersToSet(this.fileWatchers.values(), allWatchers);\n    addWatchersToSet(this.directoryWatchers.values(), allWatchers);\n    const safeTime = {\n      value: 0\n    };\n    for (const w of allWatchers) {\n      w.collectTimeInfoEntries(fileTimestamps, directoryTimestamps, safeTime);\n    }\n  }\n  getAggregated() {\n    if (this.aggregateTimer) {\n      clearTimeout(this.aggregateTimer);\n      this.aggregateTimer = undefined;\n    }\n    const changes = this.aggregatedChanges;\n    const removals = this.aggregatedRemovals;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    return {\n      changes,\n      removals\n    };\n  }\n  _onChange(item, mtime, file, type) {\n    file = file || item;\n    if (!this.paused) {\n      this.emit(\"change\", file, mtime, type);\n      if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n      this.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\n    }\n    this.aggregatedRemovals.delete(item);\n    this.aggregatedChanges.add(item);\n  }\n  _onRemove(item, file, type) {\n    file = file || item;\n    if (!this.paused) {\n      this.emit(\"remove\", file, type);\n      if (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n      this.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\n    }\n    this.aggregatedChanges.delete(item);\n    this.aggregatedRemovals.add(item);\n  }\n  _onTimeout() {\n    this.aggregateTimer = undefined;\n    const changes = this.aggregatedChanges;\n    const removals = this.aggregatedRemovals;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    this.emit(\"aggregated\", changes, removals);\n  }\n}\nmodule.exports = Watchpack;","map":{"version":3,"names":["getWatcherManager","require","LinkResolver","EventEmitter","globToRegExp","watchEventSource","EMPTY_ARRAY","EMPTY_OPTIONS","addWatchersToSet","watchers","set","ww","w","watcher","has","directoryWatcher","add","stringToRegexp","ignored","source","globstar","extended","matchingStart","slice","length","ignoredToFunction","Array","isArray","regexp","RegExp","map","i","join","x","test","replace","Function","Error","normalizeOptions","options","followSymlinks","poll","normalizeCache","WeakMap","cachedNormalizeOptions","cacheEntry","get","undefined","normalized","WatchpackFileWatcher","constructor","watchpack","files","on","type","file","_missing","_onRemove","mtime","_onChange","update","close","WatchpackDirectoryWatcher","directories","item","Watchpack","aggregateTimeout","watcherOptions","watcherManager","fileWatchers","Map","directoryWatchers","Set","startTime","paused","aggregatedChanges","aggregatedRemovals","aggregateTimer","_onTimeout","bind","watch","arg1","arg2","arg3","missing","filter","path","addToMap","key","list","push","fileWatchersNeeded","directoryWatchersNeeded","missingFiles","resolver","innerFile","resolve","dir","first","innerItem","needed","delete","batch","watchFile","watchDirectory","clearTimeout","values","clear","pause","getTimes","obj","Object","create","times","keys","getTimeInfoEntries","collectTimeInfoEntries","fileTimestamps","directoryTimestamps","allWatchers","safeTime","value","getAggregated","changes","removals","emit","setTimeout","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/watchpack/lib/watchpack.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getWatcherManager = require(\"./getWatcherManager\");\nconst LinkResolver = require(\"./LinkResolver\");\nconst EventEmitter = require(\"events\").EventEmitter;\nconst globToRegExp = require(\"glob-to-regexp\");\nconst watchEventSource = require(\"./watchEventSource\");\n\nconst EMPTY_ARRAY = [];\nconst EMPTY_OPTIONS = {};\n\nfunction addWatchersToSet(watchers, set) {\n\tfor (const ww of watchers) {\n\t\tconst w = ww.watcher;\n\t\tif (!set.has(w.directoryWatcher)) {\n\t\t\tset.add(w.directoryWatcher);\n\t\t}\n\t}\n}\n\nconst stringToRegexp = ignored => {\n\tconst source = globToRegExp(ignored, { globstar: true, extended: true })\n\t\t.source;\n\tconst matchingStart = source.slice(0, source.length - 1) + \"(?:$|\\\\/)\";\n\treturn matchingStart;\n};\n\nconst ignoredToFunction = ignored => {\n\tif (Array.isArray(ignored)) {\n\t\tconst regexp = new RegExp(ignored.map(i => stringToRegexp(i)).join(\"|\"));\n\t\treturn x => regexp.test(x.replace(/\\\\/g, \"/\"));\n\t} else if (typeof ignored === \"string\") {\n\t\tconst regexp = new RegExp(stringToRegexp(ignored));\n\t\treturn x => regexp.test(x.replace(/\\\\/g, \"/\"));\n\t} else if (ignored instanceof RegExp) {\n\t\treturn x => ignored.test(x.replace(/\\\\/g, \"/\"));\n\t} else if (ignored instanceof Function) {\n\t\treturn ignored;\n\t} else if (ignored) {\n\t\tthrow new Error(`Invalid option for 'ignored': ${ignored}`);\n\t} else {\n\t\treturn () => false;\n\t}\n};\n\nconst normalizeOptions = options => {\n\treturn {\n\t\tfollowSymlinks: !!options.followSymlinks,\n\t\tignored: ignoredToFunction(options.ignored),\n\t\tpoll: options.poll\n\t};\n};\n\nconst normalizeCache = new WeakMap();\nconst cachedNormalizeOptions = options => {\n\tconst cacheEntry = normalizeCache.get(options);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\tconst normalized = normalizeOptions(options);\n\tnormalizeCache.set(options, normalized);\n\treturn normalized;\n};\n\nclass WatchpackFileWatcher {\n\tconstructor(watchpack, watcher, files) {\n\t\tthis.files = Array.isArray(files) ? files : [files];\n\t\tthis.watcher = watcher;\n\t\twatcher.on(\"initial-missing\", type => {\n\t\t\tfor (const file of this.files) {\n\t\t\t\tif (!watchpack._missing.has(file))\n\t\t\t\t\twatchpack._onRemove(file, file, type);\n\t\t\t}\n\t\t});\n\t\twatcher.on(\"change\", (mtime, type) => {\n\t\t\tfor (const file of this.files) {\n\t\t\t\twatchpack._onChange(file, mtime, file, type);\n\t\t\t}\n\t\t});\n\t\twatcher.on(\"remove\", type => {\n\t\t\tfor (const file of this.files) {\n\t\t\t\twatchpack._onRemove(file, file, type);\n\t\t\t}\n\t\t});\n\t}\n\n\tupdate(files) {\n\t\tif (!Array.isArray(files)) {\n\t\t\tif (this.files.length !== 1) {\n\t\t\t\tthis.files = [files];\n\t\t\t} else if (this.files[0] !== files) {\n\t\t\t\tthis.files[0] = files;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.files = files;\n\t\t}\n\t}\n\n\tclose() {\n\t\tthis.watcher.close();\n\t}\n}\n\nclass WatchpackDirectoryWatcher {\n\tconstructor(watchpack, watcher, directories) {\n\t\tthis.directories = Array.isArray(directories) ? directories : [directories];\n\t\tthis.watcher = watcher;\n\t\twatcher.on(\"initial-missing\", type => {\n\t\t\tfor (const item of this.directories) {\n\t\t\t\twatchpack._onRemove(item, item, type);\n\t\t\t}\n\t\t});\n\t\twatcher.on(\"change\", (file, mtime, type) => {\n\t\t\tfor (const item of this.directories) {\n\t\t\t\twatchpack._onChange(item, mtime, file, type);\n\t\t\t}\n\t\t});\n\t\twatcher.on(\"remove\", type => {\n\t\t\tfor (const item of this.directories) {\n\t\t\t\twatchpack._onRemove(item, item, type);\n\t\t\t}\n\t\t});\n\t}\n\n\tupdate(directories) {\n\t\tif (!Array.isArray(directories)) {\n\t\t\tif (this.directories.length !== 1) {\n\t\t\t\tthis.directories = [directories];\n\t\t\t} else if (this.directories[0] !== directories) {\n\t\t\t\tthis.directories[0] = directories;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.directories = directories;\n\t\t}\n\t}\n\n\tclose() {\n\t\tthis.watcher.close();\n\t}\n}\n\nclass Watchpack extends EventEmitter {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!options) options = EMPTY_OPTIONS;\n\t\tthis.options = options;\n\t\tthis.aggregateTimeout =\n\t\t\ttypeof options.aggregateTimeout === \"number\"\n\t\t\t\t? options.aggregateTimeout\n\t\t\t\t: 200;\n\t\tthis.watcherOptions = cachedNormalizeOptions(options);\n\t\tthis.watcherManager = getWatcherManager(this.watcherOptions);\n\t\tthis.fileWatchers = new Map();\n\t\tthis.directoryWatchers = new Map();\n\t\tthis._missing = new Set();\n\t\tthis.startTime = undefined;\n\t\tthis.paused = false;\n\t\tthis.aggregatedChanges = new Set();\n\t\tthis.aggregatedRemovals = new Set();\n\t\tthis.aggregateTimer = undefined;\n\t\tthis._onTimeout = this._onTimeout.bind(this);\n\t}\n\n\twatch(arg1, arg2, arg3) {\n\t\tlet files, directories, missing, startTime;\n\t\tif (!arg2) {\n\t\t\t({\n\t\t\t\tfiles = EMPTY_ARRAY,\n\t\t\t\tdirectories = EMPTY_ARRAY,\n\t\t\t\tmissing = EMPTY_ARRAY,\n\t\t\t\tstartTime\n\t\t\t} = arg1);\n\t\t} else {\n\t\t\tfiles = arg1;\n\t\t\tdirectories = arg2;\n\t\t\tmissing = EMPTY_ARRAY;\n\t\t\tstartTime = arg3;\n\t\t}\n\t\tthis.paused = false;\n\t\tconst fileWatchers = this.fileWatchers;\n\t\tconst directoryWatchers = this.directoryWatchers;\n\t\tconst ignored = this.watcherOptions.ignored;\n\t\tconst filter = path => !ignored(path);\n\t\tconst addToMap = (map, key, item) => {\n\t\t\tconst list = map.get(key);\n\t\t\tif (list === undefined) {\n\t\t\t\tmap.set(key, item);\n\t\t\t} else if (Array.isArray(list)) {\n\t\t\t\tlist.push(item);\n\t\t\t} else {\n\t\t\t\tmap.set(key, [list, item]);\n\t\t\t}\n\t\t};\n\t\tconst fileWatchersNeeded = new Map();\n\t\tconst directoryWatchersNeeded = new Map();\n\t\tconst missingFiles = new Set();\n\t\tif (this.watcherOptions.followSymlinks) {\n\t\t\tconst resolver = new LinkResolver();\n\t\t\tfor (const file of files) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tfor (const innerFile of resolver.resolve(file)) {\n\t\t\t\t\t\tif (file === innerFile || filter(innerFile)) {\n\t\t\t\t\t\t\taddToMap(fileWatchersNeeded, innerFile, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const file of missing) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tfor (const innerFile of resolver.resolve(file)) {\n\t\t\t\t\t\tif (file === innerFile || filter(innerFile)) {\n\t\t\t\t\t\t\tmissingFiles.add(file);\n\t\t\t\t\t\t\taddToMap(fileWatchersNeeded, innerFile, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const dir of directories) {\n\t\t\t\tif (filter(dir)) {\n\t\t\t\t\tlet first = true;\n\t\t\t\t\tfor (const innerItem of resolver.resolve(dir)) {\n\t\t\t\t\t\tif (filter(innerItem)) {\n\t\t\t\t\t\t\taddToMap(\n\t\t\t\t\t\t\t\tfirst ? directoryWatchersNeeded : fileWatchersNeeded,\n\t\t\t\t\t\t\t\tinnerItem,\n\t\t\t\t\t\t\t\tdir\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const file of files) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\taddToMap(fileWatchersNeeded, file, file);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const file of missing) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tmissingFiles.add(file);\n\t\t\t\t\taddToMap(fileWatchersNeeded, file, file);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const dir of directories) {\n\t\t\t\tif (filter(dir)) {\n\t\t\t\t\taddToMap(directoryWatchersNeeded, dir, dir);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Close unneeded old watchers\n\t\t// and update existing watchers\n\t\tfor (const [key, w] of fileWatchers) {\n\t\t\tconst needed = fileWatchersNeeded.get(key);\n\t\t\tif (needed === undefined) {\n\t\t\t\tw.close();\n\t\t\t\tfileWatchers.delete(key);\n\t\t\t} else {\n\t\t\t\tw.update(needed);\n\t\t\t\tfileWatchersNeeded.delete(key);\n\t\t\t}\n\t\t}\n\t\tfor (const [key, w] of directoryWatchers) {\n\t\t\tconst needed = directoryWatchersNeeded.get(key);\n\t\t\tif (needed === undefined) {\n\t\t\t\tw.close();\n\t\t\t\tdirectoryWatchers.delete(key);\n\t\t\t} else {\n\t\t\t\tw.update(needed);\n\t\t\t\tdirectoryWatchersNeeded.delete(key);\n\t\t\t}\n\t\t}\n\t\t// Create new watchers and install handlers on these watchers\n\t\twatchEventSource.batch(() => {\n\t\t\tfor (const [key, files] of fileWatchersNeeded) {\n\t\t\t\tconst watcher = this.watcherManager.watchFile(key, startTime);\n\t\t\t\tif (watcher) {\n\t\t\t\t\tfileWatchers.set(key, new WatchpackFileWatcher(this, watcher, files));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const [key, directories] of directoryWatchersNeeded) {\n\t\t\t\tconst watcher = this.watcherManager.watchDirectory(key, startTime);\n\t\t\t\tif (watcher) {\n\t\t\t\t\tdirectoryWatchers.set(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tnew WatchpackDirectoryWatcher(this, watcher, directories)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._missing = missingFiles;\n\t\tthis.startTime = startTime;\n\t}\n\n\tclose() {\n\t\tthis.paused = true;\n\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n\t\tfor (const w of this.fileWatchers.values()) w.close();\n\t\tfor (const w of this.directoryWatchers.values()) w.close();\n\t\tthis.fileWatchers.clear();\n\t\tthis.directoryWatchers.clear();\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n\t}\n\n\tgetTimes() {\n\t\tconst directoryWatchers = new Set();\n\t\taddWatchersToSet(this.fileWatchers.values(), directoryWatchers);\n\t\taddWatchersToSet(this.directoryWatchers.values(), directoryWatchers);\n\t\tconst obj = Object.create(null);\n\t\tfor (const w of directoryWatchers) {\n\t\t\tconst times = w.getTimes();\n\t\t\tfor (const file of Object.keys(times)) obj[file] = times[file];\n\t\t}\n\t\treturn obj;\n\t}\n\n\tgetTimeInfoEntries() {\n\t\tconst map = new Map();\n\t\tthis.collectTimeInfoEntries(map, map);\n\t\treturn map;\n\t}\n\n\tcollectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n\t\tconst allWatchers = new Set();\n\t\taddWatchersToSet(this.fileWatchers.values(), allWatchers);\n\t\taddWatchersToSet(this.directoryWatchers.values(), allWatchers);\n\t\tconst safeTime = { value: 0 };\n\t\tfor (const w of allWatchers) {\n\t\t\tw.collectTimeInfoEntries(fileTimestamps, directoryTimestamps, safeTime);\n\t\t}\n\t}\n\n\tgetAggregated() {\n\t\tif (this.aggregateTimer) {\n\t\t\tclearTimeout(this.aggregateTimer);\n\t\t\tthis.aggregateTimer = undefined;\n\t\t}\n\t\tconst changes = this.aggregatedChanges;\n\t\tconst removals = this.aggregatedRemovals;\n\t\tthis.aggregatedChanges = new Set();\n\t\tthis.aggregatedRemovals = new Set();\n\t\treturn { changes, removals };\n\t}\n\n\t_onChange(item, mtime, file, type) {\n\t\tfile = file || item;\n\t\tif (!this.paused) {\n\t\t\tthis.emit(\"change\", file, mtime, type);\n\t\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n\t\t\tthis.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\n\t\t}\n\t\tthis.aggregatedRemovals.delete(item);\n\t\tthis.aggregatedChanges.add(item);\n\t}\n\n\t_onRemove(item, file, type) {\n\t\tfile = file || item;\n\t\tif (!this.paused) {\n\t\t\tthis.emit(\"remove\", file, type);\n\t\t\tif (this.aggregateTimer) clearTimeout(this.aggregateTimer);\n\t\t\tthis.aggregateTimer = setTimeout(this._onTimeout, this.aggregateTimeout);\n\t\t}\n\t\tthis.aggregatedChanges.delete(item);\n\t\tthis.aggregatedRemovals.add(item);\n\t}\n\n\t_onTimeout() {\n\t\tthis.aggregateTimer = undefined;\n\t\tconst changes = this.aggregatedChanges;\n\t\tconst removals = this.aggregatedRemovals;\n\t\tthis.aggregatedChanges = new Set();\n\t\tthis.aggregatedRemovals = new Set();\n\t\tthis.emit(\"aggregated\", changes, removals);\n\t}\n}\n\nmodule.exports = Watchpack;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACxD,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAME,YAAY,GAAGF,OAAO,CAAC,QAAQ,CAAC,CAACE,YAAY;AACnD,MAAMC,YAAY,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAC9C,MAAMI,gBAAgB,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AAEtD,MAAMK,WAAW,GAAG,EAAE;AACtB,MAAMC,aAAa,GAAG,CAAC,CAAC;AAExB,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,GAAG,EAAE;EACxC,KAAK,MAAMC,EAAE,IAAIF,QAAQ,EAAE;IAC1B,MAAMG,CAAC,GAAGD,EAAE,CAACE,OAAO;IACpB,IAAI,CAACH,GAAG,CAACI,GAAG,CAACF,CAAC,CAACG,gBAAgB,CAAC,EAAE;MACjCL,GAAG,CAACM,GAAG,CAACJ,CAAC,CAACG,gBAAgB,CAAC;IAC5B;EACD;AACD;AAEA,MAAME,cAAc,GAAGC,OAAO,IAAI;EACjC,MAAMC,MAAM,GAAGf,YAAY,CAACc,OAAO,EAAE;IAAEE,QAAQ,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC,CACtEF,MAAM;EACR,MAAMG,aAAa,GAAGH,MAAM,CAACI,KAAK,CAAC,CAAC,EAAEJ,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC,GAAG,WAAW;EACtE,OAAOF,aAAa;AACrB,CAAC;AAED,MAAMG,iBAAiB,GAAGP,OAAO,IAAI;EACpC,IAAIQ,KAAK,CAACC,OAAO,CAACT,OAAO,CAAC,EAAE;IAC3B,MAAMU,MAAM,GAAG,IAAIC,MAAM,CAACX,OAAO,CAACY,GAAG,CAACC,CAAC,IAAId,cAAc,CAACc,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxE,OAAOC,CAAC,IAAIL,MAAM,CAACM,IAAI,CAACD,CAAC,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAC/C,CAAC,MAAM,IAAI,OAAOjB,OAAO,KAAK,QAAQ,EAAE;IACvC,MAAMU,MAAM,GAAG,IAAIC,MAAM,CAACZ,cAAc,CAACC,OAAO,CAAC,CAAC;IAClD,OAAOe,CAAC,IAAIL,MAAM,CAACM,IAAI,CAACD,CAAC,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAC/C,CAAC,MAAM,IAAIjB,OAAO,YAAYW,MAAM,EAAE;IACrC,OAAOI,CAAC,IAAIf,OAAO,CAACgB,IAAI,CAACD,CAAC,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAChD,CAAC,MAAM,IAAIjB,OAAO,YAAYkB,QAAQ,EAAE;IACvC,OAAOlB,OAAO;EACf,CAAC,MAAM,IAAIA,OAAO,EAAE;IACnB,MAAM,IAAImB,KAAK,CAAE,iCAAgCnB,OAAQ,EAAC,CAAC;EAC5D,CAAC,MAAM;IACN,OAAO,MAAM,KAAK;EACnB;AACD,CAAC;AAED,MAAMoB,gBAAgB,GAAGC,OAAO,IAAI;EACnC,OAAO;IACNC,cAAc,EAAE,CAAC,CAACD,OAAO,CAACC,cAAc;IACxCtB,OAAO,EAAEO,iBAAiB,CAACc,OAAO,CAACrB,OAAO,CAAC;IAC3CuB,IAAI,EAAEF,OAAO,CAACE;EACf,CAAC;AACF,CAAC;AAED,MAAMC,cAAc,GAAG,IAAIC,OAAO,CAAC,CAAC;AACpC,MAAMC,sBAAsB,GAAGL,OAAO,IAAI;EACzC,MAAMM,UAAU,GAAGH,cAAc,CAACI,GAAG,CAACP,OAAO,CAAC;EAC9C,IAAIM,UAAU,KAAKE,SAAS,EAAE,OAAOF,UAAU;EAC/C,MAAMG,UAAU,GAAGV,gBAAgB,CAACC,OAAO,CAAC;EAC5CG,cAAc,CAAChC,GAAG,CAAC6B,OAAO,EAAES,UAAU,CAAC;EACvC,OAAOA,UAAU;AAClB,CAAC;AAED,MAAMC,oBAAoB,CAAC;EAC1BC,WAAWA,CAACC,SAAS,EAAEtC,OAAO,EAAEuC,KAAK,EAAE;IACtC,IAAI,CAACA,KAAK,GAAG1B,KAAK,CAACC,OAAO,CAACyB,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IACnD,IAAI,CAACvC,OAAO,GAAGA,OAAO;IACtBA,OAAO,CAACwC,EAAE,CAAC,iBAAiB,EAAEC,IAAI,IAAI;MACrC,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACH,KAAK,EAAE;QAC9B,IAAI,CAACD,SAAS,CAACK,QAAQ,CAAC1C,GAAG,CAACyC,IAAI,CAAC,EAChCJ,SAAS,CAACM,SAAS,CAACF,IAAI,EAAEA,IAAI,EAAED,IAAI,CAAC;MACvC;IACD,CAAC,CAAC;IACFzC,OAAO,CAACwC,EAAE,CAAC,QAAQ,EAAE,CAACK,KAAK,EAAEJ,IAAI,KAAK;MACrC,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACH,KAAK,EAAE;QAC9BD,SAAS,CAACQ,SAAS,CAACJ,IAAI,EAAEG,KAAK,EAAEH,IAAI,EAAED,IAAI,CAAC;MAC7C;IACD,CAAC,CAAC;IACFzC,OAAO,CAACwC,EAAE,CAAC,QAAQ,EAAEC,IAAI,IAAI;MAC5B,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACH,KAAK,EAAE;QAC9BD,SAAS,CAACM,SAAS,CAACF,IAAI,EAAEA,IAAI,EAAED,IAAI,CAAC;MACtC;IACD,CAAC,CAAC;EACH;EAEAM,MAAMA,CAACR,KAAK,EAAE;IACb,IAAI,CAAC1B,KAAK,CAACC,OAAO,CAACyB,KAAK,CAAC,EAAE;MAC1B,IAAI,IAAI,CAACA,KAAK,CAAC5B,MAAM,KAAK,CAAC,EAAE;QAC5B,IAAI,CAAC4B,KAAK,GAAG,CAACA,KAAK,CAAC;MACrB,CAAC,MAAM,IAAI,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,EAAE;QACnC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK;MACtB;IACD,CAAC,MAAM;MACN,IAAI,CAACA,KAAK,GAAGA,KAAK;IACnB;EACD;EAEAS,KAAKA,CAAA,EAAG;IACP,IAAI,CAAChD,OAAO,CAACgD,KAAK,CAAC,CAAC;EACrB;AACD;AAEA,MAAMC,yBAAyB,CAAC;EAC/BZ,WAAWA,CAACC,SAAS,EAAEtC,OAAO,EAAEkD,WAAW,EAAE;IAC5C,IAAI,CAACA,WAAW,GAAGrC,KAAK,CAACC,OAAO,CAACoC,WAAW,CAAC,GAAGA,WAAW,GAAG,CAACA,WAAW,CAAC;IAC3E,IAAI,CAAClD,OAAO,GAAGA,OAAO;IACtBA,OAAO,CAACwC,EAAE,CAAC,iBAAiB,EAAEC,IAAI,IAAI;MACrC,KAAK,MAAMU,IAAI,IAAI,IAAI,CAACD,WAAW,EAAE;QACpCZ,SAAS,CAACM,SAAS,CAACO,IAAI,EAAEA,IAAI,EAAEV,IAAI,CAAC;MACtC;IACD,CAAC,CAAC;IACFzC,OAAO,CAACwC,EAAE,CAAC,QAAQ,EAAE,CAACE,IAAI,EAAEG,KAAK,EAAEJ,IAAI,KAAK;MAC3C,KAAK,MAAMU,IAAI,IAAI,IAAI,CAACD,WAAW,EAAE;QACpCZ,SAAS,CAACQ,SAAS,CAACK,IAAI,EAAEN,KAAK,EAAEH,IAAI,EAAED,IAAI,CAAC;MAC7C;IACD,CAAC,CAAC;IACFzC,OAAO,CAACwC,EAAE,CAAC,QAAQ,EAAEC,IAAI,IAAI;MAC5B,KAAK,MAAMU,IAAI,IAAI,IAAI,CAACD,WAAW,EAAE;QACpCZ,SAAS,CAACM,SAAS,CAACO,IAAI,EAAEA,IAAI,EAAEV,IAAI,CAAC;MACtC;IACD,CAAC,CAAC;EACH;EAEAM,MAAMA,CAACG,WAAW,EAAE;IACnB,IAAI,CAACrC,KAAK,CAACC,OAAO,CAACoC,WAAW,CAAC,EAAE;MAChC,IAAI,IAAI,CAACA,WAAW,CAACvC,MAAM,KAAK,CAAC,EAAE;QAClC,IAAI,CAACuC,WAAW,GAAG,CAACA,WAAW,CAAC;MACjC,CAAC,MAAM,IAAI,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,KAAKA,WAAW,EAAE;QAC/C,IAAI,CAACA,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW;MAClC;IACD,CAAC,MAAM;MACN,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC/B;EACD;EAEAF,KAAKA,CAAA,EAAG;IACP,IAAI,CAAChD,OAAO,CAACgD,KAAK,CAAC,CAAC;EACrB;AACD;AAEA,MAAMI,SAAS,SAAS9D,YAAY,CAAC;EACpC+C,WAAWA,CAACX,OAAO,EAAE;IACpB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAGhC,aAAa;IACrC,IAAI,CAACgC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC2B,gBAAgB,GACpB,OAAO3B,OAAO,CAAC2B,gBAAgB,KAAK,QAAQ,GACzC3B,OAAO,CAAC2B,gBAAgB,GACxB,GAAG;IACP,IAAI,CAACC,cAAc,GAAGvB,sBAAsB,CAACL,OAAO,CAAC;IACrD,IAAI,CAAC6B,cAAc,GAAGpE,iBAAiB,CAAC,IAAI,CAACmE,cAAc,CAAC;IAC5D,IAAI,CAACE,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAACC,iBAAiB,GAAG,IAAID,GAAG,CAAC,CAAC;IAClC,IAAI,CAACd,QAAQ,GAAG,IAAIgB,GAAG,CAAC,CAAC;IACzB,IAAI,CAACC,SAAS,GAAG1B,SAAS;IAC1B,IAAI,CAAC2B,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,iBAAiB,GAAG,IAAIH,GAAG,CAAC,CAAC;IAClC,IAAI,CAACI,kBAAkB,GAAG,IAAIJ,GAAG,CAAC,CAAC;IACnC,IAAI,CAACK,cAAc,GAAG9B,SAAS;IAC/B,IAAI,CAAC+B,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;EAC7C;EAEAC,KAAKA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;IACvB,IAAI/B,KAAK,EAAEW,WAAW,EAAEqB,OAAO,EAAEX,SAAS;IAC1C,IAAI,CAACS,IAAI,EAAE;MACV,CAAC;QACA9B,KAAK,GAAG9C,WAAW;QACnByD,WAAW,GAAGzD,WAAW;QACzB8E,OAAO,GAAG9E,WAAW;QACrBmE;MACD,CAAC,GAAGQ,IAAI;IACT,CAAC,MAAM;MACN7B,KAAK,GAAG6B,IAAI;MACZlB,WAAW,GAAGmB,IAAI;MAClBE,OAAO,GAAG9E,WAAW;MACrBmE,SAAS,GAAGU,IAAI;IACjB;IACA,IAAI,CAACT,MAAM,GAAG,KAAK;IACnB,MAAML,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAME,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;IAChD,MAAMrD,OAAO,GAAG,IAAI,CAACiD,cAAc,CAACjD,OAAO;IAC3C,MAAMmE,MAAM,GAAGC,IAAI,IAAI,CAACpE,OAAO,CAACoE,IAAI,CAAC;IACrC,MAAMC,QAAQ,GAAGA,CAACzD,GAAG,EAAE0D,GAAG,EAAExB,IAAI,KAAK;MACpC,MAAMyB,IAAI,GAAG3D,GAAG,CAACgB,GAAG,CAAC0C,GAAG,CAAC;MACzB,IAAIC,IAAI,KAAK1C,SAAS,EAAE;QACvBjB,GAAG,CAACpB,GAAG,CAAC8E,GAAG,EAAExB,IAAI,CAAC;MACnB,CAAC,MAAM,IAAItC,KAAK,CAACC,OAAO,CAAC8D,IAAI,CAAC,EAAE;QAC/BA,IAAI,CAACC,IAAI,CAAC1B,IAAI,CAAC;MAChB,CAAC,MAAM;QACNlC,GAAG,CAACpB,GAAG,CAAC8E,GAAG,EAAE,CAACC,IAAI,EAAEzB,IAAI,CAAC,CAAC;MAC3B;IACD,CAAC;IACD,MAAM2B,kBAAkB,GAAG,IAAIrB,GAAG,CAAC,CAAC;IACpC,MAAMsB,uBAAuB,GAAG,IAAItB,GAAG,CAAC,CAAC;IACzC,MAAMuB,YAAY,GAAG,IAAIrB,GAAG,CAAC,CAAC;IAC9B,IAAI,IAAI,CAACL,cAAc,CAAC3B,cAAc,EAAE;MACvC,MAAMsD,QAAQ,GAAG,IAAI5F,YAAY,CAAC,CAAC;MACnC,KAAK,MAAMqD,IAAI,IAAIH,KAAK,EAAE;QACzB,IAAIiC,MAAM,CAAC9B,IAAI,CAAC,EAAE;UACjB,KAAK,MAAMwC,SAAS,IAAID,QAAQ,CAACE,OAAO,CAACzC,IAAI,CAAC,EAAE;YAC/C,IAAIA,IAAI,KAAKwC,SAAS,IAAIV,MAAM,CAACU,SAAS,CAAC,EAAE;cAC5CR,QAAQ,CAACI,kBAAkB,EAAEI,SAAS,EAAExC,IAAI,CAAC;YAC9C;UACD;QACD;MACD;MACA,KAAK,MAAMA,IAAI,IAAI6B,OAAO,EAAE;QAC3B,IAAIC,MAAM,CAAC9B,IAAI,CAAC,EAAE;UACjB,KAAK,MAAMwC,SAAS,IAAID,QAAQ,CAACE,OAAO,CAACzC,IAAI,CAAC,EAAE;YAC/C,IAAIA,IAAI,KAAKwC,SAAS,IAAIV,MAAM,CAACU,SAAS,CAAC,EAAE;cAC5CF,YAAY,CAAC7E,GAAG,CAACuC,IAAI,CAAC;cACtBgC,QAAQ,CAACI,kBAAkB,EAAEI,SAAS,EAAExC,IAAI,CAAC;YAC9C;UACD;QACD;MACD;MACA,KAAK,MAAM0C,GAAG,IAAIlC,WAAW,EAAE;QAC9B,IAAIsB,MAAM,CAACY,GAAG,CAAC,EAAE;UAChB,IAAIC,KAAK,GAAG,IAAI;UAChB,KAAK,MAAMC,SAAS,IAAIL,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,EAAE;YAC9C,IAAIZ,MAAM,CAACc,SAAS,CAAC,EAAE;cACtBZ,QAAQ,CACPW,KAAK,GAAGN,uBAAuB,GAAGD,kBAAkB,EACpDQ,SAAS,EACTF,GACD,CAAC;YACF;YACAC,KAAK,GAAG,KAAK;UACd;QACD;MACD;IACD,CAAC,MAAM;MACN,KAAK,MAAM3C,IAAI,IAAIH,KAAK,EAAE;QACzB,IAAIiC,MAAM,CAAC9B,IAAI,CAAC,EAAE;UACjBgC,QAAQ,CAACI,kBAAkB,EAAEpC,IAAI,EAAEA,IAAI,CAAC;QACzC;MACD;MACA,KAAK,MAAMA,IAAI,IAAI6B,OAAO,EAAE;QAC3B,IAAIC,MAAM,CAAC9B,IAAI,CAAC,EAAE;UACjBsC,YAAY,CAAC7E,GAAG,CAACuC,IAAI,CAAC;UACtBgC,QAAQ,CAACI,kBAAkB,EAAEpC,IAAI,EAAEA,IAAI,CAAC;QACzC;MACD;MACA,KAAK,MAAM0C,GAAG,IAAIlC,WAAW,EAAE;QAC9B,IAAIsB,MAAM,CAACY,GAAG,CAAC,EAAE;UAChBV,QAAQ,CAACK,uBAAuB,EAAEK,GAAG,EAAEA,GAAG,CAAC;QAC5C;MACD;IACD;IACA;IACA;IACA,KAAK,MAAM,CAACT,GAAG,EAAE5E,CAAC,CAAC,IAAIyD,YAAY,EAAE;MACpC,MAAM+B,MAAM,GAAGT,kBAAkB,CAAC7C,GAAG,CAAC0C,GAAG,CAAC;MAC1C,IAAIY,MAAM,KAAKrD,SAAS,EAAE;QACzBnC,CAAC,CAACiD,KAAK,CAAC,CAAC;QACTQ,YAAY,CAACgC,MAAM,CAACb,GAAG,CAAC;MACzB,CAAC,MAAM;QACN5E,CAAC,CAACgD,MAAM,CAACwC,MAAM,CAAC;QAChBT,kBAAkB,CAACU,MAAM,CAACb,GAAG,CAAC;MAC/B;IACD;IACA,KAAK,MAAM,CAACA,GAAG,EAAE5E,CAAC,CAAC,IAAI2D,iBAAiB,EAAE;MACzC,MAAM6B,MAAM,GAAGR,uBAAuB,CAAC9C,GAAG,CAAC0C,GAAG,CAAC;MAC/C,IAAIY,MAAM,KAAKrD,SAAS,EAAE;QACzBnC,CAAC,CAACiD,KAAK,CAAC,CAAC;QACTU,iBAAiB,CAAC8B,MAAM,CAACb,GAAG,CAAC;MAC9B,CAAC,MAAM;QACN5E,CAAC,CAACgD,MAAM,CAACwC,MAAM,CAAC;QAChBR,uBAAuB,CAACS,MAAM,CAACb,GAAG,CAAC;MACpC;IACD;IACA;IACAnF,gBAAgB,CAACiG,KAAK,CAAC,MAAM;MAC5B,KAAK,MAAM,CAACd,GAAG,EAAEpC,KAAK,CAAC,IAAIuC,kBAAkB,EAAE;QAC9C,MAAM9E,OAAO,GAAG,IAAI,CAACuD,cAAc,CAACmC,SAAS,CAACf,GAAG,EAAEf,SAAS,CAAC;QAC7D,IAAI5D,OAAO,EAAE;UACZwD,YAAY,CAAC3D,GAAG,CAAC8E,GAAG,EAAE,IAAIvC,oBAAoB,CAAC,IAAI,EAAEpC,OAAO,EAAEuC,KAAK,CAAC,CAAC;QACtE;MACD;MACA,KAAK,MAAM,CAACoC,GAAG,EAAEzB,WAAW,CAAC,IAAI6B,uBAAuB,EAAE;QACzD,MAAM/E,OAAO,GAAG,IAAI,CAACuD,cAAc,CAACoC,cAAc,CAAChB,GAAG,EAAEf,SAAS,CAAC;QAClE,IAAI5D,OAAO,EAAE;UACZ0D,iBAAiB,CAAC7D,GAAG,CACpB8E,GAAG,EACH,IAAI1B,yBAAyB,CAAC,IAAI,EAAEjD,OAAO,EAAEkD,WAAW,CACzD,CAAC;QACF;MACD;IACD,CAAC,CAAC;IACF,IAAI,CAACP,QAAQ,GAAGqC,YAAY;IAC5B,IAAI,CAACpB,SAAS,GAAGA,SAAS;EAC3B;EAEAZ,KAAKA,CAAA,EAAG;IACP,IAAI,CAACa,MAAM,GAAG,IAAI;IAClB,IAAI,IAAI,CAACG,cAAc,EAAE4B,YAAY,CAAC,IAAI,CAAC5B,cAAc,CAAC;IAC1D,KAAK,MAAMjE,CAAC,IAAI,IAAI,CAACyD,YAAY,CAACqC,MAAM,CAAC,CAAC,EAAE9F,CAAC,CAACiD,KAAK,CAAC,CAAC;IACrD,KAAK,MAAMjD,CAAC,IAAI,IAAI,CAAC2D,iBAAiB,CAACmC,MAAM,CAAC,CAAC,EAAE9F,CAAC,CAACiD,KAAK,CAAC,CAAC;IAC1D,IAAI,CAACQ,YAAY,CAACsC,KAAK,CAAC,CAAC;IACzB,IAAI,CAACpC,iBAAiB,CAACoC,KAAK,CAAC,CAAC;EAC/B;EAEAC,KAAKA,CAAA,EAAG;IACP,IAAI,CAAClC,MAAM,GAAG,IAAI;IAClB,IAAI,IAAI,CAACG,cAAc,EAAE4B,YAAY,CAAC,IAAI,CAAC5B,cAAc,CAAC;EAC3D;EAEAgC,QAAQA,CAAA,EAAG;IACV,MAAMtC,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;IACnChE,gBAAgB,CAAC,IAAI,CAAC6D,YAAY,CAACqC,MAAM,CAAC,CAAC,EAAEnC,iBAAiB,CAAC;IAC/D/D,gBAAgB,CAAC,IAAI,CAAC+D,iBAAiB,CAACmC,MAAM,CAAC,CAAC,EAAEnC,iBAAiB,CAAC;IACpE,MAAMuC,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC/B,KAAK,MAAMpG,CAAC,IAAI2D,iBAAiB,EAAE;MAClC,MAAM0C,KAAK,GAAGrG,CAAC,CAACiG,QAAQ,CAAC,CAAC;MAC1B,KAAK,MAAMtD,IAAI,IAAIwD,MAAM,CAACG,IAAI,CAACD,KAAK,CAAC,EAAEH,GAAG,CAACvD,IAAI,CAAC,GAAG0D,KAAK,CAAC1D,IAAI,CAAC;IAC/D;IACA,OAAOuD,GAAG;EACX;EAEAK,kBAAkBA,CAAA,EAAG;IACpB,MAAMrF,GAAG,GAAG,IAAIwC,GAAG,CAAC,CAAC;IACrB,IAAI,CAAC8C,sBAAsB,CAACtF,GAAG,EAAEA,GAAG,CAAC;IACrC,OAAOA,GAAG;EACX;EAEAsF,sBAAsBA,CAACC,cAAc,EAAEC,mBAAmB,EAAE;IAC3D,MAAMC,WAAW,GAAG,IAAI/C,GAAG,CAAC,CAAC;IAC7BhE,gBAAgB,CAAC,IAAI,CAAC6D,YAAY,CAACqC,MAAM,CAAC,CAAC,EAAEa,WAAW,CAAC;IACzD/G,gBAAgB,CAAC,IAAI,CAAC+D,iBAAiB,CAACmC,MAAM,CAAC,CAAC,EAAEa,WAAW,CAAC;IAC9D,MAAMC,QAAQ,GAAG;MAAEC,KAAK,EAAE;IAAE,CAAC;IAC7B,KAAK,MAAM7G,CAAC,IAAI2G,WAAW,EAAE;MAC5B3G,CAAC,CAACwG,sBAAsB,CAACC,cAAc,EAAEC,mBAAmB,EAAEE,QAAQ,CAAC;IACxE;EACD;EAEAE,aAAaA,CAAA,EAAG;IACf,IAAI,IAAI,CAAC7C,cAAc,EAAE;MACxB4B,YAAY,CAAC,IAAI,CAAC5B,cAAc,CAAC;MACjC,IAAI,CAACA,cAAc,GAAG9B,SAAS;IAChC;IACA,MAAM4E,OAAO,GAAG,IAAI,CAAChD,iBAAiB;IACtC,MAAMiD,QAAQ,GAAG,IAAI,CAAChD,kBAAkB;IACxC,IAAI,CAACD,iBAAiB,GAAG,IAAIH,GAAG,CAAC,CAAC;IAClC,IAAI,CAACI,kBAAkB,GAAG,IAAIJ,GAAG,CAAC,CAAC;IACnC,OAAO;MAAEmD,OAAO;MAAEC;IAAS,CAAC;EAC7B;EAEAjE,SAASA,CAACK,IAAI,EAAEN,KAAK,EAAEH,IAAI,EAAED,IAAI,EAAE;IAClCC,IAAI,GAAGA,IAAI,IAAIS,IAAI;IACnB,IAAI,CAAC,IAAI,CAACU,MAAM,EAAE;MACjB,IAAI,CAACmD,IAAI,CAAC,QAAQ,EAAEtE,IAAI,EAAEG,KAAK,EAAEJ,IAAI,CAAC;MACtC,IAAI,IAAI,CAACuB,cAAc,EAAE4B,YAAY,CAAC,IAAI,CAAC5B,cAAc,CAAC;MAC1D,IAAI,CAACA,cAAc,GAAGiD,UAAU,CAAC,IAAI,CAAChD,UAAU,EAAE,IAAI,CAACZ,gBAAgB,CAAC;IACzE;IACA,IAAI,CAACU,kBAAkB,CAACyB,MAAM,CAACrC,IAAI,CAAC;IACpC,IAAI,CAACW,iBAAiB,CAAC3D,GAAG,CAACgD,IAAI,CAAC;EACjC;EAEAP,SAASA,CAACO,IAAI,EAAET,IAAI,EAAED,IAAI,EAAE;IAC3BC,IAAI,GAAGA,IAAI,IAAIS,IAAI;IACnB,IAAI,CAAC,IAAI,CAACU,MAAM,EAAE;MACjB,IAAI,CAACmD,IAAI,CAAC,QAAQ,EAAEtE,IAAI,EAAED,IAAI,CAAC;MAC/B,IAAI,IAAI,CAACuB,cAAc,EAAE4B,YAAY,CAAC,IAAI,CAAC5B,cAAc,CAAC;MAC1D,IAAI,CAACA,cAAc,GAAGiD,UAAU,CAAC,IAAI,CAAChD,UAAU,EAAE,IAAI,CAACZ,gBAAgB,CAAC;IACzE;IACA,IAAI,CAACS,iBAAiB,CAAC0B,MAAM,CAACrC,IAAI,CAAC;IACnC,IAAI,CAACY,kBAAkB,CAAC5D,GAAG,CAACgD,IAAI,CAAC;EAClC;EAEAc,UAAUA,CAAA,EAAG;IACZ,IAAI,CAACD,cAAc,GAAG9B,SAAS;IAC/B,MAAM4E,OAAO,GAAG,IAAI,CAAChD,iBAAiB;IACtC,MAAMiD,QAAQ,GAAG,IAAI,CAAChD,kBAAkB;IACxC,IAAI,CAACD,iBAAiB,GAAG,IAAIH,GAAG,CAAC,CAAC;IAClC,IAAI,CAACI,kBAAkB,GAAG,IAAIJ,GAAG,CAAC,CAAC;IACnC,IAAI,CAACqD,IAAI,CAAC,YAAY,EAAEF,OAAO,EAAEC,QAAQ,CAAC;EAC3C;AACD;AAEAG,MAAM,CAACC,OAAO,GAAG/D,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}
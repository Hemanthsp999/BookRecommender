{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  HookMap,\n  SyncWaterfallHook,\n  SyncBailHook\n} = require(\"tapable\");\n\n/** @template T @typedef {import(\"tapable\").AsArray<T>} AsArray<T> */\n/** @typedef {import(\"tapable\").Hook} Hook */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsAsset} StatsAsset */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsChunk} StatsChunk */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsChunkGroup} StatsChunkGroup */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsModule} StatsModule */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsModuleReason} StatsModuleReason */\n\n/**\n * @typedef {Object} PrintedElement\n * @property {string} element\n * @property {string} content\n */\n\n/**\n * @typedef {Object} KnownStatsPrinterContext\n * @property {string=} type\n * @property {StatsCompilation=} compilation\n * @property {StatsChunkGroup=} chunkGroup\n * @property {StatsAsset=} asset\n * @property {StatsModule=} module\n * @property {StatsChunk=} chunk\n * @property {StatsModuleReason=} moduleReason\n * @property {(str: string) => string=} bold\n * @property {(str: string) => string=} yellow\n * @property {(str: string) => string=} red\n * @property {(str: string) => string=} green\n * @property {(str: string) => string=} magenta\n * @property {(str: string) => string=} cyan\n * @property {(file: string, oversize?: boolean) => string=} formatFilename\n * @property {(id: string) => string=} formatModuleId\n * @property {(id: string, direction?: \"parent\"|\"child\"|\"sibling\") => string=} formatChunkId\n * @property {(size: number) => string=} formatSize\n * @property {(dateTime: number) => string=} formatDateTime\n * @property {(flag: string) => string=} formatFlag\n * @property {(time: number, boldQuantity?: boolean) => string=} formatTime\n * @property {string=} chunkGroupKind\n */\n\n/** @typedef {KnownStatsPrinterContext & Record<string, any>} StatsPrinterContext */\n\nclass StatsPrinter {\n  constructor() {\n    this.hooks = Object.freeze({\n      /** @type {HookMap<SyncBailHook<[string[], StatsPrinterContext], true>>} */\n      sortElements: new HookMap(() => new SyncBailHook([\"elements\", \"context\"])),\n      /** @type {HookMap<SyncBailHook<[PrintedElement[], StatsPrinterContext], string>>} */\n      printElements: new HookMap(() => new SyncBailHook([\"printedElements\", \"context\"])),\n      /** @type {HookMap<SyncBailHook<[any[], StatsPrinterContext], true>>} */\n      sortItems: new HookMap(() => new SyncBailHook([\"items\", \"context\"])),\n      /** @type {HookMap<SyncBailHook<[any, StatsPrinterContext], string>>} */\n      getItemName: new HookMap(() => new SyncBailHook([\"item\", \"context\"])),\n      /** @type {HookMap<SyncBailHook<[string[], StatsPrinterContext], string>>} */\n      printItems: new HookMap(() => new SyncBailHook([\"printedItems\", \"context\"])),\n      /** @type {HookMap<SyncBailHook<[{}, StatsPrinterContext], string>>} */\n      print: new HookMap(() => new SyncBailHook([\"object\", \"context\"])),\n      /** @type {HookMap<SyncWaterfallHook<[string, StatsPrinterContext]>>} */\n      result: new HookMap(() => new SyncWaterfallHook([\"result\", \"context\"]))\n    });\n    /** @type {Map<HookMap<Hook>, Map<string, Hook[]>>} */\n    this._levelHookCache = new Map();\n    this._inPrint = false;\n  }\n\n  /**\n   * get all level hooks\n   * @private\n   * @template {Hook} T\n   * @param {HookMap<T>} hookMap HookMap\n   * @param {string} type type\n   * @returns {T[]} hooks\n   */\n  _getAllLevelHooks(hookMap, type) {\n    let cache = /** @type {Map<string, T[]>} */\n    this._levelHookCache.get(hookMap);\n    if (cache === undefined) {\n      cache = new Map();\n      this._levelHookCache.set(hookMap, cache);\n    }\n    const cacheEntry = cache.get(type);\n    if (cacheEntry !== undefined) {\n      return cacheEntry;\n    }\n    /** @type {T[]} */\n    const hooks = [];\n    const typeParts = type.split(\".\");\n    for (let i = 0; i < typeParts.length; i++) {\n      const hook = hookMap.get(typeParts.slice(i).join(\".\"));\n      if (hook) {\n        hooks.push(hook);\n      }\n    }\n    cache.set(type, hooks);\n    return hooks;\n  }\n\n  /**\n   * Run `fn` for each level\n   * @private\n   * @template T\n   * @template R\n   * @param {HookMap<SyncBailHook<T, R>>} hookMap HookMap\n   * @param {string} type type\n   * @param {(hook: SyncBailHook<T, R>) => R} fn function\n   * @returns {R} result of `fn`\n   */\n  _forEachLevel(hookMap, type, fn) {\n    for (const hook of this._getAllLevelHooks(hookMap, type)) {\n      const result = fn(hook);\n      if (result !== undefined) return result;\n    }\n  }\n\n  /**\n   * Run `fn` for each level\n   * @private\n   * @template T\n   * @param {HookMap<SyncWaterfallHook<T>>} hookMap HookMap\n   * @param {string} type type\n   * @param {AsArray<T>[0]} data data\n   * @param {(hook: SyncWaterfallHook<T>, data: AsArray<T>[0]) => AsArray<T>[0]} fn function\n   * @returns {AsArray<T>[0]} result of `fn`\n   */\n  _forEachLevelWaterfall(hookMap, type, data, fn) {\n    for (const hook of this._getAllLevelHooks(hookMap, type)) {\n      data = fn(hook, data);\n    }\n    return data;\n  }\n\n  /**\n   * @param {string} type The type\n   * @param {Object} object Object to print\n   * @param {Object=} baseContext The base context\n   * @returns {string} printed result\n   */\n  print(type, object, baseContext) {\n    if (this._inPrint) {\n      return this._print(type, object, baseContext);\n    } else {\n      try {\n        this._inPrint = true;\n        return this._print(type, object, baseContext);\n      } finally {\n        this._levelHookCache.clear();\n        this._inPrint = false;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} type type\n   * @param {Object} object object\n   * @param {Object=} baseContext context\n   * @returns {string} printed result\n   */\n  _print(type, object, baseContext) {\n    const context = {\n      ...baseContext,\n      type,\n      [type]: object\n    };\n    let printResult = this._forEachLevel(this.hooks.print, type, hook => hook.call(object, context));\n    if (printResult === undefined) {\n      if (Array.isArray(object)) {\n        const sortedItems = object.slice();\n        this._forEachLevel(this.hooks.sortItems, type, h => h.call(sortedItems, context));\n        const printedItems = sortedItems.map((item, i) => {\n          const itemContext = {\n            ...context,\n            _index: i\n          };\n          const itemName = this._forEachLevel(this.hooks.getItemName, `${type}[]`, h => h.call(item, itemContext));\n          if (itemName) itemContext[itemName] = item;\n          return this.print(itemName ? `${type}[].${itemName}` : `${type}[]`, item, itemContext);\n        });\n        printResult = this._forEachLevel(this.hooks.printItems, type, h => h.call(printedItems, context));\n        if (printResult === undefined) {\n          const result = printedItems.filter(Boolean);\n          if (result.length > 0) printResult = result.join(\"\\n\");\n        }\n      } else if (object !== null && typeof object === \"object\") {\n        const elements = Object.keys(object).filter(key => object[key] !== undefined);\n        this._forEachLevel(this.hooks.sortElements, type, h => h.call(elements, context));\n        const printedElements = elements.map(element => {\n          const content = this.print(`${type}.${element}`, object[element], {\n            ...context,\n            _parent: object,\n            _element: element,\n            [element]: object[element]\n          });\n          return {\n            element,\n            content\n          };\n        });\n        printResult = this._forEachLevel(this.hooks.printElements, type, h => h.call(printedElements, context));\n        if (printResult === undefined) {\n          const result = printedElements.map(e => e.content).filter(Boolean);\n          if (result.length > 0) printResult = result.join(\"\\n\");\n        }\n      }\n    }\n    return this._forEachLevelWaterfall(this.hooks.result, type, printResult, (h, r) => h.call(r, context));\n  }\n}\nmodule.exports = StatsPrinter;","map":{"version":3,"names":["HookMap","SyncWaterfallHook","SyncBailHook","require","StatsPrinter","constructor","hooks","Object","freeze","sortElements","printElements","sortItems","getItemName","printItems","print","result","_levelHookCache","Map","_inPrint","_getAllLevelHooks","hookMap","type","cache","get","undefined","set","cacheEntry","typeParts","split","i","length","hook","slice","join","push","_forEachLevel","fn","_forEachLevelWaterfall","data","object","baseContext","_print","clear","context","printResult","call","Array","isArray","sortedItems","h","printedItems","map","item","itemContext","_index","itemName","filter","Boolean","elements","keys","key","printedElements","element","content","_parent","_element","e","r","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/stats/StatsPrinter.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { HookMap, SyncWaterfallHook, SyncBailHook } = require(\"tapable\");\n\n/** @template T @typedef {import(\"tapable\").AsArray<T>} AsArray<T> */\n/** @typedef {import(\"tapable\").Hook} Hook */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsAsset} StatsAsset */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsChunk} StatsChunk */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsChunkGroup} StatsChunkGroup */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsModule} StatsModule */\n/** @typedef {import(\"./DefaultStatsFactoryPlugin\").StatsModuleReason} StatsModuleReason */\n\n/**\n * @typedef {Object} PrintedElement\n * @property {string} element\n * @property {string} content\n */\n\n/**\n * @typedef {Object} KnownStatsPrinterContext\n * @property {string=} type\n * @property {StatsCompilation=} compilation\n * @property {StatsChunkGroup=} chunkGroup\n * @property {StatsAsset=} asset\n * @property {StatsModule=} module\n * @property {StatsChunk=} chunk\n * @property {StatsModuleReason=} moduleReason\n * @property {(str: string) => string=} bold\n * @property {(str: string) => string=} yellow\n * @property {(str: string) => string=} red\n * @property {(str: string) => string=} green\n * @property {(str: string) => string=} magenta\n * @property {(str: string) => string=} cyan\n * @property {(file: string, oversize?: boolean) => string=} formatFilename\n * @property {(id: string) => string=} formatModuleId\n * @property {(id: string, direction?: \"parent\"|\"child\"|\"sibling\") => string=} formatChunkId\n * @property {(size: number) => string=} formatSize\n * @property {(dateTime: number) => string=} formatDateTime\n * @property {(flag: string) => string=} formatFlag\n * @property {(time: number, boldQuantity?: boolean) => string=} formatTime\n * @property {string=} chunkGroupKind\n */\n\n/** @typedef {KnownStatsPrinterContext & Record<string, any>} StatsPrinterContext */\n\nclass StatsPrinter {\n\tconstructor() {\n\t\tthis.hooks = Object.freeze({\n\t\t\t/** @type {HookMap<SyncBailHook<[string[], StatsPrinterContext], true>>} */\n\t\t\tsortElements: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"elements\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[PrintedElement[], StatsPrinterContext], string>>} */\n\t\t\tprintElements: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"printedElements\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[any[], StatsPrinterContext], true>>} */\n\t\t\tsortItems: new HookMap(() => new SyncBailHook([\"items\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncBailHook<[any, StatsPrinterContext], string>>} */\n\t\t\tgetItemName: new HookMap(() => new SyncBailHook([\"item\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncBailHook<[string[], StatsPrinterContext], string>>} */\n\t\t\tprintItems: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"printedItems\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[{}, StatsPrinterContext], string>>} */\n\t\t\tprint: new HookMap(() => new SyncBailHook([\"object\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncWaterfallHook<[string, StatsPrinterContext]>>} */\n\t\t\tresult: new HookMap(() => new SyncWaterfallHook([\"result\", \"context\"]))\n\t\t});\n\t\t/** @type {Map<HookMap<Hook>, Map<string, Hook[]>>} */\n\t\tthis._levelHookCache = new Map();\n\t\tthis._inPrint = false;\n\t}\n\n\t/**\n\t * get all level hooks\n\t * @private\n\t * @template {Hook} T\n\t * @param {HookMap<T>} hookMap HookMap\n\t * @param {string} type type\n\t * @returns {T[]} hooks\n\t */\n\t_getAllLevelHooks(hookMap, type) {\n\t\tlet cache = /** @type {Map<string, T[]>} */ (\n\t\t\tthis._levelHookCache.get(hookMap)\n\t\t);\n\t\tif (cache === undefined) {\n\t\t\tcache = new Map();\n\t\t\tthis._levelHookCache.set(hookMap, cache);\n\t\t}\n\t\tconst cacheEntry = cache.get(type);\n\t\tif (cacheEntry !== undefined) {\n\t\t\treturn cacheEntry;\n\t\t}\n\t\t/** @type {T[]} */\n\t\tconst hooks = [];\n\t\tconst typeParts = type.split(\".\");\n\t\tfor (let i = 0; i < typeParts.length; i++) {\n\t\t\tconst hook = hookMap.get(typeParts.slice(i).join(\".\"));\n\t\t\tif (hook) {\n\t\t\t\thooks.push(hook);\n\t\t\t}\n\t\t}\n\t\tcache.set(type, hooks);\n\t\treturn hooks;\n\t}\n\n\t/**\n\t * Run `fn` for each level\n\t * @private\n\t * @template T\n\t * @template R\n\t * @param {HookMap<SyncBailHook<T, R>>} hookMap HookMap\n\t * @param {string} type type\n\t * @param {(hook: SyncBailHook<T, R>) => R} fn function\n\t * @returns {R} result of `fn`\n\t */\n\t_forEachLevel(hookMap, type, fn) {\n\t\tfor (const hook of this._getAllLevelHooks(hookMap, type)) {\n\t\t\tconst result = fn(hook);\n\t\t\tif (result !== undefined) return result;\n\t\t}\n\t}\n\n\t/**\n\t * Run `fn` for each level\n\t * @private\n\t * @template T\n\t * @param {HookMap<SyncWaterfallHook<T>>} hookMap HookMap\n\t * @param {string} type type\n\t * @param {AsArray<T>[0]} data data\n\t * @param {(hook: SyncWaterfallHook<T>, data: AsArray<T>[0]) => AsArray<T>[0]} fn function\n\t * @returns {AsArray<T>[0]} result of `fn`\n\t */\n\t_forEachLevelWaterfall(hookMap, type, data, fn) {\n\t\tfor (const hook of this._getAllLevelHooks(hookMap, type)) {\n\t\t\tdata = fn(hook, data);\n\t\t}\n\t\treturn data;\n\t}\n\n\t/**\n\t * @param {string} type The type\n\t * @param {Object} object Object to print\n\t * @param {Object=} baseContext The base context\n\t * @returns {string} printed result\n\t */\n\tprint(type, object, baseContext) {\n\t\tif (this._inPrint) {\n\t\t\treturn this._print(type, object, baseContext);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis._inPrint = true;\n\t\t\t\treturn this._print(type, object, baseContext);\n\t\t\t} finally {\n\t\t\t\tthis._levelHookCache.clear();\n\t\t\t\tthis._inPrint = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} type type\n\t * @param {Object} object object\n\t * @param {Object=} baseContext context\n\t * @returns {string} printed result\n\t */\n\t_print(type, object, baseContext) {\n\t\tconst context = {\n\t\t\t...baseContext,\n\t\t\ttype,\n\t\t\t[type]: object\n\t\t};\n\n\t\tlet printResult = this._forEachLevel(this.hooks.print, type, hook =>\n\t\t\thook.call(object, context)\n\t\t);\n\t\tif (printResult === undefined) {\n\t\t\tif (Array.isArray(object)) {\n\t\t\t\tconst sortedItems = object.slice();\n\t\t\t\tthis._forEachLevel(this.hooks.sortItems, type, h =>\n\t\t\t\t\th.call(sortedItems, context)\n\t\t\t\t);\n\t\t\t\tconst printedItems = sortedItems.map((item, i) => {\n\t\t\t\t\tconst itemContext = {\n\t\t\t\t\t\t...context,\n\t\t\t\t\t\t_index: i\n\t\t\t\t\t};\n\t\t\t\t\tconst itemName = this._forEachLevel(\n\t\t\t\t\t\tthis.hooks.getItemName,\n\t\t\t\t\t\t`${type}[]`,\n\t\t\t\t\t\th => h.call(item, itemContext)\n\t\t\t\t\t);\n\t\t\t\t\tif (itemName) itemContext[itemName] = item;\n\t\t\t\t\treturn this.print(\n\t\t\t\t\t\titemName ? `${type}[].${itemName}` : `${type}[]`,\n\t\t\t\t\t\titem,\n\t\t\t\t\t\titemContext\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tprintResult = this._forEachLevel(this.hooks.printItems, type, h =>\n\t\t\t\t\th.call(printedItems, context)\n\t\t\t\t);\n\t\t\t\tif (printResult === undefined) {\n\t\t\t\t\tconst result = printedItems.filter(Boolean);\n\t\t\t\t\tif (result.length > 0) printResult = result.join(\"\\n\");\n\t\t\t\t}\n\t\t\t} else if (object !== null && typeof object === \"object\") {\n\t\t\t\tconst elements = Object.keys(object).filter(\n\t\t\t\t\tkey => object[key] !== undefined\n\t\t\t\t);\n\t\t\t\tthis._forEachLevel(this.hooks.sortElements, type, h =>\n\t\t\t\t\th.call(elements, context)\n\t\t\t\t);\n\t\t\t\tconst printedElements = elements.map(element => {\n\t\t\t\t\tconst content = this.print(`${type}.${element}`, object[element], {\n\t\t\t\t\t\t...context,\n\t\t\t\t\t\t_parent: object,\n\t\t\t\t\t\t_element: element,\n\t\t\t\t\t\t[element]: object[element]\n\t\t\t\t\t});\n\t\t\t\t\treturn { element, content };\n\t\t\t\t});\n\t\t\t\tprintResult = this._forEachLevel(this.hooks.printElements, type, h =>\n\t\t\t\t\th.call(printedElements, context)\n\t\t\t\t);\n\t\t\t\tif (printResult === undefined) {\n\t\t\t\t\tconst result = printedElements.map(e => e.content).filter(Boolean);\n\t\t\t\t\tif (result.length > 0) printResult = result.join(\"\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._forEachLevelWaterfall(\n\t\t\tthis.hooks.result,\n\t\t\ttype,\n\t\t\tprintResult,\n\t\t\t(h, r) => h.call(r, context)\n\t\t);\n\t}\n}\nmodule.exports = StatsPrinter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  compareChunksNatural\n} = require(\"../util/comparators\");\nconst {\n  getShortChunkName,\n  getLongChunkName,\n  assignNames,\n  getUsedChunkIds,\n  assignAscendingChunkIds\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NamedChunkIdsPlugin {\n  constructor(options) {\n    this.delimiter = options && options.delimiter || \"-\";\n    this.context = options && options.context;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"NamedChunkIdsPlugin\", compilation => {\n      const {\n        hashFunction\n      } = compilation.outputOptions;\n      compilation.hooks.chunkIds.tap(\"NamedChunkIdsPlugin\", chunks => {\n        const chunkGraph = compilation.chunkGraph;\n        const context = this.context ? this.context : compiler.context;\n        const delimiter = this.delimiter;\n        const unnamedChunks = assignNames(Array.from(chunks).filter(chunk => {\n          if (chunk.name) {\n            chunk.id = chunk.name;\n            chunk.ids = [chunk.name];\n          }\n          return chunk.id === null;\n        }), chunk => getShortChunkName(chunk, chunkGraph, context, delimiter, hashFunction, compiler.root), chunk => getLongChunkName(chunk, chunkGraph, context, delimiter, hashFunction, compiler.root), compareChunksNatural(chunkGraph), getUsedChunkIds(compilation), (chunk, name) => {\n          chunk.id = name;\n          chunk.ids = [name];\n        });\n        if (unnamedChunks.length > 0) {\n          assignAscendingChunkIds(unnamedChunks, compilation);\n        }\n      });\n    });\n  }\n}\nmodule.exports = NamedChunkIdsPlugin;","map":{"version":3,"names":["compareChunksNatural","require","getShortChunkName","getLongChunkName","assignNames","getUsedChunkIds","assignAscendingChunkIds","NamedChunkIdsPlugin","constructor","options","delimiter","context","apply","compiler","hooks","compilation","tap","hashFunction","outputOptions","chunkIds","chunks","chunkGraph","unnamedChunks","Array","from","filter","chunk","name","id","ids","root","length","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/ids/NamedChunkIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareChunksNatural } = require(\"../util/comparators\");\nconst {\n\tgetShortChunkName,\n\tgetLongChunkName,\n\tassignNames,\n\tgetUsedChunkIds,\n\tassignAscendingChunkIds\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NamedChunkIdsPlugin {\n\tconstructor(options) {\n\t\tthis.delimiter = (options && options.delimiter) || \"-\";\n\t\tthis.context = options && options.context;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedChunkIdsPlugin\", compilation => {\n\t\t\tconst { hashFunction } = compilation.outputOptions;\n\t\t\tcompilation.hooks.chunkIds.tap(\"NamedChunkIdsPlugin\", chunks => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\tconst context = this.context ? this.context : compiler.context;\n\t\t\t\tconst delimiter = this.delimiter;\n\n\t\t\t\tconst unnamedChunks = assignNames(\n\t\t\t\t\tArray.from(chunks).filter(chunk => {\n\t\t\t\t\t\tif (chunk.name) {\n\t\t\t\t\t\t\tchunk.id = chunk.name;\n\t\t\t\t\t\t\tchunk.ids = [chunk.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn chunk.id === null;\n\t\t\t\t\t}),\n\t\t\t\t\tchunk =>\n\t\t\t\t\t\tgetShortChunkName(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tdelimiter,\n\t\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\t\tcompiler.root\n\t\t\t\t\t\t),\n\t\t\t\t\tchunk =>\n\t\t\t\t\t\tgetLongChunkName(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tdelimiter,\n\t\t\t\t\t\t\thashFunction,\n\t\t\t\t\t\t\tcompiler.root\n\t\t\t\t\t\t),\n\t\t\t\t\tcompareChunksNatural(chunkGraph),\n\t\t\t\t\tgetUsedChunkIds(compilation),\n\t\t\t\t\t(chunk, name) => {\n\t\t\t\t\t\tchunk.id = name;\n\t\t\t\t\t\tchunk.ids = [name];\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (unnamedChunks.length > 0) {\n\t\t\t\t\tassignAscendingChunkIds(unnamedChunks, compilation);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedChunkIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAqB,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC/D,MAAM;EACLC,iBAAiB;EACjBC,gBAAgB;EAChBC,WAAW;EACXC,eAAe;EACfC;AACD,CAAC,GAAGL,OAAO,CAAC,aAAa,CAAC;;AAE1B;AACA;AACA;;AAEA,MAAMM,mBAAmB,CAAC;EACzBC,WAAWA,CAACC,OAAO,EAAE;IACpB,IAAI,CAACC,SAAS,GAAID,OAAO,IAAIA,OAAO,CAACC,SAAS,IAAK,GAAG;IACtD,IAAI,CAACC,OAAO,GAAGF,OAAO,IAAIA,OAAO,CAACE,OAAO;EAC1C;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,qBAAqB,EAAED,WAAW,IAAI;MACpE,MAAM;QAAEE;MAAa,CAAC,GAAGF,WAAW,CAACG,aAAa;MAClDH,WAAW,CAACD,KAAK,CAACK,QAAQ,CAACH,GAAG,CAAC,qBAAqB,EAAEI,MAAM,IAAI;QAC/D,MAAMC,UAAU,GAAGN,WAAW,CAACM,UAAU;QACzC,MAAMV,OAAO,GAAG,IAAI,CAACA,OAAO,GAAG,IAAI,CAACA,OAAO,GAAGE,QAAQ,CAACF,OAAO;QAC9D,MAAMD,SAAS,GAAG,IAAI,CAACA,SAAS;QAEhC,MAAMY,aAAa,GAAGlB,WAAW,CAChCmB,KAAK,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,MAAM,CAACC,KAAK,IAAI;UAClC,IAAIA,KAAK,CAACC,IAAI,EAAE;YACfD,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACC,IAAI;YACrBD,KAAK,CAACG,GAAG,GAAG,CAACH,KAAK,CAACC,IAAI,CAAC;UACzB;UACA,OAAOD,KAAK,CAACE,EAAE,KAAK,IAAI;QACzB,CAAC,CAAC,EACFF,KAAK,IACJxB,iBAAiB,CAChBwB,KAAK,EACLL,UAAU,EACVV,OAAO,EACPD,SAAS,EACTO,YAAY,EACZJ,QAAQ,CAACiB,IACV,CAAC,EACFJ,KAAK,IACJvB,gBAAgB,CACfuB,KAAK,EACLL,UAAU,EACVV,OAAO,EACPD,SAAS,EACTO,YAAY,EACZJ,QAAQ,CAACiB,IACV,CAAC,EACF9B,oBAAoB,CAACqB,UAAU,CAAC,EAChChB,eAAe,CAACU,WAAW,CAAC,EAC5B,CAACW,KAAK,EAAEC,IAAI,KAAK;UAChBD,KAAK,CAACE,EAAE,GAAGD,IAAI;UACfD,KAAK,CAACG,GAAG,GAAG,CAACF,IAAI,CAAC;QACnB,CACD,CAAC;QACD,IAAIL,aAAa,CAACS,MAAM,GAAG,CAAC,EAAE;UAC7BzB,uBAAuB,CAACgB,aAAa,EAAEP,WAAW,CAAC;QACpD;MACD,CAAC,CAAC;IACH,CAAC,CAAC;EACH;AACD;AAEAiB,MAAM,CAACC,OAAO,GAAG1B,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Cache = require(\"../Cache\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Cache\").Etag} Etag */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass MemoryCachePlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    /** @type {Map<string, { etag: Etag | null, data: any }>} */\n    const cache = new Map();\n    compiler.cache.hooks.store.tap({\n      name: \"MemoryCachePlugin\",\n      stage: Cache.STAGE_MEMORY\n    }, (identifier, etag, data) => {\n      cache.set(identifier, {\n        etag,\n        data\n      });\n    });\n    compiler.cache.hooks.get.tap({\n      name: \"MemoryCachePlugin\",\n      stage: Cache.STAGE_MEMORY\n    }, (identifier, etag, gotHandlers) => {\n      const cacheEntry = cache.get(identifier);\n      if (cacheEntry === null) {\n        return null;\n      } else if (cacheEntry !== undefined) {\n        return cacheEntry.etag === etag ? cacheEntry.data : null;\n      }\n      gotHandlers.push((result, callback) => {\n        if (result === undefined) {\n          cache.set(identifier, null);\n        } else {\n          cache.set(identifier, {\n            etag,\n            data: result\n          });\n        }\n        return callback();\n      });\n    });\n    compiler.cache.hooks.shutdown.tap({\n      name: \"MemoryCachePlugin\",\n      stage: Cache.STAGE_MEMORY\n    }, () => {\n      cache.clear();\n    });\n  }\n}\nmodule.exports = MemoryCachePlugin;","map":{"version":3,"names":["Cache","require","MemoryCachePlugin","apply","compiler","cache","Map","hooks","store","tap","name","stage","STAGE_MEMORY","identifier","etag","data","set","get","gotHandlers","cacheEntry","undefined","push","result","callback","shutdown","clear","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/cache/MemoryCachePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Cache = require(\"../Cache\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Cache\").Etag} Etag */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass MemoryCachePlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\t/** @type {Map<string, { etag: Etag | null, data: any }>} */\n\t\tconst cache = new Map();\n\t\tcompiler.cache.hooks.store.tap(\n\t\t\t{ name: \"MemoryCachePlugin\", stage: Cache.STAGE_MEMORY },\n\t\t\t(identifier, etag, data) => {\n\t\t\t\tcache.set(identifier, { etag, data });\n\t\t\t}\n\t\t);\n\t\tcompiler.cache.hooks.get.tap(\n\t\t\t{ name: \"MemoryCachePlugin\", stage: Cache.STAGE_MEMORY },\n\t\t\t(identifier, etag, gotHandlers) => {\n\t\t\t\tconst cacheEntry = cache.get(identifier);\n\t\t\t\tif (cacheEntry === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (cacheEntry !== undefined) {\n\t\t\t\t\treturn cacheEntry.etag === etag ? cacheEntry.data : null;\n\t\t\t\t}\n\t\t\t\tgotHandlers.push((result, callback) => {\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tcache.set(identifier, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcache.set(identifier, { etag, data: result });\n\t\t\t\t\t}\n\t\t\t\t\treturn callback();\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t\tcompiler.cache.hooks.shutdown.tap(\n\t\t\t{ name: \"MemoryCachePlugin\", stage: Cache.STAGE_MEMORY },\n\t\t\t() => {\n\t\t\t\tcache.clear();\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = MemoryCachePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEjC;AACA;AACA;AACA;;AAEA,MAAMC,iBAAiB,CAAC;EACvB;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf;IACA,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;IACvBF,QAAQ,CAACC,KAAK,CAACE,KAAK,CAACC,KAAK,CAACC,GAAG,CAC7B;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,KAAK,EAAEX,KAAK,CAACY;IAAa,CAAC,EACxD,CAACC,UAAU,EAAEC,IAAI,EAAEC,IAAI,KAAK;MAC3BV,KAAK,CAACW,GAAG,CAACH,UAAU,EAAE;QAAEC,IAAI;QAAEC;MAAK,CAAC,CAAC;IACtC,CACD,CAAC;IACDX,QAAQ,CAACC,KAAK,CAACE,KAAK,CAACU,GAAG,CAACR,GAAG,CAC3B;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,KAAK,EAAEX,KAAK,CAACY;IAAa,CAAC,EACxD,CAACC,UAAU,EAAEC,IAAI,EAAEI,WAAW,KAAK;MAClC,MAAMC,UAAU,GAAGd,KAAK,CAACY,GAAG,CAACJ,UAAU,CAAC;MACxC,IAAIM,UAAU,KAAK,IAAI,EAAE;QACxB,OAAO,IAAI;MACZ,CAAC,MAAM,IAAIA,UAAU,KAAKC,SAAS,EAAE;QACpC,OAAOD,UAAU,CAACL,IAAI,KAAKA,IAAI,GAAGK,UAAU,CAACJ,IAAI,GAAG,IAAI;MACzD;MACAG,WAAW,CAACG,IAAI,CAAC,CAACC,MAAM,EAAEC,QAAQ,KAAK;QACtC,IAAID,MAAM,KAAKF,SAAS,EAAE;UACzBf,KAAK,CAACW,GAAG,CAACH,UAAU,EAAE,IAAI,CAAC;QAC5B,CAAC,MAAM;UACNR,KAAK,CAACW,GAAG,CAACH,UAAU,EAAE;YAAEC,IAAI;YAAEC,IAAI,EAAEO;UAAO,CAAC,CAAC;QAC9C;QACA,OAAOC,QAAQ,CAAC,CAAC;MAClB,CAAC,CAAC;IACH,CACD,CAAC;IACDnB,QAAQ,CAACC,KAAK,CAACE,KAAK,CAACiB,QAAQ,CAACf,GAAG,CAChC;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,KAAK,EAAEX,KAAK,CAACY;IAAa,CAAC,EACxD,MAAM;MACLP,KAAK,CAACoB,KAAK,CAAC,CAAC;IACd,CACD,CAAC;EACF;AACD;AACAC,MAAM,CAACC,OAAO,GAAGzB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst Watchpack = require(\"watchpack\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n/** @typedef {import(\"../util/fs\").WatchFileSystem} WatchFileSystem */\n/** @typedef {import(\"../util/fs\").WatchMethod} WatchMethod */\n/** @typedef {import(\"../util/fs\").Watcher} Watcher */\n\nclass NodeWatchFileSystem {\n  constructor(inputFileSystem) {\n    this.inputFileSystem = inputFileSystem;\n    this.watcherOptions = {\n      aggregateTimeout: 0\n    };\n    this.watcher = new Watchpack(this.watcherOptions);\n  }\n\n  /**\n   * @param {Iterable<string>} files watched files\n   * @param {Iterable<string>} directories watched directories\n   * @param {Iterable<string>} missing watched exitance entries\n   * @param {number} startTime timestamp of start time\n   * @param {WatchOptions} options options object\n   * @param {function(Error=, Map<string, FileSystemInfoEntry>, Map<string, FileSystemInfoEntry>, Set<string>, Set<string>): void} callback aggregated callback\n   * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n   * @returns {Watcher} a watcher\n   */\n  watch(files, directories, missing, startTime, options, callback, callbackUndelayed) {\n    if (!files || typeof files[Symbol.iterator] !== \"function\") {\n      throw new Error(\"Invalid arguments: 'files'\");\n    }\n    if (!directories || typeof directories[Symbol.iterator] !== \"function\") {\n      throw new Error(\"Invalid arguments: 'directories'\");\n    }\n    if (!missing || typeof missing[Symbol.iterator] !== \"function\") {\n      throw new Error(\"Invalid arguments: 'missing'\");\n    }\n    if (typeof callback !== \"function\") {\n      throw new Error(\"Invalid arguments: 'callback'\");\n    }\n    if (typeof startTime !== \"number\" && startTime) {\n      throw new Error(\"Invalid arguments: 'startTime'\");\n    }\n    if (typeof options !== \"object\") {\n      throw new Error(\"Invalid arguments: 'options'\");\n    }\n    if (typeof callbackUndelayed !== \"function\" && callbackUndelayed) {\n      throw new Error(\"Invalid arguments: 'callbackUndelayed'\");\n    }\n    const oldWatcher = this.watcher;\n    this.watcher = new Watchpack(options);\n    if (callbackUndelayed) {\n      this.watcher.once(\"change\", callbackUndelayed);\n    }\n    const fetchTimeInfo = () => {\n      const fileTimeInfoEntries = new Map();\n      const contextTimeInfoEntries = new Map();\n      if (this.watcher) {\n        this.watcher.collectTimeInfoEntries(fileTimeInfoEntries, contextTimeInfoEntries);\n      }\n      return {\n        fileTimeInfoEntries,\n        contextTimeInfoEntries\n      };\n    };\n    this.watcher.once(\"aggregated\", (changes, removals) => {\n      // pause emitting events (avoids clearing aggregated changes and removals on timeout)\n      this.watcher.pause();\n      if (this.inputFileSystem && this.inputFileSystem.purge) {\n        const fs = this.inputFileSystem;\n        for (const item of changes) {\n          fs.purge(item);\n        }\n        for (const item of removals) {\n          fs.purge(item);\n        }\n      }\n      const {\n        fileTimeInfoEntries,\n        contextTimeInfoEntries\n      } = fetchTimeInfo();\n      callback(null, fileTimeInfoEntries, contextTimeInfoEntries, changes, removals);\n    });\n    this.watcher.watch({\n      files,\n      directories,\n      missing,\n      startTime\n    });\n    if (oldWatcher) {\n      oldWatcher.close();\n    }\n    return {\n      close: () => {\n        if (this.watcher) {\n          this.watcher.close();\n          this.watcher = null;\n        }\n      },\n      pause: () => {\n        if (this.watcher) {\n          this.watcher.pause();\n        }\n      },\n      getAggregatedRemovals: util.deprecate(() => {\n        const items = this.watcher && this.watcher.aggregatedRemovals;\n        if (items && this.inputFileSystem && this.inputFileSystem.purge) {\n          const fs = this.inputFileSystem;\n          for (const item of items) {\n            fs.purge(item);\n          }\n        }\n        return items;\n      }, \"Watcher.getAggregatedRemovals is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_GET_AGGREGATED_REMOVALS\"),\n      getAggregatedChanges: util.deprecate(() => {\n        const items = this.watcher && this.watcher.aggregatedChanges;\n        if (items && this.inputFileSystem && this.inputFileSystem.purge) {\n          const fs = this.inputFileSystem;\n          for (const item of items) {\n            fs.purge(item);\n          }\n        }\n        return items;\n      }, \"Watcher.getAggregatedChanges is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_GET_AGGREGATED_CHANGES\"),\n      getFileTimeInfoEntries: util.deprecate(() => {\n        return fetchTimeInfo().fileTimeInfoEntries;\n      }, \"Watcher.getFileTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_FILE_TIME_INFO_ENTRIES\"),\n      getContextTimeInfoEntries: util.deprecate(() => {\n        return fetchTimeInfo().contextTimeInfoEntries;\n      }, \"Watcher.getContextTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_CONTEXT_TIME_INFO_ENTRIES\"),\n      getInfo: () => {\n        const removals = this.watcher && this.watcher.aggregatedRemovals;\n        const changes = this.watcher && this.watcher.aggregatedChanges;\n        if (this.inputFileSystem && this.inputFileSystem.purge) {\n          const fs = this.inputFileSystem;\n          if (removals) {\n            for (const item of removals) {\n              fs.purge(item);\n            }\n          }\n          if (changes) {\n            for (const item of changes) {\n              fs.purge(item);\n            }\n          }\n        }\n        const {\n          fileTimeInfoEntries,\n          contextTimeInfoEntries\n        } = fetchTimeInfo();\n        return {\n          changes,\n          removals,\n          fileTimeInfoEntries,\n          contextTimeInfoEntries\n        };\n      }\n    };\n  }\n}\nmodule.exports = NodeWatchFileSystem;","map":{"version":3,"names":["util","require","Watchpack","NodeWatchFileSystem","constructor","inputFileSystem","watcherOptions","aggregateTimeout","watcher","watch","files","directories","missing","startTime","options","callback","callbackUndelayed","Symbol","iterator","Error","oldWatcher","once","fetchTimeInfo","fileTimeInfoEntries","Map","contextTimeInfoEntries","collectTimeInfoEntries","changes","removals","pause","purge","fs","item","close","getAggregatedRemovals","deprecate","items","aggregatedRemovals","getAggregatedChanges","aggregatedChanges","getFileTimeInfoEntries","getContextTimeInfoEntries","getInfo","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/node/NodeWatchFileSystem.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst Watchpack = require(\"watchpack\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n/** @typedef {import(\"../util/fs\").WatchFileSystem} WatchFileSystem */\n/** @typedef {import(\"../util/fs\").WatchMethod} WatchMethod */\n/** @typedef {import(\"../util/fs\").Watcher} Watcher */\n\nclass NodeWatchFileSystem {\n\tconstructor(inputFileSystem) {\n\t\tthis.inputFileSystem = inputFileSystem;\n\t\tthis.watcherOptions = {\n\t\t\taggregateTimeout: 0\n\t\t};\n\t\tthis.watcher = new Watchpack(this.watcherOptions);\n\t}\n\n\t/**\n\t * @param {Iterable<string>} files watched files\n\t * @param {Iterable<string>} directories watched directories\n\t * @param {Iterable<string>} missing watched exitance entries\n\t * @param {number} startTime timestamp of start time\n\t * @param {WatchOptions} options options object\n\t * @param {function(Error=, Map<string, FileSystemInfoEntry>, Map<string, FileSystemInfoEntry>, Set<string>, Set<string>): void} callback aggregated callback\n\t * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n\t * @returns {Watcher} a watcher\n\t */\n\twatch(\n\t\tfiles,\n\t\tdirectories,\n\t\tmissing,\n\t\tstartTime,\n\t\toptions,\n\t\tcallback,\n\t\tcallbackUndelayed\n\t) {\n\t\tif (!files || typeof files[Symbol.iterator] !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'files'\");\n\t\t}\n\t\tif (!directories || typeof directories[Symbol.iterator] !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'directories'\");\n\t\t}\n\t\tif (!missing || typeof missing[Symbol.iterator] !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'missing'\");\n\t\t}\n\t\tif (typeof callback !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'callback'\");\n\t\t}\n\t\tif (typeof startTime !== \"number\" && startTime) {\n\t\t\tthrow new Error(\"Invalid arguments: 'startTime'\");\n\t\t}\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'options'\");\n\t\t}\n\t\tif (typeof callbackUndelayed !== \"function\" && callbackUndelayed) {\n\t\t\tthrow new Error(\"Invalid arguments: 'callbackUndelayed'\");\n\t\t}\n\t\tconst oldWatcher = this.watcher;\n\t\tthis.watcher = new Watchpack(options);\n\n\t\tif (callbackUndelayed) {\n\t\t\tthis.watcher.once(\"change\", callbackUndelayed);\n\t\t}\n\n\t\tconst fetchTimeInfo = () => {\n\t\t\tconst fileTimeInfoEntries = new Map();\n\t\t\tconst contextTimeInfoEntries = new Map();\n\t\t\tif (this.watcher) {\n\t\t\t\tthis.watcher.collectTimeInfoEntries(\n\t\t\t\t\tfileTimeInfoEntries,\n\t\t\t\t\tcontextTimeInfoEntries\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn { fileTimeInfoEntries, contextTimeInfoEntries };\n\t\t};\n\t\tthis.watcher.once(\"aggregated\", (changes, removals) => {\n\t\t\t// pause emitting events (avoids clearing aggregated changes and removals on timeout)\n\t\t\tthis.watcher.pause();\n\n\t\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\tfor (const item of changes) {\n\t\t\t\t\tfs.purge(item);\n\t\t\t\t}\n\t\t\t\tfor (const item of removals) {\n\t\t\t\t\tfs.purge(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst { fileTimeInfoEntries, contextTimeInfoEntries } = fetchTimeInfo();\n\t\t\tcallback(\n\t\t\t\tnull,\n\t\t\t\tfileTimeInfoEntries,\n\t\t\t\tcontextTimeInfoEntries,\n\t\t\t\tchanges,\n\t\t\t\tremovals\n\t\t\t);\n\t\t});\n\n\t\tthis.watcher.watch({ files, directories, missing, startTime });\n\n\t\tif (oldWatcher) {\n\t\t\toldWatcher.close();\n\t\t}\n\t\treturn {\n\t\t\tclose: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\tthis.watcher.close();\n\t\t\t\t\tthis.watcher = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tpause: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\tthis.watcher.pause();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetAggregatedRemovals: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\tconst items = this.watcher && this.watcher.aggregatedRemovals;\n\t\t\t\t\tif (items && this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getAggregatedRemovals is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_GET_AGGREGATED_REMOVALS\"\n\t\t\t),\n\t\t\tgetAggregatedChanges: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\tconst items = this.watcher && this.watcher.aggregatedChanges;\n\t\t\t\t\tif (items && this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getAggregatedChanges is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_GET_AGGREGATED_CHANGES\"\n\t\t\t),\n\t\t\tgetFileTimeInfoEntries: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\treturn fetchTimeInfo().fileTimeInfoEntries;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getFileTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_FILE_TIME_INFO_ENTRIES\"\n\t\t\t),\n\t\t\tgetContextTimeInfoEntries: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\treturn fetchTimeInfo().contextTimeInfoEntries;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getContextTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_CONTEXT_TIME_INFO_ENTRIES\"\n\t\t\t),\n\t\t\tgetInfo: () => {\n\t\t\t\tconst removals = this.watcher && this.watcher.aggregatedRemovals;\n\t\t\t\tconst changes = this.watcher && this.watcher.aggregatedChanges;\n\t\t\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\t\tif (removals) {\n\t\t\t\t\t\tfor (const item of removals) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changes) {\n\t\t\t\t\t\tfor (const item of changes) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst { fileTimeInfoEntries, contextTimeInfoEntries } = fetchTimeInfo();\n\t\t\t\treturn {\n\t\t\t\t\tchanges,\n\t\t\t\t\tremovals,\n\t\t\t\t\tfileTimeInfoEntries,\n\t\t\t\t\tcontextTimeInfoEntries\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = NodeWatchFileSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
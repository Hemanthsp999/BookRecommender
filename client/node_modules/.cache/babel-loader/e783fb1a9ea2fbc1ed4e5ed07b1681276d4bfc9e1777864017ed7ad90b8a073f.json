{"ast":null,"code":"\"use strict\";\n\nconst {\n  isIP\n} = require(\"net\");\nconst {\n  release\n} = require(\"os\");\nconst execa = require(\"execa\");\nconst dests = new Set([\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"]);\nconst args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"]\n};\n\n// The IPv4 gateway is in column 3 in Darwin 19 (macOS 10.15 Catalina) and higher,\n// previously it was in column 5\nconst v4IfaceColumn = parseInt(release()) >= 19 ? 3 : 5;\nconst parse = (stdout, family) => {\n  let result;\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const results = line.split(/ +/) || [];\n    const target = results[0];\n    const gateway = results[1];\n    const iface = results[family === \"v4\" ? v4IfaceColumn : 3];\n    if (dests.has(target) && gateway && isIP(gateway)) {\n      result = {\n        gateway,\n        interface: iface ? iface : null\n      };\n      return true;\n    }\n  });\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n  return result;\n};\nconst promise = async family => {\n  const {\n    stdout\n  } = await execa(\"netstat\", args[family]);\n  return parse(stdout, family);\n};\nconst sync = family => {\n  const {\n    stdout\n  } = execa.sync(\"netstat\", args[family]);\n  return parse(stdout, family);\n};\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");","map":{"version":3,"names":["isIP","require","release","execa","dests","Set","args","v4","v6","v4IfaceColumn","parseInt","parse","stdout","family","result","trim","split","some","line","results","target","gateway","iface","has","interface","Error","promise","sync","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/default-gateway/darwin.js"],"sourcesContent":["\"use strict\";\n\nconst {isIP} = require(\"net\");\nconst {release} = require(\"os\");\nconst execa = require(\"execa\");\nconst dests = new Set([\"default\", \"0.0.0.0\", \"0.0.0.0/0\", \"::\", \"::/0\"]);\n\nconst args = {\n  v4: [\"-rn\", \"-f\", \"inet\"],\n  v6: [\"-rn\", \"-f\", \"inet6\"],\n};\n\n// The IPv4 gateway is in column 3 in Darwin 19 (macOS 10.15 Catalina) and higher,\n// previously it was in column 5\nconst v4IfaceColumn = parseInt(release()) >= 19 ? 3 : 5;\n\nconst parse = (stdout, family) => {\n  let result;\n\n  (stdout || \"\").trim().split(\"\\n\").some(line => {\n    const results = line.split(/ +/) || [];\n    const target = results[0];\n    const gateway = results[1];\n    const iface = results[family === \"v4\" ? v4IfaceColumn : 3];\n    if (dests.has(target) && gateway && isIP(gateway)) {\n      result = {gateway, interface: (iface ? iface : null)};\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(\"netstat\", args[family]);\n  return parse(stdout, family);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(\"netstat\", args[family]);\n  return parse(stdout, family);\n};\n\nmodule.exports.v4 = () => promise(\"v4\");\nmodule.exports.v6 = () => promise(\"v6\");\n\nmodule.exports.v4.sync = () => sync(\"v4\");\nmodule.exports.v6.sync = () => sync(\"v6\");\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAACA;AAAI,CAAC,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC7B,MAAM;EAACC;AAAO,CAAC,GAAGD,OAAO,CAAC,IAAI,CAAC;AAC/B,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMG,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAExE,MAAMC,IAAI,GAAG;EACXC,EAAE,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC;EACzBC,EAAE,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO;AAC3B,CAAC;;AAED;AACA;AACA,MAAMC,aAAa,GAAGC,QAAQ,CAACR,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC;AAEvD,MAAMS,KAAK,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;EAChC,IAAIC,MAAM;EAEV,CAACF,MAAM,IAAI,EAAE,EAAEG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;IAC7C,MAAMC,OAAO,GAAGD,IAAI,CAACF,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE;IACtC,MAAMI,MAAM,GAAGD,OAAO,CAAC,CAAC,CAAC;IACzB,MAAME,OAAO,GAAGF,OAAO,CAAC,CAAC,CAAC;IAC1B,MAAMG,KAAK,GAAGH,OAAO,CAACN,MAAM,KAAK,IAAI,GAAGJ,aAAa,GAAG,CAAC,CAAC;IAC1D,IAAIL,KAAK,CAACmB,GAAG,CAACH,MAAM,CAAC,IAAIC,OAAO,IAAIrB,IAAI,CAACqB,OAAO,CAAC,EAAE;MACjDP,MAAM,GAAG;QAACO,OAAO;QAAEG,SAAS,EAAGF,KAAK,GAAGA,KAAK,GAAG;MAAK,CAAC;MACrD,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,IAAI,CAACR,MAAM,EAAE;IACX,MAAM,IAAIW,KAAK,CAAC,qCAAqC,CAAC;EACxD;EAEA,OAAOX,MAAM;AACf,CAAC;AAED,MAAMY,OAAO,GAAG,MAAMb,MAAM,IAAI;EAC9B,MAAM;IAACD;EAAM,CAAC,GAAG,MAAMT,KAAK,CAAC,SAAS,EAAEG,IAAI,CAACO,MAAM,CAAC,CAAC;EACrD,OAAOF,KAAK,CAACC,MAAM,EAAEC,MAAM,CAAC;AAC9B,CAAC;AAED,MAAMc,IAAI,GAAGd,MAAM,IAAI;EACrB,MAAM;IAACD;EAAM,CAAC,GAAGT,KAAK,CAACwB,IAAI,CAAC,SAAS,EAAErB,IAAI,CAACO,MAAM,CAAC,CAAC;EACpD,OAAOF,KAAK,CAACC,MAAM,EAAEC,MAAM,CAAC;AAC9B,CAAC;AAEDe,MAAM,CAACC,OAAO,CAACtB,EAAE,GAAG,MAAMmB,OAAO,CAAC,IAAI,CAAC;AACvCE,MAAM,CAACC,OAAO,CAACrB,EAAE,GAAG,MAAMkB,OAAO,CAAC,IAAI,CAAC;AAEvCE,MAAM,CAACC,OAAO,CAACtB,EAAE,CAACoB,IAAI,GAAG,MAAMA,IAAI,CAAC,IAAI,CAAC;AACzCC,MAAM,CAACC,OAAO,CAACrB,EAAE,CAACmB,IAAI,GAAG,MAAMA,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
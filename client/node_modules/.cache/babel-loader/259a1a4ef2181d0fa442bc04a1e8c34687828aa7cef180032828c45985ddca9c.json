{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\nexports.getSourceAndMap = (inputSource, options) => {\n  let code = \"\";\n  let mappings = \"\";\n  let sources = [];\n  let sourcesContent = [];\n  let names = [];\n  const addMapping = createMappingsSerializer(options);\n  const {\n    source\n  } = inputSource.streamChunks(Object.assign({}, options, {\n    finalSource: true\n  }), (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) => {\n    if (chunk !== undefined) code += chunk;\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, (sourceIndex, source, sourceContent) => {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n    sources[sourceIndex] = source;\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, (nameIndex, name) => {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n    names[nameIndex] = name;\n  });\n  return {\n    source: source !== undefined ? source : code,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings,\n      sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names\n    } : null\n  };\n};\nexports.getMap = (source, options) => {\n  let mappings = \"\";\n  let sources = [];\n  let sourcesContent = [];\n  let names = [];\n  const addMapping = createMappingsSerializer(options);\n  source.streamChunks(Object.assign({}, options, {\n    source: false,\n    finalSource: true\n  }), (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) => {\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, (sourceIndex, source, sourceContent) => {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n    sources[sourceIndex] = source;\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, (nameIndex, name) => {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n    names[nameIndex] = name;\n  });\n  return mappings.length > 0 ? {\n    version: 3,\n    file: \"x\",\n    mappings,\n    sources,\n    sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n    names\n  } : null;\n};","map":{"version":3,"names":["createMappingsSerializer","require","exports","getSourceAndMap","inputSource","options","code","mappings","sources","sourcesContent","names","addMapping","source","streamChunks","Object","assign","finalSource","chunk","generatedLine","generatedColumn","sourceIndex","originalLine","originalColumn","nameIndex","undefined","sourceContent","length","push","name","map","version","file","getMap"],"sources":["/home/hemanth/react-project/client/node_modules/webpack-sources/lib/helpers/getFromStreamChunks.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\n\nexports.getSourceAndMap = (inputSource, options) => {\n\tlet code = \"\";\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(options);\n\tconst { source } = inputSource.streamChunks(\n\t\tObject.assign({}, options, { finalSource: true }),\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tif (chunk !== undefined) code += chunk;\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t}\n\t);\n\treturn {\n\t\tsource: source !== undefined ? source : code,\n\t\tmap:\n\t\t\tmappings.length > 0\n\t\t\t\t? {\n\t\t\t\t\t\tversion: 3,\n\t\t\t\t\t\tfile: \"x\",\n\t\t\t\t\t\tmappings,\n\t\t\t\t\t\tsources,\n\t\t\t\t\t\tsourcesContent:\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\t\t\tnames\n\t\t\t\t  }\n\t\t\t\t: null\n\t};\n};\n\nexports.getMap = (source, options) => {\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(options);\n\tsource.streamChunks(\n\t\tObject.assign({}, options, { source: false, finalSource: true }),\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t}\n\t);\n\treturn mappings.length > 0\n\t\t? {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: \"x\",\n\t\t\t\tmappings,\n\t\t\t\tsources,\n\t\t\t\tsourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\tnames\n\t\t  }\n\t\t: null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n  chunkHasJs,\n  getChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\nclass ReadFileChunkLoadingRuntimeModule extends RuntimeModule {\n  constructor(runtimeRequirements) {\n    super(\"readFile chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this.runtimeRequirements = runtimeRequirements;\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @param {string} rootOutputDir root output directory\n   * @returns {string} generated code\n   */\n  _generateBaseUri(chunk, rootOutputDir) {\n    const options = chunk.getEntryOptions();\n    if (options && options.baseUri) {\n      return `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n    }\n    return `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${rootOutputDir ? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}` : \"__filename\"});`;\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  generate() {\n    const {\n      chunkGraph,\n      chunk\n    } = this;\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n    const withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n    const withExternalInstallChunk = this.runtimeRequirements.has(RuntimeGlobals.externalInstallChunk);\n    const withOnChunkLoad = this.runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n    const withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n    const withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n    const withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n    const conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n    const hasJsMatcher = compileBooleanMatcher(conditionMap);\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n    const outputName = this.compilation.getPath(getChunkFilenameTemplate(chunk, this.compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName, this.compilation.outputOptions.path, false);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_readFileVm` : undefined;\n    return Template.asString([withBaseURI ? this._generateBaseUri(chunk, rootOutputDir) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"0\" means \"already loaded\", Promise means loading', `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}.readFileVm = ${runtimeTemplate.returningFunction(\"installedChunks[chunkId] === 0\", \"chunkId\")};` : \"// no on chunks loaded\", \"\", withLoading || withExternalInstallChunk ? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\", \"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent([`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`]), \"}\"]), \"}\", `if(runtime) runtime(${RuntimeGlobals.require});`, \"for(var i = 0; i < chunkIds.length; i++) {\", Template.indent([\"if(installedChunks[chunkIds[i]]) {\", Template.indent([\"installedChunks[chunkIds[i]][0]();\"]), \"}\", \"installedChunks[chunkIds[i]] = 0;\"]), \"}\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"])};` : \"// no chunk install function needed\", \"\", withLoading ? Template.asString([\"// ReadFile + VM.run chunk loading for javascript\", `${fn}.readFileVm = function(chunkId, promises) {`, hasJsMatcher !== false ? Template.indent([\"\", \"var installedChunkData = installedChunks[chunkId];\", 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent(['// array of [resolve, reject, promise] means \"currently loading\"', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[2]);\"]), \"} else {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent([\"// load the chunk and return promise to it\", \"var promise = new Promise(function(resolve, reject) {\", Template.indent([\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\", `var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId));`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var chunk = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(chunk, require, require('path').dirname(filename), filename);\", \"installChunk(chunk);\"]), \"});\"]), \"});\", \"promises.push(installedChunkData[2] = promise);\"]), hasJsMatcher === true ? \"}\" : \"} else installedChunks[chunkId] = 0;\"]), \"}\"]), \"}\"]) : Template.indent([\"installedChunks[chunkId] = 0;\"]), \"};\"]) : \"// no chunk loading\", \"\", withExternalInstallChunk ? Template.asString([`module.exports = ${RuntimeGlobals.require};`, `${RuntimeGlobals.externalInstallChunk} = installChunk;`]) : \"// no external install chunk\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([\"return new Promise(function(resolve, reject) {\", Template.indent([`var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var update = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(update, require, require('path').dirname(filename), filename);\", \"var updatedModules = update.modules;\", \"var runtime = update.runtime;\", \"for(var moduleId in updatedModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`, Template.indent([`currentUpdate[moduleId] = updatedModules[moduleId];`, \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"resolve();\"]), \"});\"]), \"});\"]), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"readFileVm\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([`${RuntimeGlobals.hmrDownloadManifest} = function() {`, Template.indent([\"return new Promise(function(resolve, reject) {\", Template.indent([`var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getUpdateManifestFilename}());`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) {\", Template.indent(['if(err.code === \"ENOENT\") return resolve();', \"return reject(err);\"]), \"}\", \"try { resolve(JSON.parse(content)); }\", \"catch(e) { reject(e); }\"]), \"});\"]), \"});\"]), \"}\"]) : \"// no HMR manifest\"]);\n  }\n}\nmodule.exports = ReadFileChunkLoadingRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","chunkHasJs","getChunkFilenameTemplate","getInitialChunkIds","compileBooleanMatcher","getUndoPath","ReadFileChunkLoadingRuntimeModule","constructor","runtimeRequirements","STAGE_ATTACH","_generateBaseUri","chunk","rootOutputDir","options","getEntryOptions","baseUri","baseURI","JSON","stringify","generate","chunkGraph","runtimeTemplate","compilation","fn","ensureChunkHandlers","withBaseURI","has","withExternalInstallChunk","externalInstallChunk","withOnChunkLoad","onChunksLoaded","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","outputName","getPath","outputOptions","contentHashType","path","stateExpression","hmrRuntimeStatePrefix","undefined","asString","indent","Array","from","id","join","returningFunction","basicFunction","hasOwnProperty","moduleFactories","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/node/ReadFileChunkLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tchunkHasJs,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\nclass ReadFileChunkLoadingRuntimeModule extends RuntimeModule {\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"readFile chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @param {string} rootOutputDir root output directory\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk, rootOutputDir) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t}\n\n\t\treturn `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${\n\t\t\trootOutputDir\n\t\t\t\t? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}`\n\t\t\t\t: \"__filename\"\n\t\t});`;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, chunk } = this;\n\t\tconst { runtimeTemplate } = this.compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withExternalInstallChunk = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.externalInstallChunk\n\t\t);\n\t\tconst withOnChunkLoad = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst outputName = this.compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, this.compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\tthis.compilation.outputOptions.path,\n\t\t\tfalse\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_readFileVm`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? this._generateBaseUri(chunk, rootOutputDir)\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"0\" means \"already loaded\", Promise means loading',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.readFileVm = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId] === 0\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithLoading || withExternalInstallChunk\n\t\t\t\t? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\n\t\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\",\n\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t`if(runtime) runtime(${RuntimeGlobals.require});`,\n\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"if(installedChunks[chunkIds[i]]) {\",\n\t\t\t\t\t\t\tTemplate.indent([\"installedChunks[chunkIds[i]][0]();\"]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"installedChunks[chunkIds[i]] = 0;\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\twithOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// ReadFile + VM.run chunk loading for javascript\",\n\t\t\t\t\t\t`${fn}.readFileVm = function(chunkId, promises) {`,\n\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t? Template.indent([\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"var installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t'// array of [resolve, reject, promise] means \"currently loading\"',\n\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\"promises.push(installedChunkData[2]);\"]),\n\t\t\t\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"// load the chunk and return promise to it\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} + ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t\t\t\t\t\t\t\t\t\t\t}(chunkId));`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var chunk = {};\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"(chunk, require, require('path').dirname(filename), filename);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installChunk(chunk);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"} else installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: Template.indent([\"installedChunks[chunkId] = 0;\"]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithExternalInstallChunk\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`module.exports = ${RuntimeGlobals.require};`,\n\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk} = installChunk;`\n\t\t\t\t  ])\n\t\t\t\t: \"// no external install chunk\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`,\n\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\"var update = {};\",\n\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\"(update, require, require('path').dirname(filename), filename);\",\n\t\t\t\t\t\t\t\t\t\"var updatedModules = update.modules;\",\n\t\t\t\t\t\t\t\t\t\"var runtime = update.runtime;\",\n\t\t\t\t\t\t\t\t\t\"for(var moduleId in updatedModules) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`currentUpdate[moduleId] = updatedModules[moduleId];`,\n\t\t\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\t\"resolve();\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"readFileVm\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.hmrDownloadManifest} = function() {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t)} + ${RuntimeGlobals.getUpdateManifestFilename}());`,\n\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(err) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t'if(err.code === \"ENOENT\") return resolve();',\n\t\t\t\t\t\t\t\t\t\t\"return reject(err);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"try { resolve(JSON.parse(content)); }\",\n\t\t\t\t\t\t\t\t\t\"catch(e) { reject(e); }\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = ReadFileChunkLoadingRuntimeModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
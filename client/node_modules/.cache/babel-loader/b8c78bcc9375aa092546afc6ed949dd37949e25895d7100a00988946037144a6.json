{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {import(\"./Resolver\").ResolveContextYield} ResolveContextYield */\n/** @typedef {{[k: string]: ResolveRequest | ResolveRequest[] | undefined}} Cache */\n\n/**\n * @param {string} type type of cache\n * @param {ResolveRequest} request request\n * @param {boolean} withContext cache with context?\n * @returns {string} cache id\n */\nfunction getCacheId(type, request, withContext) {\n  return JSON.stringify({\n    type,\n    context: withContext ? request.context : \"\",\n    path: request.path,\n    query: request.query,\n    fragment: request.fragment,\n    request: request.request\n  });\n}\nmodule.exports = class UnsafeCachePlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {function(ResolveRequest): boolean} filterPredicate filterPredicate\n   * @param {Cache} cache cache\n   * @param {boolean} withContext withContext\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, filterPredicate, cache, withContext, target) {\n    this.source = source;\n    this.filterPredicate = filterPredicate;\n    this.withContext = withContext;\n    this.cache = cache;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n      if (!this.filterPredicate(request)) return callback();\n      const isYield = typeof resolveContext.yield === \"function\";\n      const cacheId = getCacheId(isYield ? \"yield\" : \"default\", request, this.withContext);\n      const cacheEntry = this.cache[cacheId];\n      if (cacheEntry) {\n        if (isYield) {\n          const yield_ = /** @type {Function} */resolveContext.yield;\n          if (Array.isArray(cacheEntry)) {\n            for (const result of cacheEntry) yield_(result);\n          } else {\n            yield_(cacheEntry);\n          }\n          return callback(null, null);\n        }\n        return callback(null, /** @type {ResolveRequest} */cacheEntry);\n      }\n\n      /** @type {ResolveContextYield|undefined} */\n      let yieldFn;\n      /** @type {ResolveContextYield|undefined} */\n      let yield_;\n      /** @type {ResolveRequest[]} */\n      const yieldResult = [];\n      if (isYield) {\n        yieldFn = resolveContext.yield;\n        yield_ = result => {\n          yieldResult.push(result);\n        };\n      }\n      resolver.doResolve(target, request, null, yield_ ? {\n        ...resolveContext,\n        yield: yield_\n      } : resolveContext, (err, result) => {\n        if (err) return callback(err);\n        if (isYield) {\n          if (result) yieldResult.push(result);\n          for (const result of yieldResult) {\n            /** @type {ResolveContextYield} */\n            yieldFn(result);\n          }\n          this.cache[cacheId] = yieldResult;\n          return callback(null, null);\n        }\n        if (result) return callback(null, this.cache[cacheId] = result);\n        callback();\n      });\n    });\n  }\n};","map":{"version":3,"names":["getCacheId","type","request","withContext","JSON","stringify","context","path","query","fragment","module","exports","UnsafeCachePlugin","constructor","source","filterPredicate","cache","target","apply","resolver","ensureHook","getHook","tapAsync","resolveContext","callback","isYield","yield","cacheId","cacheEntry","yield_","Array","isArray","result","yieldFn","yieldResult","push","doResolve","err"],"sources":["/home/hemanth/react-project/client/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {import(\"./Resolver\").ResolveContextYield} ResolveContextYield */\n/** @typedef {{[k: string]: ResolveRequest | ResolveRequest[] | undefined}} Cache */\n\n/**\n * @param {string} type type of cache\n * @param {ResolveRequest} request request\n * @param {boolean} withContext cache with context?\n * @returns {string} cache id\n */\nfunction getCacheId(type, request, withContext) {\n\treturn JSON.stringify({\n\t\ttype,\n\t\tcontext: withContext ? request.context : \"\",\n\t\tpath: request.path,\n\t\tquery: request.query,\n\t\tfragment: request.fragment,\n\t\trequest: request.request\n\t});\n}\n\nmodule.exports = class UnsafeCachePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {function(ResolveRequest): boolean} filterPredicate filterPredicate\n\t * @param {Cache} cache cache\n\t * @param {boolean} withContext withContext\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filterPredicate, cache, withContext, target) {\n\t\tthis.source = source;\n\t\tthis.filterPredicate = filterPredicate;\n\t\tthis.withContext = withContext;\n\t\tthis.cache = cache;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!this.filterPredicate(request)) return callback();\n\t\t\t\tconst isYield = typeof resolveContext.yield === \"function\";\n\t\t\t\tconst cacheId = getCacheId(\n\t\t\t\t\tisYield ? \"yield\" : \"default\",\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.withContext\n\t\t\t\t);\n\t\t\t\tconst cacheEntry = this.cache[cacheId];\n\t\t\t\tif (cacheEntry) {\n\t\t\t\t\tif (isYield) {\n\t\t\t\t\t\tconst yield_ = /** @type {Function} */ (resolveContext.yield);\n\t\t\t\t\t\tif (Array.isArray(cacheEntry)) {\n\t\t\t\t\t\t\tfor (const result of cacheEntry) yield_(result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tyield_(cacheEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, /** @type {ResolveRequest} */ (cacheEntry));\n\t\t\t\t}\n\n\t\t\t\t/** @type {ResolveContextYield|undefined} */\n\t\t\t\tlet yieldFn;\n\t\t\t\t/** @type {ResolveContextYield|undefined} */\n\t\t\t\tlet yield_;\n\t\t\t\t/** @type {ResolveRequest[]} */\n\t\t\t\tconst yieldResult = [];\n\t\t\t\tif (isYield) {\n\t\t\t\t\tyieldFn = resolveContext.yield;\n\t\t\t\t\tyield_ = result => {\n\t\t\t\t\t\tyieldResult.push(result);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tnull,\n\t\t\t\t\tyield_ ? { ...resolveContext, yield: yield_ } : resolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (isYield) {\n\t\t\t\t\t\t\tif (result) yieldResult.push(result);\n\t\t\t\t\t\t\tfor (const result of yieldResult) {\n\t\t\t\t\t\t\t\t/** @type {ResolveContextYield} */\n\t\t\t\t\t\t\t\t(yieldFn)(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.cache[cacheId] = yieldResult;\n\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (result) return callback(null, (this.cache[cacheId] = result));\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"../javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nconst COMMON_LIBRARY_NAME_MESSAGE = \"Common configuration options that specific library names are 'output.library[.name]', 'entry.xyz.library[.name]', 'ModuleFederationPlugin.name' and 'ModuleFederationPlugin.library[.name]'.\";\n\n/**\n * @template T\n * @typedef {Object} LibraryContext\n * @property {Compilation} compilation\n * @property {ChunkGraph} chunkGraph\n * @property {T} options\n */\n\n/**\n * @template T\n */\nclass AbstractLibraryPlugin {\n  /**\n   * @param {Object} options options\n   * @param {string} options.pluginName name of the plugin\n   * @param {LibraryType} options.type used library type\n   */\n  constructor(_ref) {\n    let {\n      pluginName,\n      type\n    } = _ref;\n    this._pluginName = pluginName;\n    this._type = type;\n    this._parseCache = new WeakMap();\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    const {\n      _pluginName\n    } = this;\n    compiler.hooks.thisCompilation.tap(_pluginName, compilation => {\n      compilation.hooks.finishModules.tap({\n        name: _pluginName,\n        stage: 10\n      }, () => {\n        for (const [name, {\n          dependencies: deps,\n          options: {\n            library\n          }\n        }] of compilation.entries) {\n          const options = this._parseOptionsCached(library !== undefined ? library : compilation.outputOptions.library);\n          if (options !== false) {\n            const dep = deps[deps.length - 1];\n            if (dep) {\n              const module = compilation.moduleGraph.getModule(dep);\n              if (module) {\n                this.finishEntryModule(module, name, {\n                  options,\n                  compilation,\n                  chunkGraph: compilation.chunkGraph\n                });\n              }\n            }\n          }\n        }\n      });\n      const getOptionsForChunk = chunk => {\n        if (compilation.chunkGraph.getNumberOfEntryModules(chunk) === 0) return false;\n        const options = chunk.getEntryOptions();\n        const library = options && options.library;\n        return this._parseOptionsCached(library !== undefined ? library : compilation.outputOptions.library);\n      };\n      if (this.render !== AbstractLibraryPlugin.prototype.render || this.runtimeRequirements !== AbstractLibraryPlugin.prototype.runtimeRequirements) {\n        compilation.hooks.additionalChunkRuntimeRequirements.tap(_pluginName, (chunk, set, _ref2) => {\n          let {\n            chunkGraph\n          } = _ref2;\n          const options = getOptionsForChunk(chunk);\n          if (options !== false) {\n            this.runtimeRequirements(chunk, set, {\n              options,\n              compilation,\n              chunkGraph\n            });\n          }\n        });\n      }\n      const hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n      if (this.render !== AbstractLibraryPlugin.prototype.render) {\n        hooks.render.tap(_pluginName, (source, renderContext) => {\n          const options = getOptionsForChunk(renderContext.chunk);\n          if (options === false) return source;\n          return this.render(source, renderContext, {\n            options,\n            compilation,\n            chunkGraph: compilation.chunkGraph\n          });\n        });\n      }\n      if (this.embedInRuntimeBailout !== AbstractLibraryPlugin.prototype.embedInRuntimeBailout) {\n        hooks.embedInRuntimeBailout.tap(_pluginName, (module, renderContext) => {\n          const options = getOptionsForChunk(renderContext.chunk);\n          if (options === false) return;\n          return this.embedInRuntimeBailout(module, renderContext, {\n            options,\n            compilation,\n            chunkGraph: compilation.chunkGraph\n          });\n        });\n      }\n      if (this.strictRuntimeBailout !== AbstractLibraryPlugin.prototype.strictRuntimeBailout) {\n        hooks.strictRuntimeBailout.tap(_pluginName, renderContext => {\n          const options = getOptionsForChunk(renderContext.chunk);\n          if (options === false) return;\n          return this.strictRuntimeBailout(renderContext, {\n            options,\n            compilation,\n            chunkGraph: compilation.chunkGraph\n          });\n        });\n      }\n      if (this.renderStartup !== AbstractLibraryPlugin.prototype.renderStartup) {\n        hooks.renderStartup.tap(_pluginName, (source, module, renderContext) => {\n          const options = getOptionsForChunk(renderContext.chunk);\n          if (options === false) return source;\n          return this.renderStartup(source, module, renderContext, {\n            options,\n            compilation,\n            chunkGraph: compilation.chunkGraph\n          });\n        });\n      }\n      hooks.chunkHash.tap(_pluginName, (chunk, hash, context) => {\n        const options = getOptionsForChunk(chunk);\n        if (options === false) return;\n        this.chunkHash(chunk, hash, context, {\n          options,\n          compilation,\n          chunkGraph: compilation.chunkGraph\n        });\n      });\n    });\n  }\n\n  /**\n   * @param {LibraryOptions=} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n  _parseOptionsCached(library) {\n    if (!library) return false;\n    if (library.type !== this._type) return false;\n    const cacheEntry = this._parseCache.get(library);\n    if (cacheEntry !== undefined) return cacheEntry;\n    const result = this.parseOptions(library);\n    this._parseCache.set(library, result);\n    return result;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * @abstract\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n  parseOptions(library) {\n    const AbstractMethodError = require(\"../AbstractMethodError\");\n    throw new AbstractMethodError();\n  }\n\n  /**\n   * @param {Module} module the exporting entry module\n   * @param {string} entryName the name of the entrypoint\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {void}\n   */\n  finishEntryModule(module, entryName, libraryContext) {}\n\n  /**\n   * @param {Module} module the exporting entry module\n   * @param {RenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {string | undefined} bailout reason\n   */\n  embedInRuntimeBailout(module, renderContext, libraryContext) {\n    return undefined;\n  }\n\n  /**\n   * @param {RenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {string | undefined} bailout reason\n   */\n  strictRuntimeBailout(renderContext, libraryContext) {\n    return undefined;\n  }\n\n  /**\n   * @param {Chunk} chunk the chunk\n   * @param {Set<string>} set runtime requirements\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {void}\n   */\n  runtimeRequirements(chunk, set, libraryContext) {\n    if (this.render !== AbstractLibraryPlugin.prototype.render) set.add(RuntimeGlobals.returnExportsFromRuntime);\n  }\n\n  /**\n   * @param {Source} source source\n   * @param {RenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n  render(source, renderContext, libraryContext) {\n    return source;\n  }\n\n  /**\n   * @param {Source} source source\n   * @param {Module} module module\n   * @param {StartupRenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n  renderStartup(source, module, renderContext, libraryContext) {\n    return source;\n  }\n\n  /**\n   * @param {Chunk} chunk the chunk\n   * @param {Hash} hash hash\n   * @param {ChunkHashContext} chunkHashContext chunk hash context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {void}\n   */\n  chunkHash(chunk, hash, chunkHashContext, libraryContext) {\n    const options = this._parseOptionsCached(libraryContext.compilation.outputOptions.library);\n    hash.update(this._pluginName);\n    hash.update(JSON.stringify(options));\n  }\n}\nAbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE = COMMON_LIBRARY_NAME_MESSAGE;\nmodule.exports = AbstractLibraryPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","JavascriptModulesPlugin","COMMON_LIBRARY_NAME_MESSAGE","AbstractLibraryPlugin","constructor","_ref","pluginName","type","_pluginName","_type","_parseCache","WeakMap","apply","compiler","hooks","thisCompilation","tap","compilation","finishModules","name","stage","dependencies","deps","options","library","entries","_parseOptionsCached","undefined","outputOptions","dep","length","module","moduleGraph","getModule","finishEntryModule","chunkGraph","getOptionsForChunk","chunk","getNumberOfEntryModules","getEntryOptions","render","prototype","runtimeRequirements","additionalChunkRuntimeRequirements","set","_ref2","getCompilationHooks","source","renderContext","embedInRuntimeBailout","strictRuntimeBailout","renderStartup","chunkHash","hash","context","cacheEntry","get","result","parseOptions","AbstractMethodError","entryName","libraryContext","add","returnExportsFromRuntime","chunkHashContext","update","JSON","stringify","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/library/AbstractLibraryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst JavascriptModulesPlugin = require(\"../javascript/JavascriptModulesPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nconst COMMON_LIBRARY_NAME_MESSAGE =\n\t\"Common configuration options that specific library names are 'output.library[.name]', 'entry.xyz.library[.name]', 'ModuleFederationPlugin.name' and 'ModuleFederationPlugin.library[.name]'.\";\n\n/**\n * @template T\n * @typedef {Object} LibraryContext\n * @property {Compilation} compilation\n * @property {ChunkGraph} chunkGraph\n * @property {T} options\n */\n\n/**\n * @template T\n */\nclass AbstractLibraryPlugin {\n\t/**\n\t * @param {Object} options options\n\t * @param {string} options.pluginName name of the plugin\n\t * @param {LibraryType} options.type used library type\n\t */\n\tconstructor({ pluginName, type }) {\n\t\tthis._pluginName = pluginName;\n\t\tthis._type = type;\n\t\tthis._parseCache = new WeakMap();\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _pluginName } = this;\n\t\tcompiler.hooks.thisCompilation.tap(_pluginName, compilation => {\n\t\t\tcompilation.hooks.finishModules.tap(\n\t\t\t\t{ name: _pluginName, stage: 10 },\n\t\t\t\t() => {\n\t\t\t\t\tfor (const [\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdependencies: deps,\n\t\t\t\t\t\t\toptions: { library }\n\t\t\t\t\t\t}\n\t\t\t\t\t] of compilation.entries) {\n\t\t\t\t\t\tconst options = this._parseOptionsCached(\n\t\t\t\t\t\t\tlibrary !== undefined\n\t\t\t\t\t\t\t\t? library\n\t\t\t\t\t\t\t\t: compilation.outputOptions.library\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (options !== false) {\n\t\t\t\t\t\t\tconst dep = deps[deps.length - 1];\n\t\t\t\t\t\t\tif (dep) {\n\t\t\t\t\t\t\t\tconst module = compilation.moduleGraph.getModule(dep);\n\t\t\t\t\t\t\t\tif (module) {\n\t\t\t\t\t\t\t\t\tthis.finishEntryModule(module, name, {\n\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst getOptionsForChunk = chunk => {\n\t\t\t\tif (compilation.chunkGraph.getNumberOfEntryModules(chunk) === 0)\n\t\t\t\t\treturn false;\n\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\tconst library = options && options.library;\n\t\t\t\treturn this._parseOptionsCached(\n\t\t\t\t\tlibrary !== undefined ? library : compilation.outputOptions.library\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tthis.render !== AbstractLibraryPlugin.prototype.render ||\n\t\t\t\tthis.runtimeRequirements !==\n\t\t\t\t\tAbstractLibraryPlugin.prototype.runtimeRequirements\n\t\t\t) {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t_pluginName,\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tconst options = getOptionsForChunk(chunk);\n\t\t\t\t\t\tif (options !== false) {\n\t\t\t\t\t\t\tthis.runtimeRequirements(chunk, set, {\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst hooks = JavascriptModulesPlugin.getCompilationHooks(compilation);\n\n\t\t\tif (this.render !== AbstractLibraryPlugin.prototype.render) {\n\t\t\t\thooks.render.tap(_pluginName, (source, renderContext) => {\n\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\tif (options === false) return source;\n\t\t\t\t\treturn this.render(source, renderContext, {\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.embedInRuntimeBailout !==\n\t\t\t\tAbstractLibraryPlugin.prototype.embedInRuntimeBailout\n\t\t\t) {\n\t\t\t\thooks.embedInRuntimeBailout.tap(\n\t\t\t\t\t_pluginName,\n\t\t\t\t\t(module, renderContext) => {\n\t\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\t\tif (options === false) return;\n\t\t\t\t\t\treturn this.embedInRuntimeBailout(module, renderContext, {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.strictRuntimeBailout !==\n\t\t\t\tAbstractLibraryPlugin.prototype.strictRuntimeBailout\n\t\t\t) {\n\t\t\t\thooks.strictRuntimeBailout.tap(_pluginName, renderContext => {\n\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\tif (options === false) return;\n\t\t\t\t\treturn this.strictRuntimeBailout(renderContext, {\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.renderStartup !== AbstractLibraryPlugin.prototype.renderStartup\n\t\t\t) {\n\t\t\t\thooks.renderStartup.tap(\n\t\t\t\t\t_pluginName,\n\t\t\t\t\t(source, module, renderContext) => {\n\t\t\t\t\t\tconst options = getOptionsForChunk(renderContext.chunk);\n\t\t\t\t\t\tif (options === false) return source;\n\t\t\t\t\t\treturn this.renderStartup(source, module, renderContext, {\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\thooks.chunkHash.tap(_pluginName, (chunk, hash, context) => {\n\t\t\t\tconst options = getOptionsForChunk(chunk);\n\t\t\t\tif (options === false) return;\n\t\t\t\tthis.chunkHash(chunk, hash, context, {\n\t\t\t\t\toptions,\n\t\t\t\t\tcompilation,\n\t\t\t\t\tchunkGraph: compilation.chunkGraph\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {LibraryOptions=} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\t_parseOptionsCached(library) {\n\t\tif (!library) return false;\n\t\tif (library.type !== this._type) return false;\n\t\tconst cacheEntry = this._parseCache.get(library);\n\t\tif (cacheEntry !== undefined) return cacheEntry;\n\t\tconst result = this.parseOptions(library);\n\t\tthis._parseCache.set(library, result);\n\t\treturn result;\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\tconst AbstractMethodError = require(\"../AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @param {Module} module the exporting entry module\n\t * @param {string} entryName the name of the entrypoint\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\tfinishEntryModule(module, entryName, libraryContext) {}\n\n\t/**\n\t * @param {Module} module the exporting entry module\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {string | undefined} bailout reason\n\t */\n\tembedInRuntimeBailout(module, renderContext, libraryContext) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {string | undefined} bailout reason\n\t */\n\tstrictRuntimeBailout(renderContext, libraryContext) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk\n\t * @param {Set<string>} set runtime requirements\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\truntimeRequirements(chunk, set, libraryContext) {\n\t\tif (this.render !== AbstractLibraryPlugin.prototype.render)\n\t\t\tset.add(RuntimeGlobals.returnExportsFromRuntime);\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trender(source, renderContext, libraryContext) {\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {Module} module module\n\t * @param {StartupRenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trenderStartup(source, module, renderContext, libraryContext) {\n\t\treturn source;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk\n\t * @param {Hash} hash hash\n\t * @param {ChunkHashContext} chunkHashContext chunk hash context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\tchunkHash(chunk, hash, chunkHashContext, libraryContext) {\n\t\tconst options = this._parseOptionsCached(\n\t\t\tlibraryContext.compilation.outputOptions.library\n\t\t);\n\t\thash.update(this._pluginName);\n\t\thash.update(JSON.stringify(options));\n\t}\n}\n\nAbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE = COMMON_LIBRARY_NAME_MESSAGE;\nmodule.exports = AbstractLibraryPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
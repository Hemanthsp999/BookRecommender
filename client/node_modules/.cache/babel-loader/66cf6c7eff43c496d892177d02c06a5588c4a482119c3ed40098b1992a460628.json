{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst isValidExternalsType = require(\"../../schemas/plugins/container/ExternalsType.check.js\");\nconst SharePlugin = require(\"../sharing/SharePlugin\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ContainerPlugin = require(\"./ContainerPlugin\");\nconst ContainerReferencePlugin = require(\"./ContainerReferencePlugin\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ExternalsType} ExternalsType */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ModuleFederationPluginOptions} ModuleFederationPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").Shared} Shared */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(require(\"../../schemas/plugins/container/ModuleFederationPlugin.check.js\"), () => require(\"../../schemas/plugins/container/ModuleFederationPlugin.json\"), {\n  name: \"Module Federation Plugin\",\n  baseDataPath: \"options\"\n});\nclass ModuleFederationPlugin {\n  /**\n   * @param {ModuleFederationPluginOptions} options options\n   */\n  constructor(options) {\n    validate(options);\n    this._options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    const {\n      _options: options\n    } = this;\n    const library = options.library || {\n      type: \"var\",\n      name: options.name\n    };\n    const remoteType = options.remoteType || (options.library && isValidExternalsType(options.library.type) ? /** @type {ExternalsType} */options.library.type : \"script\");\n    if (library && !compiler.options.output.enabledLibraryTypes.includes(library.type)) {\n      compiler.options.output.enabledLibraryTypes.push(library.type);\n    }\n    compiler.hooks.afterPlugins.tap(\"ModuleFederationPlugin\", () => {\n      if (options.exposes && (Array.isArray(options.exposes) ? options.exposes.length > 0 : Object.keys(options.exposes).length > 0)) {\n        new ContainerPlugin({\n          name: options.name,\n          library,\n          filename: options.filename,\n          runtime: options.runtime,\n          shareScope: options.shareScope,\n          exposes: options.exposes\n        }).apply(compiler);\n      }\n      if (options.remotes && (Array.isArray(options.remotes) ? options.remotes.length > 0 : Object.keys(options.remotes).length > 0)) {\n        new ContainerReferencePlugin({\n          remoteType,\n          shareScope: options.shareScope,\n          remotes: options.remotes\n        }).apply(compiler);\n      }\n      if (options.shared) {\n        new SharePlugin({\n          shared: options.shared,\n          shareScope: options.shareScope\n        }).apply(compiler);\n      }\n    });\n  }\n}\nmodule.exports = ModuleFederationPlugin;","map":{"version":3,"names":["isValidExternalsType","require","SharePlugin","createSchemaValidation","ContainerPlugin","ContainerReferencePlugin","validate","name","baseDataPath","ModuleFederationPlugin","constructor","options","_options","apply","compiler","library","type","remoteType","output","enabledLibraryTypes","includes","push","hooks","afterPlugins","tap","exposes","Array","isArray","length","Object","keys","filename","runtime","shareScope","remotes","shared","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/container/ModuleFederationPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst isValidExternalsType = require(\"../../schemas/plugins/container/ExternalsType.check.js\");\nconst SharePlugin = require(\"../sharing/SharePlugin\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ContainerPlugin = require(\"./ContainerPlugin\");\nconst ContainerReferencePlugin = require(\"./ContainerReferencePlugin\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ExternalsType} ExternalsType */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ModuleFederationPluginOptions} ModuleFederationPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").Shared} Shared */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/container/ModuleFederationPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/container/ModuleFederationPlugin.json\"),\n\t{\n\t\tname: \"Module Federation Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\nclass ModuleFederationPlugin {\n\t/**\n\t * @param {ModuleFederationPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\tthis._options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _options: options } = this;\n\t\tconst library = options.library || { type: \"var\", name: options.name };\n\t\tconst remoteType =\n\t\t\toptions.remoteType ||\n\t\t\t(options.library && isValidExternalsType(options.library.type)\n\t\t\t\t? /** @type {ExternalsType} */ (options.library.type)\n\t\t\t\t: \"script\");\n\t\tif (\n\t\t\tlibrary &&\n\t\t\t!compiler.options.output.enabledLibraryTypes.includes(library.type)\n\t\t) {\n\t\t\tcompiler.options.output.enabledLibraryTypes.push(library.type);\n\t\t}\n\t\tcompiler.hooks.afterPlugins.tap(\"ModuleFederationPlugin\", () => {\n\t\t\tif (\n\t\t\t\toptions.exposes &&\n\t\t\t\t(Array.isArray(options.exposes)\n\t\t\t\t\t? options.exposes.length > 0\n\t\t\t\t\t: Object.keys(options.exposes).length > 0)\n\t\t\t) {\n\t\t\t\tnew ContainerPlugin({\n\t\t\t\t\tname: options.name,\n\t\t\t\t\tlibrary,\n\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\truntime: options.runtime,\n\t\t\t\t\tshareScope: options.shareScope,\n\t\t\t\t\texposes: options.exposes\n\t\t\t\t}).apply(compiler);\n\t\t\t}\n\t\t\tif (\n\t\t\t\toptions.remotes &&\n\t\t\t\t(Array.isArray(options.remotes)\n\t\t\t\t\t? options.remotes.length > 0\n\t\t\t\t\t: Object.keys(options.remotes).length > 0)\n\t\t\t) {\n\t\t\t\tnew ContainerReferencePlugin({\n\t\t\t\t\tremoteType,\n\t\t\t\t\tshareScope: options.shareScope,\n\t\t\t\t\tremotes: options.remotes\n\t\t\t\t}).apply(compiler);\n\t\t\t}\n\t\t\tif (options.shared) {\n\t\t\t\tnew SharePlugin({\n\t\t\t\t\tshared: options.shared,\n\t\t\t\t\tshareScope: options.shareScope\n\t\t\t\t}).apply(compiler);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = ModuleFederationPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
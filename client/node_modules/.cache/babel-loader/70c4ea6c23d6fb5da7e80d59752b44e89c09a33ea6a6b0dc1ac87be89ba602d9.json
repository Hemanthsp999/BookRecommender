{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"ImportMetaContextPlugin\";\nclass ImportMetaContextPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ImportMetaContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportMetaContextDependency, new ImportMetaContextDependency.Template());\n      compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.importMetaContext !== undefined && !parserOptions.importMetaContext) return;\n        new ImportMetaContextDependencyParserPlugin().apply(parser);\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, handler);\n    });\n  }\n}\nmodule.exports = ImportMetaContextPlugin;","map":{"version":3,"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_ESM","require","ContextElementDependency","ImportMetaContextDependency","ImportMetaContextDependencyParserPlugin","PLUGIN_NAME","ImportMetaContextPlugin","apply","compiler","hooks","compilation","tap","_ref","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","importMetaContext","undefined","for","module","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/ImportMetaContextPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"ImportMetaContextPlugin\";\n\nclass ImportMetaContextPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tnew ImportMetaContextDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.importMetaContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.importMetaContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportMetaContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaContextPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EACLA,2BAA2B;EAC3BC;AACD,CAAC,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACrC,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACtE,MAAME,2BAA2B,GAAGF,OAAO,CAAC,+BAA+B,CAAC;AAC5E,MAAMG,uCAAuC,GAAGH,OAAO,CAAC,2CAA2C,CAAC;;AAEpG;AACA;AACA;AACA;;AAEA,MAAMI,WAAW,GAAG,yBAAyB;AAE7C,MAAMC,uBAAuB,CAAC;EAC7B;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7BN,WAAW,EACX,CAACK,WAAW,EAAAE,IAAA,KAAoD;MAAA,IAAlD;QAAEC,oBAAoB;QAAEC;MAAoB,CAAC,GAAAF,IAAA;MAC1DF,WAAW,CAACK,mBAAmB,CAACC,GAAG,CAClCb,2BAA2B,EAC3BU,oBACD,CAAC;MACDH,WAAW,CAACO,mBAAmB,CAACD,GAAG,CAClCb,2BAA2B,EAC3B,IAAIA,2BAA2B,CAACe,QAAQ,CAAC,CAC1C,CAAC;MACDR,WAAW,CAACK,mBAAmB,CAACC,GAAG,CAClCd,wBAAwB,EACxBY,mBACD,CAAC;;MAED;AACJ;AACA;AACA;AACA;MACI,MAAMK,OAAO,GAAGA,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1C,IACCA,aAAa,CAACC,iBAAiB,KAAKC,SAAS,IAC7C,CAACF,aAAa,CAACC,iBAAiB,EAEhC;QAED,IAAIlB,uCAAuC,CAAC,CAAC,CAACG,KAAK,CAACa,MAAM,CAAC;MAC5D,CAAC;MAEDN,mBAAmB,CAACL,KAAK,CAACW,MAAM,CAC9BI,GAAG,CAACzB,2BAA2B,CAAC,CAChCY,GAAG,CAACN,WAAW,EAAEc,OAAO,CAAC;MAC3BL,mBAAmB,CAACL,KAAK,CAACW,MAAM,CAC9BI,GAAG,CAACxB,0BAA0B,CAAC,CAC/BW,GAAG,CAACN,WAAW,EAAEc,OAAO,CAAC;IAC5B,CACD,CAAC;EACF;AACD;AAEAM,MAAM,CAACC,OAAO,GAAGpB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n  pathToFileURL\n} = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n  evaluateToIdentifier,\n  toConstantDependency,\n  evaluateToString,\n  evaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst getCriticalDependencyWarning = memoize(() => require(\"./CriticalDependencyWarning\"));\nconst PLUGIN_NAME = \"ImportMetaPlugin\";\nclass ImportMetaPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      /**\n       * @param {NormalModule} module module\n       * @returns {string} file url\n       */\n      const getUrl = module => {\n        return pathToFileURL(module.resource).toString();\n      };\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const parserHandler = (parser, _ref2) => {\n        let {\n          importMeta\n        } = _ref2;\n        if (importMeta === false) {\n          const {\n            importMetaName\n          } = compilation.outputOptions;\n          if (importMetaName === \"import.meta\") return;\n          parser.hooks.expression.for(\"import.meta\").tap(PLUGIN_NAME, metaProperty => {\n            const dep = new ConstDependency(importMetaName, metaProperty.range);\n            dep.loc = metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          });\n          return;\n        }\n\n        /// import.meta direct ///\n        const webpackVersion = parseInt(require(\"../../package.json\").version, 10);\n        const importMetaUrl = () => JSON.stringify(getUrl(parser.state.module));\n        const importMetaWebpackVersion = () => JSON.stringify(webpackVersion);\n        const importMetaUnknownProperty = members => `${Template.toNormalComment(\"unsupported import.meta.\" + members.join(\".\"))} undefined${propertyAccess(members, 1)}`;\n        parser.hooks.typeof.for(\"import.meta\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.expression.for(\"import.meta\").tap(PLUGIN_NAME, metaProperty => {\n          const referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(metaProperty);\n          if (!referencedPropertiesInDestructuring) {\n            const CriticalDependencyWarning = getCriticalDependencyWarning();\n            parser.state.module.addWarning(new ModuleDependencyWarning(parser.state.module, new CriticalDependencyWarning(\"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\"), metaProperty.loc));\n            const dep = new ConstDependency(`${parser.isAsiPosition(metaProperty.range[0]) ? \";\" : \"\"}({})`, metaProperty.range);\n            dep.loc = metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          }\n          let str = \"\";\n          for (const prop of referencedPropertiesInDestructuring) {\n            switch (prop) {\n              case \"url\":\n                str += `url: ${importMetaUrl()},`;\n                break;\n              case \"webpack\":\n                str += `webpack: ${importMetaWebpackVersion()},`;\n                break;\n              default:\n                str += `[${JSON.stringify(prop)}]: ${importMetaUnknownProperty([prop])},`;\n                break;\n            }\n          }\n          const dep = new ConstDependency(`({${str}})`, metaProperty.range);\n          dep.loc = metaProperty.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta\").tap(PLUGIN_NAME, evaluateToString(\"object\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta\").tap(PLUGIN_NAME, evaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true));\n\n        /// import.meta.url ///\n        parser.hooks.typeof.for(\"import.meta.url\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"string\")));\n        parser.hooks.expression.for(\"import.meta.url\").tap(PLUGIN_NAME, expr => {\n          const dep = new ConstDependency(importMetaUrl(), expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta.url\").tap(PLUGIN_NAME, evaluateToString(\"string\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.url\").tap(PLUGIN_NAME, expr => {\n          return new BasicEvaluatedExpression().setString(getUrl(parser.state.module)).setRange(expr.range);\n        });\n\n        /// import.meta.webpack ///\n        parser.hooks.typeof.for(\"import.meta.webpack\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"number\")));\n        parser.hooks.expression.for(\"import.meta.webpack\").tap(PLUGIN_NAME, toConstantDependency(parser, importMetaWebpackVersion()));\n        parser.hooks.evaluateTypeof.for(\"import.meta.webpack\").tap(PLUGIN_NAME, evaluateToString(\"number\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.webpack\").tap(PLUGIN_NAME, evaluateToNumber(webpackVersion));\n\n        /// Unknown properties ///\n        parser.hooks.unhandledExpressionMemberChain.for(\"import.meta\").tap(PLUGIN_NAME, (expr, members) => {\n          const dep = new ConstDependency(importMetaUnknownProperty(members), expr.range);\n          dep.loc = expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluate.for(\"MemberExpression\").tap(PLUGIN_NAME, expression => {\n          const expr = /** @type {MemberExpression} */expression;\n          if (expr.object.type === \"MetaProperty\" && expr.object.meta.name === \"import\" && expr.object.property.name === \"meta\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\n            return new BasicEvaluatedExpression().setUndefined().setRange(expr.range);\n          }\n        });\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, parserHandler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, parserHandler);\n    });\n  }\n}\nmodule.exports = ImportMetaPlugin;","map":{"version":3,"names":["pathToFileURL","require","ModuleDependencyWarning","JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_ESM","Template","BasicEvaluatedExpression","evaluateToIdentifier","toConstantDependency","evaluateToString","evaluateToNumber","memoize","propertyAccess","ConstDependency","getCriticalDependencyWarning","PLUGIN_NAME","ImportMetaPlugin","apply","compiler","hooks","compilation","tap","_ref","normalModuleFactory","getUrl","module","resource","toString","parserHandler","parser","_ref2","importMeta","importMetaName","outputOptions","expression","for","metaProperty","dep","range","loc","state","addPresentationalDependency","webpackVersion","parseInt","version","importMetaUrl","JSON","stringify","importMetaWebpackVersion","importMetaUnknownProperty","members","toNormalComment","join","typeof","referencedPropertiesInDestructuring","destructuringAssignmentPropertiesFor","CriticalDependencyWarning","addWarning","isAsiPosition","str","prop","evaluateTypeof","evaluateIdentifier","expr","setString","setRange","unhandledExpressionMemberChain","evaluate","object","type","meta","name","property","computed","setUndefined","exports"],"sources":["/home/hemanth/react-project/client/node_modules/webpack/lib/dependencies/ImportMetaPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\ttoConstantDependency,\n\tevaluateToString,\n\tevaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst getCriticalDependencyWarning = memoize(() =>\n\trequire(\"./CriticalDependencyWarning\")\n);\n\nconst PLUGIN_NAME = \"ImportMetaPlugin\";\n\nclass ImportMetaPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {string} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => {\n\t\t\t\t\treturn pathToFileURL(module.resource).toString();\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst parserHandler = (parser, { importMeta }) => {\n\t\t\t\t\tif (importMeta === false) {\n\t\t\t\t\t\tconst { importMetaName } = compilation.outputOptions;\n\t\t\t\t\t\tif (importMetaName === \"import.meta\") return;\n\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t\t.tap(PLUGIN_NAME, metaProperty => {\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\timportMetaName,\n\t\t\t\t\t\t\t\t\tmetaProperty.range\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/// import.meta direct ///\n\t\t\t\t\tconst webpackVersion = parseInt(\n\t\t\t\t\t\trequire(\"../../package.json\").version,\n\t\t\t\t\t\t10\n\t\t\t\t\t);\n\t\t\t\t\tconst importMetaUrl = () =>\n\t\t\t\t\t\tJSON.stringify(getUrl(parser.state.module));\n\t\t\t\t\tconst importMetaWebpackVersion = () => JSON.stringify(webpackVersion);\n\t\t\t\t\tconst importMetaUnknownProperty = members =>\n\t\t\t\t\t\t`${Template.toNormalComment(\n\t\t\t\t\t\t\t\"unsupported import.meta.\" + members.join(\".\")\n\t\t\t\t\t\t)} undefined${propertyAccess(members, 1)}`;\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, metaProperty => {\n\t\t\t\t\t\t\tconst referencedPropertiesInDestructuring =\n\t\t\t\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(metaProperty);\n\t\t\t\t\t\t\tif (!referencedPropertiesInDestructuring) {\n\t\t\t\t\t\t\t\tconst CriticalDependencyWarning =\n\t\t\t\t\t\t\t\t\tgetCriticalDependencyWarning();\n\t\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew ModuleDependencyWarning(\n\t\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\t\t\t\t\t\t\"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\"\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tmetaProperty.loc\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\tparser.isAsiPosition(metaProperty.range[0]) ? \";\" : \"\"\n\t\t\t\t\t\t\t\t\t}({})`,\n\t\t\t\t\t\t\t\t\tmetaProperty.range\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet str = \"\";\n\t\t\t\t\t\t\tfor (const prop of referencedPropertiesInDestructuring) {\n\t\t\t\t\t\t\t\tswitch (prop) {\n\t\t\t\t\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\t\t\t\t\tstr += `url: ${importMetaUrl()},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"webpack\":\n\t\t\t\t\t\t\t\t\t\tstr += `webpack: ${importMetaWebpackVersion()},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tstr += `[${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tprop\n\t\t\t\t\t\t\t\t\t\t)}]: ${importMetaUnknownProperty([prop])},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst dep = new ConstDependency(`({${str}})`, metaProperty.range);\n\t\t\t\t\t\t\tdep.loc = metaProperty.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"object\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\n\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\tevaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)\n\t\t\t\t\t);\n\n\t\t\t\t\t/// import.meta.url ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"string\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(importMetaUrl(), expr.range);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"string\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(getUrl(parser.state.module))\n\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t/// import.meta.webpack ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"number\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, importMetaWebpackVersion())\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"number\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToNumber(webpackVersion));\n\n\t\t\t\t\t/// Unknown properties ///\n\t\t\t\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, (expr, members) => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\timportMetaUnknownProperty(members),\n\t\t\t\t\t\t\t\texpr.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluate\n\t\t\t\t\t\t.for(\"MemberExpression\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expression => {\n\t\t\t\t\t\t\tconst expr = /** @type {MemberExpression} */ (expression);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.object.type === \"MetaProperty\" &&\n\t\t\t\t\t\t\t\texpr.object.meta.name === \"import\" &&\n\t\t\t\t\t\t\t\texpr.object.property.name === \"meta\" &&\n\t\t\t\t\t\t\t\texpr.property.type ===\n\t\t\t\t\t\t\t\t\t(expr.computed ? \"Literal\" : \"Identifier\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t\t.setUndefined()\n\t\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserHandler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserHandler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}